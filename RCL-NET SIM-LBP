{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import header files\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torchvision\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# from google.colab import drive\n",
    "# drive.mount('/content/drive')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(1234)\n",
    "torch.manual_seed(1234)\n",
    "torch.cuda.manual_seed(1234)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# DATA LOAD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load the DataFrame back\n",
    "df_train = pd.read_pickle('DATASET_PREPROCESS/afterArrayNpTrain.pkl')\n",
    "df_public_test = pd.read_pickle('DATASET_PREPROCESS/afterArrayNpPublicTest.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emotion</th>\n",
       "      <th>usage</th>\n",
       "      <th>resized_pixels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Training</td>\n",
       "      <td>[[69.0, 71.0, 77.0, 84.0, 86.0, 84.0, 80.0, 72...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>Training</td>\n",
       "      <td>[[151.0, 151.0, 151.0, 149.0, 147.0, 148.0, 15...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Training</td>\n",
       "      <td>[[230.0, 232.0, 227.0, 205.0, 173.0, 154.0, 15...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Training</td>\n",
       "      <td>[[23.0, 25.0, 28.0, 34.0, 37.0, 36.0, 32.0, 29...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6</td>\n",
       "      <td>Training</td>\n",
       "      <td>[[6.0, 3.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   emotion     usage                                     resized_pixels\n",
       "0        0  Training  [[69.0, 71.0, 77.0, 84.0, 86.0, 84.0, 80.0, 72...\n",
       "1        0  Training  [[151.0, 151.0, 151.0, 149.0, 147.0, 148.0, 15...\n",
       "2        2  Training  [[230.0, 232.0, 227.0, 205.0, 173.0, 154.0, 15...\n",
       "3        4  Training  [[23.0, 25.0, 28.0, 34.0, 37.0, 36.0, 32.0, 29...\n",
       "4        6  Training  [[6.0, 3.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,..."
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import numpy as np\n",
    "# import albumentations as A\n",
    "# import cv2\n",
    "# import torch\n",
    "# from torch.utils.data import Dataset, DataLoader\n",
    "# from albumentations.pytorch import ToTensorV2\n",
    "# import random\n",
    "\n",
    "# class FERDataset(Dataset):\n",
    "#     def __init__(self, dataframe, transform=None):\n",
    "#         self.data = dataframe\n",
    "#         self.transform = transform\n",
    "\n",
    "#     def __len__(self):\n",
    "#         return len(self.data)\n",
    "\n",
    "#     def __getitem__(self, idx):\n",
    "#         pixels = np.array(self.data.iloc[idx]['resized_pixels'], dtype=np.uint8)  # Convert to NumPy array\n",
    "#         pixels = np.expand_dims(pixels, axis=-1)  # Convert to (100, 100, 1)\n",
    "\n",
    "#         label = int(self.data.iloc[idx]['emotion'])  # Get emotion label\n",
    "        \n",
    "#         # Apply Albumentations transforms\n",
    "#         if self.transform:\n",
    "#             augmented = self.transform(image=pixels)\n",
    "#             pixels = augmented['image']\n",
    "\n",
    "#         return pixels, label\n",
    "\n",
    "# def dynamic_prob():\n",
    "#     return random.uniform(0.0, 1.0)  # Probabilitas berubah setiap panggilan\n",
    "\n",
    "# def dynamic_rotate():\n",
    "#     return random.randint(10, 30)  # Rotasi acak antara 10-30 derajatmin_size=8\n",
    "\n",
    "# train_transforms = A.Compose([\n",
    "#     A.OneOf([\n",
    "#         A.CenterCrop(85, 95),  # Crop ukuran random --> coba make random probablity, nah cek print sama ngk setiap manggil\n",
    "#         A.RandomCrop(85, 95) \n",
    "#     ], p=dynamic_prob()),\n",
    "#     A.PadIfNeeded(100, 100, border_mode=cv2.BORDER_REFLECT),  \n",
    "#     A.Rotate(limit=dynamic_rotate(), border_mode=cv2.BORDER_REFLECT_101, p=dynamic_prob()),  # Rotasi dinamis\n",
    "#     A.Resize(100, 100),\n",
    "#     A.HorizontalFlip(p=dynamic_prob()),  # Probabilitas flip dinamis\n",
    "#     A.ColorJitter(brightness=0.3, contrast=0.3, saturation=0.3, hue=0.5, p=dynamic_prob()),\n",
    "#     A.CoarseDropout(\n",
    "#         num_holes_range=(1, 3),\n",
    "#         hole_height_range=(10, 15),\n",
    "#         hole_width_range=(10, 15),\n",
    "#         fill=0,\n",
    "#         p=dynamic_prob()  # Probabilitas dinamis\n",
    "#     ),\n",
    "#     A.Normalize(mean=[0], std=[255]),\n",
    "#     ToTensorV2()\n",
    "# ])\n",
    "\n",
    "# # Transformasi untuk validasi (tanpa augmentasi)\n",
    "# val_transforms = A.Compose([\n",
    "#     A.Resize(100, 100),\n",
    "#     A.Normalize(mean=[0], std=[255]),\n",
    "#     ToTensorV2()\n",
    "# ])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/user-labai-4/scriptc/lib/python3.12/site-packages/albumentations/__init__.py:28: UserWarning: A new version of Albumentations is available: '2.0.8' (you have '2.0.5'). Upgrade using: pip install -U albumentations. To disable automatic update checks, set the environment variable NO_ALBUMENTATIONS_UPDATE to 1.\n",
      "  check_for_updates()\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import albumentations as A\n",
    "import cv2\n",
    "import torch\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from albumentations.pytorch import ToTensorV2\n",
    "import random\n",
    "\n",
    "class FERDataset(Dataset):\n",
    "    def __init__(self, dataframe, transform=None):\n",
    "        self.data = dataframe\n",
    "        self.transform = transform\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.data)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        pixels = np.array(self.data.iloc[idx]['resized_pixels'], dtype=np.uint8)  # Convert to NumPy array\n",
    "        pixels = np.expand_dims(pixels, axis=-1)  # Convert to (100, 100, 1)\n",
    "\n",
    "        label = int(self.data.iloc[idx]['emotion'])  # Get emotion label\n",
    "        \n",
    "        # Apply Albumentations transforms\n",
    "        if self.transform:\n",
    "            augmented = self.transform(image=pixels)\n",
    "            pixels = augmented['image']\n",
    "\n",
    "        return pixels, label\n",
    "\n",
    "# ðŸ”¥ Dynamic Functions\n",
    "def dynamic_prob():\n",
    "    return random.uniform(0.0, 1.0)  # Tidak terlalu kecil, tidak terlalu besar\n",
    "\n",
    "def dynamic_rotate():\n",
    "    return random.randint(-40, 40)  # Lebih kecil agar tidak terlalu mengubah ekspresi wajah\n",
    "\n",
    "def dynamic_crop_size():\n",
    "    size = random.randint(80, 99)  # Tidak crop terlalu kecil agar wajah tidak hilang\n",
    "    return size, size  # (H, W)\n",
    "\n",
    "def dynamic_color_jitter():\n",
    "    return A.ColorJitter(\n",
    "        brightness=(0.1, 1.3),  # Sedikit lebih luas, mencegah terlalu gelap/terang\n",
    "        contrast=(0.1,2),  # Mencegah gambar terlalu datar atau terlalu ekstrem\n",
    "        saturation=(0.1,2),  # Hindari grayscale total\n",
    "        hue=(-0.5,0.5),  # Tidak terlalu jauh agar warna wajah tidak aneh\n",
    "        p=dynamic_prob()\n",
    "    )\n",
    "\n",
    "def get_train_transforms():\n",
    "    return A.Compose([\n",
    "        A.OneOf([\n",
    "            A.CenterCrop(*dynamic_crop_size()),\n",
    "            A.RandomCrop(*dynamic_crop_size())\n",
    "        ], p=dynamic_prob()),\n",
    "        A.PadIfNeeded(100, 100, border_mode=cv2.BORDER_REFLECT_101, p=dynamic_prob()),\n",
    "        A.Rotate(limit=dynamic_rotate(), border_mode=cv2.BORDER_REFLECT_101, p=dynamic_prob()),  \n",
    "        A.Resize(100, 100),\n",
    "        A.HorizontalFlip(p=dynamic_prob()),\n",
    "        dynamic_color_jitter(),  # âœ… Warna berubah pemganggilan\n",
    "        A.CoarseDropout(           \n",
    "            num_holes_range=(1, 5),\n",
    "            hole_height_range=(5, 15),\n",
    "            hole_width_range=(5, 15),\n",
    "            fill=0,\n",
    "            p=dynamic_prob()  # Probabilitas dinamis\n",
    "        ),\n",
    "        A.Normalize(mean=[0], std=[255]),\n",
    "        ToTensorV2()\n",
    "    ])\n",
    "    \n",
    "# Transformasi untuk validasi (tanpa augmentasi)\n",
    "val_transforms = A.Compose([\n",
    "    A.Resize(100, 100),\n",
    "    A.Normalize(mean=[0], std=[255]),\n",
    "    ToTensorV2()\n",
    "])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Inisialisasi dataset\n",
    "train_transforms = get_train_transforms()\n",
    "train_dataset = FERDataset(df_train, transform=train_transforms)\n",
    "val_dataset = FERDataset(df_public_test, transform=val_transforms)\n",
    "\n",
    "# Buat DataLoader\n",
    "train_loader = DataLoader(train_dataset, batch_size=64, shuffle=True, num_workers=4, pin_memory=True)\n",
    "val_loader = DataLoader(val_dataset, batch_size=64, shuffle=False, num_workers=4, pin_memory=True)  # Opsional"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Compose([\n",
      "  OneOf([\n",
      "    CenterCrop(p=1.0, height=81, width=81, pad_if_needed=False, border_mode=0, fill=0.0, fill_mask=0.0, pad_position='center'),\n",
      "    RandomCrop(p=1.0, height=88, width=88, pad_if_needed=False, border_mode=0, fill=0.0, fill_mask=0.0, pad_position='center'),\n",
      "  ], p=0.7441627764724058),\n",
      "  PadIfNeeded(p=0.6472838883735308, min_height=100, min_width=100, pad_height_divisor=None, pad_width_divisor=None, position='center', border_mode=4, fill=0.0, fill_mask=0.0),\n",
      "  Rotate(p=0.6112456336332409, limit=(-37.0, 37.0), interpolation=1, border_mode=4, fill=0.0, fill_mask=0.0, rotate_method='largest_box', crop_border=False, mask_interpolation=0),\n",
      "  Resize(p=1.0, height=100, width=100, interpolation=1, mask_interpolation=0),\n",
      "  HorizontalFlip(p=0.7370875519561011),\n",
      "  ColorJitter(p=0.36145357439752734, brightness=(0.1, 1.3), contrast=(0.1, 2.0), saturation=(0.1, 2.0), hue=(-0.5, 0.5)),\n",
      "  CoarseDropout(p=0.8829630613271253, fill=0.0, fill_mask=None, num_holes_range=(1, 5), hole_height_range=(5, 15), hole_width_range=(5, 15)),\n",
      "  Normalize(p=1.0, mean=(0.0,), std=(255.0,), max_pixel_value=255.0, normalization='standard'),\n",
      "  ToTensorV2(p=1.0, transpose_mask=False),\n",
      "], p=1.0, bbox_params=None, keypoint_params=None, additional_targets={}, is_check_shapes=True)\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxkAAAMsCAYAAAA4VG/hAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQABAABJREFUeJzs/Xm0bVlVH45/zjm3Pd299zX1qnv1qgFENA4MEGxQVBRQbDAqSpQCIqKxi0MzkkjkC2JQMcEmNhgZQ0wKHYkNCFEJmghhDJsM1ICICCVVQBX1utvfe5rbnf374/0+63725869z7mv3qt3wDPHOOOeu8/ea69mrjnnZ8651qpkWZZhQhOa0IQmNKEJTWhCE5rQhK4RVW90BSY0oQlNaEITmtCEJjShCX160QRkTGhCE5rQhCY0oQlNaEITuqY0ARkTmtCEJjShCU1oQhOa0ISuKU1AxoQmNKEJTWhCE5rQhCY0oWtKE5AxoQlNaEITmtCEJjShCU3omtIEZExoQhOa0IQmNKEJTWhCE7qmNAEZE5rQhCY0oQlNaEITmtCErilNQMaEJjShCU1oQhOa0IQmNKFrShOQMaEJTWhCE5rQhCY0oQlN6JrSBGRMaEIT+rSgj33sY6hUKvi1X/u1G12VCU3o05Ze8pKX4M4777zR1ZjQhCb0KUATkBHQr/3ar6FSqeAv/uIvwt+/5Eu+BJ/92Z/9GNdqQhN67OkDH/gAvvEbvxHnzp3D3NwcbrvtNnzFV3wFfv7nf/5GV21CExpLov6Ym5vDJz/5ySO/X2/98cgjj+DVr3413ve+9123d0xoQteaJnbXpydNQMaEJjShkP70T/8UT33qU/H+978f3/Ed34Ff+IVfwMte9jJUq1X83M/93I2u3hE6d+4cer0eXvSiF93oqkxoQtjZ2cFP/uRPPubvfeSRR/CjP/qjE5AxoQlN6IbT1I2uwIQmNKHxpNe+9rVYWFjAe9/7XiwuLuZ+u3Tp0jV5R6fTQaPReFRl7O/vYzAYYGZmBnNzc9ekXhOa0KOlJz/5yXjjG9+IH/7hH8att956o6tTSN1uF/V6/UZXY0ITmtCnIU0iGdeA3vSmN+HLvuzLcNNNN2F2dhZPetKT8IY3vOHIfXfeeSe++qu/Gn/4h3+IJz/5yZibm8OTnvQkvOUtb8ndx7Dhe97zHnznd34nTp48iXa7jXvvvRdra2vpvhe/+MU4deoU9vb2jrzr2c9+Nj7jMz7j2jd2Qv9g6KMf/Sg+67M+6wjAAICbbroJQPk6iEqlgle/+tXp/1e/+tWoVCr427/9W/yzf/bPsLS0hGc84xkAruR5N5tNPPDAA3jOc56DRqOBW2+9Fa95zWuQZVkqg+/7j//xP+Jnf/Zncc8992B2dhZ/+7d/G9blwoULeOlLX4rbb78ds7OzuOWWW/B1X/d1+NjHPpar6zve8Q580Rd9ERqNBlqtFp73vOfhgx/84FX33YQm9IpXvAIHBwcjRTPe/OY34ylPeQrm5+dx4sQJfMu3fAseeuih3D133nknXvKSlxx59ku+5EvwJV/yJQCAd7/73Xja054GAHjpS1+KSqWSmxNMOfnLv/xLfPEXfzHq9Tpe8YpXAADe9ra34XnPex5uvfVWzM7O4p577sGP/diP4eDg4Oo7YUITuk40sbs+NWgCMkpoY2MDy8vLRz7OXG94wxtw7tw5vOIVr8DrX/96nD17Ft/93d+NX/zFXzxS5v33349v/uZvxld+5VfiJ37iJzA1NYVv+qZvwh/90R8dufd7v/d78aEPfQivfvWrce+99+LXf/3X8fznPz8ZXS960YuwsrKCd77znbnnLly4gD/+4z/Gt33bt13D3pjQPzQ6d+4c/vIv/xJ/8zd/c03L/aZv+iZ0u138+I//OL7jO74jXT84OMBzn/tcnDlzBj/1Uz+FpzzlKXjVq16FV73qVUfKeNOb3oSf//mfx8tf/nK8/vWvx4kTJ8J3fcM3fAPe+ta34qUvfSl+6Zd+Cd///d+Pra0tfOITn0j33HfffXje856HZrOJ173udXjlK1+Jv/3bv8UznvGMI2BkQhMale666y7ce++9eOMb34hHHnmk8L7Xvva1uPfee/H4xz8eP/3TP40f+IEfwP/+3/8bX/zFX4z19fVjvfMzP/Mz8ZrXvAYA8PKXvxz33Xcf7rvvPnzxF39xumdlZQVf+ZVfiSc/+cn42Z/9WXzpl34pgCtGVrPZxA/+4A/i537u5/CUpzwF/9//9//h3/7bf3v8xk9oQldJE7vr04yyCR2hN73pTRmA0s9nfdZnpfu73e6RMp7znOdkd999d+7auXPnMgDZ7/zO76RrGxsb2S233JJ97ud+7pH3P+UpT8l2d3fT9Z/6qZ/KAGRve9vbsizLsoODg+z222/Pvvmbvzn3np/+6Z/OKpVK9sADDzy6jpjQP2j6wz/8w6xWq2W1Wi37/M///Oxf/+t/nb3zne/M8eSDDz6YAcje9KY3HXkeQPaqV70q/f+qV70qA5C98IUvPHLvi1/84gxA9n3f933p2mAwyJ73vOdlMzMz2eXLl3Pva7fb2aVLl3JleF3W1tYyANl/+A//obCNW1tb2eLiYvYd3/EduesXLlzIFhYWjlyf0ISGEeX3e9/73uyjH/1oNjU1lX3/939/+v2Zz3xm0h8f+9jHslqtlr32ta/NlfGBD3wgm5qayl0/d+5c9uIXv/jI+575zGdmz3zmM9P/733vewvn5DOf+cwMQPbLv/zLR36L9Nh3fud3ZvV6Pev3++nai1/84uzcuXNFzZ/QhK6KJnbXpydNIhkl9Iu/+Iv4oz/6oyOfz/mcz8ndNz8/n74ThT/zmc/EAw88gI2Njdy9t956K77+678+/c9w3P/7f/8PFy5cyN378pe/HNPT0+n/f/Ev/gWmpqbwB3/wBwCAarWKb/3Wb8Xb3/52bG1tpft+/dd/HV/wBV+Au+6669F3woT+wdJXfMVX4M/+7M/wtV/7tXj/+9+Pn/qpn8JznvMc3HbbbXj7299+1eV+13d9V+Fv3/u935u+VyoVfO/3fi92d3fxv/7X/8rd9w3f8A04ffp06Xvm5+cxMzODd7/73blwt9If/dEfYX19HS984QtzXrNarYanP/3peNe73nWMlk1oQnm6++678aIXvQi/8iu/gvPnzx/5/S1veQsGgwFe8IIX5Pjv5ptvxuMf//jrwn+zs7N46UtfeuS66rGtrS0sLy/ji77oi9DtdvF3f/d317weE5pQRBO769OLJgu/S+if/JN/gqc+9alHri8tLWF5eTn9/yd/8id41atehT/7sz9Dt9vN3buxsYGFhYX0/+Me9zhUKpXcPU94whMAXMk3v/nmm9P1xz/+8bn7ms0mbrnlllwKx7333ovXve51eOtb34p7770XH/7wh/GXf/mX+OVf/uXjN3hCEzJ62tOehre85S3Y3d3F+9//frz1rW/Fz/zMz+Abv/Eb8b73ve+qFowWCeFqtYq77747d03nxihlKM3OzuJ1r3sdfuiHfghnzpzB533e5+Grv/qrce+996Z5dv/99wMAvuzLviwso91uD33PhCZURj/yIz+C++67Dz/5kz95ZFe2+++/H1mWHZH1JDV2rhXddtttmJmZOXL9gx/8IH7kR34Ef/zHf4zNzc3cb260TWhC14smdtenF01AxqOkj370o3jWs56FJz7xifjpn/5pnD17FjMzM/iDP/gD/MzP/AwGg8F1ff+TnvQkPOUpT8Gb3/xm3HvvvXjzm9+MmZkZvOAFL7iu753QPyyamZnB0572NDztaU/DE57wBLz0pS/Fb/3Wb4ULUQGULhZVD9TV0qhl/MAP/AC+5mu+Br/7u7+Ld77znXjlK1+Jn/iJn8Af//Ef43M/93PT/LzvvvtyioY0NTURkRN6dHT33Xfj277t2/Arv/IrR9Y3DAYDVCoVvOMd70CtVjvybLPZTN/dSCIdHByEzxZRNHfW19fxzGc+E+12G695zWtwzz33YG5uDn/1V3+Ff/Nv/s1112MTmtBxaGJ3ferQRIM+Svof/+N/YGdnB29/+9txxx13pOtFYe6///u/R5ZlOYXxkY98BACOnKJ6//33p0V5ALC9vY3z58/jq77qq3L33XvvvfjBH/xBnD9/Hr/xG7+B5z3veVhaWnq0TZvQhEKil+n8+fOJz3yB6sc//vFjlzsYDPDAAw8kDxNQPDeOQ/fccw9+6Id+CD/0Qz+E+++/H09+8pPx+te/Hm9+85txzz33ALiyW9aXf/mXX/U7JjShMvqRH/kRvPnNb8brXve63PV77rkHWZbhrrvuyvF9REtLS+FC8I9//OO5CGARGCmjd7/73VhZWcFb3vKW3CLxBx988NhlTWhC15smdtenDk3WZDxKogcpk202NzY28KY3vSm8/5FHHsFb3/rW9P/m5ib+63/9r3jyk598xJP6K7/yK7kdFd7whjdgf38fX/mVX5m774UvfCEqlQr+5b/8l3jggQcmuxtM6JrQu971rhxfk5ib+hmf8Rlot9s4deoU3vOe9+Tu+aVf+qWreucv/MIvpO9ZluEXfuEXMD09jWc961nHLqvb7aLf7+eu3XPPPWi1WtjZ2QEAPOc5z0G73caP//iPh1sSXr58+djvndCEnO655x5827d9G/7zf/7PuRzwf/pP/ylqtRp+9Ed/9Mhcy7IMKysruTL+/M//HLu7u+na7/3e7x3Z6pbnzhxnZ6pIj+3u7l71PJ7QhK4nTeyuTx2aRDIeJT372c/GzMwMvuZrvgbf+Z3fie3tbbzxjW/ETTfdFC70e8ITnoBv//Zvx3vf+16cOXMGv/qrv4qLFy+Gk2N3dxfPetaz8IIXvAAf/vCH8Uu/9Et4xjOega/92q/N3Xf69Gk897nPxW/91m9hcXERz3ve865beyf0D4e+7/u+D91uF1//9V+PJz7xidjd3cWf/umf4r//9/+OO++8My0efdnLXoaf/MmfxMte9jI89alPxXve857kJToOzc3N4X/+z/+JF7/4xXj605+Od7zjHfj93/99vOIVrxi6yDuij3zkI2n+POlJT8LU1BTe+ta34uLFi/iWb/kWAFfWXLzhDW/Ai170Ivzjf/yP8S3f8i04ffo0PvGJT+D3f//38YVf+IU54DOhCV0t/bt/9+9w33334cMf/jA+67M+C8AV4PDv//2/xw//8A/jYx/7GJ7//Oej1WrhwQcfxFvf+la8/OUvx7/6V/8KwJV59tu//dt47nOfixe84AX46Ec/movGke655x4sLi7il3/5l9FqtdBoNPD0pz+9dB3TF3zBF2BpaQkvfvGL8f3f//2oVCq47777QifDhCZ0o2lid30K0Y3Z1Gq8SbcgjEi3IMyyLHv729+efc7nfE42NzeX3XnnndnrXve67Fd/9VczANmDDz6Y7jt37lz2vOc9L3vnO9+Zfc7nfE42OzubPfGJT8x+67d+K3z///k//yd7+ctfni0tLWXNZjP71m/91mxlZSWs02/+5m9mALKXv/zlj74DJjShLMve8Y53ZP/8n//z7IlPfGLWbDazmZmZ7HGPe1z2fd/3fdnFixfTfd1uN/v2b//2bGFhIWu1WtkLXvCC7NKlS4Vb2HI7WqUXv/jFWaPRyD760Y9mz372s7N6vZ6dOXMme9WrXpUdHByk+7hNbbQtrW9hu7y8nH3P93xP9sQnPjFrNBrZwsJC9vSnPz37zd/8zSPPvutd78qe85znZAsLC9nc3Fx2zz33ZC95yUuyv/iLv3gUPTihf4hUpj+4VbPqjyzLst/5nd/JnvGMZ2SNRiNrNBrZE5/4xOx7vud7sg9/+MO5+17/+tdnt912WzY7O5t94Rd+YfYXf/EXR7awzbIse9vb3pY96UlPyqampnJzwnWX0p/8yZ9kn/d5n5fNz89nt956a9qyGkD2rne9K9eGyRa2E7rWNLG7Pj2pkmUTV8VjRXfeeSc++7M/G7/3e79Xet+v/dqv4aUvfSne+973hrssRPS2t70Nz3/+8/Ge97wHX/RFX3QtqjuhCT1m9JKXvAS//du/je3t7RtdlQlNaEITmtCnCU3srhtLkzUZnyb0xje+EXfffTee8Yxn3OiqTGhCE5rQhCY0oQl9WtPE7hpOkzUZn+L03/7bf8Nf//Vf4/d///fxcz/3c1e1s8iEJjShCU1oQhOa0ISG08TuGp0mIONTnF74whei2Wzi27/92/Hd3/3dN7o6E5rQhCY0oQlNaEKftjSxu0anyZqMCU1oQhOa0IQmNKEJTWhC15QmazImNKEJTWhCE5rQhCY0oQldU5qAjAlNaEITmtCEJjShCU1oQteUJiBjQhOa0IQmNKEJTWhCE5rQNaWRF34/61nPAoC0ij7LstxpoNVqFdVqFVNTU+k779vb28P+/j56vV56vt1uY35+HjfffDNOnDiBEydO4MyZM5ifn0er1UKtVsuVw7+VSiV9tD76lx/W8eDgAFmWYTAYpI/Wn8/yN96v7fOlK4PBAPv7+9jb28Pu7i729vaOlM1yDg4OcmXzHq2vvn93dxcPPvggLl26hH6/j729PfR6Pezs7GB3dxe9Xg/7+/vo9/vY399Pz7GftA/4mZ2dxdzcXPg767S7u5vapHVmPavVKmq1GhqNBubm5tBut7G4uIhms4lbbrkF7XYbt9xyC1qtFmZmZvDXf/3XuHDhAj74wQ9ibW0NGxsb2N3dvcJ4/38+qVQquT7je6anp1Gr1VKdq9Vqrp68d35+HtPT0/jwhz88KitfV/ov/+W/JN44ODjAwcFBGrvt7W10u130+31sbW2hWq2i0WigXq9jfn4e7XYb09PTmJ+fT/w/PT2NqakpNJvNNIa1Wg0AjvAzkB9/XuP8Uz6t1WqYmZnB/Pw85ubmMD09jZmZmdz81vEHyudeNP/YBtb14OAAu7u7ODg4wP7+frp/ZmYG09PTaDQaqR7aDo4/38EyWW7RsrKoLQcHB6Xt8Wss22UB27C7u4vBYIDZ2VlMTU0lfs2yDBcuXMDFixfxgQ98AH/1V3+F+++/H/fffz/29vYwNTWV5hHrt7e3l/rt1ltvxalTp/CUpzwF99xzDx73uMfh7Nmz6RmtS5ZluT7Z2dlBv9/Hxz/+cTz88MP44Ac/iL/5m7/BxYsX8c53vrOEex87ev7znx/2dSSjve/5IW+y/ey7qamp1L+zs7M4deoU2u02lpaWcNNNN6HVauH06dOo1+toNBqYmppCpVLB3t5ekrXb29vo9/tYXV1Fp9PB6uoq1tbW0Ol00O/3UalUMD09jXa7jUajgZtvvhn1eh1LS0uYnZ3FzMwMZmdnk8wEkOaktlt5m/cByLU/anc093mf96tSdM3fodd0/uv3aM6pzGE9WSb1lOorynPKSv71a/zs7Oxgb28PnU4HvV4P/X4fvV4vvWdmZgYzMzNot9tJP1FmUt+ojqHcqdfrqNVqmJ6eTvV95jOfWcy8jzE9+9nPTt+1P9kn7DMAiY+oN8jbtVotx3O8l/w5MzOT9C15V4llUM7V6/Wc/piamsL09HQqj391DrBOlO9aJ7W5yB+9Xg97e3vodrtJl/b7fezs7GBlZQXdbhfdbjfNf87FdrudbJCZmZnUT91uFzs7O1hfX8fOzk7iod3dXXQ6Hezu7mJrayvZQT4HAaTrBwcHSa/qvGBf6Txz/UOdobaWlqv9R53CvuJ4qo6nTiUvHBwchLJG68XyVTa5LHG9S1uebeeYbWxslPLvyCCj0WjkFL92oFZIwQEHiMKBjalWq8mwIlNPTU2lwWCHa1mDwSBXrg6mGgnKFOw0BRk6IUm8T//qpPX3FBl3/MtrtVotBzIODg5SW7R8Eu+v1Wr4u7/7O/zf//t/Rx2eoURQ522JQI+OE3Ao2JSBd3d300Sdn5/H3t4eWq0WdnZ2sLi4iHq9nhS1Kg9XXmRuJxWAbojoRNCJMi5Eg1EN6izLkgHNOVGtVnP8T97v9XpJILNtKoCjvigzKGq12pHnOJY6LuxzzqNqtZrqru9RQUdeJmjg+3TuarmshwIRNdCnp6eTsnIww7r7Xzd49Fk+r/VnW7VMv1/J26/tUeMeQE7WeN1UPilQUcDVbrfRbrfxhCc8Abfccgs++7M/G7fffjvOnj2Ldrud+l6NbACpX6vVKmZnZzE9PY2zZ88mY2EwGODkyZNHeGRcqMh4jgCGf3diP9DwmZ6exuzsLObn5zE/P4/Z2dk0rwg6dWwiHcf5oEp/bm4uOVmWlpZQr9eTcUMnSRGfOcCI5q/WS+vhxkBkQERzp6jfXWeSl9hm1XE+HlqHovKjsfQ2um7XdnldnUdUz0cORHV+armUr/oZd3KAdhwahdfUMVRUhhqmyuMq86PvUR+7HKVOAoDp6WlUKpVkjOvcJEhUW8odv5VKJTnOeH+1Wk1OHq0D7cv9/f30DoIB1sdtSXfCsQ60XYt0Mu08vrtoXpD4fjpadQy0DNoQPvc5H4r4W++P9KbrXB2vUXjw2CBDjT59AZmFSlCNaU5y3letVnMeVFaYnkFlSjdUtKOKUBrJIxOR8nLBpaTGRIRMIwONz/H9FNRkPEWsRcylEZxrSWVGqfaD18UVkXujut0uBoMBNjY2sLOzg7W1NTQaDaytrWF7exs7Ozs5z0CZEeft1jHgvRq1KfNk3wiiQU+goYi/Urni/QSQPN40sCngVMiqYOa8i0BGmfLmX/dKAHlwrfzvypj3kBe0Tu6BdGOe5Snw1vrQw0VQ5fX0uR0ZRA4AIkMxAs387hSBEF7T31w2eF/qPNH3cd7s7+8nHqbn/eabb8Ytt9yCf/SP/hFuvvlm3HPPPVhaWkKz2cxFsLRO3ia2tdFo4PTp0+mZm2++OeSTG0Fef+Cos8flkctsHzsqcP3Qm6teXZZBjxx5O+I57VN6uvm90WhgcXERrVYLi4uLmJubQ6PRSHor0hkk/32UvvIPy9HyIn0VyduoXAWq0Rjpvdo3WuYopIaiPqv97nrH9bQDLn7UceLzRMdFQUZUt3Eijb6qw9KjF6OQtk3tK8pfJbVr1PYDkBxmKrs1ksG+9eiGvlfvU17QSAaNfjo1aU+1223s7u5iZmYGOzs7qS+YOUCnNd+vjrxqtYrd3V3Mzc2l6MbMzAx2d3cxNTWVMg86nQ729vZS+Vo3j2Dob+qMVXvZbdhKpZKi1x5hBw6dlQcHB0l+qX2k80THlUDLyfW7kl5T0O7XrkaGjQwyGPbShvoL+bt2kgINZVr39rBRBBoOMjSiARxFX27g+6ArCiW5oNJBiABMdL/Wp0hJuaGk9RhmIF4rcgVRdI/+dUXFtrIvOdk4afr9PrIsQ7/fR71eT2kbUVhRlZT2vddN+9QV7DAj+0YQgaTyc6QMOI84BwDkwpw0aNzoVmPgOCAj+svytFz+PgwIUkEAyPFF9HGwo9816lGm4KM6OznAcf6Nyo4M1aI54m3xcrUPPd3Qy9FIEsuhZ/zmm2/G2bNncfPNN+Omm25KqQn6PD8ui9VgnpmZQbPZRKVSQa/XQ7PZDPvtRlAk/9yYdN72ua+kekCNIucvkhoDLC8yOPU7+Z0pH81mM33q9TpmZ2cxOzt7hCf4vogfna+LAEFZNMANmGGGspYZtdcBhN8TjUvZM0Xl+Ef1e0RR9ILvj8CIyyCOIb+7157zadxAhvZ35Ci9Goekzxd1ZOk9LN+jbg7ePSoUpWtpufpePut2I732Os6cr5pSDCBFhOk4YCRjb28vASICD8pGTUmuVqs5EDM1NZXer3KC9Sgap8gmdHtSn6ct6GOo46vvZiZEVL4/43PJ6+1zQ3Wf2xZFkbNrCjLq9foRNKudyYZ6np2mPmljOOhswO7uLrrdLmq1GnZ2do6kXLhHF4jXaagHhJMx8ihGBhfLVICjIEjLjRjJy9N+UuNQmcKFpZZ5LWkwuLKWgcarkwt5V5LsG1cu9Nbv7+9je3sbnU4nRalqtVoaV3oMvW+KFIbXTd+pSJuejnEk92ooj7jhw/YoX5AI8HwuaSRH+00NDh8zPkNBqmtj6FXxZxVUHhwcpBC0KhD1sivfUw543RywUrgxOuLeM5/rWlZk9Oj7/aP38DsFvT7j93nZ+qzLBwURKsiVL9jHc3NzqNfrOHPmDM6dO4cnPOEJ+IzP+AycPHkSi4uL6TktS8mVl3rRKGfPnTuHM2fOlPLrY0lRhKLIQ+0UyQc1bpiLTUeWGiL0TPb7/SQLmVLmBqeOH4CU38+0q4WFhZQHvrCwcCRaokBTeZh1dj3G90b85P1D0giGG4PDjH7KlUjmR/rR55UaKXqt6F06Xz16xHsiz6zKnwhoaL04Zhzr6enpdJ/K3TLnzdUY7deb1MAG8o5Kp2EpT34vo+kEz/o85Tz7S+cW127Mz8/nMlg47xw8kBTk8UNw7nXjWgNGJyqVSiqbY1yr1dI6RzqpsyxLdiSzBnRNyGAwwPz8PJrNZpIJXDfJdRpra2vo9/vY3t5O0Q2uD9G1Qp56rKCE0Wq3XdmvQN5BpOsddIzJq4y2sAzVvcrb5BGugVVyYJNleQcL36XO+TJ+G0Yjg4wIkRYhKjcEVAjyGp/X6AXLpwBSoKHh78hwYNnacewYepYdZKiw4bP+3ghhKhW1jfe68eKokwIawBFhfy3JPQPefxGiLWqvkwI54JC5VRAUGUj+Hlce2k/aFjV+x0kpuMHvSjD6zRV09LuDDvfwOG87MFbyOanGL/9GQJfXI8Du6VyuvLVdfIZlRpFG5q2y7CLjmn+dX/R6Ec/692HX9LeyT/QO70/1DM3OzqJer2NhYQGLi4spPWp+fj40QIsAl/e5GqC6YcA40KjzfhjIUB52PaHGkkfJCaiZvqh950at8mGtVkvrCXXTBkYk2ccuT538us6HSEZEvK3lFL2jiP/5m8qRUfVOJMP1XaOAG297URuKeKDovoiPInBWJhOu1ph6LCnq5yI7LAJSbv+URZSjucU0Ked7T3WPUrAcEOv81ffOzMwcMXS5TkP14fT0dEop0tR4Lvhmvfh+lsG6qYOCIIkpUpSbMzMz6Pf7qFaruXUfarvSceTOEr4XOJolQ/mkzmx1nLk+0VTqaJzdQeh2gpep/eUAm9/doXZcGhlkcGBUoUedMcpEZWdVKpU0mJqj7Hm1RKGR8uD9wFFh5REMZUwdDH5XIOUeoQioqMEeGbpF3jg+o54ZGgXHFfijknvCWf8iT1jZwjI3fIjmAaTIBQUMIyikor7SenLCuhde38n6RUj9RlIUznagoYBvb2+vEMyS3+jdUM8+cMh/HFsXZEX9pwaTzid6gHiPKxu+y3cIo2COFLp6ciPjhB/+RkCRZYdrPyJl6t8jg0JBUUQuu1TQakSmCHwUzV2vmysUnYsA0Gq1cPLkSZw9exa33347br31ViwuLqLRaBx5V9H80Wsq78gLjC6OC0XGcxTV9e9O7A96YjWSQd7m/On1eimdkbKefaL8qYCEcoZAbWZmBouLi5ifn0+Lvufm5lI6sbZNeYjv0HcVyXjvEwf0Wkbk2NP5VPZ+4HB++r3834EN9T7fEzkQysiNH+VpGmge5boakKFzQD9R37msvta693qQG4C85qDBncKUq7zf05uilEHqCUYudFcppi2p/Pa0KQfQCkyKslOAK84X5Te2gVkRHMe5uTlUKpXcLorAFftvY2MDs7OzODg4SPOXu4lRbwFX0q8Gg0FK897d3UWj0cDu7m5uV0jukMnIBqMbXJiuUQA6W3WM1M5UGwnAESdbFD2gw5Z9MRgMcnrYQYvWhc+pPNF+9DUfBG8Kbop0aRkdK5LBhmk+PicvG6VMSgOJW2sRVQJIufxEfxqqUyZURcH/2RlkFPfakaIFYBwIXZik73JDzoWsAqtIgJNckKr3MTLkFAFH5T1aYv+zfRQ2GtJUYR8ZANpWFQraX2wDFbUyaFl/KalyYBnsHw1LRnW70UTvhq+74ccX7nEeuDBVcAHkowVFQCAyciOPV+QYcL7jfOI7KQx1rim/qHzQcYrAvdZJ52Q07z3aMozK7tP+cMdDBKi8T6N73KCkXFBl7wpA31ur1dL23efOnUtbemt/RoZWmYGq3328xoU0auZ97e0tMjS1j3UXKYIM8i49miqTG41G6hvqFPYXPZXUb5VKJZU9NzeXokzcTpjv8vr6nCJvFIGMqM3Of2x3UTm8n0487SuWUQQm9B3+O8cqakvRc7yuwMKBV3TNv0dAyvtJgb7K2uijdSqa0+NGbtuonCGpzI5ASNF9o8hXvmtmZiZt2KPrMJwPWH4EICI7i6Sgk3yp9iHTo92BQh1KG0ePFOC2x5qKpOtIFOCqsc1yZmZmEuBoNBppW11ugdvpdLCzs4PNzc0kNxR4uM7XNqkOBZCiKcrPHlFVoLW/v39kS2Dta+dllbd0dBKIkJR/1AYg+RqVYTQyyFAjWCMPalDQA84K8To7np3O31gmmZHXyAT8XZmTz7vXSFEkr7sHg52mIEMNGmU4LSMS9sOMZCX1crrxzvKcrrVBQIYkQ6lBpEaR9iPHM1L6rKMLBL7Lvet6v37X/yMDSZG2jsU4KgIgvwDNDSiNYnAMdL6oEawGTxHAiMiNj2HAzscn4gn2vV8D8hFBlqcpbL4eQ8vm/RqtVNCi74qAlAL9YeDCnwXyKYRRH5XNe68TP/q7ziOPVvHeWq2GdruNkydP4syZMzhx4kQ6J6ioHqPSqMDkRlEEKsraGclMledRFANALgpNIKt5yZT9epaDzmHgcLH33Nxc+nCrYN/sJOIbBxij9E2R08AdapHs5N8iUOA0Sp38PUXPF9VbjaRILkXzS2VNWf85D6nuj5yNZW0bR91CWQEcOmaK7nPbyH/X+1wu6T1RuZoqVbYboJetZepvEWhU3cK2MhUq2myENqQ6EVT/cv6rDcH5rBuvaFmqk3h21f7+Pubm5nIgo9frpVQqGv+6Yx23J3c7lO3T1Cbta60v66Z95GlO6jhW+VAkFyLbROsVOTe0HN2yfhiNDDKYH0ePEENB7m1VIcCO1dw1Dr7m7PFDhFyv1xMzA8h5UbVDfNBcAbk3VgeV3icHGG44qJHtACci98oo6XWfFNH3a0kO/DjR2CZF9novn9UJGnlH3Ogq6oNI8Hl0SAWQvi9agKSgcByIZ8Ior2u/6UKxSqWSW7iufMvrHCMdG+VVN9zVSOf9HknzseGzDG1zfqihxsVy5E01zjwsTgdEBKI8CkkZwHfqfPX6Kvhyw95lzzBDQY2QCFSVGSMKoCLi3NYxYL3VCzQ7O4t2u4077rgDd911Fx7/+Mfj1KlTWFxczOUya51GMQbHMXLh5LLiag27Wu3KotFGo5F2fFK+dRmu/U+eJ/9Rl7meoi7Sw740VUSdMaq8nRwklY2RejGLDO8iHaFeT3+/yu7IaeNGyXHGResZARyNWgyLjHP86HjUjxuwOrcqlUpKLeV5CNPT0ykVu2gNnxt1406+1sGpzKjVRdsOkouIcpnP6YGTDhijCAXfr+Orh7+SXJfrezUyyaiGHoY8OzubUiKr1Svpv7rWl/OfW+pz0bg7SVlP9o2eL0b9zc0jeLhfr9fD+vo6Op0Out0u5ubm0O/3MTs7i36/nzs40jM7qPtIdMpzHNX+AmIQzTaqPGN/KgBR0K1OFHcmeySE46Y6r0zWKR07XcoVuRpRyhisBMNVugCYE51CR0NINEwiNFXmwXBl5UYVB0HBjf4tQtX6V9vm3/W9o3h7ot9c4F9L4qTRMCKNXnoJOMHVa6KCyvvDFaZ+L+onLSsydqMP73clzXZda0D2aKioDV5vvX+UsvTeIh5xYyHyYgwj7Wctww2SIl4oKsP5O3IWEAypYHWDZZT+ezTzx981rJ+LyvC/0XxgH9D7pal2RSmbx2nbqKDkRpKO73ENWhqumk5Bz6RHYXX+qaGjgMw939RJblz5zjkKLoYZqUXAVb9zDgB5h9aoIKPoPX69aK4PkxtFerGsbREA8fu9HxT4a0qv65dIrmh6lI+pz99hcvVGU5HMK5P1akBqnylAc0eVlhkB2zKgR4psqWgsFUgOa6++Qzf+0Xdppg3tTH2uyHEZOYUjp7OnVanMGQwGaU0iIx+MumjWiGb/RP3N+zwCWxaR0LaovFenn9pKo+jLCDwMk1tlNDLIYJiIoWStsE9irSwjGYx8sAwyCUPcyhTz8/MA8vvxRyE29dB641UY6/Oa960eVXakGlURePLJR3Ih7aFZZQRXRj5YRe16NDQ9PY1ms4lOp5Pbfg046tFToQ4ceqZZNw/VRYqE/V8E0NgXTiqEFJErMOJkonAZ5tV5LIneGY9YsC8oQDQq4YKbPKsHHnlIV6M/+vHok3skIkWqxi6f1esquLMsS1EO9QArP5NfNG+UdVGPIuvBdjO3VHNlNfJBiry82rbIeIkUlytU9xrzrwpvnb9FBomG6dXz4/KGiwo/+clPolar4fbbb0+Kamlp6cg6F9ZjWOROvZjjFukjad/pePK3ImDufU7vnaYx6XhqeeQnnVfkL/K4n+lDUMHTvOv1eu4QWTVqI0M9Mur1uuu0yODTfoocGE4KUsp4NDK6I6eSUpkcUVKZp/PHwUVk8Lu81Kh/kd5Vg5py13cBUkPUjTuWNY6RjCJbgPXV+a5AWdvISIBGqFUWkTT9Rj9TU1O5CIYvEgZwRIeRtDzK+ejdZe1neXNzc0m2cnwZ1VDdMTs7m9ZiaPQAODTeo8wIAEkuaHqW2xqzs7OpDjzIb35+PqVQ8aC/qakpdDqdpMP1UMGI+B5G4vw3JepdbtjidlmkN7Us9onzfDQHXMe7niyjY52T4YtQWUkaE9pQVYzqUdAUBeBoCFm9NEXoWUk71YWVAgsyoC9W0vIiwayC0kk72J9VjywFpN6nyDUqd1SUOCrNzMyg3W4jy7Ick+uYeOqII2BfdM32RsaAKxmlov5UJaLCTUEFn1eQyn3ux4EY9nTPG68Bh2lD/OteExUQmv+qZZYpeCA2uCPF6n917ipP64ntWq4LKvXoOiAkOeB2jxSvqyKK5kSZsRHxjD9b5NmJyo/6Vd+hXjK20T3j0dzf39/H2toa5ubm8NBDD6UFxa1W68h23cPG3MmNMjX2bjRFHkStq8pOBR0+RyLPrL5D+1znkxpKvEedL3yXngUQGVhu1HkfO7+oonYnjMvcyEBXneVzInIORHJ6FNlR9n8ZECkDVQ5mXFaoXikDUt6n+ila7M2IfaSvojqNExUBHzqGXIc7wFCbR20pL9flBecLNzzgeRrquNLFw3xfka0WyVz+H7XRI9qaXaEGNN/FurDeTJfjORjR7pr6Xeupcog7oO7s7OQWa7O/Cd6azWbOac7dsbgTF9dudLvdnJOXesB1iTrY3MhnnenE0/lOvqAujfpV7VSfXzovSc5TEf8U0bEiGepZq1QOt5+t1fKnHKuQizwmkeBj5SOgESkQrUdEbqjyrxt1rshYLsvQv2VUBkI4iVQxUYmU1f9a0vT0NBqNRgIYCgx1nFjHyNNLUoaLFFfUb8MUV2RgK8jQ3H6dILp2ZxxIU8/cAIgMJBVa/E3v0TVLKriVb/Udx6EIaPjcdEM5Ai66SNaNfABH6qzlu8HuPFeU31tERfPQZY/2uRqi+kwRyIj6z8GA9p+DNu2TwWCAra0tzM7O4sKFCzhx4gROnjyZM3RZV+/3YaRtLJrLN4qi+R8pu6L7AYT6wftf2015UpTupAYpy6fRQCOBDit9j3uTI++w14dtcp5zsBr1kzor9C/fTTmucnpYZEPL9/v0WhlQKTP+iwBHZBuMwhtF/enj4SDfQYS3zY2rcaCi+mj6jRqbGs3WfHyPNESeafV8a0qQ7tjmIKNIt0WGewQ8iuw6jofqAD6v9WQZrB/rzeiGOlW1b1QvaXmuxzT9SjNgtJ/ckb2/v58O+6TcYB1pO/f7/TRHNeOB7dG1yDpGbleyLmp7R5lFERXplrI567puGI0MMtrtNg4ODpJHp9/vA0BCjB6t0Je7h4ZGIcNa6i3yMLYqAXaKTghvJBmAk4NhPgUbrnyjSewDGkVQ9OMGi08UN9qHCf3rCTIqlUoaM915pYjROdGpuPQZ7Yuov3zCKhUpXAUP9AZw44DB4Ep4UMd4nCIZGiXzvqABoP2pfO5CX3mZQozX3MD1nddUmUT9znGkIPa6axqJlgsgl8LF8dXzbvhe3S2K5N5KFdxRulSRc6HMMNF+13GIjBdtlwpPHZMI/LBv3Jvm9eRfN0I1BW59fR2DwQAPPvhgOuDtzJkzyLIMrVYr1YnPa+hfFYyS9zu3VFxaWsI4kBonRV5EIDbQo3lAfmbqAI0DKmGVFUyB4ns5D7iQk31Zq9XSAu96vZ6eAw7HNIruukPEjWm2U9tc5FArkq1lRhvfRR71qJDOAwISjTqSRjEgiqgIQLghxGtqMPOaAnSPTHi5kYxQGRft+BfVN0qfudGkO/lQjlAXKv+pZ5zzgxEIBQo6Z9h/vtEE7SaeK0G7jzylz2oKsPMjkI9uFBFtOfJqEZH3Xd5VKpVc5EDXtvX7/ZSqxOtap8gpoGt5NO1XF5Jz/rFfGNFgW3gSeqPRSNtd9/t91Ot19Ho9dDod9Pv9lNLHfmUbNVUwAt+8j+tCaJcpaPF2qQylnmf/kXeU3D5WXVg2nkojg4zZ2dkksMkIzHsrYyA15tlxfN5BhnuK2DHulVFjQN+hgtejGIrk3fCIDLEINfrvDk4iYRf1h0YyHitiv+gWdN5/kTGkERfWl4xfhGRdgRYZupHx5mM4PT2d6hONoeZJjhN5e/S7G8TOzxEPFXlteb8ban4PSY0eFaZqtOl39Vx4PXSOallAPjXMven8Hs1XjqfWP2qHtiUSwEXP+PiMMhZR2TrXnd/d26P15T3Kx3t7e+j3+9jc3MT6+jpWV1exsbGR1hqoMvQ+jOaRv/Pg4ACdTge9Xm9sQAZ1gLYp4mtS0fiy7WqoqqLlvepldHBCQ0KNXH/GnV4+j4Y5UCIg7PNUPzpn/Dk+E81xBRfsZy+Lfa/9N2y+RGNQpL8iB0AUNdfvw6IPHokYZc77u6Nn9e+4gQuS1lvz8BVweQRDjUiVH0UgQL/rvdTBLpO9D8vmZ/Qpe/+wcSiyOXz+cL2EGt1MPdJ2ui7IsizZHYPBIBdRIJArm7OVymHEgod9ZlmWOxtOx8GBm5avesZ5lt/VSejODNUPKqf4nIM1rYfOOa3DcefJyNZZq9VKHUWU2+v1cHBwgJmZGfR6vdz9zqx6nYNNpE1wQYVKJTAY5HMO3cBxpUEPoXqt+N09e2WTRA2qYYaKGuW8pgOrSFDL9d+0XnrvtSZOnkajkYsOAPkojKaY6eShx7lSOdye1Nt3taQGp6YpkO9YV00xGrdIhpJ7W0k+kdVzwefcMNc543xMUuPMgYferwpLgUG0PkQNLg0VOzBVhad8rt4YV/ZuyDHi6JGgyHBwA0L7QJVs0XNKriiKwIGX78aayjYHEvreSqWSS9k5ODhAr9fD8vIyHn74YUxNTeHkyZPY3t5OEcj5+fnU564snJQ/9vb2sL29jYceegjr6+u48847j9x/I0g9bZEB4sa8khpAAHKeXZWnnFvUAbqugnXgQkzmbXPdoUYQ/TRkVcBRrrRSEY86sNZ5FRk+/qzfp+9zXlPgoQZDxOOuf9xYieoUzUmNChSBCT2XhADRwYUejOifyKh2+aW8EBlgnwqkUQv2hUaOldwG0nNjyqIM+t2dtBq5jsrhOFMvaxnRehCVT05atrdN31X0DN/LKAYN+2q1eiR7o6hcPd6ApPxIucH+1y2AtW2Memrf7ezsJJneaDSwsbGRDvTb3d1NGUIsi3pa6+lyTm0Mvj9qY1m/atkR8R36bFFU0GlkkFGEkNzDyrSNyPMK5Pcg5l/+xlCUGlRk0uigLjU2XSHoVoaRcIxCuaQiA0eJ7ef7tZzIqIjq4NdVkH/+539+SpnQ36NngUOPHA+J6XQ62N7eTl5SgkQCLy6I4o5fGq7WxbwqcBwxa1TKlVpRnbX/9LcIiPLdvE95gkbp/Px82o1sHMhPCdZr7GP2OwUfgJy3SPtbDRnOK/VyKM8AMcBwg1x5NzJa3GMOxMKf4E+VfWSoR0YZvTnKP3pOh7ZH26Dkc0DvV/J5XgbMojKjsqPyihS2yxOVY9zuMMsydLtdLC8vo1qtYmlpCVtbW5ibm8OpU6dw6tSpFJaPDEuve5Zl6Pf72NjYwMWLF/H3f//3WFlZwZd/+ZeHbbtRVDQ2RfI5art7cV1+uLGlyntnZyeBC91VKjKSSAqW+c5I2UZ1VmNYjTGfhyTXQ9F9rm/0XW78l/G4v0t1mf+u4+R9Uhap8AN8HWToeNLJSB2lu395arYCT197qXKtjIrm/Y0mBRR6DpPbF6qf3R6K5EZkl0X9RxpmEymRx4t2slI94eUDeQ89/y96T9QekqY30nPvTq/IFtHUJ13zSVuJaZUaOXUDPcr4oM2k47Kzs4NarZZOK1djX+1b7Qd/F8eP9VC7SUltO8pAtde8XJcXCiwc7BTRVYEMN1R0ErMzXIhqZzBNis+pAeYGJQeaHcfyfWsxnVi+UFaNMm9P1KlOkcdHJ2eZERM9r/UpMqKe+tSn4ilPecoRA1FJPWsUPCsrK1hdXcXy8jIuXryIbreLzc3N9AwPz2Gq2+7uLnq9Hvb29lI0ioawGk2uHDkebIf2Y1FflKFeF5gRgNMox9TUVNqycpxAhio99YSoF4qHBFWr1fRXhbEekKQKGohTo4DY0CSV8aXODzdwIqBcqVRyudRaN5UDKvDd4OBcJ8jgOzWk7fNVBaEDA6foWVcq/vyo4KIIaHh/qmc6AkI65iyr3+9jdXUVe3t7aDQa6HQ6WFpaQqVSSQeURiCTfa/1y7IMvV4Pa2trePjhh/HAAw/g0qVLYftuJGk7XIaoEVlEvE/TGNxwp7HlEQkavDTc9vb2cv2pnlcHzJHhrXVyo0VlmAJQ5ZGi6ITzqRrPfB9lhc4Pfa9GMPhMUX29TUXRQp1PPsd1bqic0OgFr2nOuz6jayocZBBo6Di4t1z7N+pXpzIZcCNJQQZz+Lm2MmqjO+McZDiw4DV1FJc5aYsAv5KW5TYgnx0mc4vAbtk7vQzVwdRd1DsKZvVZ1p0RHEaRqa8V7Okh07p2hu9225PGv9qpXJje7XZTVFbLU7u3KArB8aMMLXJ6OKBQsFpWrmatKMgYNibAMUBGhNgoNDkQOojK3JGSp0D3xVlqoDGFSpGkh+KYVkOG0MFz5VCG2JxcKEVGGsmNEEeT+inzpkSCX59TcMd3cbJwa7S1tTWsrKxgZWUF6+vrCXEz9WhhYSH1J8NzW1tb6Pf7WF9fR7/fx/b2dhqrfr+fdkzSSUNjWJWL88YoKDdqrz7PSaAKlFvqtVotLCwsYGFhYeT3PBZEAUUwRuHBqBIXmJLPOZHr9Xrakz/yVjoQ8CiS8gb/VyVfZEBxTvkc5bN8P8tUYcp5Qp4a5vXQcDPvPzg4SFEMevbdQaApVPoOnRfabiXnK6ciYBYZkPzNPbS8TwGSK2gHggooaeyura2leXv+/HlUKhVsbGxgZ2cHd911F5rNJur1+pF66Xfu1f7AAw/gE5/4BD7wgQ/gb/7mb8YKZHifK6+pvlAZEo0DeUXlDcumbqC80PMtVP/0+/2kf9SIj7y5Lqf4PvWORoaTAgkHCupF1vd4m/XZqP+8jhGxjh4JKOpj7U8aMf4ulufyQ8vXk5Kj1CiOhZbH++mU6fV6ufQ2jzyp3aBpPm4PRAYrecj7chxobW3tSIRIeZXtm5+fT/qDaegKqkkq/5W0PI3+AYeLoekUKyojeoffp3bZKFR0rzqp2SdaNwdQtGO4AJwnwwOHW8/zfuol4HCNBuutaa4KkqM5wEgpF3vv7u6i2+0m24uLv7UOvt4GQO5dPP9DF7Frn0SgTtvGZ2jTlaVJqf3A/49LI4MMVwBAPvWJC2wUJCgTqIFBhtBO88Ph2Cg99EgFb8TEajCpgaIdFv0ludJ2JK2kdYkUwtV4RNxjUHSPCkoyNaMSTJeix4MMRc9/o9FI0Yzd3d00brXalV0YCI50zLT9KozdoKKC5ZiP0p4yYKUMrgKWglCNh3EhT5FRIEDBobnKeg1Abu4oj7vXk2U6n/pfN4oiL1Z0rwpKN+6jeVPm8eJ3H0e9rp6byBhj3w6bV8OEoPdbVB5/979FfVUmR7w/3KBjOzlPKQvX19dRqVRw4cKFBKYXFxdz/O/jx37c3t7G1tYWLl26hIsXL+LChQtYXl7G6upqad88llQmm4v6dtgzfp/PIeUf9hXlJuekg4Fh+sPvifgFwBGdFAFmJdcvRXxfNNecJyPDvwyM8N1etuodLXfYR4EDdX1UFwUcer+vyyiKrujYF9kE3i/qTLgavX29iZ7uKOtCedyjdZG8jPjV+831jpJHrb1Mnzv+m/8t4+2IIhsraiNJo316jSChSFazrTpnCOaUv9hWt1Vc5/I9fJ7ym3p/bm4OBwcHKWpC2aT1GgwGaTdXOmAVaA+zs+gIccDH30e1045Lx4pk+Atp6DUaDUxNHe5LTFL0pXmX3C5wf38fvV4vJzgA5ECLbjXIwdUDlfTD60XeJyDec1rv9YkTGRBRhxcBDBegReRKomjisA+U+bm4c3NzM+1Mw/UYWXZlK7VWq4WlpSXcdNNNaYH9zs4Oer0eZmdn08mYHEdGMzRPUBeDA4dhPFVGrgiihVreN35Njc5er5fADqMaGslYXFwcmx1zgCun1VPgkO/9f3pfaVxSiSr/q/eNXiryOMmNHSePMgH5fcY1IqJhWOVV8hufdaXjnhP3ZDogjkj52MGGRjTLooCsdzRfi4y6IgPSgYjLkogig1RBleag63ioIUQ+ODg4SFHF6elp9Ho9bG1tYWdnB6dPn04RjXa7nQyJ/f19dLtdbGxs4KGHHsLKygre//734+GHH8bf/d3f4ZFHHsHW1lZp/z2WpH3lvFdkUPn3svEuckBxbAku6GlkrrauC/LIwjBQGQF+NdyKQAZJ2+yGA9+rqQtqQBXNL+c/yp8y72UZOVjR8suABZ2JNIxU33u51CNMC+r1erm1Mx7F0P731GnPdPDsBqdxBBndbjd914iNRi+mpqZSSqVGMDi31FHlRjj7S/tO/zqpkcwyNDWLG+2UURFAGEZaLvmr7F0e0aCsVDmh/KAy2rdlr1aruc2EVEdrndQ5S5nCiCojpzs7O+h2u8me5bkalPfkfdUTrPve3l7aDpcyTLMDykj1NGUe26qO/mtJV7X3JxmTHnE1TikoVJhFAoaN8sZReHroW9G6pkmpQRYtcCozbpz5lCLmj5B3ZOC5oeLviLxP0bvZt1FZFMQMI9N7ub29nZiUE6xer6Ner6e9mufm5lJZg8EgGcbNZhNZlqVx4ncagKr83ePBOim6Z9011W4YWnbF5AZ6pVJJB0POzs6mdo0Lcc9qbbd7NiiUgbzBpOkhHvpX8Fxm8Oh1Vfwsk+Ok8yRK8VAjiX+jaErE1/49MqzoVfF6eWoX+T7yvroB5v3hc8+9WmVerKjORWV7f7ghpl7ZohQVdaDoPZubm7h06RJqtRrq9Tq2trYwPT2NkydPAgCazSaq1Wra/vbixYt48MEHcfnyZXz84x/HpUuXsLm5OVQZ3wiKxi3iIQcY2l8+xhGQjPhUwT0BvjuzdH6U5UK7bPa6OsjQ+7T9Lgu0HI0w816tr/cdcLhjjoILjyDoO4ZR0bxTueVj6TJd57eOr+tUtx18LYbLSh8TlVdF6VKsW5SmNk7kDp9arZYzcqO0sKK5XjTOyqMORpRv9R7VT97PRZGjUahIPiufe0S/DPw74GfbPFrpZTCNVUkjoOSfoowA6lXKdc5f1ee0aXj2F+tJwKAgg7qfzzCqofaeg3Wda2wvdQw3/9FMCn3mWtHIIMPRL408djBBhgsC5lXSINbddfS4d/XOqAHiwiJag6GMXgQyIqMpUkBKwzwdrhj0HiqG6BlXKp5apMYQGSsCK+xbLu7e3NzE9vZ2ihJRANEQ11xNrSPTjRqNBrIsS2sHCPwUmbNNuqBLo02cdAoyXAl5n5DUM+bvJqrXNJq5ubmxBBlU7hSAqtQj4whAKBDUYxKdNExyXoqMdeDoKe7RuyPDW8GARq9UKOp8LwKTbuxrvXS+eD+o8GSdeF9EZfM2MgJ9PhbVOXJ8sE9VYbmXtyySoe9k31KRZFmGra0tVKtXFhxOT09jc3MT8/Pz2NvbS4dV1mo1bGxs4PLly3jooYfw0Y9+FJcuXcLHP/5xbGxsJJBRlKd7I6jIUx+NHcem7KNUdh/fQYObeijLshQl5FgqoPfUCp07LFfb4w6sKArI+52PXdFr3cmHWqaDKu1jyk91+rE9WnZEPhZFACKam/pX+b4MZFCORCDQIxjuiIj4JvLSq55SB17UxnEhHW/KXdUL6nCNbKBRSB2GyqvOu/q/2oDqAC5KtSqzl5QicOC/85qujShyBOgznEPRXHTASZDhMl3vj6JDQH5LXO1byhl+uC6EIEPb5RFvlkNZPjMzk57jWhmd86p3tEzfqUplCoChi8GPSyODDF98zcGiMbu1tZUWpOzs7KS/RFoM53jYVjtSUbp+NPeeJ1jy45OrTFmRHMVGgtYnQVloOVI+EbkxyGtu/LkXi9fUGDs4uLK3/sbGBlZXV3Hx4kVsbm6mRWJZliVQwdNqa7VaUqg0ZMhQjHhwIu7s7ABACsnpNoIHB4cLdRkaZXSkWq2mca9WD7dojYCWGm9qjNNTQMWuu11RiOlJpOO0uxTbobtIsX0UNGwjFYYKIAIqXqPXgXNFFbFHiDSC6ClH7lmK1nmo4OV9KpB13DS1hHVScKXftUz1IrFM/vUF5a6s1Dhy74wqEQdi2kdFxkhEWl93CPBDpeQ7F6niKzKstN1qyOqGGQCS/KxUKrh8+TJ2d3dxxx13oNvtpjn4kY98BA8//DDuv/9+PPjgg1hbW8Py8nLaFlx3WRkXUrA4TF7rR/m2KCXKiWPBlF4a3goy6GzReaLzysEH+awIgGh9ozpF/FjWJx7tp6HHv15nBVLOh1rPYeRGeFHueVH7VLYrcd6504Vzgs5IXewd9YuCkmr16BagEW+wTq77xxFkUC9T5nJxt6dGDSPOFyW1txysePqUbsSjaUOciwo4vE89RVjrVMSHPqfKIrGRke/EcdVF3goelFdYpvI7eYzXKDd0nrvTgHNTdbD+z0086DTi+wkePGqnYzI7O4v9/SsHDjKFSrc4ps3tTgUFMGwr7Q8FWmU273FoZM1DDxsryspQ0QNXBpENpHGqDY68EMo8UXjTcwX1Nw/LqXERIeUi71aZN4ft8knjZSupsVNEZd4jf14ZWRmf/dztdtHpdNJOBcrIFEqcAOoN0ugSx5OChN5SHnTn3igKC/WAc1z4PxmcOxgooChquypI3keDgMwf8cm4UJT7rIY5+dUNBraBY6vlqGB2r4p6EweD/LoGL1sNHg17l4GMaH64wUeeBI4uJIvmohrQWn91NrgX0ue2Ah6vbzRfo3p427QdUZv1r7ZF6+zz1MGOv1ONSo92ad339vawubmJ/f19XLhwATMzM2g2m7jlllswOzuLS5cu4cKFCzh//jxWV1exubmZ5O4wBT0O5DKhSGY7zyoPRmOkZauyVgCowFXfyWtujKqMjmiY3I+ei0Ax6xmROw3UCeVy1KNoUT2HGdbR3PP5VNYvRfq2iDdZflGqYTSviiIl/v7oPUX/jwPRkVetHh6050BgWPSiqN8joB7piMgGi+ywq5Ezka3k11wmFrVtmLNC/w6rA20ZjR44YFb54L/p3HTZon1JG02dhLSfqMt9DZIuINe1FSR+d/1cNDfdHnCw9GhoZJAxPz+f6wTgMJWFC1m4SIuGr6IqBxdsnHrY2OkasSjanjbamk4HWTvIJ2GkuJx4b1kILrpf/y9SdvxdjQpXanq/Gy/c1m9rawvr6+tpy9rt7W10u93k3Wc/MuzX7XaTEdrv95PwZvkUZo1GAydOnEiLbbnwlFuvEaj0er3U94wm6CGLOjFJ2p/RxKaioAdWFSWjJS7kxsmA4tZynBOM6NDzoEpTI3eMNFUqlZSuRv7QTRWKjGcqVy4CY99Xq4cntOs84HedPwpG9B1lBrsaeeRbti1ai6PRRi9PQdHs7GxuwTefc2HLehcZD0XCVeeTRyu0bf7XlQXrrDzJPnAZoEpY+Vbzz1m2KnXWaXNzM81D/mU076//+q/TeRjb29vY399PPAUg12/jQqMYBcqvZR+XkRrtAPJphJQvGpn1uij/uC7R9BXnL41yRO2J/i9S/KQio1n1ntaf+i9ax0AqMuyLvqtujRwDEfn8YFme2uLgTd/r0cCiyKD+ZeqI3sv3eJTK2zAsqnYjiGfl6Do+RhDoGCxztLmM1MgDdQ/lbQQg+A69j7LF59nV0LC54lHYMkDr85X3FUVyNaOgjNSmVKOeNrDqYJez5Ds6HDXVnOnVXN/M+/UgXzqTKatoX6leZ+aJRmJ0DrDenENuD3sk41rOgWMdxqeebJ3krmgV2TqxYe6RApBLhVEPNQdQvcM6oBT6RaTCrsyj4qRCb5hC5P1F748Uj/aPG25FZZGpmYbW6/XQ7XZT5AhALqxKo5/P8fh67iZ1cHC4a1Sj0UiGzfz8fELwBCrT09O5czRoGE1NTeXerRNdFb4bVt7H2hfqcfSJG4Ugx4XU+8C2USBFoMi9RGoU0RjSUK63N/KQRIZW5OnysYmM7cgbGJF6Q7Isy32PhL6Szkv2g8oA98YMo2H3aV0jWRCV50ZWZJB5X7knsGgMovernNRrWXbl7JrNzU1cvnwZjzzyCObm5nD58mVsbGwkcOoGVVn7bgS5YakGO38fJreLxtCfIWmE1I1vB7/6TFHdnAf0WpFci9pe9jv/V+OX80u9qO7FLEtpigA1vxeBcjXIi/jdKZoDKmOieeTgTuuvACeKyqhzw9ehjJIqFoGOcSCeQaZ9VsTn7B+PsHqEQp1Mmm6uMtcXlvuaDx/f41LEB0VykG1TeTYq0C0izqOie9wJrJEkt4c14uDRUbVfNRVJ7YPp6ekcUOE8oV3l5QI4Mrd0oTrv0+2PaUtwnmhkSPvAIxqPdj4cawtbjWR4aF8jDFynoYedkNyw5+9FBgaANECMitDjzpQQDkgRozugKQIarAcwPHROckFbJMSiclm3SKBHZbDPdWs/pkpxm79KpZL6kMKhUqkkRLy1tZXWcnCS0DtRqVRSziXXc0xNTaHf76cF491uN60b0AX9ujDb2+0TIfJwe5/qZHFAqzmi4xbJoJHnaVIUIFpfFfgO0GkIAYe52JxfJDcgOQ+pZFRZFBm4HgJXg08Vuz5TBkI0hZLgyg0v/av1UqWnu6fwd5U5UV30nqiPvA0qOyKDUOutfeG/UeHpXGbZmvLF8Yg8XUWGtvcPgefm5iampqbw0EMPpXQpHuLHZ9V7PE4AAyh2vOjv2n6V4dG1CHzob5x/HDtdSEyKFKqOvdcNwBH+Bo7KdJVdep+Wx+f0Ge2nqD7kOze41AAa5pmP+Dy6P+L7IrmgqRpZdrgWDUDOQNMog8+vovaoNzaqJ8GGAg1/1vWFy45xBBkktkF5pshO4O8acfD0JtWjrocoi7n+wvWtyrjj6mCd2zq/hkUUfC48mshTJPe9bJ+bWj/lRWYRVKvVI2uHWI4vF9AoioIMzufZ2dlkT+jOrFp/H0fWlfNDnbq6NkvHzvtAeeZaRPZGBhn9fv/I5KdRQKRNYEFDkoPIgdCUDzVoHG3TKDo4ONyZajAYpNX0XOQyGAzSX04ENajckIgmQgQ0/PfjCJ5hyrwMiHidfEKRyXgmxvr6ejoTgyiVgIHhVAC5E1MJSJjWw7QKDbk2Go20//bCwkJKjVpfX8f29jamp6fTnvzsa11Qruhd1yWwbRrt0Psj5KzeK/aLC7xxMqD0JGvyuHol3HjS/zVcrcYQvRK6K5g/r6F0V0Dk+8hQ0vdq7m+Z4o28Zz5PojK0DnwmAo1UcBEoikCs15OfKP3LDVGSG1FuPDq/8jrvjbyrCpjYx24kq+LXstQw5jOzs7O5edTpdPCJT3wCU1NTKbpIg0TH5looimtNRUDQZaOPl3/XMtxjro6qwWCQ0tEGg0FuzaCDfq+n8je9jEXtcR7U3x1cRu0f1mcRCKJ+pYEdAYwyPRcBiOj3KHoQlaX6S8dF56TPV/cKO1DwHSsduOn76THe2dlJTjLKTjpA3ZEyzjQsxdive5qTOhyZtsuMEdoJ0UF+RSmJfEdknJYZ7WX3RXNK74vGqQiIF92j5TqpXioqx+tMHUX7lPyt0Q6dc2VgTO1fPdiathKBi4IMkp5LwvQrtpnOZ9oUnj7lO4NeDzpWJMPRnRpQrCCNfgICTngakfxoXpr+deMlCnmyPhxIfVYBhSolF7D6fxnIII3C0NEzUbmuTP2+SHAC+TUw/X4/MRABBpCP2mgfRnuNK/ADkDNomQ/PPuZJlETXXHOhAIKKvMj7pH2tn0hBax+4gCob1xtNkZdAvWdlvKMCXftNIxOMhgB5EKEGlhvRCvR1HNzj6+lY6gmJjAufq94+N2zcmFEngIMMH/+yuVpk2I1KEaByoysqu0wWuHFc5HVXQBh5sh2caz8cHFw53btWqyXl44c1jqsRFfWlU2R8Fxnk3t/Oy2qcUk7p+kLv2yJDrqj+x2lrUTv5vczQcb2hY8xyPDVI3xHJ1VFBRjS3h7W5aLyKAIYDDQdNEXDy8rUM6j7VewoworaOG+kmIfwb2TNAPv3Wo9S6llVBOGVLJKv8utdDqcymKrK9nE9U/0e6g6TAf5j+j+pZdm9k60XzxvWsp2+73FXQpADE+9uJa2f8LA0FL6wX+d7TyWkDcG6wjGGRo7J+GpVGBhl+6mStVsttWTYzM5MmMXP0yRhM4wEODSkiaP7V0D4Fgh6UpIYWt2Td3t5Go9FAv9/H4uIi6vX6kZBfpZL38vIdwzqq7N5IMJUpyaLyWU7kwff3A0gLghnFWFtbSwtAybSM6FQqldxOQzs7OykapWNHJgfyi0N5knu73U73MQrSbrexubmJCxcupK2KueDY9zMn4xcZmN7GSMi7IebCb5xABg/FUfCsC0vd2C9KPdStaFV4sC99sR/fyaiUeyg4nzRlwEPnKtijNKIipTyKgc82EIS6MpyZmUmLvFUgOsDUvw5kgWKPbWS0sx58j6bx+TtJDgx4r8ocHU+OqcqlIqeC9nkkU3yr7sFggF6vlwNqbA9D7NqOcZonRaRtLxtLNzZVD2lEkP3BsaVc0tOj3ZgYZuC4h1LrPqzO+r+310FmEejV5/UeNWAUVGn9nNzYH6aDtL8V6GhZ6shQmcf5r391DvuWtdRZdKTplqHuVFTjluPNrcC5mUylUkleYm3/cYzQG0Gbm5tJRtNe0k0dSOR3LuaemZlBo9HIbXkbrb9Qw5XOHh4b4AvBgUNZHhmpOhfVWVXUpw6qo/si730EdPhO16lOGhlS4v3kR10s7lE8tWlYD90aN0rn02tsEyNs5G3u5sn20EnPqIPaAm4X8dwNjdYp6bxQO4o24Sik9sKoaXIjgwyGmoHDMBFwFA15eC1CxoqodZcEdoQqfTVeKUx2dnZSWEjXAjBdCEBaY+AREg2LKRMWGSUkFbjR9+hep2FekiJDTRlf16bo7ihA3huqoTW9T/fDZllUmppixb5To3V2djYZLo1GA5VKBZubm+h2uylli2lYGtXwRVDe76qsIjCi/RD9PwqjP1ZEA94NFPeu6X790cJE4FAAa4hTQTN5XEEq/9fD+zSSwnvdMHWDgffqb2yPts09jEWgXO/lPR51iQzhiFe0Pp6m5GWUgSA11h0Mu1woMz7V6PHf/B73CqoHWuvvfK596KBE26L9TLpab9X1pIhPSGWyWPsgAhoKXtXodqDOKHtkiA8zxqO6OkiJnvVyIlkW8bXPL22XGnIOPKI2lM0Nn+NFxniZvNbfFexEi7HdEeVnY+hH18+QnzWtMqqvvpc7TtGOUAeb6g91HIwTaR8XOQwo03UtBcEGAYPKewcBBB7+iWQSnysil4VRW4rmGZ+P5luR/RXNQ393WX2d/8vu0fs8s4fXVeZ6Ozhv3Sb2dytQ4HkaTPPs9/u5PtB3HxwcpEwXXbdLxwpJI1P6nQ6ZSLbwnijjoIiuCmR4pZQJi7ZAY1qTL+wkItcUERqn9NzTs0GhRYDS7XbRarVSrvv+/n7KSeaWYCqISL5GgB15XBpFII0i7PV6kcBWoekHFOmZCGoUMprEBT+DwQD1ej31H/uafUvjlG2rVqvJo9FsNlP/z8/PY3t7G/Pz82lP/tXVVXS73aTAOX6RR9oNtkh4Rd7CIsE6CqM/VqSKQK8pSFSQEZ1i64LW0wbofSCPs3xVHhxjGmNULhQgwKGSdkXLdys/aNu0v9VQKxsHByQkj6joe7w+EaBkn9Kzo0Z39G5VEA4GiwzOIoNE66pOFZajEStVJqqYPKROmeUCXusXCflKpZIzotWTF0WlbjS5QRuBKv3dDVofTwcY0YYByiuUeT7fIsDIekRGjz6nYxEpaNahSBYqqYEezRsvW51n+reoP7U+Pi/8ea+r94eOibfVo9tM7fXdcqg3GMHwj+6yp2PtzhT2g4IbApdKpZI2RuD4qNHt/TNuFMkgd1BoJILZCDMzM2m3yMghp5FtP0G8aNOQUSjSF3xfNL8cxKq33nVi0bt4j5Yxim1XFN1w8mikAgqtozs5mKbHd7Fu1OV0GCqpLZ1lWTp0T48i4Pv5bs6j7e1tbG1tYWtrC5ubm9jY2ECv18vZAlpHftf5rLziNnORUzCikUFGkXfGDSid2JqaQaGvnnQVEmqwa5kURP1+/4jnfWtrC81mE71eD1l2ZWvH+fn55LF3JO71LmunC5uIidVYOA5I4WB6naK+LStbha0yNlMlVNCzr9vtNur1OhYWFtLvZFouEOJCIraTaQjsS67LaDabOHXqFDqdDi5fvpzGY21tLZ1EzpC3KhQAuTqrIab9433C33Q8yW/jQpFXPopC0bPGiJKn6mjkgQCaY0mBpMYTielaFGp8noKIfatKxXc/4nzlNX+HGnAELqrcAeSElPIRFYdusayAiM86z6tgU77m+LNcnQ8q1Ek+r9RY1xPMI1ATGVmR11jbqx/fPczBtIJDKpZo4au+VyMi2hcKMLx/x4EcaKqBQYr610Ei+1HH3gGmgnj2Dx1ZrIuDTiW9j/NOebuo3lo/Xo/GPQIZRWsRXPlH9XTjTuf9KBSV4/VTQ471VZnMPlbgQLBBA8ujGLyXaw7VicY+cOemOzK1b9kGyt1K5XDzDco1dU4cx3B6LIkb62jKpa5fU4cgU6MajQbq9TqazWZaXwlc6Tflfe3HaKMKd2aM2j9F6VQk1ylF84m8606IiMoieA7QRyHXG8DhFv3RexUEexu8fpVKJTmceI9HBhwA8Jwt/tWz6MjLW1tb2N7exsbGRtrmvNvtJoDBevA7+UlTvego41/VPTrHee8wOjbIUCMvAhpFaR9q7PiClEhx60eNCc3N5LtqtRqazSZqtRo6nU5aEzI3NxeCg2o1v41kGUqOkDT/V7AwigD3e1z5+G9Fv7sR5ExNZapCXAXR/Pw82u12un92dhY7OzvodDrJ2HLFrwYQv/NehvLm5uZynvJ+v49KpZJD7tomV7BRikPUbu0jBy83mnRcIsNDjUFOYp0zrthVmet4amqPCjiWRWCpfabKVb0ZDjI8jaqojQpYaFD5nHA+5fs94qkyxQVt1Bfep2rU6XP8ruMAHBqMaqD6jnd8Vg1Zko4Xx4TXNYrgxi+vuQdZ7+M8i4xbfSdwqPRVRupvbJfmVI8DqcICilN09Lsb595/kXzguxyQavqhy5kiuat973JJyY30CGQMu9/H2vXVKIZe1L9l93idIp0WgQ1/TmWcfxwwafuiDUqie/39bpPovNf6sE7MdQfy6YnjCjI0LVZltMtqgoRoR6miua/tdtAW9Yca0cNomE1UBAhGART+vNtLw941ip1XJIvcZo3Arcsir6Pbor42IuqHqakp1Ot1DAZXskk4V+h4ZxoV06S4iygzWaK2uG7iu6hL1YHrgYAiGeE0MshQRlfDADjcVchPUKXCnJmZOYKc1KNHg4kAguFRzcdUocV1Gvyd3t3d3V00Go204It1cy8iOzJiyjKmdkZU0gEgjcLsvFY0aG5YqteNIdG5ubncoS1kOAd7FBozMzNotVppLOr1OnZ2dnKgjOdlsH58v47/zMwMms0m9vf30Wq10Ol00G63ceLECayurmJubg7b29u4dOkSOp1OOjQw8mJWq1dOGmedOK68X59RhcS/40IumN0Q1mhGtVo9sgAyGi9VoA7k9TkFFuRHjlVUrqcu+ha2FDJRtEgBg5KDD9bBDXnNFaZXTttI4at94E4J7V8X4Kyfk4MA7Qs99ErL9wgBy+A4KojXdtDgV0ClbeRY8jrHgJs3qOGthpIqjEgmOYCksTGOIIPj7MA8UmYK/oDDk4B9vHxeuP5gH1JHaZ08UuRyBzhcE6DAuqhdTpHxoXX3No+iyMvAdHRNn9N5GoHYorK83qojOC94SrHqafaJ9oOm7TKSoYZRBCTcuQDkUz74HNtGxyQXz/K7y5RxBBm+GFhtGE1xarVaKTWK51qxLSq/2T++fkOzPyJ76TjkYE/nbZkcOs57fH4qFUU1/FmXKUXvZ3nD1iFwHkRlRalblNPUIZrZwTJos7F8pknz/vX19XQGGiMYuinQKECAdWFfUG+5zX01Dt2RQQYVoSNdn/QqoFTR8brnG6uBxdCP7ihR5tHQ6Ea328X09DS2trYwPT2NTqeTdlSo1+s5RnckOgo5so2uF3mOhoGPUf6PwuZRW3S7OwUkDM25AOZvWZYlkEEjUA0TGjlq7NVqtWQQtVot1Gq1hKqr1Sr6/X5aLK6A1McTQIqOKHBiW8gDkYE2bpGMKIJxNWBTvXJq0HM8gXyKwjDvrnufijxVrAfnJcdTBadHXrROvEfnuEdsKpVKzsMWKfqoDVq+tkuBlZandXAvkxuHqhy8/TSU1PBUw4hggnVitK/f7x/Jn3UjmB+OHctm3YqUZcT3nMtODtLHgZzH1cD2vy57y1IwfKwjr7oap1G/FBn3Wic1lp2XvL7K16P0i4MNpwioDDPOItAwSh207DI9pX2vclmBBRCnxCpoV0elP8v3+dzxqG0kM9Rm4NkolE16bxkIvFHk84OOU3VMqMPGDzN2Y5yyUVOjfP2FA1fncZLONXUY6PxjOcNsrlFtMW3TccvyuV0GVMqej2gYCI/kirYhqpvzJY8OmJubS9EMAEeONqBu4P2RXTCsDeQf8p+mmZb1g9OxIhlRFIMdpR5WIA8wZmdnjzCbG4vspL29vbQSnudAqAfKmYOghKk+6+vrqFQq6cTqWq2GRqOROs0n0TADfxSKynIFehym948rSjUa1MPDCIY+x3YTEKhw5vOMUqnB7x5mPU+DwojRDAIO7mAxMzOTUqh4sjj55+DgIHms1CBgZKbRaKDVaqV3ZlmWvFtqXHsYflxIjX3g6BaTZQZzZCQRCNADx2s09oFDYaTGuXrWdQcWvtMNcjdqOd90bY++g23UenodWDflYf6m+cXqQdF+cKdAVH8CZBqN7gTR/tHyvb50chAEUxZx1zSNqLF/3FvLevMgS25OoZ5Zz0VXQKG54+QfvV/7gPNIPWy69kJlrDoexoXcAFT54zLzODJaeZL/axqO6qgI4PgnMlQdsDpvabk+P7wPIuO/zCjRd2qZ0Rz2+0fpx7J+92tuLLlc1rNIVEapvuScordUt6v1dWoKMvguGj26xk/b7O/S9QjUaeM0LyLyflaemp6eTpELbuqih+ypgQgcRj+or3UHKj/RW98d9ZHaGD6+qqtV5lO2FYGWUfujKP2n7BmSG/ZKw4BQUZRCec/f6YBI+0RtMQc8DvQAJPuKGTucI1wQzowR6kPex0gEMFq0TvmE+pJ6RO32Ufr+2CBDF2pTYKtQcQ+EGjPsSDU6NCWq2+2mbVBV4PjCWDIx38NIBoB0CjUXPk1NTaHZbAI4emJy5CUZhVzxRBQxcSTkVYhGyDwCGuoV1fvUi6RRDDfg1JujRpefe6JGIN9BRlXvMT0qwJWtbbPsMCzdarUAIAm0SqWCbreL9fX11B6Ww/SrU6dOYX5+PikP7pSgWx/TOIxSeW4kqZcbyHvFgbyB7LmQOpdI6pEg79KQZISI81IdAZFHi++gkcy+d6DDekTz2I0VtsPXWfEZEsfShTSVpoIKluP8HXlZ+J3Pa6jfnRnuCGE7uSiOXiCeZt/v97GxsZEiFtqH6uCg/CEvNptNzM3NYWlpCYPBlY0VKNsUdGqEyI0tDcvzfuUXPsdIE3eP8bM0OI6fCuRGf9E9qgcir5wqdeoYP78HOEy3KjM6IqDq34HYCHMw4M4Fra+2zb9rWV7eKIZaBFS8zQqgo37w8vyvrnnwc5IcDPmznF/0xCooj7IYNKqt3nPXeSpHOOYamfU1a8exAR5L4tpGyn5NcSLAYHqUyj7g6CGqLINpVQpKPAqqst8dU+rE0u+qR1SmO0VOBq9nETkAdyAFHOoHByMONqI6RX3n5JF7r58DfgcavEZ95FE7voMyXR1RbBf11PLyMtbX13H58mX0ej3s7e3ljh7wlCedkw4qi9pI20JlhR6fUEYjg4woTYqdpsaRC6syJUAFQEDB1IJer5dbk6FlulDXcmq1Gnq9HmZnZ9Hr9XICi2EjdmxRvYZREaLX38hkzjTDAEdEOpm8HyIFp8aU1tnbq4xNAaLeYY5Hv98PF4OR+RcWFtBoNHLghLntHBMaYJwYAJLRpV5WeleazSYWFhYAAJ1OJ5f7H60HOk6483pT5GWJcpGLxkQ9z7xGoaD9DyA3fmpoR0o2MrYjo0YNBo92aVSL96rC03UHURTCDbZIuEUeSDe29C+QT8FQPvW2uTDndRqhm5ubCdByS2aCDD2nR8uifNne3k7RjVarlXa5owdIc8wj54COjxpAquD5fgcbKgfYfsqfSHaOA5XJXh3jCGiOAkKA/Hxy45ekaYhRuUXGjho4w+6P5rrrijLdoP0RyY7IcI/6Q/+P5n2kW4rIy3AQ7zaARzD0nbpOzU/ndq8vSVNp3Zj19UwKMng/6zruAANAciZpVFodSb7A2/sayAPeaGe/aHG48rjaCCqDVN5EziySgz0nr+cw8ExwWRQFUPtA3+GyPwI4Pjd4Tf9GdY/6Lpon+j0CIFoX1fd8jk7MXq+X26qWOmgwGKT1tDyqgMBc51RR+ToOJI4ty3PdU0YjgwyemKkVooCgB5B/CRyivEpeU+WsB4bQK6iRERdWzgQ0ZgeDATY2NlCpVNBsNtFsNjE1NZUMVuYtqnBW5me5RcjOqWgiUMF7XUlFQjyagBpxcaChgsdTnvR3ejy4Z7YumKTAUgNlamoK9913H/7qr/4qVIz6/3d/93fjOc95TnpnpVLJLSDmGHA7vUqlklKotra2Utv43nq9jhMnTuDs2bOYnp5Go9HA2toaLl++nKIDrVYLjUYjGQjjFMngAnwVMOpJdSEHHG6cQC8Et1l0xQAcCkHOPf7Ok2xVwRCkE9ARNOqCZTV8tT4KIrgommVzS+L9/f2k5NrtdgKYVFiMbrj3jXyp5EaXX4/upaJTflYvHgWupnGw3boH/8bGBrrdLi5evIitrS2sr69jbW0tyTOSpgmyriyXaVUsc35+PgEvAm4K52hO87oaaZybfJ8CD25VTH5wOcBx9OjmuFAEFqPfgeFpPfq/9icNVuoadVqxrwGURuB1rD3NoEjBqiGm7RlmOGmZkbKPIhiuqyJvaRGQ0GhPkbEzrM583tdOan011x843Muf85CRvk6ng06nk5yD7kBi2exbjlmtdmW3KN/elSlDGrEqSnfRPh836na7mJq6cmo5Mw5arRbq9XqSu5p1oFFlBQNMi9Izygg0VG4q6fhpeZRLeo4ScKjL1EPPsXCDNnqX19l5PzLG9V1Ow675fPb7XU4pD0d1j4CU87HK+Ihczmj9uD3tQw89hI9//OO4ePEiPvaxj6W5w/FdWFhI8oe2eaVSSTqQpJkqrBP7XfUV26i/0eYYRiODDPWoffCDH8T58+eTEGeok+kDbAgZ4rbbbkur4ymQfE9sfnQxZRRyLTLWKXB8b25+eB7BwcHhbi5aTvSXHaukyF7v8XqNQsPuixhc0afuBKHpNBp5qNVqmJ+fx/z8POr1elqr4oJJlSojQhsbG0PboPsvK/Kn4QsgHZi4v7+fzufY2NhIfJBl2ZFFaAwBnzp1KimJfr+PLMvSoicHVuNA9JRpyprugqUeOuBwPrjhr4ZKUUhTPXjuGdQ8zPX1dfR6veSp57xzb15k+JFPGJ0Crow566xCbXZ2NoFK9awR3BOo6Mny7ulhn3h7h42zyieWpQa2yh2uteBJ9aurq+h0Orh06RK2t7dTP6lByvrqd44PPafkX84x3dnL55h73VSAq8cwMixdDrAMvZf3aSRrFCP3sSKXv5EDQ38rGnvnH/2u486xp7xhfyl/aETJ6xF5WF3mR+C4CFwM0xfR884Lw+oT9ZPKCY9cFDm/yih6D+ut9VUjUdMtdFcpX4+hYBvILyJW4nWN0KrxFPVX1FfjpEeUdP56mpRu0KJOEAUDdFJRVkdniEX8xP91XlBf0MmhOztyzlHX836V+e4193dr3R1kqNPWI/Q+duSbUZwCOneHzYGIf/zZMgdINK7uUFBbV+fJ3t4eVlZWsLa2hosXL2J5eRkrKyvJ6ce1GgSfdEbRHtDyfYy9XjrXtJ95TfXsMDpWuhQr87u/+7t45zvfOdJzU1NT+Lqv+zqcOHEiIan9/f10kIhGMpgupZ5SNiJiPEeHFFgMI3U6HczOziZPwO7ubtpO140cZVQVbAAKv+v/OhjXknwSUnBwq0v1vnl+Hz0NrVYLrVYLi4uLWFxcRKPRSJEAXShKo6jIqxGRe8dUCOgBfgASeJmZmUlpU1TwCixolLLeS0tLaDab6HQ6yXuvXvFxUg6aS6yAQoE1jZ1arZYWD5N/NDqlOfZZduitBopTEHThMMHE+fPnsbGxgcuXL2NtbS13OA/LdQ8Sv1OJ8TAnelMIiqi8lpaWMDc3h3a7nRYTUpHV63W0Wi0sLCzkeIzlFRk8kXEdCXDvjzLHA9u+vLyMtbW1JLA7nQ5WVlaSLCII1EWRurEBlR55W080Zp9xLdje3l5OyTu4Y5/reooILOhYK58MBoOc4yQySgmExpFccavs0fmt9znPqCHE+3zs6cTSKDMNJZ2rkTee5GDCAU5kpEX3Fl3TsYvKcV7w8ooAmRqJDjT091FJ31NkLNEJ5NFFzRHnXv6dTid5XDXiFPEE+0dByP7+fpoPdCQC+aisG2+PBlw91sRxn5+fR7PZRLvdTtkJRenMdPDoNtZ6ELJHk4H8NqYODH1ucGyBfESLc45zirYAHU/AoddcHaYRyHAvOnnJo8pOHNOyFC7tW/1eFmWgHPX1H3yu7F0Rr/l92kZN86Tj6+Mf/zhWVlbw4IMP4sKFC1hfX0e320WtVkO73capU6ewsLCQztOgU1HbR3uiyAEyihwYFpXK9dlId2F42LSIsixLuz9Vq9XUaVzczRQOflzQq+Ef1YX3UGlTQPmpoR4Sj4xT/1+NmmhAtJNHFdBliNbfzferoUBjZzAY5E4C5c5Rapjp/tmNRiOdYUEPiDKKgphRmSdqQ2T00bs7GAywtLSEarWK7e3tJFx2d3fTNrjz8/NJIHG3KS7Y39raSsJLldc4KQgaMQoyyHvqseN9Ozs7OeNShSLHXsHA/v5+boE3208DSlOoqLQvXLiAra0trKysYHNzM6U0AkfXMWiEjCkJtVotF13c2tpKgJ48xrVQm5ubud1NGAUhyNjb20Or1cKpU6cSUFYvvBtCkYdN+cwFthqi7sXu9/tJWF+4cAErKytYXl7G8vJyckzognimFFCZa3QiAgZUTlSmXJfR7XbRbDbTWTSDwSCXEsf+LwIZTmoAcw6ovGC/KbgfV3K5Sbns8g/Iy3ogb7BGKWG6/bCCewXWHvmemZlJMoabV7jnTnWTAzs1NqLxK3JS8bvLs8jBFYEMfUa9vPxd+9vBRZmRHeklfY+m+mlUz39TJwjBhaZIEfzrKd8RuNQ+1vQp/1/roGk70ThG4zlOxPMvGo0Gms1m0uXcUYrtcvmhEQTKJN24h8am9isdKCwny7I0dzhHNFMlWn+o0QyOQ9HOVayLvjeS+e704k5auhGMtlv1Ca9RrwxbS6AASHmvUqnk2uv3K0XOD7+mfe/vot7gJjkXL17E+vo6/v7v/x7r6+t45JFH0li0Wi00m03cdtttOHnyJBYXF1GpVNKBfFyesL29neZBBDKLgJH2hcueUWhkkPFoiMzp4RsV/L7dnTe2CGTo72R6DS9puT7gRVQmWMuujULetiIhr0rLhTgnFw/poSFP5cmPelS5JoICSyezv/dqGKmoDaw38/WbzSYGgwEWFhbSmHBhm6aZ8MPth7nugh7JIiV6o0nzLZXf1CBSPifo1o0JFCxGnkcFBFSoaizxXirttbU1dDqdFN1zoAYcClEHnRod41wlyOj3+4kXgStefxpnVGa12pXF/HQmTE9PJ3DC82t0nUbkaSziSTWUnCioVSZwXcrW1hbW1tawsrKSws8K/LLs8KAuev4IzD1tioCYqYEAcgqdilajdNzZjaTzpMjDqO1S8r5Rg2EcDSalaP66HFGgofdzXFW2u7JXkKkfB+3RRwGLGspef62by6TI8RSBhrLv0W9lY+seVa+vyiS9fhwqqg95mPKL8kwdJUXp0gouiqJJUT35jghkubOMET/eq3ViP4zjnKHjjfqR50jxQ11A+aTyQ2WrRhKUh1RmqG7hb3TQaLYJswo0v1+dALqeVkGLj4nWvSwywd/q9Xo6TJj9oO32SLw+qzZiGSnvlckmve59ye8RqI/4TfubQI2Or+Xl5eQUe/jhh7G5uYmVlZVkDzabTSwtLeHmm2/GqVOn0G63U6YE5yHn2sHBQbIbXaapXGC9tO5ax+PMk2OBDBpFxwmrZlmGbrebBAWFOI0dGkK6vRbJJ0KZt0EFmOZ5KoAh6NDJpmV7eaxDWdvKrru3KLovUkYuxOldZqoFvRcAknBmv2haBtctcGLSK8u2+/u1v48rbMmwbvjRO0Jhs7i4mEtdm5+fT/mCi4uLabcqej5opLbbbQBX1gPQqOa4jhNFURY1djSUXK1WU3oN/9d0HAoICiVde0OlQQDDLVc7nU5OyPP3wWCARqORtgbW9RIca+bXcswI9AgEeXooFbXm9Oo4OB+xrjMzMzh//jxarRbOnTuHU6dO4ZZbbsHp06cTj1Lp6PoU9UxGhgPlknqptN/pxdnc3MSFCxewurqKhx56CGtra1hfX0/hZPWmUYCzz7hhBKNPbNtgMMgpSEY/yNtMBaSAb7VaSSZG6QeRJ9vnYmTQ6v/+TJH8GUfSNhXJecoYnVNME1TZppEMGrW6hSnlpUYwfIcjH4uiOrtyjkAJf3fQMqqsjYB2NNacI77A1PnFAYuXU/R+9zCrvCPRGcJyNcJLWaKODz0Ti/X2+vnc135X/UMASblAHqEc0nnmMmMcwXm73U7nYXBdJQ3ser2eZE9kqGtakfajy2eVeSTOH54czR2MdDMRXaCvMlgdPGVGqdpiXnflX8p+6gmmUDNtjHrTo8L+v8tX51ulYWBEyyC5DaT9oOR9Qr6nbdzv97G8vIyNjQ088sgjOH/+fDrF++DgAO12O0Uw7r77bpw4cQLnzp1Do9HA7Oxs2s6Wmyutr6+j0+kc6duo/Z5O5WNyXEf0yCBDPYLHVVgU3goyirwWpCjkW+Tt0WfVU8M6q1dZBRGfLXuPXitTfEXXtHz/+H3arghoqBEDIHlENURNgDE7O5tCipyENPQYRmZfKOKP+ve45H1JRqUgoHCkIUzBT2OOnnHWj8aDL1bzsRwHYl00HO31dV7UMD/HMyqTpJOcZSi45rzivZ6SBBwqH/JOlmW5FCpduE3BwnJ1Ewf1VFI+sAxVaox80MBmeh/5ATjcwY7tU2Htnlcde/UWqada+4WeOCrK7e3tlP/N93Ge6MJ1nnlBwMB+VUOXoEgXgGuImfORXjcqw8ibHM0dlzsuQ4quOQ+N0zxxUvnnfRF91zHXj3oJdVF3ZPT47x4R8Wha1N/+v/KmG8Xe3qtxYLGPiv5X49mN9LLyIrCif/Uef59+XM54mzgGGoXy/td3e2TV54f2t19XIKe6REGeypFxBRm6zaxvquEAwR0xPj7ROCrQUL5Tp62nnKvt5s4svUZ7MdLVWXZ0gb7WXYEpeYpRnZ2dHTSbTXS73ZwTVbM9qN90UxkFmhrxejRjrn3p0VQH+drnypua0svdDldXV1N6L50oXOdXq9WwtLSEVquFM2fOJNDBduuaJ3XiU4+7bnFe8D4pslNH0Skjgwx6X2nEHId4WrOnSznIiAxs/lbkGQLyO6s4wIjSV1RBOONHAIP3HVcARYak1sHfwe8+6GrIAUiHDFYqleR5A5C8Gerl0AXS2k8ekSpTXMch9xBpqFR3KeIWa9PT08m4rdfraetPtpe8pgJW8y3d23ijScECPQAMXQL5bRQpXDgOCsTcO6RgzXOLPVJCQ4rpcgwt04hWAcN3MB0KyIMM8opGUHgvv7ui4fiol4T129jYwPT0NLrdbkpTApAOYNT1HHzOjTe224EG66UyhYd8MkWKC77X19fTTng0/rl4nfVgJIO8R1DCaBpzXTmG5GeOTbPZTKkAjUYDu7u7aDabaVcuNXqVf1QmeR6zG9S8z+WcKgHWdZzmSRHpWHsbVG5y7ijfO/h2h5brGy4S9oiIGr+uVIvIAaMaTt6+SL77Pa6Xyox3L8cN6ki2a5ShrFyNFJSRyiNGPx3wsDw1VHVsVE9q30VpNJE+J7BTEDk1NZXkF+ul5UXgexxBhi7a1rMxmNLp21dH5OMcpWiqfNUooC7GJykoqFQquZ2mSKob9KwgN8adsuww2qv2puo0rlFpNpvJqeobc9ApyzV13G5dHa6879HYPBHIoNzV+6L+4TrHTqeTDtXb3t5O26hvb28DuHLQ8YkTJ1J7Tp48iXa7jdOnTyf9TkCxubmJ9fX1BFT6/X6qE9elcYyB/MZKvvUzULxN8Ch9NjLI2NzczB2UdxyiQVKt5veBV2FSrVbT1phKkVeryNivVqvJK+rlq9GjKLJIsOk9fr8rEEel/BtFU7wtkYDzevM7hQiFJ6/pjilE9NHhPI4+vR+HKZIyKvJc+bhpNIaKhetJ6NWgB4QeYvfYaNjTJ/KNpki5ukegaPz9PuVL3VGM40RAASClxul5NowK0VBW8MJ0xWiNhhrKCm4VBGVZltJP1PHA53UXk6mpqZwBt7e3h9XV1dQXtVot7QTHELj2iYPzovmh/O1rSDY2NhK4oNAlCGY0hYsqGYbmYkv2JzerAJDbFYz/VyqV9PvBwUEaE85DKoJ+v5/WZngbIj7i3HZ54oY4f9PIpDs5xoXKjGUgbyg7uYzVxfoKMtz7qsCBfO2gNTLwvW6RLAWOzv2o/kVeZpLXk4BFDUQFCF4fNczVmeH3Rc9r3SK9WzQGzmP+PrYh4vMi0jqp/uY7eY3j58Yr9SSNVHXYRKDF3ztO5HqPxD5x/iirP8cjcliR1HGjIJP2h+pplUd+NtpgMMjtFKrynzrebSMnynKNjNRqteQ82t7eTpvDMI3cIxk0yhmVHgwGSRbTmaTOQZ8L2idl/cr6qgxR24RlaltVR3FzluXl5aSz2F8ESAsLCyl9nKnlc3NzqU9Yzvnz59Nicd1diuQOlMFgkLMX2Yfavqt1VI0MMtQoiRBrEdGjpAfmOQNzYlMpXC25kHSB55PRjRdSBDCiietGob9Xvbt8V9Q/Xp4qF1UaBBa6AJWCgqEwzaUvAxhRG7zto9KwMtwjp0BDDSg+qx5xGmKaY+mRq3EyntyrVnRP0ZhomxSouPAEDr0LwJVUoyzL0Gw2070KPNhnek4E/xJk6DaHXgcdN4KMqamppFi44JzeDxVWuu6DCmNrayu1u9FoYH9/H6dOncJgMDiy9TH7SBWSzmflcTXMmSalJ6PyfAzyFY1/RjB42vzi4uKRc1joFVXFTAOGAlgjKgRas7OzYQS4CGCQtJ0qMyPZyT4qimSM2zxx2RkZv0XkDiIFV6rUfVG4Gu5Rv0R64Dh1KpN7LEPnfpEDgkaZzz0amUUGZXStTN57Pcp0nJdT1I8Rj/n89Pd7vfx3n+dFulptCz6n84F/aYdE7360qTPXg9TL7P2nfcNrEUX9HslNkoNtggz2aeTl1nV07Pe5ublk/xFkEHjQMKbN5+Oq9aMdSecjZazuCtfr9VJfUYdQvnP3RepEOiW0vTrPnI+LgFDR3ImcFerc4P+6qJ7rBjc3NxNY4L20+VRXMfWWY8G1MhsbG1hdXcXa2lrS704OgNh+jrXym7ZFI5ajzpORQcZDDz2UzrVg+GZUYtjLGVMNqGvpQfABdoARGXJAHBrWZxTlOtolE3Iy8a+H3XUAnSIEre/WBbdcy6ChzCzLcgaQhqIjg4zlPxoqUg6ezuMGMwEGP+rhYFiWqV/VajUtaKpUKmg0GknYEYiMC6kgcuGvY1mUruCGBoWxbqeqqUQ0hBm1oBClAKJApueHCy4vXbqUtsdjHbjIud1uJyNfQVO9Xsf+/n46XLFeryeBuLm5merrCo2Cm3Xi7iQ8K2cwGGB5eRmVSgWnTp3CrbfeisXFxeRpYnlqLDr/Kk8TYHAPfu4kdenSpXROCIC049qpU6fQaDRw+vTptNXuwsICVlZW8JrXvCad+q1GvDoNXJG4kKZiybIsyYT9/X0sLi6i1Wqle6jc1FCKDFHylu7sxWt6n/LUuBlOWjfymV4flRRQumHg6U9Fjh6S5raro4afCNgpcIja6GOoBqPKB+AQgNMoU8WuoNs3LfF+iwx+lT3KX/qMRj6UD4u8uPq7pzV6vVSHaY687sJGuaZrvVReajqQAkhdpF+k9ylHqTOKQNujieZfL4oi+c6r/O586HqmCKz4Xy1f1zwAONK/vKa6i9d0y1s/bJlbrDIN1XmMqai6CynPd+K888gy602nJPUmn9ft/3u9XrIreIgs1xsSSLlzS4l8Q34lfxXJGI1usF3UR6urqymlV49y4Ls3NjaSo4z6fWlpCe12GzfddFOq6+XLl9NuVMvLy9jc3Dx25tG1ppFBxsbGRlqpflyjjkbOMC/PtaDIO1NmVLsnqwjxu0ByoEJvMHdd4MQgk5AJ1XhzA0KVrfZRZGxQcGrd1TAhM6vhRYFT5q2J6nW1NGy8o8gS76PS0dQQ9aQfHBwkg3WcPLQKVKPxG+VDUv5SQ1R342A/6qF5utMG68QoJBeSqYeDxj8P8eEOYARy9CLxw0X7uv6HUY1er5fqRW+RLkikoaCHFm5vbyPLMly8eBH7+/upfQQ0HpEr6i/2GYEIjUzdl7/X66WQO5XLwsJCStPizi2cXxcvXkyg5HrwSgT8lX90jHk/+UCVvP5Wxk/jQmVG+qjyJzKGNTLtXlWVlfq8vleNK42cqlzV+3VuDqt3Gf96W1h3/qZAVdvvfRGV5e10IBD1h0fNIoCl97kuKmqvAyyPTBd9XFeoDo30mQMejTxq2pWW4306LqQOwmEf7wfvVwcZ2m69j85M/qbrNvhcUYRKnS90qujubnTA0glEkOFzlE4tPV9qZmYmt7kHgNzZH1G7VB9Uq9WU5qo6UncPVHnL9vgc0LIj+8VJ28W6+HkxdLppGjSfoa7W9c26XoMRjY2NjbS+g7pu1HTyUW0S7YNRaGSQcf78+WSo0LM3CpHR+NcN/lGE86ikk8jThZQUffOvC0gXgr5zAw03onTma3MrUfXSViqVZADyJGRNYfHJrak2USRFPTLcDpYTRJUKJwVTCdzzGvX5ccehTChHSsyFk5LWndEXXYTJsWAkgwbEOHmf1IuhytE/ChSKFIV7hfgceUef10OXqDiZysT8zkuXLuHixYvY3t5Gr9dL6zVuuukmLC4u4pZbbkGj0UipQgxnMx3KPcI7OzspBYnlXrx4MaUoqZdKF1QzIsV5wnUSu7u7WFpawurqKu666y6cPHkSt912W9rEgLyv0SH2lxqVeiAnF31zTQZD0PQC3Xzzzbj99tvRarXQbrdzIeLjbnBxXHK5Es0J5wlGMEm6OJ9zx3cOiwzkcaJR5VCkxB1gUNdoVJnRDDdi3NjW3e8IoP1MoavVUz7H3Zus7dDF6MBh9MPBkht2DhB8MXURkNE5rfKX/cnrbL/qVdc1bCvvU32qOyPxux8Op2DZdbDOTU0X5l9vg4IHggvtE33PtbZFriV5H2gEw+0dJR0rjWgUrUfhu0jk/9nZ2RzorVQOt4oGcOQdTmpY66Y/jKzznBTnWeCKvFPHrR4Eq+nCToziA4eRP+oGjYaQn+bn53P3qpxwEM02k8c0AlfUfuBwETzrQL20tbWF1dVVdDqddOAwbTb2HfUo10bv7e2l7YzvvvvutJZwdXU1p+uOE8XgHFUeI6mOHcZDTiODDD31sSzkHJFOfgcYRV6iqyWddNG6hDIh4mhfQ5AKTKgAOEF6vV4CF+vr6wmdUkAzvFWv19MiJa2rghc1oIDDCezeIQA5IwI43HJOlRXrXDRZ9F3a/lHHQg1h/l/2XYW/9it/01QUV4Y0fLmAeW5u7qr48XpSGYjy3/l/dI8DFCXlbS2DhhX7mIJpZWUlgQyGYxkGP3HiBM6cOYOlpSWcOXMmnc5N44rAIgIZjDRwS9qtrS1MTU2lfFI9QZvRAypG7gRSq9VSOuXGxkYqnxsD8FwJRmqcX9iXGrUr8hbpWgwuFOTWf1w0yPru7u5ifX39uhrmbuTq2POaRiyiyIemSGh6jfLNOIMM5/9oXgzzEKp8U0eNRjLKyuD73JDTeUp+J19R1rIOOk6R80iVM8dSZQSdcOpUUeCgi9vJw0oewaGe0r7Qv7oTHfWUfhSwu1HuwJj1Zz/yN01Z0R2k1NmkOjDSzxF/KC/rGjAdY9UJyh+uK/xd4wYwgEMvtW5Pr2sUWWfXKwrMRrGB3HikHeCAUd8VlasymmVo/5PP6/V6cgQQNOjccgN7d3cXrVYrd9aUzpMI6PK78qMazHt7eykKD+RBhvLScWSny3Wdl9SlPISSuonRh42NjdQHkfOU/be1tYV+v5/Sp+r1etLFjNgXAQzvJ3d68H+mx9GhyO8Rv5XRyCDDPULHoWiCqydk1MqOQg4SonCs3qvXXPDRCHLjhRODYa6trS2sr6+nbTnpQWVaGU/m5ISlwI4iLq6ENERHZlUDgmUqytRJqtELn4g6Ftofx6GiMnWC6fsjZaRtc6NBlR69Ezwdm3m9o4YDHwuKjAwAYduLAJneEwlxRixUIOoCZH4Ysbh8+TI2NjawvLycDP+FhYWUIrW0tIRTp06lLVyZg8u1P8rzur7m4OAgLZauVq9EmAaDQVqkxkV+VAiso6ZzVavVZOTwFNmDgyuHDVWrVZw5cwZTU1Ppfz1DJTLO+RuFMb1GFOhMx+JhefQGcX6qh00Xp18v8nlCUqeDK29V8J4CqfnsrqTGCYw77w9zAI1SnspM/5SBDDeQ3IBSUE0ASgOFz9MoiIw6AKF813u0fI8w8Hm+wzMCOBdVVqpDKQIPqs+jBbvqXFCQ4d5O15/eRs1T13fw/ki+FQEL/Z+8Tf5nKozqzog/PNLM8Y3A7biQrhEi0NBIhtsvQLxYPHJYKenzozglovLcuRF5vFWnkB90AxEH21w8zoXb5FkFypTdZRSlPpLXd3d3Ua1WUwYFcDQr4TjkTnWNUGr6FyP+ejglHYVM242yaKjPKpVK0mW0OX3HR6doXCM+4gYvukjeI0Cj0Mggw0N0V0su7K+m0kVUqVRS1EBD3jTI3DDX54D86aWRgqHRwoO8uFiHBly3201pHzzFml7ber2e80rR+6WnVFIoU2l4SJj9pf+rEKEBp95jD7EXeXSAfGrGqAZJVJZ7kyLg4H2vZbknTcEtDWxGNoi2x4V4Dojyj65nUC8egJyApAFMIKnhcC7sdlCmIVg1EPb397G6uort7W088sgjSYjNzs6i1WrhlltuwdLSEk6ePJnqrKe46k5TnJ/0mlM5UJANBoN0Jsvc3Fx61/nz51MKlRpoWZaltBRur9vr9bC2tgbgykYRKysrAIDTp08DQFoIrmua3GkBIKUjViqVlLPKkDTTPBnF4baABCEbGxu5POHl5eXraphrtFEN1aJIoo43n9G0giJAz2vjRCrvyxS4yy4H67yuhmsEMlTuREaxGs3q5WRqBXcq418HGWrURcZX5FVVI5D1Zrmao07dABxueUnyqI16gyn/FTyoN9m3FNUouKZJ8pr3l0bRFPQShKgHnuPGuaXbl0agzPvNyZ2UnDu830Ga6z/2dxm4GReiDUOZpal8Ubqlr3lR3hslzUWBV5Ydrs0oIp1bo7yjKM2JYIM8zvt0Axu1A3QejWI/8p3Kv3oelDqRte90DU8R2I2I91Lv8bO+vp70EhdnX758OdmPGj3iRix03K2traWzpnhoH9dJs30qMyk7jiP/dQ5T12jkNmpjGR0LZHBwjzsZI8WpTFzkzbsa8pzFaG1G9D73ZFAY8S+NL4aomCLFKAYHfGtrK00GnQgU6mRg9URzy1AyrA6m5uWyL7WuarRG7VOPlve/3qfPFhk5EUWRjCKjIDJ+lJeKIhgqXFQpqXEwLqQ7oChIdY+qCkX3QAJ5z6enb0QeSw0dR6lCNO7pvefORrOzs8iyLJcHSgNBF5Lrtra6mI8KALhivDebzQT+9vb2khHPD5Bf90QvDEEB28EIBBfE6UFO5M+I33W+04BSMETwRsUyGAxShGNlZSXVc39/H51O57oa52rw+HflDXXCRB/eR57TcvieMk/+OFFRHYt0RFGfFN2nRDnikWHOJ4II5UcCD10zASC3DsZ1pNZdQYaDGwUamlqkoEoVP+umc5L19giFRzWKwIgadu5t1jp4qo5eZ9toGDE9OMuylH9PT7Q6ory/ivrQ38n+d31XVLYbpOM+L9ToUwBRFAVSvvZrRbbbRz7ykWPvGko6e/YsFhYWAOTToQEc4TvnVfKWrjmgl1+j8+qkohxnf3AHQo9AeltZFwXDbjdpFIxlOT8W/Y1kDv+qTtbsF65H3NraSlEcdS7OzMykHQ+ZZVCv13NRf3VwKEA5rq3ufabyR/vAnTTDaGSQwdCNhpNGrbgagmpIulH5aCd7pVLJ7XgzPz+fvJVq/EXCRztMjUIyN/fX73Q6WF1dRa/XS+knm5ub6RpPVqxUKum9auzQWKNnmLslaASDE4sgxL0Eamhr3VWYkPnck8WJpsBDFcioXgESFdIw44DfixhWFQSVG4CcB0DPzKCByvUZ40Lz8/NH2uJbaWp9VYhSwDAi5YKUAo8REZbHtCTOIV5j+HV7ezvx4+nTp3Hy5EmcPXs28ScXodFru79/eEKuHv5D44EGgm61R8O92Wyi1Wqlvtja2kK1Wk2L0TiuFPaM5HExv6Yabm5uYnl5GdPT09jc3ESz2Uxb9EZOC6ZK0PPH0LSuxZifn09laEpZr9fDww8/nPhsamoq7Xp1vYh9XakcHhzGtkRAXA1G9QJr+93wI6lXd9woMvx4PfobPe+yDMh7GqM+pW4i73Lu6CGVABKvczOPbrebDB4S+VjTAPlOlb+sk27fSmNcF/RH4IIbfCgoVXnJOkURF3WYud5VnaMgQ8GGe6tV1wBHz8UhyGAbyYuUhXTYKdjQ+rku1hQzrYMaU5ouxT7UyJ8bkfoe5a9xi2hQTiu4ixxsCkIiAKj3KR0cHOB1r3sd3ve+911V/X7sx34MX/qlX3qkXAKK/f393CYgOn/4O9e3ck1rr9dLZy+pkc6x1INbeXAq+U31pZLysM9V1ld5Rf+qLlbyyIY+w77lh1GHS5cuYXl5GefPn8cnP/nJtB6DcoFbybdaLZw8eRJ33nkn7rjjDiwuLqLb7eLChQspu+Hy5ctpzjWbzZw9AeBYwJF8Qr2kO0Bqv3GuRVsmR3SsSIaHJEclDrwKTjV2r+Wk5h7cnJh6KItOPBW0LmjIFJwcu7u7aZ/i7e1trK6upr2NI2+rImUNyVHxcMK4kUTG4CCqgFQvli5Gdy+FCn4gD0z4DgUV2v9F3p8y0hQYPhcZOUoR0FClonUiMKP3S9OImM4zTiCDIAHIH9SmClzH1Q1HNQZVsKmhqWlX6uVRr5EvIKUg4uYDjB4QQPf7/bRzBbf4q1araVvbkydPpuc0jc8NOYJs/k+gwvf3er00vnRakB80B5SpGpubm+k8jsXFxeQ0YL+wr2iA6O412vc0eur1Oubn51GtVtNJq5ubm2k9FfuLkZjrSUWedJ0fKp+O44jxuXwtnDjXk3wOu8IeNse936Ky1Ejmde13BaV0/GjaFA0hehGVP9SwVpDhxjvBoOopgl7OLY1ssJ4avdByaXgRWBBkECgRgKgRH/W9g6EouuE8pLJbQQbnIPtEU5UVFOmWnVHkRsGFykwdPx1HygN1zjmAdT4ZRV/daCoCFw6wHGB49MKzIJT3tX+PS8rbJOok2k9bW1tp/jC9R4Hm9vZ22p2Tup7lcW0g9UKlcuWsLEbFdnZ2MDc3h2azmSLzdOK6A9ZTyTytLJIh/n8ktwHk5ojOI8qMjY0NbG5u4tKlS7h8+TIuXLiAS5cuJXmiqXD1ej2tlzx58iRuueUWnDp1CltbW6hUKjh9+jQ6nQ4Gg0GSI+12O/UHnSScP9qGYUECjbqoE4LPsh+veSTDjcHjkBq6Wp57dR8t0cutIEONjghkqLHL/zWHjqv4uf6C241x601OFHqSWZYKXNaBxpmDB75bd8rQaArvo9ClovKQqJbnYFAVnPa7C18X9MNIPXp8zid2xDPK+NoHVHb8znHQUKIKEUaGxoXIY9q/kQfahZH/BhwFGVrWKCBDrzGSoVvJ0jhh+JabFtCDn2UZFhYW0Gg0sLOzgxMnTiTPkXrNFLz2+/3cOFar1ZRTWq/X07Z6upsI+YMgQw0lHkBEJcXF5SrkyNcAcvOd/c95wzUg3BOdxhcPRNrc3MzJo8cSZESGEHB0l5xRSPvfr40blYEDvec45fGvyx7vU5WT9LoSZHBNnR4CxvUE3DxB12TQ0zw3NxeCDJ+LjGDQI8ttQlVfuDGg+oll6pkDmiJJ3eWLY13muqGpEfyiKLjrcQcZup22ygl9jwIjjfAqPyjA0EiQ84sCjCzL0nc+XwQyFGBcLb89FqTgwY1jjeZE9kARsOD/ka1wXFJZQ94hANjc3EwRCmaDcN2qAnemC3GLWk0D4sG95BFGvPkOLggfDAbpsD22R9OM+dE0Ke2zUTN09Dm16bQ/ikAGd3lcXl5Of/Wkckb35+fnsbCwgMXFRSwtLeGmm27CTTfdlM4OOXHiRNqJiuBkYWEB29vb6HQ6ufU6PrZldjzHkrJP7THtQ53Pw2hkkNHpdHIh2OOQGv0cAO4Gca0ntK7F0JC05mpHHaQGnK74Z7RiZWUlRTIILra2ttIzZDgqidnZ2XSaZKvVOhJVUZDgngmdFOoV5/0ccPVicPL5hALyylTvVeXnCmVUocNT4NVojrwG0UR2zz3HgBEd8gjHledD0ONHhTaqcHisSI0BpgdQcCq/aHtrtVruXnri3WBUgElDWsea46kLwbhIkLnR+/v7ydhfW1tLi8/W1tZS6hQN8EajgUajga2tLdx2223Y29tDs9nE3NwcWq1WetfKykqaL2wjd6ni+RO1Wi2lJ50/fz7lpZJndPG47ji1sbGBy5cvo9VqoVqtpk0UuLc5jQjyHOcg5xxBBb1dTLeiccZIpKaVMNJxPQ0OGpg6fqPIVvfSAUfXWEXljJvxRIqAhnuX1VDk/7ymBrAam+rJVnnm/UbjfHNzE71eL6UXEvByJ0FG/BRkqLdVDWx3DPiaMt2gZGFhAfPz88lYot7QaB11phrn3GGG9dN1g4xkaB67GkIK0tkXDjLcINfsA+9L3a7Wt1eNHHsKlph/r6lZvB843FlLI5cRv9DgY9qZAiUFFaqjWD7LfDTG9vUi56ki0t/dy+62z7Uk6gCeoba5uYmVlZXkte90Okm3cPtWzgmNDro9ABydq1F7IhD2NV/zNbjrrrtSZEOfJS/pToUeJSuiKLtAiXyo4J+O6UceeQQrKyv45Cc/iZWVFVy8eDFtDQscLnynfXbixAmcPHkSS0tLCVjpmVJ0nJ04cSKBEuo2bsDi/VlGKqs4P3ndbeWinasiOtY5GRRYNPgiD5R71CmAaFx72FW9DRxgNUx9+y4Vds6MzMlTQ16Ndq9X1HEaMqdi0b+cKMwlZRmKutVLpbtA6O5cw0Kg7pHQeqpHLvLSqEEfRThYX/1NvXvHIfaXGsQKMhRsqCKgF169Y+4xoyGoaxo0ZOopM+NAauBEEQoPXer9UaRDPz7ekSeKBoJ6L3UeaKoCDSb9UOC795N5ozxxlKlXzJslH2xvb+dStGh40dtC4U6lw3Yrz1BeqMGjZ11QBjmpgmU5CjJqtVrOw+NyhH1MAXq9QQZTZFgPFereJp+XLtvUUeD85WWOI0X1LGp7dM3nStTeIq81+02NXZZBT6mCDKZTOchQ7706hHRu835uBrK/f7ijHJ0neg6C1pnlEBQpoOC8iHLffZdBlc2UHyqzVMdqPynIUP3tkTjqEwU16oRS/aXgydNuNHJfxNORfou8/WV8Mu5zoyiFDsARO0Htm6K+UboWbadOoQ6hAb2xsYELFy4kkEHDm6CXc468fC3HgQCbQMJ5AMiDy1Edq1H/6nUtfzA43DCIzgtNG1PHsabTszw9DJROg83NzZRaRqcKj0iYm5tLh+zqnDwOyND+iNqu941KI4OMjY2NZEgsLi6i0WjkFoaQ2EAVthq2oWChB4aNGQwGaZcArqJvtVpYWlpKO+LQAKCnVcPVjJTQC6T7SevkcmObZR4cHKQwOU9L3NraSjvOMOzHScF3K7jg1phchMS0FPW863oCXuOzvM8VFUknhQ80J4lGNxRs6HX2AdNOKNhpxGsEYRipMouMX6+HfvhePUfBgQT5hxOVkQzNfR62xd5jSWpQ6I5imnfsoVXOId5LI1p3QYrykXVHFd27n33Fa+QnAMm7QX5eXV3F2tpaEmA0VBSgVCqVJNx6vR5mZmbQaDSwtLSU1nFw84PLly+ncdPzM5rNZlq4TaVDwML+4DhyG2YCyL29PWxsbGB1dRW1Wg2nTp1CpXIl8hGFg8kTrVYLvV4PJ0+eTIJdQT7nCxfrT01NJWHOsbieBggPQ1QvdJHH2eUAjVGenk7HB3mP5MbjpyK5Mal//T73gpOKHEseVWe5GtXWNRlMR+I8J0VOLdUxlNl8huPH9I5+v58WSPM6+dONdxpl3IiEzgLWjZEOzmON0LGNqgfUkHewp4aPtkEdWmrQOGjhfbqjkI+PR9L93Rp55/VobNVJUalUUrtV30R8oo6xSJ7caIqckEB+Ux0dT/7OZ/0+pciYPC5Rnj/88MNYXV3Fww8/jPPnz2N9fT1tzbqxsQHg6I5L14s4FzRNXYnzQsF8UZpiEUW8onJhMBikaP3y8jKWl5dThGdvby8HInTdsEdFDw4OcOnSJezv7+Phhx/GysoKlpeXk53QbDbTrlO9Xi/phKulSFdoW4tASBGNbJ1x2z714kdKTY0fVk4Naq0gPdU0KFWY6inZBBlkDN8nnPdrPrZ+V5SpoIbGma+/4Na0ROaqwIkegbxiUZBBBlGw4FEKXRxHzxXzeSNFFZEqRVUQ7EsFHk4qUFXBjvJeJY5JFELX6IhHNxRl677Y6tGica0G+PT0dG4b4KL23ShSRaxtce8fjQefuApSNAdV+1D5ySNQfJ7KnEY0558u6GTKH9OFaJwoeHejS4ESgSlBDWWEpiv5nORJ3p7CpfzH+VSpVJK3h+CJ0USWo0rE5wDToxYXF1Nd2P+URepZ7na7yQFC4/J6Ur1ex9LSUm4+sI/1mhoV2keM1KjzxtdHFUXQxolcBjkQ8GsRlUVsygCK9xFwuGOeLlz1+eHGqZZHfaYpjnwPnTFq2HPnRjqv3MHC+1knV/gqb9RRpGs31OAHju4Q5e1Q45SkkRDVL2Uf7WNNxXDgouPAMVKg4pFdT3niM7Q/gMNNOBS8+Hv1fQqoxok0OuMpyEVUZGT69ePo+iLa2NjAxYsX8fDDD2NtbQ3nz5/HyspKWl8BIHeelcqjawFyItI5rXORpDaK2iKqh6KomJeh89hBHvUjHXe0cdSp7CBDrxOcMyqjOzrSvqQTj45XXxpwNaR2iV5zYD7qXDkWyNB8UIa6FLm5YqSBr+sUtIIqWFl54NAI0K1omVZQq9WOeJIUqUcgw4WypieoAuH2aWtra2kBDXdCUENaJzu/M2rCA8MUFXtEgQYCgQUPWuOag0joA+WLQHUy6eRxBehhcl53r1SRB8DfzX5UBeSTT+uiBhOfj0755DOqNDUqQITPiTYuVAYWtH+oAD1kGz2j8yISeioU9N3sbz05VIWeggwFCVwToukanoalRq0a//v7+0kARqmCXHCu6YRsp7aNc2FnZycEGTwF1oW/OjB4GvnS0lJ6Pw14Gufk1ZmZmRTB2NrayhmE14sYydAd32iIqXeYpHKBfck1Sf6cKlk37MaBFAySisCEyr1ILmp5Osf0HfpckQLVVCHKJKbHcrcWyiiSy2rvZ37nnNEUK76zCGRo3jjnmusU7SN1yGhE2FMw2QceYVbdwPfoui812iLg6o4QjVY7yPKIU8SfCjQifaLyk2Oh/+saUI8iu3PGjcVxIndQRuNfRmX36bhfLTEt6qGHHsL6+jouXryYHLZ8vx5GrGAYuDbRFCed05HMII8X8V0RyHB5pRE2IH+GE0GCbsYwGAxyB/bq2iu+i9kwlBfUS9SBlBm0IVutVtIFvu73WvVlJJdH1SkjgwyNXmjoUyMZig7ZYWpccJEjgAQWCFRUeKvXUz9kSoIVFWAKLtjZNHI0XYQAg97zzc1NbG5uotPppJX+eiAMlQLLpvAnk/J/FcrOkCoU2U+aL84tDKlsIqNJB1WVlF5zDxnfxXsp9F2hqKAlw7/sZS/DN37jN+bGmt+5SLbf76PVauUms05Oz+GN6sSx0MiYkiqJnZ0d1Gq1ZHjSaz5OIMONGVe6NBqYJqFea/cssgw+55sHqOGv6Vg0muv1eopksDymV+guT0y7WFtby0WMeJYEgTN3oPrkJz+Z0kc4f7iHPxeKc3E4IxWcG2wjd3nifFH+obygoGbdVWDPz88nftCdpDT3nZsvnDp1Cs1mMxeN5P0U2EzdarVaaLfbWFlZwcbGBj70oQ9dN2/biRMncMcdd6R5e+HChVR/d4wMBodrXNRrxXu4lbPOHxqXzpfjQA4A9Loar67E3NtIUoPZy/T55P2gusplFOcI12soGNZIHceCPKgGdSTT6JypVK6kujElVLdB51jzGYIPpvdpfjvPhSkyLiLvI/uRz1BXcv7R0cc+ixZqs43qRFOvLNup0R13nuj/DtiUJxwYuFPLDUL1Umu2hIIcfc846REntTtGvX8YgPAU6qsl7pjEzXF2d3dzKe+0xTj21EHUG7omp9vtXnU9lDRLJJoTzjcRqQOZz1CH8S/vc172d9VqtXT47cmTJ4+kxXO+0NlMW5B9wvoy5bjRaCT5s7i4mOw+XQfMKEkkg1R+jjL22i6VtaPQyCDDhYMKiUgYqKeDnUyvW6VymC85MzOTjBpd5+AfNdz1euRBp4D21COto25XyEV9RN/c6YBKwAWY5nVHys09aeqJ4aCqEFAwxnep0I28Pa4wVIAWMYgabJquo/XltXPnzuHs2bMJALC/9vb2UgpZp9NJCod10H7x+mr6AOvFsYi8/a5wqLjdQzdOVAQy/P8oHYH3+F/lE+U5jVpoNIACkIZovV4HgFz/RX1Lo0XXBtB7enBwkAwuHrBXrVbT/MmyLNWPgk6jiPwwgkMBGSlBB6sk99Y6z7AtCri5uJpGmBp4/LDuzM3XaCONletBs7OzaLfbaDQa6HQ6ucXAbmgByMkJnWNAfrG7rnXTPh0nkKEUjT+pCGzovUUf9SqqjCviNzUWyJdulFYq+e1q9Twm3q/RVxq3JPKzevI1eqlRXJ3LWZYl0E9jhB+CC/d0R+33NquBo95QOgBo7ACHO9fVarWUsko5xPnmZfL9nGeUJVEkREl1X/RRAFHEB65bOTYOcor05qcyRTq0iO+j345DmgZHmUs+WlpaSvxE/qac4ndmJWga/KMld3KrntVxj6JDbkuq/RjZeaTof7aV26drVoHqPwUZkW7UutBupkOA67e0P93uvVqK5G8kQ8toZJChykwFn+dpqSGgOeWaSkTGnpqaSl5pNbi4kEUXbqsgUEOfQk4Hn4BGt87VSMb+/pXTkDudDlZWVrC2tpa2XWMqCQeQddbcOQUDJM11Vy+VTnBfq+KM5duxRl69COCVhZ5VILMfHbRFkRfey4gBmZhl8T6+SwGYbmHI/tCIiIevXfCrp0DHjopbdzjiuIwLEfi6gPK+ZtqQhmz9HlWSHpVTT6budKYHetGLxD3E9/b20vygx4hAmwLePbDcl5vv63a7eOSRR7C+vo7V1dXE4762iHmlGr1Qw71er6c0QXUWuHNCZQPnhp6dwnQr8oA6OKjweBggPwcHBykVstPppLVUrVYr9Wmn08HFixfx53/+57mNLa4lMV2KESSelA7kc+3ZD+xjRqiAw7M8OO903nIHEv4+riBDSeWUA6XIk61GJueKyicgvxOX3queSm7UASBn7GvaIOUzz7XQXGhV9JpqRecMPba8R8eV+kJTRikDdREnx1rrSdnc6XSQZVku+q6Rrcghx/4iWGJ7uAaSAJ1EOUNPNNMXWW8FK/xLIv8ScBDUHxwcHEmXdtK5oAaOe1LVc696VqMafFcRwBnHOfJoU1+KnFnqqH007Sbv3HTTTYl/yVPtdjvZNoy4MzW1Uqnkone9Xi8tEH+0RD1Ur9fT/AQO07M5N9i3elq4fiJ7T/uO9pET5QozPWq1GpaWlo5k62h56iBXRzlBGtP/KC94X6PRQJZdyQjR7Y5HsYsoI5kN4OT2JeeWR0bK6FgnfqsRxMmsaTg6sb2SHFQ1vihEdUEbgGSAqNHt0RG+Rw26ogiIerEo1JjuQUODwpKGHxmT++qzLpFBrh76IsPbGdgBSORxcM9bBDJUQDi40L9+rypsNUx0/Nw75W12IMlnlT+q1fxWoTqO0XoFNyp1bYu+X+swTiBDx1H5waOA+j/HIuLxMq+K8o3ylxqjNOJpICjIUVCsu9x0u900houLi5ifn8fi4iJarVYycMmb6vUnKFRBF3mJOK407Hq9Xs6IUI+jenTVYFDA6l4W7VN9FxUJnyVQIY8xpM8UsenpaTz3uc/NpYSw35WXASSApSeic63LysoK1tfXkyE4OzuLEydO4PTp0yl6wmc5pzR3n+33ELgu0udc5Vhk2ZUT1FnetfBqXUsq84apkTiM1GBm+/U6kJdJylOuM6ho1RtLj6suqmy32+l8C3onaYxzcSa39NQzLOj9J/+xHyJHms95AOF8cnnJduh6Nepp7VOVrY1GIxmEBBhMx+CCXQUw+j4aUGyb61/Vvcq3rJdvJOE8UuRJ9WuRTOR4q3OBdY54SPt9nMj1xrAoUBFdrza2222cPn066RDVC/Pz84lfOQfoJNSNXI5jtI5CfvCsggzVNQ4mfGfPyJ7xOUhnKoCcTqAzjbK5Xq/nItVaZvRO1kVBBnC4ZTDrzuUDwOFhtGWy3u1Iv9eBhTom/PdRaGSQQcWl4U5OYk1fcWMRyBuFFDTsWHpaASSvDZlDQ7UsX1Me3EBWZilaG8EyuG/x5uZmWvxKby4Vvu5MowtFdcLTGFAQo95DGnRkYE11KAIWOugqDBQY6MBH0SQX0Owj3stJ4cqN5XOcovxwjoWnrOiz9NA7yOAEYznqBVBA5mjePZS6eGyclIICNE9n0ompiiJSIO51VGFH0usEwfPz87nQLD2GWZah1+ulOvJ+GhI7OzuYmZlJkQ2W3Wq1kkEVRRhp1NKg0TFTo8MNIwIhpgppuoga2BoBUWNM+c+VrfY1ARi9WjQamWev0UWN0O7t7WFpaQl33HFHOBbKf1mWYXFxEc1mE6dPn07K4OLFi7h8+TI+9KEP4f7778eFCxcwGAywsLCAz/zMz8SZM2fQ7/cTOGs0GsmjzTay/rqQnmNK7zj5R/PpK5VKkp80DMeJVDY5ADqO8aRKWvmMvwH59FtSZBDr2h7doIByi/3PLdxPnDiRcqSpwwgq+v1+mlfT09Np+/OpqanEN+RTfXfULnfgqCHt7WdZauwpj7NsnbftdjudGNxoNFJUj7+TFwmegEPdNhgM0nosr4unFVNGEJCwTWo7RHNZZeowXnADmn2sIEOdFdqvDurGhairVY+4PjkOXWuHw+LiIm699dacLlcjnv/rCd2cB7pzJx0AxwVPERH46zECQH4dKB3KCi7cRvOP8jSQB8KaAUC51mw20/sZ2ex0OqmeReUCSLuNOsigzaNRGOonOkbKxncYQI1AhIP86xLJYAP5EvU2usEJ5Hd60B1teK8uVFVPLA0lKkoOGMEMjQN/ly6a4cIZTS1hOVxzsba2ho2NDaytraX9z1kGF3+22+0kbFnOYDDILXwjMmedaDAwF54L3j30pmlA7hUtEnIRIFDDzY1TBxseUVDAVIRqVSARQeuWpXyHo3GidLZRBTs9WMqo6j1kFEkNAxdY5CF6xcaRNFrjQIPrHjQPVe91r6Z7ZvlX0xOmpqbS6cGNRiOVubq6moA1eZUCdWFhIZVHHqZRSqGlkT2Gxmn0qkeTc4PgW6Nc5CO2iQvT2+12OsBva2srly5SrVZTGoo+r/OOERoaaXqv9pOCZOVXOkrU08o5zGtufLAOumOIpj0ymsH6MQrERfLdbjct8tYdvebn59Hv9zEzM5MOp6Js9HN/OD50zHjUh2MHHCq/cSN1zrh32gG4P8e/kfGs80W9lQo+FAS7MU/ANhgMcgssqVe4kcDJkydzICPLrnj7eShWrVZLc21ubi5FzihHOdeBw/QKdaa4bNYInKYM+uGwlKXU2QqQ1cvPe7ggleuDGMmgTlbnHp2AqpPJj6p7VMcAeQ+rpkxXq4fpuBr19fFWR5qOtwKLSE5yfvt8V93kWQ/jRvRaA0jRViC/GYDrQG2fXlPdfK3o9OnTuPPOO3Njow4g6hTKw0ajgX6/j8XFxRzvXrhwAe973/uuSZ0ajQYWFhaSHai2B+cH+4hzz3nAs09UTjATYBjQo93HtF7aPm7/6JhEaVuRLUQbkrKH5aisiJxwo1IRkDguwD1WupQTB45CQrdiVIGvQISVjxbvuoHKztLnFZzQM8H6KRJV0AIgx+zcoUb3wx8MDhfT0EjjGR0UjqoUCLJo8LBOyoTqVfbwsRpeLE/7Tknv0ShGNB7+mytiV1yRgo9IgZAubFTQwnerUUalol47CkaP3nD8CDTcc62RGzfgx4U8EhV55oC816NIublhwGt6P5UmeZeRh0ajkQMM5Ff1GDHUSkGsSt49qTR0OT/UY16pVNIc0NPfdW47eZlsB+vMdyvQIq9xzhHsc/yLjA6Og4Nu70t9D+UG66aGkS4Wdy+zyiDdfltzavf397G9vZ2ANA0tVWZF85PfFZRXKpVkzGpb/fs4kcoyvabfo9+KZBnJ50wEOot4RL9zzJXHGV2nXmBqEa+7M2dnZwcAkiNB5ZdGNMhvuv4j4luVd7pxgc5r5d1I37Ae6ujy9YvqzdXMA5XT7B/+VT3NumsUgn/pDKAXmXzPe/V554NonJV8LKPfojFX/ojKvdGkPKLjXAS+gPL+udZtrNfrWFhYyF3T7Z4JqqemphJgoiNZQQYj7deCdPMCbavqPnU2eOaL8otHSd2WGyZjI5nkOkdJ6xHxpM5n2rrURzr3XN+VUcQTRc9eV5DhFaFhomBBkZN6r7mYktd4Pz2BFLwUwpxY/F0Xianx4rnoHslQobazs5NSpNbX17GxsYHt7e2cEmEYfGFhAe12O7dYje2jF5WnJjNCU61W02LbVquFkydPol6vp617VSlSqCqT6m9lgkCNkDKDNrru73dhpe/wZ6jc2GamenDMWB8qHk4GbR8BRzRpGOLkNqj0QNB41aiWgs5xUgpRCgYP1tEdZzznXnPAi7wY5HX2i/YxwcLS0lKKOmhKkPKZA3sawUUnznOMdSGaegkHg8NtCRWE0lvEBdoMk6tRpe8if/EcFDWsKAMAYHNzEwcHBykaQr5R4EI+pVNCF7br3HGHhhpS7Ff2PZDfSEH/V+DCKA8Xki8uLqLdbqPZbKbNJdbW1pIhqqF8jgnljEZtmLLDaFW9XsdNN92EWq2Gixcv5taZcRcwOlXIM+NCHAPKh1Hv53f+9fQROjKAo+saHGQ46bgDSPxLntTFrPT2E2DQU3lwcJB2fOK855kvKgvc01ipVFJKH+8noGY7dbE1t53mvNNd/mgw6ZlNbH8EzBQ8k1/Uq8u6RqBeoyW6zkTnk6510XNdaD9wgwL1fI9KRUabA1i9T73COubXw8t/LYg7z1Fe1Gq1JCOBQ7kROYIfi/Y0Gg0sLi7mrlHPUW+rHCcP6flYGhEbRR4MI6a7UyZoShZwqHPViaQOBnUY6dECmtbk/U2wDRxmW+junJTh6owHDh3gLDci9idJnQOUPXRqUN8VpRM7uR50m9Jtw+sGMqKKuUeAaIoV0XsoMEnsaDW2KJx00lOB6+5EqqDUU0JmUU8MDWC+S0PMjGBoqhWNXCoPGjtkBAphPRiMO/VwER0Fqx4mCBymwzhTaR9F4IF9EwlO/d1pmPdPPU/OTKpg3HPmqUpqKLiwjgBTEdjSSIaeoaB8wDqOayRDAQGFGBdPKu9GAEP3uI5CtSrcFGzQM8Ry/FkHMFTyOq7sQ9ZHy3ABS4FM/lBSA0r5xAUr71WPi8sU5VFGS/V9zHMluFEZwPA35yyfV0OTfaM7zvA39RK5dyhag6aeL36Ul/XQTZZFxUOiYtB8feUZOk4INE6dOoWzZ8+mcVlbW0v9o1tOj9u6JWC4PCt7TmWkRjX5P5BfG8WyIznkoJN8wTJYtkfd1BlG+cUx1V2ilKe8bDpc+DujIzRqvH06pzRlyg8JJN/SW+zlqbOO3ymn1UnAdup9NGCiTReKxkgzDnSsozmjTinnCbU1nNwW0bGP7nPA6Z9xIs0UIU8N81SzDyPnMH/X+fdVX/VVeNKTnpR+12ci2aERlMc//vEpjUttMwA5Hc75RHDJ9XHkuWazeW06TOqvcpT95U47BwzOj9QrnEP+juj+KCpCW5LzXrMY/H7KB3f26Vho+r3KQ7XVygCGO3t5zR3DJJ3XkbOiiI4FMpSBoknpYMGv6dZhqqjZeZEXw0GGDozmebphp94bdjwBhi5A4qBzEWqz2USr1UpAgx4aBRj0JDG/mp4GLhasVCopXYppV+7Jdo+p9mEENJwZdBINGzP+deNNjTaPXKgiVWPR84DZ7yxfDT1lem+bC0kCM6bj0Ghm3dSoU9BHXhoXojeDxiD7j3zoXgAaL7rdnm5X64uo1fuvGwrQy0rjWucEDVz2aa1Wy+WG0ztGY0qBBj2PKpBJDvx8TMgfepKxCiWNqij/KOjlXNHdsVgWt0Kkxwo49JYCSB5ljYCpAuC81zROkiohbZsaegoyIqWku3zpIkTWhSCD79WIhTpG+F7Ko3q9jtOnT+PcuXN4whOekMZodnYWvV4Ply9fTukH7N9x89CqXHLlXfZM5AxRR4Om+Oh7Il2lcsQ9nBpxowxTnqDs3N3dTbKd3kTVL6ro1WPId6n3lGmOTKMDDh1TutCfc5YAmxE7ynTytW61y/ewTnxWATi3wFTvrc9Fn+NuaKhs1zGK+M+NNEZGtUw3kIcBgciY9vLcY6z1GKc5QqJ8ooxW4HlwcBB6v4uchiR1nFQqFXzXd33XETBRFN3ROaMRCrXvNBqocpe2RaQ32u32Ne1/voMym0QdGUXsvd0u071/FDx45gHlLtvPyKhHXP2dfK86EVVnsZ6a2kjSDI8yu4hzwvW5zq3IiaA8VeRkcBoZZETGbBEK04ao54+D7QqQz6tRQqLw1g7TfbjV8KJS1wV0qqwpkDW0rOk5S0tLaLVaKa+dJwEz3MboBbe9JcjY3t5OUQsublLPqjJakQdnmDdFvQ5+fRjY0MnMZ3yC87tHF9h3BFaM3lBJMZ2M5XIcNEWIdVCgR4XJsC+Vo3r0dbMB8o4qO9ZtnBSDeiFo7FIRaN25IwsBQr1ez6X+RIfZKdBQkKHROxeKumg42jlDf/fTQnWOqUAmL9LIULCh40seUMGpRosDTRX0Ot8pnNVpUK1Wc2l7XPzND5+jctGQPI0wAhICGW4xS1ID0Z0NrANTzOiY0AWEGm5n2iQdDu7oUMBHAzLLshxv3HbbbVhaWsITnvAE3Hrrrbjjjjtw1113JTDFnUymp6exvLyM6enpJJ/Ic+NEZY4UdTo5j3FMNNJD+cG/mvZE3qHnVN/r0VBX5NXq4cJkvpMynmc8KV87GHBjXGWdpj8y8kBHF+e/G0rKI+QhRjO0XIKLubk5tFqtJEP0GcpP3d2Nc1W3bHedpLpI9bPqedUvfNbXNvI3NzrVII1AaJEOdUeZypjI8z/u4IJE+eSRZ20TkF9voM8CR9Pdfe5FxDmkRiyf9fJ5v1+LKDJOdb5eC1JbU6Nirve0X9QJwO9lwKKs//gO1TEcN930gXXT9+pmKxHIAJCcbBqxV2cEdcsoRDkbgYuyaIU6c8ro2CBDjQRHfqNMdO0IFWyKctXjqWsh1NDyjvcFa6yHC2l+WH/dT5keR3qFyWBebxXwBC5kPA+Tsw7sO5IKbKUioOHgTa+rII/uV+K9kcdJBZeDDLZXU81o2LEvHY0rj+g4qACgQGL/qaHICUUvoipzrf84pUu5IGNYeDAY5FKZVJApMPNUpSJPnoMJByM+Vzz9Sftao386j7QuOq90DFRBq2fLlY+2p0jhRyCEv2l5UQqfe6MjYKNpVwoCuIZD36vgRN+rAlidG2XAUMHzzMxMbpchzUmmseggpt1uY3FxETfffDNOnjyJW2+9FTfffDNOnz6dDho8depUAnm9Xi/tULW5uYnBYJB2sRo3KpJ3kfJSftEIKJDfklvLJaknknyr5eq4qh4jPyjfkv92dnaOGG7Ol+rEAY5uUEKDfm5uDidOnEjOLfKRttX1qL6H/KJtVf4kT2o2APvNDwtUAynysKp8cY+2AgiOA8G9Roa0v3U+6piqnVH2KXNyRg4N5zu/f9wARwSW2OcqR6P54Uai2x1lbY3mJvunbFz0WZLWq8ghOjMzgzNnzoykz8uM20qlktvIhNeUj10nqT7W+4fZZ2WOX507g8Eg2QMKClRu8V2qf33uqb2l+k371gHMKOT8onwTlTMK/5BGBhm+FzY7WAECcPTgIzcmNJzD7yxPkZcKCPVU6dZj9PIxEhEd4kchyq1r6YkHkLaZXVpawsLCAk6ePJnSGlgnKv9er4dOp4OtrS1sbm6mRXcsj+1Wga1/qWwiVO0Mr0puFKCh5blXiL8pIOTYqWeW/aSATu/r9Xqp3VtbWwlscDx061kaU+pF4EJc9len00nv5+5b9KSzHN1YQBWuKjH9bVxIDUsqdvKSbn9crVZz7SXv6vbLKkBIkXLldfIAt9jjPPG+5bvb7TaWlpbQbDaxsLCQIisOdDx0rIaXRsKUx+lNXVhYSAf5qeHFMhTYcK4wPUoFtEbNyJcaYaTXiP3APGF6sNn/lCXsjyy7kjK5traWvNQcLx1PlquLBel11gX36vnj3GD/Li4uolqtpi1wGSXU1KnBYJA82ufOncPtt9+Os2fP4vGPfzxOnDiBs2fPJplHb9fZs2dTCtXdd9+NtbU1fOhDH8KFCxfwwAMP4JOf/CS2trauP/MfgyJjETi6i57Lusig0oWR1DseAdM1EEDe86rpuw5uKbt0B7WHH34Y7373uwvbNoqHT+ft7bffjle+8pVpUTnHVR0+LFdBhqZGELz4OxQ0kN81dYMRwa2trVx6nTsj1MOqep9zUQ0clc8KbPiM2ga6I6SuB9HIr/LLML3phriDHx8bd4aNG8jQSAZTtinHqGcpozkWmsKjOpPXiohAsEin6nx0o5z1YMowr/H9rEPRWoE77rgD/+k//af0f1TPyLEYOZi4DlZlMXnWT/fmM2oj6Zw5DilfankcB50rzt9eT+ppd6jTmVTUP9SLx4lkUNe5w4Sk9VSHzSg0MshQgc7KqBfakatSkffBPaFkzCg0TmZRsKFGk57o65EMDTXrmggatrooU9OsqLxoyOj5EFQ6KjzdA6Y7dWiZUZ8U9ZOPgd5bhqJVabsRyvqxfWrsUBjo+6lkt7e3073ah+4FVwXEfqD3VtOt3JOtnjeOhfev1kuVybgQ282600iIogtFUQhV7MpTamBEHkHg6AJIGsUKAumx1HQrjXj4NXcuuKNBlTlwKCR1+1Y9RM7TJSg8+f6isjWa6eFhGluuANkWlkfjjPWkF3l/fx/1ej31nS6o07Fl+2ls0bGhGxWw3hqp47t4qjejnwQcwBX5R+Py5MmTWFhYwB133IHbb78dd9xxB86ePZuACiNf5A2CKxpn9Xod3W4Xs7OzSalvbGxcN74/LpXpjMhLNszwi7zWNJbVCFU9pvLQy+D/0WYhTEG7lltu8jBMTVkkn9MwjDyXLkN53aP3RTJBo6t8Vh0A6izkHFLwExlOLo9pK0Q2hOpqN/jUkaHGbyRH3eus9oM7Ox2gRjp43Ih9rFFPGpyuAyIgVfS/z0PXtUAehPmc5NiRVxUUHxwcHFmv6YDO+bfdbufKj2wg1qmoLcqXep28omn2zj+R7eS8VdTPRXyk/Aog9YlHokhaTx8PluE2p4OhiAci8nmssq+sj3ltlLlyLJDBQqnso4HUyupvLhwUYepE8VAgEB8+xkVy9PgxkuE7gFBRMJqhYWEuitVdPTTnjd5Fj2JsbW2h1+slz78a2pp3yggH604mUYaPgIUzuvYT+5NjodecVIB7eUzJ4FaX9GRp7rqCDOaJU9lS8fnuORrqZx+y/7h9MBfLq0DgpGJ5mq7mwkD5UXMJx4FYZw3X6jhrGoOCDCDvQeE9+rt6MCuVvOcIiFPvFEhzrrBObtRr3XQOueBUZaHGDOvDseP6pmazmRazqqHPMtRTyhQ8VXAa8WQ/RemLjFio4c1IhsoCGk7sGy6MXVxcTO2OFJfm2BIw0OtMrxNwaKjpwl/OlVarlXh+ZmYmrU2j0cA1OXfccQdOnTqFJz7xibjttttSNIOHpLn85bgxr5/lcRvt+fl5rK2tXR+mvwqKlLD/XqQkI0Xu8kBlrPI1SXWUG+4Kgulc0q1it7a2sL29fc37Q3WRbt8NIPGtz8moT9gGrhmhQ4ftZ3Rzfn4eu7u7CYjSMaJeTDWEyLccL+V3AnzXR2qIREafG6/s+1qtlvSQOiR0PmokIwJfnjoSgQ0FTqMaZo81sS1Mp5yevnKCfJR2c1xyAzUyWtWZ7GPm+omkh0MC+bRTjVI5QPJ2+29qP+k1BaeR/enRANW9aiN5+/yakvIT74tSUvkutWnUvtX5pmOg9XSKnJRXQ0XAwuuk740AZxkdewtbnZjuPfJQqf8eGVkeZiUpMNFUGip23bGFRqmnmLBcXSinu9SwXPcK0qje2dlJaVHb29tpwTfLAQ4NYAIeghUCDY1mkFncO+xo1RWweyncm6Bgw/vO71OBRWCxtraGTqeD9fX1XLhaveVsBw1KAisdE4bRWf7W1hY6nQ5WVlawsrKC9fV1rK2tJcBCPtBJ6p504IqC9WscW3oFxoU0+qAeQY6Rglt+1zGmcNHtaNWzT0M+y7Kc51wNEAoI/s+dZjjH5ubm0nanBJoAUtqa8yVwdOc4BQu6gFkXr584cQLtdjuX+kH+Ua8X+YgnCetuIGwvDXFVTDMzM7mNGKamprC3t5fkAEEH/2d5lAU8FZ1RiMFgkACx7u9O3uR40AjU6CeQD+VzDmjUb3p6OvVHo9FIqZULCwsp6rG4uIjFxcWUGnXHHXek6AUXmStFxjjrevPNN6d0tZtuumms0qUerWPAn3ddw7mmoNBlvIJXl8dAfstiRmEVcFxLqlarOWcNN40g72ukIXLgUQYoQGfanz5LQ4epxgcHB2lhuJ6PoQvqVadqH7OPCDL4e2ScUd+6c0UBJuc+y+bzei2KYESed52HkbeY73N7ZpwcViStE+UgwQadCZqipADBo0rON+wb1askNb51zCOAyzJYPsdZ+9dTEh0AlulxjnEEAnQHRI0gszyNWqhtVOaccwA1CilvjnKfkkdEeJ/X73pkbXBOR+BN6xw5N0ahkUFGUeERoGClNDrhzK0GkQoHvY/lqHdXd8LxxbIUsC5sor3L1cOlxiuf8908dOGz5v+6N5+efE5MBU+cdNqnUTQj6nvvF73PBSV/1/7lh5OPoEGjDBrJUONX+0PHV8eD48B20wvICBDL73a7qU81BK9jrR8dHzd62b/jpBi0ftHEVGVb5M2L+oFlaps9T9IVrQpT3eEIQG4RP8GCpvewPu4d5PsixwIBDSMm3E2JYMgVC9/BecjIA3lJox0uW8iPvssOATI/mnbGPuPzrDdByMLCQno30wKZ+1ytHubyEmToIU0+Pp4HznYSmNDA41wjmDp58iROnTqFxz3ucVhcXMSZM2dy6Zw6HvpXv/Nd3G2Kjg+e5zMOdNw56wZI9Lwbkhw31R2abuDbiasho/2r0TTyxKj5zqMSjSVNYVJ+jYx8bWvk1dQ6E0wxrU43I5ibm0vOBzW2db6pLHNvJ/WDtsWNXXcu+sJy4FBmabTWc9a1LhHA0D7Sv84b0f9a/3EirRv7xmWMGuv+rDq6OH4qs6ir9F3uvPByIlI9pgY+n1d7R50A5J8ykOHRCuCQF3QXJo26KFh1B3RRhIDPRg7fIlJ+92ci3lMb+Dh0HGfqcQFBJF/1+aJozih0zQ7jI3FgaSA4giVDE3Uq8/KvEoUTvaOMXOhCVj3dm8JZdzHSdRSsl4IVTZHgJGaalJ6uyvUEnBBU4M1mEydOnECj0UC73c4tPncGU+PHvTERjSL8Ii+zjoUCEBqWa2tr2NjYwMrKCpaXl7G9vY319fUkrNQwdOHF9vFMkXa7nc4AoGd8Z2cHy8vL2NjYwMWLF9P7tre3c3nGykv6nYKB/MNx0pObd3d3k1IaF9KUJhX+bC8NHRWA/LiRSkUL5AGqAnoH7xH41EXLAFJ6ULfbTXn67GddlK4eLAXo5CfdqU3XR5EnuBhaFYmfRFqpHJ4aTOWnY8t6uJDjPd1uF9PT09ja2sL09HRuMwJP/1LgrOs4NBLK3Zw6nU5ai0UiyGDqF8dRPbCemsGxYeSDY8nTmKvVKra3tzEYXEnfOnXqFE6ePIk777wzRS7UOHBgrQYax5HPsE3c3OI4SupTgVS+ets0Iqjr7lzmDAaDFDXUXQbZz7OzsynSp7rsWnsUyRPUb+oFJq9HawI5H8njuoU75xxTayqVSu4UcM43rgfJsizpOG5CoE5ANURVRrmRSL4moJiZmUmpzORpznnKJZap+/szOkoZr4ZqkWdV6zZKOg7rQDqu9/qxII4fnTDa97rmk4e+DmtDUZ+44as8rrLHqcxRxmd1/UgkK4ftfBdFMjRyoIC8Wq2mucH6afRrmMHM38vSlbxuRUR9w/GKbMFRjHe1mYZFfHxd8jAiUNP+4TtJ6qA5Ll11JENBRhmCU+aMOkfL1TJ4XRlEjXM30CNPhi/41rCre8jVW6qTWPPN1cii8NR97LkINNq9QD9lddc2eB+V3ef9rUYOmYUgg7vx8KNnh6ix4qFm9Rwwx59KUUPbTC1gqhnXcmi6ixuPzjfKD0UCgpN3nEjTMDQywMnP9uiOIC5s6I3XftEonfJP1G/AUU8EhSbTtNrtdm4BmhqnbsxqqhIFuToHpqam0qJpXSPle/27t43ziPcwekGDifMv4hMKWwIXjWSos8L7WCOoUYqmKmwH/5qGpcYRjR//6HynIcux5K5U09PTaLVaiUcWFxexsLCQOx2c9XUgzu/614l1HDfDiRS1pUyJeh8U6RT1FvqH/aH3uGdfnRsEay67rzVpqihwmLddFrXTKJlv2FAky4F8JJqHPOpmBDTsPf0ZOMyvj5wdOgbO+wRxDjJYlhqalAkK5HWekaLoRNGH7/Pv0XwdJ1InbJGed13Ne6K2uBMSyIMDle283/vZHT6RfcjyFNBnWf7Ea3VqRs4ClhU5m3TMvD06P3183caMyO8pun+YbaZ95c50tSUjfc0yvMxh9VW5V0YR3xNYaf313Sp3RwFHwFWCjEihRqiMAlINdPeKRwOpCkAFLz0wnrcfGev0qOuBXX4+hoalgUO0qOlVetgRDRi2s16vo9VqYWlpCYuLi+l/TSPyumv9hzG8GxY+DhoJUsNQPUwulJhPvLa2hs3NzRRdYJQHyE9QepZ1LJgKw61/m81mUho83Glrawvr6+tpoXy3280dguiLm8uMJCql6N4i8HqjiHyiPAMcLrbUfP1KpZJb3E0Br1sec+x00Sb53tdrcF4pGFOBMDU1lQ7oqlavLAidnZ1N9WS57rGiN7QovUQNh1arlbzBrLPuiOIeSTXatW/otVPei5QJ69btdtNCVgcOPveA/OJsTUlhmxjd0OhDUaTIBbx6dBk15envNFgXFxdz6WR8lk4KN8L0OxWy/kbjOZITRcb4OFHUTiB2Oug9kTJ2o9uj3O4R17NOKMPJH+R78gNz4a+1IUqnFcum7Ca44NojfpjOx/Yqj+tObgCOGHQ03hltb7VaKWqsab+cs65b1GlYZhQqiKFDihsX+CJ8zkU+y7oTmLMd+g59nh+tVwSCiow5rfO4ggzVdR4x5/+suzpTiwCA9yfLZhkazY6eJ0V8oE5ULVOfUZ5i21yfcy77d6fo/f7dQcZxHAUu+0c1sKm/+F2JbSHwit6lep1lFEVR1ZFC27OI1GZXPcxoWGRXaj1HbT/wKEEGK0khroaSMl406XViqDGlzxR1poMRvaYGl+4prQafGswaVtLQnaZ2qOGiSqvdbmNhYSGdA8Bwtwr8Wq2WPLoOMsoGKkKKZYCDAkejNgRVyigEXIwuMDWGdVNE6+8ncDp58iSazSZOnz6d2l2pXIli6E5cfBcnmoIErhHQlBC2QbddpDJyoMaxHBZmfawp8py594W8qUrNQQPLIrnHwUGEAkrez496mvi+RqOReJGGFD28Opf5bGRMK0CiYUzASeOA80mjgJwT9F6q4PS2qPJXpaeyRDdq0GgZ26zClO/gXOn3+0mw6poHDx2rcaLyKjJgWE+CDHU08H+mT/m5PHxnxEcu65yUb6Ln2a5xIeVpbVPEc7zfgZ3qCS/PvZy6aYIaVIxe6JlLwJVx7na72N/fT1sCk29OnDiBz/zMz0zzlnKfaQfuDCA/kY85X5hKdOrUqbRhCICkd3RXvo2NjeQUIq/rO/h+ynGfU5oKqTKZMpjODM5r3eyD0cxqtZoireR9NdgULBFYaBoYI3QOHjRCCiCBHk2r1i2q1chW73sEqJSiOeFybZzmCIBcWjDHRrMsuBGLtlv5/jgGoVLkyVZHlsobfwf7PrLRtDz2t4JDHzeVqS4n1NGqpPZppLtUHhb1j+rbIpkb1XcUIqAiaaoX68/7hpG+X8EC55qndyoAJD/5vKS80PLVQejytYweFcjQyvrkVAEXfTzE5/erMvCOjower6MKIX7cg6ohJQc3HhFQA4mDoYcAcnElDTePuETRl8ijMMo4eHu1PzVFjF4oBXQMt/v2mjSK9ONeHqYOLC0tpfUnXIvBd+l5Iu7JJwOzLN2qliBDx4zKk894/13tBL/e5LxJHqPxqPcoLxaFc4uUoRuVZR47CnQKBRpDwOEiWBphKljZz25wU0BxTLgYmgYLFaEb4+wPnSOqZFwueNs9cqNeUD3k04WhGkIEGZoKqbxWJldcThTJJ/Yr+037Xq8zWqKy0z2yLnu9TkpFjp0iJXmjqEjxFzlXHGAAh1HWqE8ciKhS59gpL+oZFQSdg0F+rRHXZzACoGt5uGkAI3hU9DT8PaqiuyP6zmHkT91C3dNblW91znp03/lVAQLvYWpgZPRw7vuuT/q88zsNFl0/yX7SaAvHydd20COvDhhdh+TOSgUeHmWJDOUyXhm3eQIgAUMCLa6ncRtHZSfHp8xZO4wivcr+VONyFFmk85zXVB4qRWueIvDnso51cd0byRO9t8hQjhwg/m5+L+vjSEf4c5FNNyo5+FNnLJ20Wp7qJMolnZ/A4TlvaosDeTA06jy5KpARGUJsSNHk9t/dw+5RDL5TvZwObNzYcvSlC1NZbw6A5tlqJzrj8h1qRFFwnjhxAs1mM53SSkXlRpRGMsqQcxlFwpHX2Ydc5K67YLEfeI+eBKm7MrCNavQ4gCSIYr59o9FI7+/1etje3salS5ewurqKzc3N5IFZXFwMJ78q3kqlkrbV3d7eTh4sVXRU3JquQAE7LjQ/P4+Dgytb6+pJ6r7exceRHkANdbpnFMjzOJWvK5fIQFdy4UtAoPPMDbS5ubkc2HZQyrprNECVIMeQmwNwLgLIAWPueKYROcoBGh2+M1eWZbmFseR93UmH90bAgutUaFyyD1xJKpB38MT7vJ99DFzmFSmnMiNoGPmzj8abeT3JAYa2Tz1zkWdTn49I5SIXSauXkHyh5y3R8GeK3GAwSFs/t9tt9Pv9ZOiRX8lXPvcAHNE1dNyoYe07BTESx/Vsa2trWF1dxfLyMtbX17GxsYFOp5MbUzUW3IBQIMzyAeRAkEc+OE8IPFhnvpNzkSmNWZbl5AB1IaOauhjdvcjqZGGfA4fb72o0XiMZ2meUBUV2xTAe9Ejn1Rrl14u63W7SC9QvShxbnl9FoEceL6KridjoM26gF62PjOao8q62g+/Q+X6cdZfe5qL2e52iviiz1Y4jT+k04Hd3xkcO+VEiBBFx3tOOa7fbR+xgtb2oG9U5wrrMzMwkR4evL1U5M4yuyRa2USRCBW6ZV2HYPV4Hj564YlLvJjvGPajauUUTgJ2o+bosm8Y4c6o1j9rD1x65uFaekqK+9P6MjE8gvwOIetfYVk2ZUcYl2FCjjbv8MLRPQw9AYYqYI3gdM/24d949/+PmeXKeokERAQsg7+VxcBpFbXT9QAQu9ONGbvR+9RBFIIOkBgvv0Wighqbds8j7PaJAY8WjE5FMINgo+pQZ78onKqt87RLryXFhHR0g8H6fU9qHLsu8PQrAVHgr+dgdh8+1HeM2R4A49ZPj4+0lz/gY6d8iTyH72MujMqUMVCCgETt1hGhEQ3lZ+d//d4+8egadF5R3GIlmZDjaPt31oY+xygmWq/NEZYnOZ7aXhobKCAVVunGCAirqEa43ot6I9LbOX73uTkTX8+4A0GvRvCziQeeLMvvjRtHOzk6Sk74QP9LxRTI0ItdVZZ77MhkSOYiL3qPlFc15L1f/L2tLGaAp+x49P4wv/FoROC1yQpWVNex+r7fOF3Wmq9Pbne0ql3ytMIAEMqampgrXU46iV0YGGRrmUuZQw96N/Sg30oFFkRHsk0M7sMzIpNGgu0oRGeo+5AQFEWNRMA4Gg3RAGQ3karWahCgP1tLtERVk0ONOQX2tQEYEynRtizJnpKBrtVrKA9coTavVyuXyeRoP+0CVN7f2vXz5Mra2trCyspIWeWvExz2E3CKUnjVdj8HrtVotrc1g3VXxT01NHdkW7kaTGxxqnOscioSyCgb1fPI+j4aQ1yLDwZW28pz3VyQs+GyRIGEZ/g43oHV81POhGwVQsKlMYJ/oNY+sqTEIHF3/oc4Fvts9nQpKvI/I5yTeq8DEFYvLOf9wfDRyQyOCkRel48oMNbjVgBtHKgOMDiSUP/xZvQ/Ij50DENUjwKFHn44jjZJyTvJ3njGjuz3xPjpm/NwgdbJwrrKOyoMKhrIsSylSehAswQb7x2VNJCfV2VCpHEZQGNnhfSp/BoNBLprNZ2ZnZ3PAWA1ebas6qzzNZZhzSOtapOfVVohAAvtXeSF6zzAAMy7U6XRStEmdEtQJjMoqLylPAcPTXCjnPbWTFMk6UuSkUWJf+zUllev+XuUzXSDuNMyr7nPE31VWzwi0+iJ1d25dCxpF7rtOJGjQQ3i9Xnq/2lS6cQR5Stcla5uvK8ggcbBVKbjhq/dECDsi75AIYKjXSOvmhoB2Br3wDN2q53UwGOTuoyeHqUH1ej29Vz01Kly9Xgo4yowFKtCye6LrbsCwrKmpqWTUsl1UaARdvM4IBhftUjnool6+n2PGdBaeEq6nhnNxJIB0+NtNN92UUhGo4FgWmbdSqeTy6hVwcOzZR2qMHyeU+liQ1odj5ryrKQjOz9pW94qrYgTy48/0Bt/yNcvi80j4v6ZJeF+6d0Trwu9alv7uzgSPYvCazhUKOKZmaTuZp03QTqHoAjSSLep5oRGl7dNntS1O7hhxJeP9onJvWNlOPk7HcUx4mx6tU+N6UREvReMXfR/mGdQxUqCvxrfnL1Nms2xNW6zX66l8yicSeZIOAi7sZ0oWed29gdpeNR4JQBm5cPmu3khPQ9L+U/kdOQI4r3gPdQfro2mS6sBTgA7kD9tjuzUd150SaqCwHN/22x2Mzh8RGI14SNuuYNXBrfLNOFGn00mpbX7OEEkdjfpx0n4oS5cqslOGUZm8GfW6/6+OtKLnR0n90rYX8Q2vOR9E7x8VjHJsOA/USVBk13nZLg/VXoh0ukcoormkfeEARaOZOvc1VXhUvXQskEEG8ohD1EEq2EcJ4blx4p1bBDIiw8ujJzoYCggiVK9eoCzLcmlSFOg0wuv1+pHIShRtKfPc6Huj79E170P9qFDnmKkHV6MaZCSCDO445AuyWbamMe3s7KDT6WBzczNtU8vcZ/Y5vX9LS0sprYzbCvP8DFV4nipFRe5eaw0HahhwHEhTGZz/9OMARD8knS+a2hB5/rUPacx4+pILVlewPmd4TwQyVFEr+XzXsdH3qZDSSBmBBsGwek907PnRsr1+Xn9NB1HgU+bw0N+9r90Y0u+R3HOK5KDzzqcrcTyj9jt/FfGZ/o2eJ4/pOFCOsEzyg6YOUF66rOGanUrlMCJAok5R/cJUBY+Yu/HLazrfaXBryi+f0Sipe/qjuekRP+9jNdZZLpCXB5yLNDQ0msHn2Je6tizyikft9qyHCCBEdVce0XGN3ucgI6Ky324UMWI2OzubO+8rMnpd9kbtiSI4TpFMGsWgHHaPjk8ZIPHyygDKcZ0oRdEclynad482SuFluX4tutfrpm3wuaXAWeejUgTIHLSow0AdAQ5kR6VjgwwKJAcR7rWLgEIZ4/M+luXMowLcvU5ldaawY0fS06TrCpzhqtXDrb04SBSeXPzN/0nuFXHE6H0xbJIruVGoyiEKYbH+Wjb7XncMUM+Tt4uGLN/Bvdp3dnawsrKCTqeDlZUVrK2tpXA+DVymSZ05cwaLi4u4+eabU5mbm5s5z1Wv10tjw3tmZmbSwVA8iVaNjenpK1vY0hgdJ2K9fZy0v7Msy42TGsyDweEZGgroFUASQESpFtofBMaq7JXnOL5az0gQann8jQJHhRDv0ZSKSBG6sGLf8FAwTbPq9XqJV1h/9766oI0UAvtBt85Vw6lMHhUBjCg9URWny8Po44qB9A8FaCgfqQEYtf04faJRDH2PlqNyR1OlPNrGe5rNJubn59M5GiwLyC9i5nhGjiyV1Xwv73H+0ugFwTcNzGq1mqs328Q2aiqEA/ko+u/GCeulUXj2owIMzRhgfzgI0n7QsWAUW7eKVyOa/eRRmiIHhoIOn1PkLfaryq4io3NciAu6a7VaeHBuFFUlsZ0HBweli8CVfK5EEYworYl/yZ/kBe3bou9e1nGASNnzw+7hX+UHJ+0L4LC/SexX6uQi4hhFNmvUn1q/Ih3FcvXD/mc0kc9p+nVRZDWKjFAe8F3e/mF07IXf2nB2hhsNZSDCjRkvX+/Vd2rUIooSFCF2evXZWb6g1lG9Cif96+s51GDUurqhELXJBSFwJTf9Ax/4QIoElPU/+089SmfPnk37rOsE92fUi0vgxvC2pqFQOHBMdTvF7e3tlBrF/dpZJtOv6vU62u02Wq1WSheoVA5392Eu+s7OTjIyXdGwbRp90XFVJTYuFEUyXPkVRTYUnOv8UvJ550awGmyqYKP8bK2Tls3vEQj2NrmB7QLP72f7ontcyNFrquemAMgd2uXeVo3oeHt1zrOumvoRybUikKDt1/cXkY9PlEqlfPMPAWDoX6B44WTRXIjmhjtWeF+Rd9eVq/KHzlcaEsonzlsRUPT6uhxzA1rniNZPvYuUiW68s30qezxqGmUCaP1cRukOjPoe1QtaZxpRlOn6PgVC0Zx1wB/pYR9P3hfxk8tW7VO3L8YZZGgqrAK8YQ5bl80OAIrI5aBf836LZGBRtMTHIqqzj0+ZgR3Vu6xtRXYsny+LVihfRu+I9Kf/Xwas/B3HAVg6vq73XEbpHPd3ajBB55c/cxwaGWSQ1OtCg4rfaQxEglIZ0ssrYyAVeFH+rHaUCjoVkERwns8dpTmRdH1GrVZLKUTqfaLBHjGm1sUZxz3KwJVt6l75ylfiwoULxxoP4Eqo/rWvfS3uvvvuHHjQ/mFdtF/ZDwxv835VtPScbG9vp6jFpUuX0Ov10oF7eqBfo9HA4uIi2u02br311rQ1JIEFTwJfXV3F2toaNjY2ct5ElsNF4kxRoJJ3has59uNA7j1VIj8R7DlgjrxzZUaMez4rlcMtH8mXGiEBivNqHZR6SmFkVGsd+PGF1/pONVJ8txydF1l2eNJxp9NJKXb02mpEwgWj7sjTbDbTuzW9rlqt5uRUv99PC9G1XfSyss2RYne5w3b6HGff7Ozs4ODgIEXhFGwU0XGUzacKURECeeXm7SwCuU6RAncgRwM4MkTd+CaprOFcUoM98tiq4ezgRt+rzhytr0emKaMpEyOlr89QFqjBzzrqbjPeVu9PlbWuSxwYaFu1T6iL1G6gE4nl+G6CGkXl5h6a5lYWyWDf6vvVqKa3eZixN05ExyPPo9JPUQTDwRxwOGbDIhplBrT2peoMHYsipx/nmp5ZxrrqHFDnMNsxCg2TkWVRFVKRHPb6DnNssg26RrJsvkXvPY7zlP3kjjuti9q0+pzOG8phzk+Vc25Lj0rHXvgN5I+5j4wMFwCRUa2N9HtciKoiiMK9Di5YnqPiKIrh3yP0p+DEvTrAUe+yts1BhnsBHElfjZBjH3h9HDzpuyIFwvuoCA4ODrC5uYlut5tAAVOj9KwNBV8LCwtYXFzEwsIClpaW0uK/3d3dBFRWV1exsrKC7e1tdLvdtKe3btvY6/UAIClWjVjo2OiipnEgNcjdy+7XeF2NApLysYORyPDX8jgPgcO0J/f6qaPAy3BB6G3Qj4MLNd7dO6xtVMcEx5xnA/DAMT1tWNvU7XaToeIOAx5YNj8/f+RUdQUZWt9ut5s8xDondbyKog7ap3zG5zjby6iMApZRvXSfbkT+KAJQPg786/NEDW2VywpifIcz96SrPFE9ACBtLqBnQrhuimS5Os+ol9R4jqIIkRx3h4rOMb2f71AeppOBTgO239OFWQbbx7lBHa/zR51rHvFxXe73s2yVGeqdjxwhkbxTb77qOtd/EUDi+LtzUw3acZuPjNwyyk+Z6WllETkA5DWfWyqnIn5W8utRZMTnYFEZrL87ojT9tojUXvG2qANK7y8z8l2+RA4/L1/bexwqa6MCcq2fyg8tRw/udOcdnbaePs9ntbxozFVXRfp8GLADrgJkqABzZawMrehTK6cNcioDGA4K9HlHgfq8XovSpCKUpm3VHaLU8+TKjlRkkJW1uei3UUnfE4GYCME7aHMFTYOfoEIPguKCbQApCtJoNNLptUtLS2i322i326jVaonpO50ONjY20oeTgnXQHaX6/X4CJ5wo3l/q8RgXcuNIQbCCcZ87bsDod58LEa84v2mUkQqV/QXk11ipoVLEjxGg0fpT8atBF9XdQQa9+wQZ3W43nbNCT5323/7+fjociOtydG7yed6jRoZ+VwXd6/UwOzub0hJUbkTASvunSA54HzEq0+v1cjsWMWrnue1FCq5avbKhwnHlRZExf6PI+7OM9/g7f4vGgBQBRD0Ii2mDzssRcAAOQQZ1Q5RC4MrWZZQ6Evx9UX21fS6n+XHDUY06lz808qkLCDLUs6x95VERvnMwGOR0hc5pbTN1qkZr1cOqURAFHToebm+oUaqyw50X3vcEaCr3OBY6x9yhME7EtupmKNE5UhFpf2vmRcSvwKG+8HEtcwYARx1T9OAXPet2UnQ9ut9J9Vh0r87lIt3pbSG5o7zs3mFUpDcj2RHJxLJxVruJepMgg/OdaypUHg4DkpF9r/NyWH+SriqSEZFP0kj4uQB3Yaj3a3qIgovonWoca0ioiLkiQaTpQv5uFZiKnrU+2vZIgUXflR6tAeAGJj1nZeW654YMuLu7myIYly5dShEInm2RZVk6V6PRaGBubg6Li4sJZLRarbQu4+DgAFtbW+h2u2knKkZCKpUK5ubmMD8/nyIilUolGZLAYSRDF+8D+dPbx4lmZ2dzXnoqCKbeqFe+Uqmg3+8n3qZ3UVMaPIUNOJobWmTsqGJXj6EuNOdvGilQrz/f44JP/2db2W6dM4wC0lDR3cmAK146AthPfvKT6XwAzqNms5nzpjDKxigH52un00Gz2cw5Bk6ePIlqtZo2NgCubKtM4Eqvz8bGBiqVCra2tlJ6H8uhB1u9Tq4IabDofNJo7/7+Pn7nd34Hf/iHf5iua2TKnRtaNonj+vjHPx6/8Ru/gfn5+WPx5TgBDCAvu9WwKVJ8BMllBosrRuV9BbcOrD0aT+LYDAaD5Al0j7DqNpVPCjBULqtO8jZHddN57Q62LMtyp2C7HOCc4dpBytu5uTm0Wq1UFr3i6jDQffEpiziPDg4OcqcDa3sVEGlaDmWhGkJRaqWOqY5PtPMgZajOIc5bAil+OC6UG/oO5ZdxjGQAV3htZ2cnOUQYfeV5VKMQ20iwQVk9ik0yivygw492mPO8zy91RPO+IjtTwZKPWVRelM4zKnj0emod2BYtP0rnotzXekZ1cmc8wXxRX3DMuCEO9WGv10u2FY8RYBuog1mXojaqE4Jziu3QtYt0kJVFhpSOvSaDFXWDOpqYroxVcEbXI8UaCWN/xpEwjaAi48vf4e+JQIa/Ww2tUei4E/ZqKOrPonFxQwg4RMT9fj8t7ibYYIoKBQi3vuWp5wsLC5ibm0s7sOhuBPRU9/v95IXRvmWuvXql3HsTpfWoYhsXUqGtylOVmE5wtpdCOVLW7lEoG1vep3/VyCL4VAGjqUMu3Pz9SpoD6m1iG/yj4JwRs263i62tLWxsbOQOp6Nhw/vJC1wHpN7Qfr+PqampFMXw05FZHxpHLFNTtnZ2dnJeXrafbXenBtvKj8shNWBXVlbw0EMPDeGe4cTx+1SnMhla5DEtAl5F5QP5baB5PZKTGoVXBxnf4xFTLYf3u/dd74u8x66XhsntqGyfd/5xuaIGuPOtghg17lkfGvI0dNSw1/ervvT+dZnhY6Dtch0QLXr2cVLZ6WdYKeBUAMgxHGYr3EhysFW0ExfvjUBb1N8uyyJbKqoL79e/Zfoosvmi+8rKiOpfNGeoZ4pkpbcrsivVjozarc8WySxtv8sB/xvNY22PgxzqNs0IiNbqeFlRe3TecGMjgozd3d0jAQQHfGU0MsjQQSwTFqM879eLKq2Nd+Mt8iJdLUUGkQOOyHsWTWT9Pioz+rNXQy4w2Z/0kEWGkPbnwcFBAgLb29u4fPly+kuQwL5ptVrpkL3FxUU0Gg0sLS3lTnmtVCqpLF3k3e/3MRgMcjt0cetcNT4JRHZ3d9Ohe+oV4birwTgORKNU+YZee41usC1U3kC+TX7it84NXW+hk1/zsTnufFZD7W4gqJcROEzJ4aJ7jqeHpPkMlR2VNz0nuqEAAZM+yw0FlpeXcfnyZTzyyCOpnUtLS5ibm8OpU6fSQm8KUEbV9ODGbrcLANja2sLW1haazWYCGmwDF8/Oz89jfn4+bRXMVCZGNHjqPcdQvU2RgedzWpX+OHtHbzRFxn6ZM8iVfJHS1zIjA0x/B/Lrg3Ru6Ls93UajGfzLZ1R3FEWTPaqv9VP5rfWPAIbzlxr4OmfZLp5ezmid1llTnVVf8DoNdcrcwWCQW6dYFJnhXOf89d0DI3uC9+zu7qb0SY+AZFn+oFFNDWE7GclgfSinODZuYI8jwADyEWONaGhqjN7nPK8RZl1Iz98VjJaReseLfgPy+srLjDz/URl+3csvM3Y5vz3Swba6c1KjO1qG10ujc+QZ8jz1MnDYP5o2Rl0U2ZlKek2fPTg4SLysdadjmLpva2srly6l5bjMo47TnVNbrVZK42XZtN06nU7S+7TRhtHIICPaDcK3f2RjNFXHrxd5b1yoeqiZDOXeDL1vmAE/qgAp8jIB5RNE742EliNX9ue1EGyuqHUSRmBMFQHHk0y0sbGBra0tdDod9Pv9JKB4/sXJkyfRarVw4sQJtNvtlGKiO/fs7++nclZWVtJ6Do4ZDzTUKIZOADUCHEGrx8zXm9xoUqECHO5xT+XMdvnuDRGwUAPG+S7LsgQKeL9vU+vGiUYrVPiod4zlsEyODY0QHQs9mZ1lMa1NDQ714OiuUZubmylVamtrK6Xi6ZoFRsYajUaa9/Pz82nDAJ4+T3CghpEaI+oBogAlCGHfdLtdzM7Ootfr5dpNno2AussuVfYcOzd0H2sap/lBUhnJ//n3OMZepEu0vDIAomNH/ufc0EXRAI4o/UiG81kC6qgtCgY8Uq73RBFLd2z9/9j782BZt7I+HP9076l3d+/h7DNxL8ggKgbRYIxDIvniQEQFSTTqFQWUWAE1VlGVmJTJH2r8QxNNEVNRMWgJUS9gTEA0OEA0SpXGiMFSxHi9l3u505n30LvHPXX//ji/z9qf97Of9Xbvc889p4F+qrp677ffd71reNbzfJ5hraW/q37Sece6urGvTh3KJd0il6lQ5OdIJ+p1Ny4U5HHO6xblnC97e3v4P//n/6DX6xWi1TqfOI/7/X4qj/dpmhpl6fOf//ykVzTtU8ct5yBk308bqVNHDS7FYAoqlbeB41QmNZC9L8gPapTkSB1YufpGz9xqP0dOA9ZT9ZLyoPOiGkjqWKZuI5Gfo/fr/PLURT7rmETf7XNIsZmTOlW9P6l/9/f30Wq10oY6u7u7aZ7QMaAOFMfjij9qtRoajQZWVlaSQ+7w8BC1Wq2AX9wpMI4mNjJ0ID3XPArNsEEOuNwbE3lu9DdlLPXcKOiMGDoS7KdRtl5P/S571yTk5dwuEKATzcNaavl62ziWzIengcFzMCqVSkpdaTQaOHv2bDrJmyCQXm/yR7/fx/b2NnZ3d7G9vZ22u1Ujg9Yz66J5wa5Y3YgCiturTQtpnjCA1HfD4TApcAW+9DDqAmYF5mpcK9GLyHeoQHVDMgJieg/nsY61ejhUEOu8V68iBbaunaEQUyFLwdjtdtOGAswl3d/fT+9lSkej0UCj0cDa2lrql+XlZXS7XSwsLKDT6aT0Kb7TBaGS5pdTSbOP+/0+arUaBoNBwWjWT44vda75ON1NA4N0KzLw6STXAQqK1ajjvTkZH12fVL4qcNAoH3nEHUQqZ/junNL2raPVCABQmB8K7rReblDk2u/3quNK6+VpmOxjyifKH13rpvycyxhQOaN1UTmhOyMpbtjb28OHP/xh7O7uhmN0WqpUKnje855XSJOKDL6o3/T6NNJoNEppMdG6lgjEcy75NaBoQCoAV7AegVx3HPnvZfWP8F3OEcD3uDNCy3Cco/NUjSoF+Tr3qHcdp3qkRg1g7R+nMqeBtkeJc5B/uxEYObbUeKezbmtrK+EsnbfED2qAsp84PxTfNZvNFAE8OjpCrVbD0dFR2k6amS2ahl1GExsZvV6vAPSHw2HK1YrCtS6A9TfvfDceCHyAmwu1qtVqyrmmB5IMokzDd/kEid4bgQNOMBfSTjkGi+6bhG4HEHGQU6lUTig0MjPrr96kwWCA3d3ddI5Fp9PB3t5eWojcbDZx/vx5rK2t4ZnPfGY6bI9lU4F0u13s7Oyg3W7j0qVLaLfbuHLlSvJkUYnV6/UUydDQuPadewWUp9SbME1KgbypAJULD1XZE9AwfYffmpo0Gh0v7PQUBg3HMi9XwYHOC13kraAaKKZJ6E5ePLNEjQwCMZ71wMgDgJReFIEYNay4W9nVq1dx+fJlXL58OaU/MXrBzQT4bnpZ+I6VlRUMBgOsra2h1Wolw5jzVr035C3ti6WlJZw5cyYZMu12G0dHR+h2u+k+Lqb0BdYq2yLZlTMy7jaPTotxEZEqYdUfkZdQ/1dyMB/NFaCYikDQpt5hPs9IloMNdaJpChX/J2jhb14v1VPuJCEg9PRgf7+/EzgGjAogtK6RztLfNYrBfnHjRz2/Dvz0o/JE1zsRoChAUhlyu0gjUayfp2Pxmhq2UdrNtBFTbzudDhYXF9Hr9VIO/qSkuICkGETltkcbytY/Topj9L6cXHL8xfHSNmjddIx1xzJ1+umcoV5h3+kOhCSfg+7M9PdPSlp3lUesm/eP3kNswM15Wq0WPvaxj+HKlSt48MEH0yY7uosicOz8JAZkW6lnm81mykip1+sJj7BtjPADSBkpkb6LaGIjw/fmjqIIKshUyPs1VtwZzK1VZRoCBn5oVbHTcorc3+cC0dsDnPQERcJZmaCMwdy4yd3zVIWb9hkZ0UOG3h5OTCqBfr+f8l8VuC4uLqZF3mRGrqlgGYPBAPv7+2i324n5W61W2u2A9eHk5vadPExP+xw4mU6gfalG5DRFMYCTHhqtH4WZgnBdoKiAg+OZ82pyXrB/VIgARb53z44Lueg9Ojf4P71m6ol00KUgRNvuvMbNBHjYnkYiFCC4nKERNBqNksOB/OfeJs37Vp6hcGU/DAaDZIBxHugicI6ly4LIC+rXp8HAmEaK+hOIIxtRH/rv/qy+Q5/1FAfXMzRQXebkiE4ONQ48CqN10b+jnOyccRA978+y/ZM41XJ9qkCM8joqV8vy92gEQ1OkfBtWfm43uexwA0Pbrzq/LDNiWohyLVrfMqmsifCPj2v0v+Me/q5l6jvK3q33RHMsN7dz9Vd5r2eIcC5r2hznrBrFUR10bin4j3TyOPL+8nkTyQmNQvE3bTN37GSq1M7OTkofXl5eLrxLdbJ+dC0G+0iNMNaFxgrXAZ0mTX1iI4NWjHaMNl5f6CE63qNCkx2lC44UHHNAabl3u10Ax14KKgR6N3OeH62DA8DR6HjHDN6jHigtVz9l4bLo3TkPnArvp0oqwEnaFm87rWFGHrgA173CzWYTKysruHDhAs6dO5fWYHDSEZBtbW2lFCmmwGxubqaD9QimaSWvra0VPCYcC+Amr3DxbXQIovLStJGCbQfcVMDD4bAQKeCHk1r5xEO9JJbFsiko/VkXBurpUUBUqVTS+7Xe6vUjKOA1Fd5Mf+M2l+7xpBLgSfE7OztpPQbTnTS9gfzZ6XQAHJ/8y37TXVUcPOkuaeQ/PdRxaWkJ6+vrKSTM8HK3201tbTQaychmH3KeapiY/UUeVo8yx2BmaJwkB82RlzAnNyNDzz2uaqzq/R45oGFJryaNUPfWK0VGi3oHfT2Ht5k8ozJC2zAcHqdWcn75ORmsB9+jBra+Sx0SBPwLCwtpHivg0uc0h9+NN/deqqxgn9Lw5zvpMSYA5FlInU7nRD89VWJ/6DbXWjd1lije0GvTSqwnU5v18NHDw8OJt3R3WUWezQFu5Tt3UubqWSbzHBdF74wiS1H0mGNKgE2Zz+wURsIpZ3yTGa2TzscIY2j2zq2SYjSWQwckgIL8YPsVK7GtV65cweXLl/HII4/g6tWrePLJJwtYWvGfOngpr5g1sLS0hHq9njIH2GaVT5TH9Xo9bbSi20GX0anWZLjAjjxFvA7EeXeqUCIvlntlycj7+/uYn59Hr9dL26PyUCq1wCahnBWr9Yry1xTguqWdI7U+y+qzsLCA++67D51OJzRG9G+33IfDIVZXV094bZVJHYzRwGDUodPppMW3VG4LCwtYXV3FysoKVlZWUKvVEtjTBbyDwQCbm5vo9/spVYpb3rJtPAdD02C0j1RB03hU69qNDI7XtBkaetaKKl8N07sXUn/3KEDkMdToAr/V4+T84qkDwMl9+vkbBRCfiTxJ+ixTq7iQ3w0MHS8FPOqJUw+jGwoMzY5Go7Q3PJ0M/X4/HXBHA6FSOd4pQ7dO1ray3jRs2E7dXYvpMxSi6tGNPu6EcOByN40MdapMy3yJPHeknGzVNjiPl5UdpUup4atedfJWpKMUiGtZ6lhQee9rmNT55vMvV6bPH4+6q26KPKxqSOnhp3oIauTlz42XyhkCJO1POiO4kYhut6rAXyPnt3tusM9ZN5c/7nTzvP1pI8dT6vChnGI0mNhIcQrbFjkz3RkC5M8VOw25M/dW+jaSs+r0UmcSdQX5irtYcgt04kTiENXNStH88r7y/8v6x7MIcrqc5HrXHfOcQ7qTFA+g1dRD3XWTfUfnHZ1rnMdlTnr2uToLdOvkSWhiI4MVcqEYDYIzrg6YAigPK9PI0MHTRhIsuJHBcE+ZgMx1oBoZqsSiSRaBpjLifZFHS//mwL/mNa8p3O/KgkSBTSE9GAzS7hwaIozqRyYnMOOiIRoZ9B5wnYAaGUyRIsORybvdLm7cuJG2OtOUq0rlOCrBj+5brnxFg0KNkQi0st/82jSQrsXQ8XewGRkZGtFh+9h2FbDASd6jEqHiV35RHlf+joCMCh03dPgsf3fjMXd4oJbj6RLR4kU1RHSrWo10UNiS13h4I/PiFxcX0zaPXM/l9dPdvGhksI26sFKFvAM9VzQOXtjWuwlgIkfQNFAkY90p5b9HBonOCb9P5QRQXDPI8VEgTCcK55xH5LVMTe9T7yjrREWsUTfVIV43n5c5OeIOC7aLpECGDiVGa2hcDAaDFCV2ftY+dR2mwEzvU8eXepY1fYVzlrqc3viny8jwNEn+pu31zzQZ4iRP1dF+9p2maFxFRkaun90wVYqw0GnGS2XhrZI64Vimruthqnan00lYiA4j6gNN0+YuhEAxKs1y3TCdpI0RzyjWVXmgY6HjChxvkRs5BVlfLvbmGlpGFRRD9Pv9hLFYHvmIBzgq9spFblk3Roj0DKoyvlGa2MhwA4ENd9BNxuZgsSHaUA29saOVkXxxKr0mFE4UTMyXppAnQOOgl3m6WbaCMgVTw+GwUJamTLiyYNvL+i3qJ30uN7h6XYWM55nq/24sKeCjUuXaCRoYNFJoxK2traHZbGJjYwP1ej0ZdJzM/X4/bZnW6/Wwvb2d9jTX9Rzz8/MpJKepT57fDyDdo+E7glcN3bkCnjalQB4iH9PgomePSoL1Zo4jzwuhENRUBhVG0bjS8HSDWb0VuQgDEBstmpvOMhVQaaqXLhB371WkIN3YYCqUh/sVsPhc8N1qaDjwQyOD6XoUsuw7XR/C3a70fAwNFetp7fxbI4luIOkuMDzh/m7StM0RYLKUiXHPK/nzEa8raCYA1gWNVNKHh4cnouN8VheHErzoblIKqPm/Kns3WB0As20Oppgaw2g3dR+jwK5r1NvY7/dRqVRSKuzi4uKJ9Bo1XnL9rXpT26LzmvKOOiVnZKguv53E/nJjTtuQcxb4TkPTQJEjiDhJU6b29vbSjkCTOjXUAGA/sT80RUexSBQRKSPKxdOS6w3Fhppyt7u7i8FggJ2dnYLDifNX15Qy4q5zT8G5GhnUy8SBPjd4TcE8SXUzSTdpUBynz3JuqnOR1wGk+b+zs5OiNWfOnEk8QiNAcaE7X3RNpX7YJhpoTGPu9/vY3NxMm/joRg6T8NmpjIxx6SlkUP4dKQEPBZN0EHWrT50AKnTn5uZSChUteV20pyA9B6bcwtZ36aSOIi9qUJVZ9w4K/brfy+8yIyMCntH/2u/aRgVAejIygRWBvq6J0MnY7XYL52noieAasqPy0/3KdaLpgjUA6V4Frr5TkQOHaTMyPILgilXBqN7HecGIBOcIyflZ261gHjhp/EdRSAc7fAfrwDqqguNHHQVRqNUF4zjPv76PwlHr54BeAZgCIzW4NFJC5as7b1GJ6IflqzGlAFAVnEcptK2skxpRdzOSMe0U6Yky+XirpOUpzzGCwd3VOO4EEKoHPNLu0UYH3Jq6o3NQQY4bGbmoXm4XLM+X1/lHUKHpNdSZrt/GeSYjoEViW3WhN4GIplfoYnB+breRwX5zOacyx/UkfzvNgtY7RZGeU95V+eXpYONI2+/4I+KlW4n2TFoXJ/f4s73RnGBkjP1Bw4By3DGFO/oi7MU2R9jKP15OhEsUB3ofavn8XY0hfjSSANzETGtrayk9iqlT3W43rR9h2ZwTKmPc6AaQzo5ilgCNGmaunJbHJjYy1HvsHezhaH4ruGEnq+dFv3XBjTORpprQI3x0dJSMEZY7HA7TbkUK0hzc8x05oKOD6vX19ipF4F6ZzQWaGx5ahjI6KfLAuPdU71MlyMlC65+Ggq6d0BMfuY0o+5CetMFggGvXrqHdbuPatWvJg8IyyCvcppZRCRoarB+FIr1pXDzMrdP4jIY2I0/8OMP3TpN6ttlGpvzQY+oAQ0Gvehh9bQQ/URRQx1y9L3yenlbfiY3CR4H6/Pw8jo6OCltE+64TzlcsQ8eHZUbRBkatKEgZrWBOPFAMEe/u7hYEpxPrSBkwNzeHdruNarWK3d3d9A7d/5/b6fIcl8PDwxRR4i5qXBBMgUvjUI11yib2FfmaqYyM7s0oJlfUuTnt82AcKT9Gv3H86HHnWPM6nR6aEuWAXnUXZbHu1kc+Ua+wLvDUtX9qlKinv9vtot1uF9bOca6q8cy5q6CC5fI9XGi9uLiY3sV1SarbSeo4VONZdRPfQYOCYK/X6xWMDIJE9i/beLuNDL5TI5KuRx3UcTyZrz/tpJGMTqeT0kK5AJwOmNOsUyV/+nsAFLAZcDpjTJ0wt0Ia+VZDggY3IxmaMk7dwvWCq6ur6fwHLdNT6yI8Rs++6jnFicDJ9KYckcfUEOZ8IK+ORscH0vKdTAnb3d1NOqfRaGB5eRn33HMPhsNh6ot2u43HHnsMu7u7uHTpUtJDxCbEa+q40/YRF1YqleRMvnLlSsKMlUrlxG6YZTSxkREJawXsKngdBOpA0FDhR3Ol1XNIzwsVNA0LTa/RNRr8mzuEuOD0ekceVX67FapWvRoZZX2iZWt5/r5o8kWWsl53IRndo/dq+JSgR9dNuHFA5iZAZju5yHtrayut56BSJo9oTjwP6eNaDuUF7SP3NigA1dQENywiD8/dJh1X9c6r110FjBrver/OkYgfdXx1/N3IB056qdSb6vzE6+615dhquhR/1wigRj44V9Wjwp0+uB1ys9lMgpPnsnC3FL6DO1LxNFOtE9tCsFWtVlP+OXm31WqlttOo4c42enhRvV5PJ55y7RCA1AY6PNQbpNHWyAHD63eLR6dpbkQUKeXIGTOO9J5oruh1XlNPMIB0WChwvNsLQSf/1i23vc7q8PHzZDgn6EmlA0ANdQdTvoOQfoCTOyGyXNZHUzF4Ls9gMMDc3Fyaa6yXGjs5B4620b2ZurZFI7faJo3wqNf9dpPOv0g/R0aqyrdJgfmdIo006ZjQkaWLnTVVBjipM5000uP94oa/Gu3qxBxH5JlbITdgNUrmux1qO1VX6Q5tmvrkddTn3TGtMoN8rO+NHMm5yKcSdb22VZ0WrKtmnjCVk6nk3O2zUqmkg23n5+extbWFo6OjQsaJ84K2SfmKzsFOp4NWq5UMD8qPSY0q4JSRDO10/ZsD5qFl/q4d64zgoSx2MBmKaVG03HWAmWfKPHYKUfVIRN6ZSPHk2qZt0Xo72M2R9wef8VC5U2RoOLD0tkT3qedpNBolxUUjQ1M5VMhSORKg0cLt9/tpq9tWq5XKZf/rIu9Go5HWVaggI7FP6HHQxeE0TCLlN40RDCXte4+MMdzLkKQKPxrr/HaDlXzjnkoV4Gpcq3Gh9XEh4UaGRvDUkxU5A/R59QhWKpVkgHJO0vhfXl7G2toa2u02VldXcePGDVSr1ZRrzq2OWc9er4ednZ10aB/rqVt7cg0PIyWMZIxGo7Rn+NHRUcpZpsdHhe/KygrW1tawvr6etuTl/KEy17FxAx6ID6uaxhSMaSKVX8p/QPnuLqQyGQqc3G+e1yjjNAquHnfqFUbvSAre9V3kCfW0EhCRKNdoxOSMDDp06D3kmqFOp5O8ieRDlRtaL5X7mrNNw13XuHlfakqHj4F6gCk3FARytx8a75pSSAPFU3tuN7lejMbJQbTKk2kilR+e8UGn4dLSUnLOqE7XSFvOyKhWT24YEhlhGr3WsseRY5Ycqb7SZz3dz40MNTAUU+Q+msKo72EdIv2pYJw8TdKsGJ8/ug5QjTO9j3XmHNH1gwCSDiVmA25mJKyurqJer+P8+fMpY4Qb8czPz+PatWspO6JSOT5cUXnBIzK8RrzXbrexvb2dFtUzFc37p4wmNjKUcswQAedISUSTHzj2pKvlSSNF0yQ4yAq0GCau1Wrpf74jZ5lqW9j5ep+mkDjwylm93k/ASQ+np5X4/S4I/X8V2FFb2C/0vCqw3dnZQa/XS7tB6RH0qhxJZDid2HyGDLywsIBms4nFxUWsrKyktKd6vZ4mjBqjPtm4MHx1dTVFPmi0aJtcAEwzcNNx0agEcLNP+/0+qtVqWoimXk0+r/3FPqxUKoUtIl0wed9QuKgQVmWhzgD1ZjgAiKJ3KngVILJMpuINBoNC6HpxcRH33HNPMno7nU4CQKPRKKVRUIFpugiNDDd6OPd1x6jt7e0UCWXaCQ/hYzSOirler+PixYs4d+4czp07lwxj3bklWluhhpX2rcogGlczypMCPv4/iQJT5e3lke+jaChwLN/pcaeeoaxjVJaOsKOjo7ROjcBM06H0f+6MpmdBMI2D3keCHuoHzmt6ELm5RqvVSumCjHBou/h+RunYPgVSvIftUiND07fYR5QPqgMpI9QYUqOMH533UdRDAfDT4SxSYK38AMSg6umqx+0k9c67bGcko9frodFoFNJhuBPnrZA7M3mNsm5S4zByiDqpHFWnHHWlzg2NHGu0kdhsOBwWcITqV/I49aWmD7OPVU87vouimOPwoNZNZY9Hwt244XolvlNxAO9nm/TUbjowtra20Gg08OSTT+LSpUt4/PHHU3o7y3cZpnggF2nkb4yOjqNTGxkKEHMUMZIbIfzbwbS/KwKV6hWmYtAFbYx+uEXonl2g6LEhuTUfCSvth6je0bfWg9/RILlBocJZPyqw9Vl+NPJDxUnPbafTSXmxHAv1wrFsP0TJQ59kcEYfuBOVGgo6wXSSUxnwXk2R0snuRoZ+po2icSKpoibv8pA45z/9aL/xefUkqtGqwpnv1HmnntMoHYLf7v3zNmo9aeySn9UDQ+XgHqaVlRWsrq7izJkzWFtbw97eHra3t1NfaBs85cz5nt4uzUWmETYajZKSqVQqiZ+Zx8s8ZgI/8i/rq2W6B1Tnr8spNTg+UfK87yS5l1Apdz1XzqTvc7mhDhkAhS2M6YV0R1a1Wj3Ba+oF9qilevaPjo7PHxqNRknekTcoY2lkMM9cc6o1hxpAWrxKz6qmQKncVB0S5aOrE0OdY+qJdT2koE8P2dNd31Q++Jg+XTI8N9Y65ioTdd5Oo04BcEKuqFNHPf23ugBcKdIDCpDL6jiu3Ai0OoZS/iKYJc8q/uK8oVOJuofzTOdCRJHTTbGaO+G8T/S6tyeHVRSfqcGr95EfPVNBjTsdF12Py/WO586dSzss8r08Z2p7e7ugYz1dyvWX7+6puH0SOpWR4R2mgskBof6tClrBEIGTCk/1fNNKpyDTcJUCOHoKacFS8HIQCK7UalUjQwdPQYQyIXPnaD0rYHNGdmbRgSuzenOM6F4YF+waFifTEXgBKJyCubm5iW63i62trZRnznpo9IefCMjS+768vJwiF2tra2nRuJ5vwXonhpNt5eiF1u1q9fC9XH9OqyIAkFJqNH9SeZXjQ099vV5Pv6lQUfDC+aBjosAXODnXlF81asFxVO+d92ckFB30u6BkPZQXdbFZpVJJeaS6DqVSubl2Y319HXNzc0lZEvhTJtTr9eQ40D26FfwoqaeG/d1utxPA88P76vU61tbWEj+zr3QNGPvG+88NYNZH02HUmz6jm+SOGn7cMJ5kzvvvDkaY8qQeev2onHcHFuUV5x63TqeXeDg83nBE5y4dO5pqQD1Ehc9UBvIrgSKdQIw8c+9/VeysJ3nNjSHvG3dQ6IJsTaVwXc55wGtsm25lqREg3VVKxwE4mYY1KVA5DanMU35Q7MA68P5pjmRoShJTytWAYwpcu91OaVP1ej05/socHApiSQ76eV8UGdO6nSYtNMKDJPKlbsLg85S64ejoKM1NxYfEZzoPiXWAY4evp/6ybexrb7e3QWWY9yfroLpfDXvOoeHwOMLJiDeNAj5TrVZT6iaxnx5syZO4V1dX0Wg0cOHCBZw9exZnz57Fvffei+c85zloNpu4fv06HnrooRN14DsqlUpyfALHqewAkhzSCMckBuypFn6z43xQXAm4YREBHx0kvYcWkwozZThnJHpx9vb2UK1WUyhZT3YksND6KTiL2qaGkBoknFQqLN2Y8O8cM/pkzhkZ2qeuyNzwcm/TcDhMBobm92oIUsGSjqsCOU7subm5lDLA8Nzy8nJKg9FtZ7UPVNmz/+jVY56yLih2o03LyQGKaSCN/JBnXcE5YFfh40CVfebeC84VEoG7jr32o/arphN4Tq3zsxsY6vHwaJrWT41dDVWzHlx3sba2hgsXLiTjQU/o5tymIVKtVtPv7tVV3nEZo9sH6/akDLVTGfO65pqrQNX+075zIOX96akbM8pTBHBy9+m3X+ffNPB8ZyiXccDJSARw7CAhaCafcn4zEqGGixu97gAYjUbJGaHygRGP/f39ZFT4Bh2uN3R+0kji7z4flH8jXZPrd/1d57waK+rwcgeIO9VUZjwd88L1eDQWjl1UJk7bXFVnkNdReUt3JKNR622nXnBdT8oZGNG9/txpHIDOv2pkRM5kl7HR+4jVFB/SSGDKLnWsy3mSOq41Qq/vdR5W0vkf9ZfPHdVf3BRF54/KHcdG/ObGFa1WK9WVBsnq6mrSoZubm1hcXEypl9xAgnVRhxiNDfYV60VDTfH3ODqVkaED7eDYDQ8FwypIFTTxdyoBdoYOIhlNgYV6efk+WoD0UOoCVXqZFOT7wLt3Rf9mfRTsKdjwcGv0DhfwamCxD70+LtQVvKmR4eFRVwQ0MHShKy1ShsrV0PJ6KzBcWFhI29vSauZuQZwonuqkPML2+4J/3S4y8rCXCf5p8kAxD5lCXr0gHCsKDo4lx0/nlIJbevgdQOnWlQr8o2icKikNgWr0KudIUIHs15V0TlMIVavVQhoc67O0tJTyR4+OjrC2toZarZZS+WgEDwaDZNQ2Go0UkSAAY1TPgaTyIPuXJ3+7oUyvH4U6Uy75P/uS11zRez+4IlRv2YxuUgRucrJZ73GKjA2VNZRbuQ0L9D1uZNC4ZR24LSodWuQnfbfOW9UHbmioZ5VzgIaFein1/CGtr7dDgQtQXCBMnasfn+M5YBQ5rVTveJqOOgNVBkVzhnPpTs0N1Y2kTwQjQ8EfZbn323A4LOh5OgA98qXgWdeM6bvUqcTf3RAATq5tvZVx5PM6z5zPIjDPMYr6gWCY4811QqPRqJBhEdVFoxDuUHIDne9z7OZGthP1KVMc6cClTtQNeWggESPRGcbI5XA4LDghWIdms4larYa1tTXMz8+j2Wyi3++j2Wyi3W5ja2sLW1tbSa8fHBykvnE9OhqNUK/XMRqNkgOQEZVJHEK3FMMvs2wVlKgwIuPowhVlJlpjCu4VLGt5vgichsDh4WHqfA4EwRN3inEBqwpA30/S8BwBeeQ1dRCthli1evLMkAhIR4ZGzsjwcLcbSmoU6oTlPeyP4fD4XAFdbK3GANtMsMiF2mRkeoN94THbrIqYfae7PfAa74uMNRf8ZZ63u0ma2udhRU9TGI2OF3uSd0kqiBT0qAdd+4vkfEfeV6PODTrWUcFRxH8+bz2MrKB8NBqlSKKe9O7lcZcMRhP29vbSTjr8W0/lHgwG2N7exmAwQKvVQr/fT4eokec8JULnKbdI3tjYwNraGlZXV7G+vo5arVYAfdyli7JLwYcqNpWF2j/6bk9fmVGRxjl+yu6NnBhqXDDVyaMYHNOcw4zvcQOe+qdaraZ1gCzTnUaM0tbr9VSWe2zpBDo4OEC73S5s08lIfsTP3h8eRXEZwPnPCL/OSe0T6k5ei9afqGzj7/7RceFYsC6UhUx5ef7zn19Yw+H1VwdJ5Dhxfcvd5NwAdcNKAaTKxGlzCGi7PfUVOJbXlJetVivpZqahMi0PKJ55ofoeKDpM9D59J/vWDfVb6TfnWZXfiu2UIscC68trzF6hc4mOao618xHfT52mRp06TnO4Ixd5AWKczDFhvXVNKtMM6UhrtVrpt/X19WSM8L2dTifJCp73RKcccUO9XseznvUsrKysYDQa4YknnsCTTz6Jzc3NwhoqjrViDN3pUzGKYswymtjIcGWqwIeDpIynwFZTpzRKQab1QWHnKQO6J0XBG3AcMqKXiWdn0GvJgVVPJJ8vU2TKVOx4FWgO7vm7GzHeT9p30XtZdmRkKDO7UHZDJ1KammMMIAH9Wq12wnBSRU1G50F53KJWc4sjMKX1YXnqXfQc/ahfcgJs2gwNBQRKKkA1EueCSZWgC3E10LWflJe1/zUlSndiUiNZ66ZKKwItfDfrr9v4sZwof9WBmpYBoKDc9/f3k8FBTzEjCwRLNAZ8T/io31SZ0JDmWiJuWcu1QOrAoAJmmd7nPq4qjyKDf9qAy90m7dNJfo/ktF9XIKY8T2OX80eNRpfZZR++T/mf0Q03PAlSKBupAz1lkt5/7hCk57H4/aRxhpdfj/rEHUKst/NypHNcH/k9bsTp/HOgypQOzj3FCm406lpIva5t5XPOF9E4qvGi9Zs2iowr4FhOs840UP0cLHdCRjI94inFOTlgr3ouijiMI+c3NTDU0IwoGmPeTwMWON7ql05m5Ud1OvO9JDqVWU+NgGg/si6asZPrI31ed3VTvcz3cRkAd/N0ncn2+va+lUolbQevxsvKygqq1SouXryYDFJm/ug81v6MUp0nNS5IExsZLvSUaXWi0xvhO1gQALnVyg6NjAcH0Lyu92nHEBgQKBC0qKGhHpxICP7NhJ8AAQAASURBVDnxPhXSnNiRRazCkZQrf1IjQ9upSs4Zg/X10Limls3NzRXGQz19jGQoU6lRoPfxWqSsnLQ83W5O127khFjUT+O8BNNA6gkgINH0Ao4Z/6fX0ye0khuQ0W9uWGg/e8oSUNydQsO3LJ9zSgU676fgdoNbw6xqXOm+5pr+yPpzK9lKpZLSzXZ2dtDpdLC5uZnazXM3NKeV4XEqWm23nr2ysbGBRqOBe+65J6UUsI7cjYrCWXlcPWBsK/tOZRz7TEHULF3qJOm8LesbBTk5Q4O/s78ZIeVhVeo80cgAcHKsIvnphjznClMH1Aml0S5d57O0tFQwIHjwH+cCD5zkPe640r5QPeqGrMoB/ZsGD+W4brzBshXgA8eHvTGy4mm5Or/1N5UJnIeqKxRARg4O9p/qXY2G5FKsnD8ceGrfOa+o8TVtc1W3oXVDSA1YysXt7e2UBqprEdh3xCg5Yt8QN+gia41ueH8rQD8tsTx1UpUZfBpxcyyn+kezX+iI5jPqNNb7eU0P4iRYV7503JpbIB6R4iHubFipVJJB1O12sbOzk9LfarVaSuVlmrRGGLhlNuXS9evX0+G1KysrhfSp5zznOamPVMcCxd0U2UZiROpE9s+kNLGRQSXqnloX/h7qcsMhAogKRPzeyCp0I4fvpVFBIMKzCPSAPt6vYZ8cQFajwevgQov367f3j3oGovuc3OOgfRJ5yz38CxRTNyqVStoZhZa0KoDIU6RhMgWrCmhdEbrx5vVSizgC01F/uFe5rN/uJrnC1/537xFwMq/VjVcHER5p8t8VEEceumheuTHvEReNoGgZ3h4tmwKzWq0WFrSzfN2VxutPoV6tVlMKlUdoCCJZtoI7BSoEmdyattFopM0KqDho9CkAZbspyOk5co81P+otdMOrzAD/VCWVE2XGA38nqTweZ2wrsCZ/8V3cPcrl97j5pXVSvaUAS40OzaNmvXRnFyptBURaVs4RFfWB1lf/1za5IaVlaxRC6xQ5+7zP/b3+/uh31+WuR73e7iBRfRrpBf1w3HVuau65j/k0UW6s+e2OHGIfLgDnjpuqV1RO81vLJ8Ypc+hF8r8Mx5y2rY7xtDy9FjmMXT+pUeAGLctwI4Mygmt6h8NhMjzc6atREO9Lb5/qaDpCKBf29vawu7ubTu5mdJP4y3H1aDQq1Glubi458g4Pbx7qyf5Rp1uj0Ui7KfK9dACw3Zo9oPPjNOMJnMLI0IrrSxwk6tZq6t0gaciJlDMy9DkHapHhopMGQFqTsby8jOFwWNgezMFwRCokyUwq7Mi8BGEu/HJhpdMMUARKI8GvII3eKr6fgExz9BhC07MsWHe1VpXBFKwqsIvAcwSSy8rI9T8pB5LLnr8bpPXRfvHrkTBUr58rFPewRgDCoxYOmBwAR2CZ/3P+0gOmXiwVsJHi4djQANBFeHxeF7QqH/DwJBq+tVoN/X6/UEddsEhDpNvtpnpRmXKt0MrKSjoDY2VlBfV6Pa0ropdvNDreQlRTYJjfyrme41kP8/P+08z1TyVSXnMAD5xMR/BnVU75c5wrKuNcllBx64YGnhKgjqQIhJKnde2U1lfnKdO2yGN8jlE3oGjcK7mOzTm2/ONtUWeRAmz2tb9X66O6ODLGcoaZ38d+04/LE39WnWH6Di/HDZVovLQNeiaTOw+mjcifbnCqLiUfck0bT39mqgyJuCgyZimzOCe0P32OKn/kjAF+R07RiDyyVtYXpAhTKE+x7oxkcP5pRM3rqcbA4uJiYa2Ry3/N8tHnovYq9qrValheXk56pt/vY3t7G9euXUOr1cL29naSF8R0Kjd0LS3/ZgYAI6btdjvhdkbzedTAxsYGzp07BwBpIyCmXQFI2NCPFdCxmWhMx94hHUlvnwMV7XT1hkSeCb3Pn4l+IzngIjkj0xiiEFEjg5bg0tJSSnmKFJzWRcE7BTWfjQwPrWNu4kWGQxlFoJD/q5JQhtDQL6MXAAoTh4qP5boicSGW8+a5Qah107KiMnIUeW30bwqSScq6k+S8GRnNyk+RYos8f5HCVvCgXgc3KLQOJOVnHSu/nzmeurhalYoCfqZXUBDyeRq6DPsT0DMXnWUxwkGQPxqN0Ol00oeeOeB4/25uraenDLNv6vU66vV6ChVTHlCgU9HoCbk8U4Zt2t/fT55A4Dh1wQEdZQHbPxqNCnLmO77jO/CqV70qbQvo48EyxxHPo/lkJ+8jB4iuB3KAWhUkn1PDkTqBpAqUZanR6F49UpnTg/XRdijY1xQm91JGXloFgGXAXp+JZKj/5qBf00EU/Ksnlqk0qhf9PXRYqM7UDS/0XS7zPHXN04Xc2aE6N5pP2l8a7WVZk4LhO0mRMc0x9vNZ2L88ab7T6aRD2VReA/Ghw+pIUT5zQ1LTlbwsx3KO0XIU8e8kY6HGl+IDrTtwbMCwP9UhxHepLNDoBHmF63zZP27gagYJSecU68aF2cvLy6hUbqa4tdttXLp0CY899lhKYSKO9T7R7bN5rhNlCA1Nrs9hGnCn08FwOCykTm1sbGA0GqHVaqVtbRnJ0PRJjbI6ThxHExsZkdDhS9xgYEdwgNWajJRHzmOVIwXxWgaAgoLQrQb1242GSNBqe9hGtU4dnPlk5LWobJ9sk7bdB9SBu1rRbJsrXjUu6PEmKVPlvIvaFp04kVfEy4i8Ibl2OsieNsGfI1WAbu3rnCgz2ICTXioHEy6Qdaz9new/F6hq6CiY4js5xhrR0PsisEcFxLb7vGG5upZBjS/ON5bJRYwUllxjVa1Wk1cGQGFBON/lWySrl47GEwW2r5lRJcq+okHufc172FcasWG7XvziF6ctnykzIsN82ozmO03e/rJ5H8kWnStugJO/1GAgT7jTxwEEr+fqM855FM1hdxLox3Wmf7zNUT9Mwk8ugyjT9cBLdxhG8icHDr0MAjlfV5gzuHPj6rohMjJ8DACc4A0ty7MppoUiw5VySI1k9hPHb29vL52dsb+/X9jsJYdztHwH6dr3ihOc591o5+9qSEbzKNJ5kR5zntZnojnH53W+6fzyuug7geNNSniWhDqsnVcimaHtZp10t8fRaJS22d3e3sbm5iZ2dnZweHgYbqpDPqUOZR9ouruufSQ/0DCh/OPRA3t7e6jVaimC4WWXzdNJ6FS7S0UdR4oEmlqQPrHdAvR3lJFOplz9yFRHR0dpWzACIHpZy7at07q5QtA1CRpu5W+u2CIwGSmxcW328tRDxvdFuzap14k7Q2lKTlSnnHHkfc2x9DUu/E3brd96XzS2OUUR1WWaSIEsBa4CV+DkWFJokEc1uqTGrKdJuUfRxys3P7SPOU8qlePIn97HeU4By7K0HH+nej7IAxRULINRA92OmsKW6VWHh4e4du0adnZ2cPXq1bSwjedaMOVpfn4ey8vLKQLBvo5ACaMN3A63Wq0mA4PlM9TMeuqibp4DwD5X44KRFM4f3dPcnRkzGk8ONBzc6n36u84Xlcl8jgCBPKYONI6ng1v1eOtccEOGpHNBF1MyaqaGLeurJ+2qsUpSPnY56u/Xfsn1rdabc491YoRRQR3f6Y4syiAFmGpocz5R3nAO6lbekUzRvlR5po49dZI5pogiuDmZwHpF/T5NxHp7mhflDYm5/ZubmxgOh1hZWUlrADimUWqny80ccfx1zZ6Cbo9gRKlPCl6B45Qvjz56RIXvj0gNIOUp38lJdZQal9TDqqvZHs77arV6YpE3+0ujHxrZHw6HqV3UW5zvBwcH2NzcxJNPPokHHngATz75JLrdLprNJlZWVgo4k/2hOy7SOKDhQj7QNFH2C2URnXRnzpxBpVLBjRs3UrkcG560Tt3Is0a0PyehU5+TMamijDwqEegmlQHH3P36mz9L6w1AIZJB5mWYUZVWZAxEwFqVnws1Be0qAKJ6RoZWWX8CRatd+9N3EooUgXtuonbq2EUU1VXvnRRE5Z7Rd6tgyfVP2W93g3T8qbR8H2oKQDcwGKb0xczeJz6nXCmUeQZdybpRGfVnxKuuyNW4iBQM+4LXFHjpexSw7+/vF1Kl+v1+Avhzc8e7n7jBz/forlneh7onOAEPd7yiF4hlaxoV26aGOtvDMeY7tF4OjGdUJJ/nkXyYRI/4fWog0AsJ4IQ8JJ8qqGFZlPVlKQMeLQFOHkjLea47NimYoUGk0fOoXewv/dZIwiR61/tIAbnWW+91XZHT8W5oqBx3cBfJH9eZ2pfKK/5RmZQzMhSoqr6OvMPTQtqPOmYaWabu59/EP91uN20HTgeJ8rfjEU3pieaYP+cyjc9RDjLa4e/QlDlNx8ulo/o1r1/Em7yuGEmjL8qHurFRpVJMCfYonZav9WJ79aM7WnHtBNdkAEhnQG1ubqYPd4Xi+TrqOFaeoF4ibtANJtiPGr1SOQcc74DHtSG6lTv5R50kyoenoVMbGcrYwEnQqR3ugEaFoAMVFwyT1sXfr//Tg0LBTdDPiUjPrXr9c0yrzMlJqmDHF4NrmTohIpDulneurfo3y1NPUvTtk0QnA9+t3xzDqD+1nlFdXSjlysxNUP8t+t9/U6UxTeQh6729vULuvwJqeu7pPdSwJxArcx9XzUsFTo6rAqGcgM4pFVfgfEaVsnoDlXiNBj+fVwXj8+Pg4CDtrLG1tYVWq4Xd3d10LgbbyjM1ABTmAb1HTJ/q9XqJbymIaUgwf/ng4KCwH3kE2jhGPISNURQA6TpTNHUe6kL2HE0jD99p0rnswEL/jiLPStHcUE8/Zb/yEnDs0Xaip5brkjxNgeUpYHUDg04E7hbD9UX0FhJgsY26o01OxqnOUBng8sH/1v894s45oRFGlUUu/x3wqUyJwLoCsMhYiwwH3sPx4fyK9Brv4xwel0PuTpAcD9xNIvDNOQ2Bk+Cf8q/VaqFaraLb7aYd9nRdGMkdQwDCeeZGhOMSjg9wHPEjJtLIHrdAp/HDubi8vIzl5eXUJraX/6sM9eidRiV5P/vOjQQ3MjSqwm2BlRcovxXbep10rrNNbBeNC+5wSCOj0+lge3sbjz32GB599FE8/vjj2N3dxdHREc6dO5cinDpudGoRN/T7fQAo7FTFRdtqIPBZpk0xs+Xo6Airq6vp4D/qQUblNcJ3K3PjVEYGO5idreE2FzKRx10FAp9VQaoTxN/pf0ekHaBlUDkwkkEgp54rTTnhYHiZ7HD1uqkw8wmlQiFicq1rmYEVgX4X8pFC9THhBI88ZPp3BEDdEHJvlpeXuy93f67N+u1Gi47DtJCCai5sJpigJ14VH/tWjWFd6OXGg3pJFTAAcfqSzk+9x41NJfU86d8OnugZ83UVOWNG3xWFynXx9fb2djofo9frJQONQJ+K0xfzUXiyHM5xnpXRbDbTjkPa9+qx4foTneMc0/n5+fRNYV2pVFL99vb2CidM6/ky48DxjIqkvK195zJB53/UxxHvRwaLAg6Wq4CW7/E0RQUg6m1X8MqPygTOH76HRitBTuS959/R/HYAqnX06/obPd/ubGMbtF0ACjIskr2UFarjIxDsY+y6wecndaviCR13kr5Pr2k/qoPS5/9pHJ13gsqcE0AxhQooRpXpKd/e3k4HkdJDrim27DM3ssibkQxXrOe/a0SEpLqCURamrRJHcWtzPq+YLMICyleqK6PnHXtqO9QYUR7RMaAzQQ0fEvWDrh8kBqSBQANjeXk5pSBdunQJV65cwcc+9jE8/vjjKb1Nd5/idut6AB/b6HpJU5o5dhE/U09zUxPWa3l5uXDILT+qyzwDYRyd+sRv7XwXcjkjIwcuvYwIQEd1iMiFmJbtYeq5ubkUxtKJ5krH263AWYE326rWIu/zvsqBjMio8XaVPa8TKQdmVKAqlY1VbmyiOubqFdVzUrDlY+EGUaRQ7iapgKf3knxH0Kv9rwYmPe/css5TClRBUzC6p8eNgjJSAODz2/uavAMcRwj1QD3er+uvnI8UlETRSxouvV4PrVYL7XYb7XY7KR72gaYv0XujC8CpEDQdhX2pu+GwXlo39Wop0FIvnJbjypE5xcCxYtL84hnFFMm2yBiIdEJkPIzrazfQOfZuNGseNJ/jnPPtYCPd43ylBoemrlSr1bS7lAJ0NXi87Ehf+toTyhM9P2o0GiWHBg3q4XCYHCGDwQC9Xi+bakjej6LaXi+2pUxvuTdeSZ0pagzSkZfDCrn68F51mvjcnjYjQ8FuROwbXRfD9tHx0e12EwAmGNXtYn0eObbh7zn977LeoxpAMRuEBpDyGvlQ+ZdllOm4nBPBDQ/NZNG68Fn95rM6Buow1t90J0Uaddx2nc6tubnjA+24Rrjf7+PGjRu4cuUKLl++jBs3bqT0NsoD37iEddP2axSO/ahjFmFj9iOdGqwnHWK+8YM6MKiDJ6VT7S7FztZOdwaNKPJQ6ORW4OFMrBZZGTmTqBJREEchS8sPuCm0mMOmwjmntCIhRLChVp96wKLQdDT44/pO+0/7URmC90QTn/n+XnYECHNtzT1XNiaTgIBxBoxO7HGGz90ieic1fYae+G63m+qru0oocBkOh+lkTRe0eg+AAohW73nEqw7ygZNzRK/x2Uig9Xq9ZAyoh9HD2v4s/6aS0XUMLLfX62FnZwc3btxIKVPsB85LGnCdTicpSgrh5eXlVJ+dnZ3kMWMe7MHBQbrH05h0QTDTWIDi4X8cD0/1YnrJ0dFRSsnStEUfF/bTNPHu3SJ3FETGRc75o5STKz4HyLNeLueupgrpvOJmA6urq+nMleXl5eTdZLmahsF6epRZ53J00KOWpUDC56+3UfuhVqvhypUr+N//+39n+9P71I0jp/X1dbz85S9HpVIpGEvaZo945oBgzkOfwwD8m33BfvWxjNqn9dI+0/bm2ny3iXyR6y/lJwCF/qWOabfb2N7eTjLy6OgopZqqHNLULFJ0DcinN6qcVo83ZSefVWcRQXmn00G328Xy8jJWVlbSmQ4K0F2ejuufst9Ius1/GUU4limQOzs7aLfbKd2JMoNpSYwWAEC328UTTzyBv/zLv8TDDz+MBx54AN1uF3t7e1hdXcXq6irW19extraGer2e9Jwa7MTEnA/c+ESNPHVqck7yWfJCtVrFysoKer1eqkOlUknbvNNwoQ4+bfrUqY0M7+jIehw3MJEXYRKv62nArHr0dXcR9VjR2xmlGpWF3VmfqG4cRJ0A7hl2YFfWXxEoV6+C9qWWrfm5vB4ByciA8fZ53aL+zrWhzBiZBDRE92m7p22hnirXKCdbiUIAOE4X4iTWD5WFG4I55ej85QBfyZUy7/N5qe3yBXsq1LReLhO0XF2UzShAu91Gr9dLxoWeuMpDiwjotWwNfzOqQSEJIIV/R6NRUmaqVFRol/UBladGkvibAkCdg7n0Du3/T1XS/iqT77nnIoM5kpVqVOj/EZj1+UTlylSTRqOBZrOZzmChERLldvOdCv4YrdBtKfnt6boEYlGExflJ06r0XdVqFb1eb/JBGUNMRVQQ6e2OdLrKL+8TvScaE94XyT8FTXQuOC94Oo87p1Q+6ve0kPJFjpQfvB81bYoRDUbKVT6rrHdnJY3oHG7QeujfZZiQOMsdwcDx+grK6aWlpXRmke+mqOl/fKfPeZLqC51L42SP8gzL010JB4MBdnd3U/9qNIYGEnl+MBig3W7jxo0buHbtWjp8jw7HpaWlJF903R/rrvg00lc+riT9nWPJOjKNjjs3Ui/rHHInuc6/MprYyKBgyXkNohSqHDBih7j3I1Iak5AKFN1lyb2IWk/dBUbr6otuyyIo3k6W614XCj+WFxkd2hZvUw5s6wCTQbnYysGNejp0cucMKgdg0d9lY3Sa8YvKj/4nqWeP6xymhbRuNCx0v3LlQQAFsE5QwOc0ZUrnms4hB8Pe71QOeq/+pmBYFTGjJNq3rIvmbAI4Mbe0bvq/hnW1bxjp2d3dxWAwSAcJjUajdFL32tpampuaysF6HR0dJTCoi2ZprDBlhOlXlUolCVWmN6lcY51p6OgcphDXfqXTgsqOYW49VTji59OA6xmdTBVwsOJKkGPoyjiXe+/ggxGs1dVVnD17FhsbG7h48WKKavCZTqdT4GvVL4yYsWxGzXmv6i5NSSBfqSyhzNd0F6AIIPhepkDc7v6nka8RDI9q5Aw5N761XDfyHGtoKiZwbFhRfvo26rrFNMe/rG767DQRI6/jAJ1jFW1zu91O/be2toZKpYL19fWEdbRsAlle0wiEyvmn0k/V6s01SJoOxMPj6BxqtVpYXFxEr9dLZyLRq6/bs1LGMs1IoxYeJS2rTxlpZJHfrOv29nb63tvbw/7+PlZWVtIaQH7Yzzdu3MCTTz6Jhx56CA8++CAeffRRXLt2DYuLizhz5gxWV1exsbGBtbU1NJvNwiGd1EeOU1knOiUjXqGzgsYa2724uIjV1dUUVdrd3cVwOEyZCioPdU0Xd58aR6eKZFBwu9It85Aq6HEvgj7jzKFKIfrW54DjkJke2R6F1hRYKShSQOVelkkAtQoz9SopaGHZrgwjcO3XFFzq3+pNdqOP79B3UoD4LlQOEqM2KrlBGNU76q9cP5ZdcwVEhUtA6hGCu0064XVPfBoO7HePEkRb3ZJ0lyIde8/VdOCl19Xg4BxwEKyCiHVXUn6iUnc+9lQR9XYyatHv91MOuJ5Oyue4A8fGxkYyMthOTdciaWiexhqAdAI4t8Flu2iA9Pv9FDLm3GX+rEcDfYwjMESvFT+URw6otD8/FSmSMZFjQ40w9bhGeiBKkVG5roahzjH3vOvcYNrCuXPncO7cOWxsbGBjYyONrxoUnJORYnb+UsOBbYzkMOvBVD+d357SwnbxveoFvZ2k8kedEd6nPj4OUlTm6HxSXa2yjPNaHYP6jJbvusPl6VNxat5pYr00VTYi5Q3y2sMPP5zOVKBs+vCHP4ylpaUEfL1c9uN9992H5z73uYVIMVA+d7UuUX/T6B4Oh6jX6xgOjzfIofNHeYmOIV3XyI07SL6jkjqVx0WB6JSOnECKs9TY18hQv9/Hzs5O+p9t5k5SKysrKfLJ+j/xxBN49NFH8fDDD+PKlSvY2trCcDhMaVXr6+s4c+YMGo1GWs+hmQ3anzmKHH78cHdEGmYqd33tiPYTsyxYNqOa4+jURoYKgMir5A2NQGdkYCggV8oZJUoqiMiAy8vLJxbMRM+ogaDRFQo/rXPOINC6EsBxYmrkgvf4RPA+UqOkzPuphp8/r2VzEtNDppNHy4z6KPc736vfZZQzRMruj4wMCh6CTALUaSGvqypgFQy+vsS9gerRU1DBic9nFGwo/3mESg3gyMigAQIc75TBnXAcBHnY1NvtHxWQ3C620+mkRX8cQ0bhKKDr9XrByKBw477vlUqlsFWgto3h6cXFxRRd5FoZB0U01pgbTznCfnXwE8kkVWq6F3rusM9PdSqTJ9G9LqvUs5pz1ug8JKlH0r3mWiY9rDwQa319PeVIr66upnnjcjCKKurc0S2UOUfVuFHZDRwDS0+7dWNEeZ/EOt5uUmNPo5PjshJUdkQGlepYf4ZzmferXGH7Pa3UHYoOvJSmeX6qjKHez93n/HP9+nV0Op1Tv7NSqeClL30pnv3sZ5/Q3REGKjMyfP5S79RqtcSzo9HNNXK6toB8xZ2aOOZcT8v36tzy8datjrW+JHWy+W8audZouO4i1e/3C0YQ30+gzp2lGJHpdru4du0arly5gkuXLmFrawvtdhvATdDOCCkjIeR5lS1lPEBSXueYUQ7u7+9nd1OlEchPNKYaZLit6VLqmdEXqeAjkclVILLBblDo4EeNVuZyj4cCd3YsB7fZbKZB0s7S9AbWle9jh6lnivdQgCm5AaLvUG8Lt9wkiHIL20GhG1w5xavGixpG/oyWT4HNycX+8RQrF1aRMUMFWSagIyPztMR+pNeQHoROp5POT5gWUkOIC791Fxntc/KrgmTdBlXTpYBiqoEameRPHyMddxUKajQomHYPJdO8WBY9owTwjMaQx9WIYPsVhGiEhIvlGF6m8iCw29jYQLPZxPr6eooqkAjUfDtEvm9lZQWj0Sh5gdhWtp/jwjp0u93kCSO41NxfttG9pD5P1LhQA0XzaGd0k3JODZXpKuPLlKoCH5XJkRNGIxnufafsW1hYwMrKCur1Ou69916cPXsWz372s3HhwgWsra2ldBMF2QoA1VGl4EANez04Sw9/1LqTFGRrmwEU5IODBU9Juh1UqVSSzOL73dBw41vnn6YzuxPEn1EZtbCwgHq9nmSZbnftvMF3AcVzHegtdtwwqaPsbpHqN5XdZaR6+1aJOsC3+wZQMF7J60rR/OZY1Ov1tAsf8/9XVlZweHiICxcuJPDe6XQKO5wBx5sz+E5gkVHKZ1T26rxQg4T3ab9GRgbTszUSSR6cm5tL67bOnDmTHBKcL5ubm7h+/To++tGP4sEHH8SDDz6InZ0dHB4epqgHn1tZWUGj0UiOctbRHSYaqeW8og7jM9SxnDPU0b1eD/V6HZXKzS3YmUpMWcUzNKi/OE/UWZdz/CudegtbglsVou7lV+DuAoff6k3n/ZGRoeEZCvHIwFDSqAYBgwozAhMXbFpftRgVzJNyBoZ6tfg+r6cL04jhvb+8fSoYXTH73xpGJWNq3/Mejq17wXPt9T5xPvBnvf050vJVSetCYT/kblrIIxK6RkfTBBT467hHACjy1KsBqP+7kajj4d6NXBSN97jB4vUnkac4NjQeKJAp3DwMToGphi+BPgW8hqdJFHR+erJHY9Szq4t3fc5ojjmVFwERDQaOlfapzpfIW6pt9rH5VCd3WES/lcn46LlxcsbngxPHR8HCyspK2u2F6Que++9zRvUHUNx5MALSfFZ1hTt53LgFioaXvvvp5C/qafaXv9vlRiSXcjIq+l3nIR0zWr6ma7g+ZR1VPvr8Zf31e9rId4Tk97hxfqp8QJ6MUrIV7E76Hh0f3VGNY0sdUqvV0lo5Zix4lIx10jml8ljH2LGpRjccS+k8o9ynLKcTTdN/2Q8si3XnWkIatVxzuLW1hevXr2Nrawu7u7sp1VtP3lYdmMOeqn91nNQpT1JjhIY5+5rtJp7SdRbUfTTOFaMw1e22GxkOWh2s+ARnh6jg0wEkaWjL36kpPuyoSJhFQo670jQajfQODgJPNeQCU2VUGlCcTPxNQZlPOjc0HKDRYGHZzuSceAQsLpw1nBcZH5EnzA0yfSfXB9CjoOFoX6fh7csJOGV+VxqnITX4dILQqGB+fbvdRqfTmao1GVzgzf3mGeplJEAP1WEkQ8HCcDhMh0bSm1CtVlNEoVKpJAGkC0U1t9TnoPOvG9bqDdIylAd1rYFup6c7bHBs1BOlu0cpIGCd6XVhJIFKh3O02+2meco60rN2dHSUdvbg+oy5ubm0oPvMmTPJsACQBCMVFw3UbrebjAumagFIoW73jGm/so80/ExDkbuMMH+4UqmcCEF/qlLkRXYZxr6M5B1pEoDjOoqpNc73HMPFxcWUGnXx4kWcO3cOFy5cwOrqauIHV+RK+pvLaJfLHlnRlAjqBJ3nqksUcBEwaHTT1yHcDqpUbi4opyPBjST1LmvfqlxyJ1akK7T9BF1MhwFO6tTRaFQ4t0QNIIIk7Vd1cvK+aTUy6MmP5PKdIE0D4nuV9yeti0aVCcg9rUrnABdU7+zsoN/vpzV1nC98RvWYO5miNQOqK1lGrj2Kvfw+bRd19draGtbX13H+/Hk0m82U2tVut/HYY4/hsccew8c+9jE8+eST2NraSvVZXV1NUVI6M4gTdB5Hul7bTH2r0TyP3Pd6vdRG6ibqaPZvtVpNGw4ASLo5whfj6NRGhg6qKgL3inISezgr5+VwcKr3uADQtCn+z8HXxbOa5kBviAtnThhNI2GZbBvbw+fcG6IeU62jkyoAFxbsrxzI05AV+0X7aNyYRf2mIF5zf5m6QsUbeZoijxXLjLwtZUChrN7qsVYgSwCv2zpOA9G44AnQGokjH6oxTb5kWylUNF2pWq0WzqTgc9G8iUCN97n+74pXIwpU3AT2msKlYVemK3HxNseGfcB+IH9RwfA9um5hNBphMBikUHmv10thatadhhc9MPyd/UNjaHd3F7VaDWtra4WwM7cPJXijkUpDRo0HzU91ZeYAJTL0KbijLRc/lcn5UuWGg71IzkxC5Gc6TyjjlOfJ47xGxxTXYnDhpp+HwZQB6hp3cing4d90mNHQ1R3W1MOo9dMFmCpDVUZQRvI9OpdutwOGfcR+c2cU73Hj0J1mkUxSry3Hy9+hRoY65NTI8MiwO0Fdf5Om1cjQdCR+a/vvhLHhUTP/LerbqAzKXa27ylHORaa9UlbTEcqdBSOnpxrv1DnEeZoJoM+4Qa74ToG4bpSjxjBwbIRRn+n2s4eHh2i1Wrhx4wYef/xxPPnkk9je3i44xRYWFtIOVFyLwY0egCKmVZlGvcQ2cf0kF6Gzz4mfuNOibgHPLB+Ngqhzw+eh6urcODudelVYBC45WSMPAZ/JUa6yqpDd4+CMSUYiUPOFtgTLPACN12nl0lNAQ0XLVkWhdfI+8fprm91K5rcLXtZVBaNb//pcWf/lgI97EPlhn1IR8xrvjRSJ9pPygU/gsnrmSJWxngxKi5xpOZOG7O4U0WvA3NGcV5J11kgErxHEE0RUq9UCyKaRwhztyIDTsdHfdO6QlPcApDRDCn0CcwXl9NQzXWkwGBTWoWgOqEcDmbqkax8qleN0Je4aNhgM0Gq10v/kn0ajkeazPsN+o+HGQ5329/dT+JrnbSg40dOPVcFopIV9TbkRRVVdDmjomuuxPFfcgfWtAupPNPJ2RnPYZZXeN65vOIZq2OuWpizv6OgogWYqb0154AFaus+9zk93aKmBQf4gwOG8VSODxgV52KPdJOcdzwtnJEPlL+sRLf52kBb9HY2HbhGtjg4FmVGZkU6I6uSGeC6i7iA7Mnp436Tvj/T4NJA6J4GTztk7UWfyca7/dFx0vnoZ6sBxHldnKHldDWx1DCuW0Sgz7+EzivU0XZfEeqhBQqLs0Hs9CsJ3Ui/76dmHh4fodDppsffVq1eTTuM7FhcXCylWfvaO7ohI/la5pmlQTBvWvqCc4XoLbaPer3OPf2vKMA0un4Pj6LZtPeGTXgddGUvv5z0a8sxNIFfGLEOBGdMnOBnIoPV6HcBxjhkZhEqgUqkUhDTrpBMlmmARkM6RKiC9V4Wg5m67EaICl6BMF89Fk1YBk5LXl22lRa5brTLKoQrFPYFedtS2SBiqYaLKnwqauxAx9UZ3EqpWq2g0GlNlYABI9dQ1BxoVUqBC0nAs+YNCgfmoBBZM6fH0HfdEuPEKFMGa3qN8xfrOz988oIdjTV5gXmq/3085pfQacQ7ToKrX6wUjn0JYjSpGKwaDQQqPt9vtZLQw5Yq7SVUqlRNpVfTWqJe6UqmkHeauXLmSPEVnz55Ni+yq1ZsRlY2NjdR/VBLnzp0r3KeGIQW6nsGhEU/uEMI9zqkIWM+FhQU0Go0TEY1JAfQnC7mTIvqNRMAwzlGhspLGMvmACnI4HKJWq2EwGCTPHKNYVPhc+K0Kn8CA465RS/7Nua9OEJ2TbJsaCYxGcDEl5zvnvEcCqa80mhsZGZXKzTMRXvWqV6X/FSTReGbuOD2ovisajSqeBUIdwD4FkOYAdYLruWjcIkeYOte8z3QBsC9A1mwF3fWrDIjndNcn2vxTg/p21p3zSNc/8H1+n4P8WzV+VC8Sg2j7qtVq2hgler8a+EdHR8kRxowAevLVQKF+4rzUiDj1GI2G6CwOlsFd6M6cOYNmswkA6UyMv/7rv8aDDz6IK1euoNVq4fDwMKVlcsH36uoq6vV60jXMXvD6kqhPiDm63W5qvzq4Ir2iuJCygNc08qsGjRu5k9JTMjI4IRUAK1PkmMy9C2XewDIhpdfcC6zC/uDgoOApVtCge/+qhazv4gQrMyii56Lf9X8qPG2LAm7tR1VWGnlQsMhr3mdl/0ceVc9t9Pb6WDgTu/DWevm96m3gpODEUi+fRndoPJ6G0e8UqfeepMCHfafjrl43oLjNJhUr9wfX3XBIzlss10FcxJ+Rc0AVvYKW3C44yvsUgnNzcwmAqCdZ80g5tt1uF91uF5ubm+nEbwIvBVGsO41xzmkqB+8HRjUIyPr9PiqV40gIPU5MhaIBU6vVsL6+nn5Xvta5pztoAUjlaATEU2zYX7VabSr5d1rIDWP9O5KxKtvcMaNePwXBOsfItzRKGGnj/eSv4XCYgItGVDV6RxmgxoHLWF2I6fdrJEMdNuoI0E0W3Mhw/bqyslIwMtgfTCvkLjY0qpj2wT5kPWn8b29vnwB++olS4fSj6bqRkygC+/ocUHQCumeXY5lL8cnpYn33NJH2RxkOivrsqTjhysrVe/y64hgvr6xeioH0veRHbgCiBgX53d+hi5b1d3Xo8X/qZQXnNDIoD2h4q0HDbzoilpeX0zo+Ogg6nQ52dnZw48YNbG1todVqpXSlxcXF5IziWRoE+46JSO5Uq1QqKcODTgDVycrbucijy0x3akcO7IgXcnRqI4MvIqBghehB0PCSMpM2Rsthx0UV9oZF+ZX6HvWCM71mbm4O/X4/WeQa+qlWq+GguMVOJaPv9W9VJJMKKe8f30XCPz7w+ne08DfyAiiYLKsr+yHKp1cQmuMP4GQuqU4eJd2tQcP/msO5trYWnjkwbZEM3eJOvfruDWDf6Jgq6GE/MQ1IoyGagqSGGVAUvK5I9Vv5Ijq0kulSKtAp4BkG1oMB+T6OET36NDZ4jUY/tx7e2trCk08+iVarhSeeeCIt8CsjepQjUkdBt9tN12u1GpaWlrCzs4O1tTUAwPnz57G2tpaiG41GIxkZjJZouhPL5djRABoMBqkfaagw/E15SC83ZYkaJCQF1J8KNKkMcgeHRtd4TYGmf6t3Xp/RVFRGbLkmg1tIVio3PflcG0SwTSODhgUXpXK9GA0PBQkKvjRHXHd78fWB+/v7WFxcTB5YTS3ULbJ1gas7jrTvKGt0QfXR0VGa0zSO9/f3C9FCzgH1jPJdvA/In6itsopj6BSBHuAYH7g+UX1Gr7Mbknxe358Dv9NKrtMniVgQB92u9/v7VH/pOxWXKd87jvNn1QkcyUB62AGkCD/538eUcrVSqaQtcjkn6dTi/RpZd6KxoPVUrMLfGOk4e/Ys1tfX0Ww2MRzePDH78uXL+PjHP44HHngAH//4x9FqtQAgRUsvXLiAjY0N3HvvvSk1kzJHF8Fr3+m2+EdHR9jd3U0Lunk/+UR3qWKfMLquRrnep98RUX5NSqc2MlQxcEJrrrkCf97Pb3pG1VIlQCfgd28LBY8KGIIaXwCkAFY98rxGhUNrUSeKnqiqgtJDhcDJ7QQ9shBZ+pMIMhfMqij4HjW0VPjwul5TwKdKVZ/Vd+Q8FOxbraMDoqiM6Hc36KIP684x4wTxBcJP1VPzdBCBAnlTlTB3kqIX3I0+tkXDo/Tg6zoAXTCquxpFBmpEud/VcNZrJI7LaDRKKRbcSUrrTKCysrKSwB1D1tvb2+h0Orh8+XJhSz/uGPZUF6pG4IX9OBqNsLu7C+CmMUhv1dmzZ1PImp5c8pYDQHVAqEcawInQdNT/FM4M3wPHERB/pmw+Tkq3o4yngxTsR+1WA1evO2BxAyO3+NdT6fgsPfqj0SjxLQ+CJKjh+iMCFVXquj6JqQsa1VD940aGpjRE0VzVP9pvlAeM1vvmF5Fc59/8TUEKjSyCf5ala0jcMFLdSn0yHA5TZoDrzih9SscwGmvX5fqc6lkF35oqpTsQRc4tJTVspmmeACfXgN4p4lpI33jAowdKjlGU95wn9T7+7gaiPjc3N5eAv/OWG7aKL+noUuODzxBw686erBPbre/QecN6U17o7nOdTgetVgtXr17FtWvXcP369cKhwVzszd2odHMJACfkA9tEvUX+ZrSE8sDlG3C8lkQ/ek4a9br2l5cxbv6U0amMjMiL4FYQcBKI6v2+9kK97ap0NbxNg0AZUMtWgOZWH/93sMe6ADcnsR6qQkDnApVt077wSeKeN14vU/Y6kLl+977UPlEjw70dvMa+cyND6x+BdjVuorGN6kiKvFmqZF15aJRLFxxz3NzIiDxmd5tceQPH6UJLS0uFXS/UoFLBCRQVuxoYamjo9sscc9IkBobfo5E5v1cNjPn5+ZS+1W63sbCwkLwolUolCV2C9mq1ina7nbxIW1tbuHTpEnZ3d7G9vZ22KBwMBk/bWHI+t9vtgrBeXFzEmTNnsLGxgQsXLiS+Y5SCu5lQRmg6yzjvrAMl5XtuM8h+VweAPv/JSm4ojGu3ghXtU9dFqkhdVkRGhoIKpg9pDjZwvDUk1w7x0Co1Mhih4w54uuuUtjGSfyoXFczofSyHPHN0dJQMGU/JKov28h5N/+KOPppKQp2iZagX11M21dDTuvNZB41eH41A+rjrt46d6jOP3ju/eF87z7msmya6W/XR3Q1z/RVR1MeO8YCTC9oBnOA7vU6nULVaTQY8wTXLIyk20igI9TL5mFiTG5Bopgvnhe7g5gZrpXIzWsKdoVi/Xq+HnZ2dZGBsbm4WHGjz8/PJMOEZPDR4IkNenY6UR3Qw6Dki6mRRI1wjuWpo+DplxwYcR8fcp6FbWpPhniNN+ch5/vlMBCxVwVYqleRN1FMLabVxIOjJdW8MAQGf19X+9Xo9nQROwKQLVzUPXLfg9N2q3KDixHAh70oxmpg+cXMKVo2rKKzsEQ5OJO1zVVRRVEPJo0JaD9Y1pzi83q5EtUzWh14GTXFQS9stbO2PaSIVENou8iOJ/aGgSHejYlkUlvybgIblcjEaz3bQuehCPmdccs66EgCOI0m6hS3nWrfbTUbC1tZWWivBLfy4aLrX66HX6+Hq1atp8dvHPvaxNM/0/Q44nF/Ui6ZtjAxlzicFezyDhLtXHR0dYWlpCSsrKzh//nwqc2dnJ3muvU56ACDHSyNKlCG7u7sFA1+Nc+4kxPKZpvOpQio/HRArGHcAos4d4FiHeBRD5Z56ENXTTV7ic4xe0KM4NzeXwAW3Vea+/TQydO2Ypk1pdEEjK+RDBeC5NvJ3XZvlRoZ7ViNAqPKXfab6slI5Xm+lqVcaYdPfKIvU0HAHlxpIrIMaeiSdW/yf5Xmdo/7yctTIcL3hOlP7ZtopMh6fbtrc3MTly5dx/vz5go5xIz2qJ4l9relIUTui1C4H87rIH8AJ3cnUKc4JNUD4DtcnajS7zCEfs1xiLN0YpdFo4OLFiykSznOXHn30UTz++OP4q7/6KzzxxBNot9tJl9fr9XSWxsbGRlr/57pX+Zb6yg+41TmlznnOwwjbKekc5biURUVvhf9uKV1KLcQc87v3xIEN76Ew0A5hfqWe/MuO5d/AMQjT9wDFnSb0o0YHw1JcTEuApBayLqZT8JjzHLvBEQlPF7DaV5MMoCqMyEBxRaxGEdvIvnOjJqecnPHGCWb9LfIi+btUEPkuRBq98KhLmTflblHUxoj3lVQBRmOgYVNPmVKPi5fl/UalUPYOrxP/VoOGaV8OwmjgcwEcgQwPTqRBsr29jXa7Xdj72w0gTR+JQFIkh7T/dS7qvGU/0kunRg55DYi3vtTnNaLBMWD9KT/00CNddMdyKMd0Z6OIB9gu55kc/30iUc45od/R9UhuRc4dnzsOgsh36thQoKr8zfVCzAfPGRnka5bPemikwNN/vB2RZ1+fU75WsB/JRZ9HlOe8j/ynPKrbukdzKzcGkbyL2qF9w/qo7vT+GTcfvP80sh/J12iO6TyfVjqNvnuqurHb7aLdbqPZbCYQq+Napn+je3L6Ldff0W8cX57XpJG/SqVyItqgIJrOJn0/+Yy6VN/H/31TBcp5Ruy59ezCwkKSE1tbW7hx4wY2NzfTgmzWX5+hPs3NFdaR6caMrOsmLK47y3SifjhHcvKIz/qYnpZOnS7lDYk84ApYcs/oegqCSYas6EnS04UZHqJxwINH1HKlUmAOHlfu07PaaDTSgj7uGkMvEUEBy2WkhB4jPexLd7Bwz7EKefXaEKjl+vU0pOW6ta+Tgd8ACp4n1t3DlQpAI28ykFc0HvmIDA32jYIyjhVBrIbyIg8Iy+P/ZVb63SD2A+uu0TgViuxnBT8UFnqeCz+6IH5vbw9AcTcj7X8S+TICry5sAKQzOVSQ0tijcc7dM4Cbp4Dqe7mgmeO3u7uLTqeDBx98EI8//jgeeeQRPPHEE9je3i7ssKGHHWm/qHHvnl8Fh6wvf3ejgnWjkjk8PMT29jauX7+Oy5cvY3NzE41GI20vS5DiKZMEk9xViJ4p7szDXYmGw2GKZHAcVldXk/FF+cLFwQCS4cZokW4S8KlAkXLT8VMAqkCwzDAnz/g6H+VvdW6w34FjDx9TpFqtFnZ3d9Hv9xP/8gBK3QWPIEAXhuri0gh0RQCBkWjl9zLjif2kYIb3AicPYq1Wq4VIhjrueO3o6KgwLz2C4c4JbQ+NdtZRdUIEXFgfrSPfm0sDdRnJcvihA1G93ayb8lFkbHyiUxTROi1tbm7i0qVLWFhYwMrKCobDIZaXlwv4hxT1Y65O/pw6iiPy36k3OMbcvIALwbvdbgL26u0nf2lGBMtmdkBu/QvnKI0JRupXV1dx/vz5pBN7vR6uXLmCBx54AA8//DAeeeSRwkYm8/PzuPfee3HhwgWcO3cOjUYjGUxaJ9aTTjrq0larleagH2jLzUrUqcV2E3OzXG27OqO9zfr3025kuAfAPQR+n3pRNVKhoInChiCJ96nX1MGD5t4qWOY9rjCiBS8MiQPHCoiThCCEioOMy/QGCk/1WvK9bK+W50JU+8gnZjSIZddyHhk3ApSB2d+as0cGU09WpAy9fBXw7nn2+rli11xAjVq40Rb1wTQrBY6pRtJocOoBXAqmfY97XSCuYNsjGNyaWa+x7Pn5+VSe96cL9si7AZxcg+XABTjeqrZerydQQsG2vb2Nzc1NPPLII7h06RIuXbqEbreLg4ODwphrxFL7UL/ds6sAUaOKbJuHwLXOw+HNnT9arRauX7+O69evo9FooN1uJ88SQaOmo2j0g+u3OO9pfNEJQsCpBif7iv3JeUODRY2rpyLUx/HmNJAaDFGdIieGOj/8Po3yeZmcCyR3fDngUPDe6/XQ7/fTNstRJEO3rWVkTHPCySd6zXUj66VOmEiOUj85YPNIsfYPf3cHB39n3SinWN/h8OZ5IuRHdRLlxk5lvb7LI6U+H1l3vkejSTrn9flI//C+SqWSjAwa7pRPKlfdYPX+mwZyXZxz8N5OooG9u7uLzc3NwpkvurW34xwdrxx2cSwRffvvTmpUUl/qOyuVStqNjXJB03IjciND+VxTKmlk6GLtubm5tI3sjRs3cPnyZVy9ejWlNwHAyspKSqtaW1tLBoY7UNhuOrPa7TY6nU5a78V7fX0JdZXibbZpOBzij//4j9HtdgvODsUGL3jBC/A3/+bfzPKE1u00BuwtGRkqJL1jFGi7gaEARD0iXB/BRmtqk3vitRwKJAX26pnSHH/P96flybI1bKQLaxVYqEXMMtXbxPqosHOF6MZaNHhRv0fjUfa7Gxm8BhwrbBfubuh5HX3C6xjqQkIHghqVoCGjY+KpUREoLjMspk0xqIeFUYTR6GRuZ6VycgGmCk3yGvtX+ZLP8n81PGhs0MBRgePGoBoX7EfNH4/mOQU65yA9+WwXDyfb2trC5cuX8cgjj+Dq1au4fPlyWqSm3hdd+M42q3HBctWZoGCGvKR1A449Qg5YCR53dnaSkdFsNrG7u5vaoTv3kM8pD7ib1tHR8cJBRjHUe8voJ4BkvOghfJyXmlvPtnEBYY5uheenyciIgKP+Rp7UaypPI0cK54jLV4/yudHM8eK8Ao7Pu2Eu9O7uLtrtdkr94+5Sek4FHVMKYMnXushSdaK2hf3hawhYZ52zKkPYBo/4ad85EOf8Yjm+kw7BeLTbm+r46Dedmxwz3ekp4gMfbzV6FE+wjt4ul180Mjh3KVMVO1APen2mTZ94JOdOGBkAkiNmcXExgVuNUinuUiJOy8kaN+zV2FMeYNmRc4vjzX7QsSeu4DbMPi9z5EaGRsk5f9XIYGSafXFwcIB2u43r16/j0qVLuHLlSsqMAZAO6tvY2MDa2hqazWbBCemYhw4ORjHo3GDddM5XKpV03g/rojJzOBzij/7oj3Dp0qVs+1/5yleWGhnaT/yehAcnNjIi7xEnqYJngioPR3Ow9DmgeHqurpNQATgajZL3kFtm6q4aLmTc68uyO51OYjqCu8FggG63m8LgvV4Pm5ubaLfbaLfb2NraSvewTgQW9JIwXKdpPh4p4IAz1zUy1NSDXAYGXOjqM5ERwzqoN0m366VnTEGptsN5QJWyeoy1HQTLGrVQr7P/7ZGOnBE27USvh26Dyb7S8x3Uo0Yh0Ww2MT8/nwAmDQntb44NBb3yPhUpvU6a5qCGpPKCpzJExivv9zVRnJ/czpbefu4adfnyZTzxxBN47LHHsLm5ic3NzQSCKLQJwDRSEdVFAYvniWs7GBnSk5R1e10+w7A614isr6+nUPRwOCxs/MAxokebWwYyZM1NJThuarizn7hLC8eXfTY3N5fWs+iuPIzmaqrbrRLH7ujoCI1G45bLuZ2UAyGnneM+h2hkuDzTD+fWn/3Zn+F//s//CeCkwlTjRR1j6lCJjFgHqbVaDffee28qU8EZ3xnpUY0qk/h+NVBJXsfIyFAQ5w4c3Xpbt83Wc2M8EqLyWo0R1pkyju9QJ5zKLdXjig9oKCif8HrO2GTfuRFHcMa0GDdOb4X37hQ58NW5k0vvuR1E7LS5uZl2/xsOh1hZWQGAJPc8qgZMviOWguCIvFzXW8CxLNHtaKlblpeXC47jaH4oZlGedofA3NxcMjJ03TCdfI8//jgefvhhPPDAA3j88cdx/fp1jEajtGj+/Pnz6WRvrlmkHtG5wS2weThtq9VKOoI6hFFz3ciCMlDrrKeUj9MhbmRFWSX+9203Mlyx67cLR10IqV5xdhQrq0yjhgGJTMiO15QTFUwq3L08RiP6/X4h+sByaSW2Wq3kqWq328n4YMqUCkhlDK1nmaGggpH38JkIVJeRC96y370OqiC9n8loVGaREFPFzkmrbVEPs/7tKVnRJ/LgOejUPpw20vZSCFCAarocwYXOH/Yfw/w0zlQp+yYFatjRUwcggVkKMo1k+Ef71w1f4GQOuDoJOOeBY6XEBbD0xGhEQPtCgZ0LK+0P/q+/KakcUp7MKRQVypQ3KlsoX5THVZ7QiANwYqz1PTp3aPzR0NQDCtXbS28UveoR2GSbI8opZd01aBrII08uw719ZfIs4mfOKZct+lyr1cLHPvaxp6N5hXo7sNZrUbvLZJv/5mX4nOY9kZGhhhmNYvYRz/Hht+pr71udU5Gjy9uk92n0ReWK1pn1dd0Q8YgalWyjZzJ4Ktu4Pr7b5M7ESE/yt+jvWyXy0mAwSP3abrcBAM1ms6CvojkGIORtl8f8nqTfI6PS+U4dm2wH+UAjxkpuULiRwfbVarUCyKfBTyc1F3wzysmyaazzOZX5ys+j0fF6PTrUmQEBHJ/1RiNHo56+JIAZO6prysidyuoI1/GKDI4yOtXCbwXY7AwdgGr1eGcoDoZbWiyDHjoaFBwoWpuaAgEcL/xmzqvWQ71L7IjRaJRyopeWlpJXU/dAp5FBQLS9vZ1C47TcmUPOcCGB3NzczX3zubc6F6W7UIsGCijmFLLOmh6mAxoBBxU2pyH3FikAjaz4Mi+Fe7T4N9uvzK0GZ2SEemSH5eu307QpAwCFLWV1u2XgGFjrJ1KkjFAASAJed6yhYCMIoAG9sHDz0Duuj6hWqwXvh3oWde7wvR55Ui+TRi9YV1934mlI3W4Xh4eHWF1dTXOH19S7zhQv8qHynRoafC/rxfpoe9QoUEUEnFzwq0BEHRwE5LplJ7dIZHQDODbkGDrXKEalUkmLJTWiOhwOU4idkS7ew/dR7nAMfc3KaYjGDZXe+vr6LZVzu2llZSX1qTuMSD7vc44bTRkgP2skSBdEKo/cKaMrJ8fd8KAOUx7ScafeU0dbWfSC3zljRp0eCvTpQBsOh1haWkp86YviOYc0Qq6Az+et1k8jL+p8cOelykY3aGgYaTqLpqWp4cWIMmWr7mynxsY06hSPZKjuVF2seInj8lRpNBolpwq/2+02hsNhOudhZWWlENVQY1X50p2yyh/82yN0ZaTvcGL5NCqZBRDxP3C8tXXOyOD7KE/W19dTO69du4atrS08+OCDeOihh/DII48UshYo65kyyzrT+cb3s850bu/u7iadQyfW6uoqlpaWUqqVYuxcWpceRFhGXHPC/omMMfaDBg/G0cRGhnsv9ZoCZl3z4LnS9IqwQ/g8gSnBDFMLVFAoCNDG57w0VGAAUnrDcHhzwaee6ssc6729vbT/eafTSZ5NGjXR1mjujaZV6sKO90UAWkGeR3kiQc1vVUSRl0f7guSeYY6dKjn3/EUGCMfaPSo6SXNhx8iIcc95pIy13Xpt2oiGhQIaVcIAEq84oNBoAVA8YZvXCI4UlKi3mhN/cXExGSi6aI/9piDcjWEdZwVx5GP3vLA9+/v7aZEa59na2hqe97znodPpoN1uF84YUHBIUj6IQBPJIxw6X3zRqoIRyhQ6CFTGuJcNOAZDKnc4vlSsFOjA8cnivC8yZKrVKvr9fmEOEPyoLNDdpxRwlgl2l4ssg8B0WqjRaBT40tMux0Wwcn3gfKAODDVGHWQ8XaQeRo/kOq+rvHCHBHAyKqUg3d/pXvoy2erRReB4S0+mFwHHu9lF4F8NbDXsFVS659l1mNfLDU7Vn/xN11/6WszhcHhCz0Q6S985jRRhANWj0X1s5/Oe97y0ayCfV+MrIvbDysrKCQxGRwm3a+V80pRrXWPLurAMnYvR2E86HlpGJL8jXlHnlL/LHU/OH1425f3R0RFarRZu3LiBJ554AlevXsX29vYJBwbrq/JO5bFmCBCr8h3VajU5pGhkcNE48TZTo3SNIHE4HeqTGBnUmTTEvQ2RI3AcnXpNRgQy1MhgqIaNI5OyExXMsNFU/vQuMA2ERMGqubeR8FUGIijiN7ci1O0yVQlz0Q69fnyfrztQAwNAQeDrmpKlpaUC0FBDw8kFnwpE7e+cweH9oRPZJ7RPMlc+Xp4vmGf7ONYq/NUY4TP83Q0Pn9TeLyqkvN4RGJwWIn/RaFBgo4pfjQw1+AhGeb/uVqQgo1Ip5lFrSlqlUkkChkDBPbcOQJz3vE6eHujKiuFdbvXZ7XZTqPYZz3hGMuavXbuGbreLzc3NlMaobQNQkBcacXEF4vOB/Kq/85sCuFq9Gd1pt9uFCIEbguQ9NQ4I5qhIG41G+ujaGzVGOCcYOuf6kG63m+ZErVZLf3vev8+PSQQ7369hd43ATAOtrKyksddIn84HB+KkMgNDZYsaGQAK/ORK/ukizkUFv1Hbyowe3qdgzw0NnZf6HL89ck4qMzIqlQoGg0FhnqtuYXluZFBn5YwEvY9yzvk60lPRfZ4iQiePRnsndWZNK6khMc7I8N8/+7M/O8kgdXiQjyLKyWI9bJJRa12nx8guy9C6sEwdB+oUB/uksvlA/ObZLNpnbmS4zvDosBuySm5YM6X56OgobXDy8MMP48knnzxxurf2q0ZRHedpuxl9o/7nOo7V1dXCgaE0DBiF0CwS/R4OhxMZGcyCyPW9Ri/UGVla7tg7hNRL5kJAgSgnOztBGUENgkrlOPy0uLiY0qWofDgYZHD1EHoDPbzK91DBz8/Po9PpJAHEdmiKBEP3TI2K6qzvA44XrjOH/ujoqLAYSLfoVI+xkgK6yNDIKVw3CDhxXUlHZYxT1DohHagxNSQybNTQ4LWcNynyLGk9vF6fCMTQJHlWw8zku6OjoxROpaKoVo8PglQPHFOYdIcMCgCNDKrBBiCB10qlglqtltL43FmgPKm8rveoYgKKod3h8GbO7s7ODnZ2dpInp9frpR00nvWsZ6Xyr169ina7jStXrqT1T5z3nHc6FykLdPE2+0SNHgXs5FPdtYwy5ujo5uL0q1evpnbqQlHtRypi3cK6Wq1idXUVtVoNq6urWF9fT2kCNCTUGGTfMlLBtV3dbhfATfmxsbGRHDMcX451v99Pcoh71OvJ8RFRbhIQDAaDxFvTQmfPnk3nTHCRvaa8qqwg5eSmAi79Bo5BkhrDNDAYJXo6aW7ueLGoekm1Pdoud0y4t5ftiFKkVGaPczD5M/ydsoUgibvBuTNDSR2GKjPcMcT38TcaJm48RLqKDgSPuhJU6e5uBEIeJdW+8zSzaXVaAUUwrJuo5HSo6wGg6IWm3IzwE+9V4jiRNzSiQT6lY3Z5eRnNZrNw9pW3QY0/8ksEVllPrZs6rbV+brzq2KuBU9bHZRiDuoTRbzrUdnZ28Bd/8Rd46KGH8Gd/9mfY2dkpHM/A93taICMPETaiHmCdmSbFE8bdoFaDgnrMd+zk3C0jziN1qCkeIO9M2mep3LF3/P9pnKCKvA0OHB3EUHBQwZLxFUxpREHJrXsPmal3hkqFHa2CWHeP0RxxD795uz06oxNGjSgOFgGeKxpvQ2QgRF6YqN91fFxQl42Ll8d6an0091W9gyT3tHq9xn28b6O+8d+nUTFEgEAVPSlqI69HRryXq/f6c/pONZAjfo74mt86r6I2Kq+7IOW8oGCmoqIQoyDlXAeOhTFQzPuODFoHoHyXejY1jMwPnRbq/CgTlC5PfD4o6In4WMvPyUIF1rlI8WnAkPPCNBkXpEajkbx1atSpgZvTNfzOyRmSA3LyG43WOxXJoNEbeVf1b/12Z5y2PdKjfk8kF1ym6N/ebwRpaihTX7s8cv3i7XLKybbc2Gr5HhHXlBGNFKku037QvvM5NQlguhvkcs6xgbfZDQv+reNDHe9UpheIZ9iPdAhz501699nvusaU+Ef5ljrBDWmlCCdF/7N9GkWL5oDiLC0j937tR11MzvMrtra2cPXqVVy5cgWbm5vJGUWKMjiop9TIUH3CLBheX1xcTOte6GiiflPjQtPz3bHt2UERsQw16HQe5eb9ODqVkaHeB5KDYN5LTx6/9WA7eq3YqHq9jrW1NZw5cwYHBwe4dOlSytmO0pUipe/ClAaEChCdmOptVKCUA125PlFwxcEkA3ExbqPRKER5NHRZxtgq1CPhrvcpANO/eU9kZLhQV6Z0D5EumKd3wicv3xNZ57moRtT+nDKMBMe00WAwSCFMnsXCHZb0IB0a1epNY//WarV0jfn0+qzzkgoppu/oSffcLk89kATzPibuDVYvP8eC+drkkcXFRZw5cwbz8/N4xjOeke7hLm2aGnXt2jV0Op3CNY3gAEUDXrcLJfX7/RMCTudLxHPsLyrK3d3ddC23HXalUinkFzPtjIeycc3LysoKlpeXU7heoxdsDz3nTKtsNptYXV1Fs9lM9aLXWMeZe7HrfuzjSFPGKDf0UKhpoAsXLmBpaSltCdzv9wEU03IjkO3AUw1LT43i2j7+r5GxwWBQOIn36aL5+Xmsra2diKArr2kKF+tKivSuA2M3uPUdqiuVVP5HRg7rxLx7Nc4JUD0yr/Xw9ztYidqhqWQKulTeEVTxHk0ZYbTS60D8oVEzZjCod3kc2Lyb5EaCy301NoDiWFAOKLnu1AhBWR9ofwE3wfbW1hZ2d3fR6/WwvLyMdruN9fV1NBoNrKysJLzAOvJ9URt53zjjgilAntbDdmlKmBpbXlY0d/y9yl/z8zd3qLp+/ToeffRRPProo/h//+//4dFHH0W32z1hYKyvr2N1dRUbGxtYXV3F6uoqzpw5U9jiXnWsZgAx/YmReM4F6l514kV8wfsmaSefZbob+0vxrcucSemWIxkq3HRSUyBRAVcqlZQbTMVMw4G/MwVnZWUlRRLa7XbBalSPVCQcI2+N119/y3l4cxNMgbR7odTwUaavVI4PWeGkGI1GiXFcqEUeHiCOEvh9XgbBlCvlHDPmBLvnE7sxqaTvcI9LZNzwGS8rMvQiBau8MC2kJ8i7YaVjQ2VNfuH9Koh1swPep+NEz4UCLRo3FIqaQkCBw3d5PaN55PM8Gj96TpaWlrCysoJOp4NWq5XAI08r7XQ62N7eTtd0/YmSzjEFANF852/89jnNe1SQ03ir1+sFTx/JnSicu+wzGkU0DNj/CqaAY0NODUkaZTwhnIvyONaUM1Q2BE5qOIwjjonymKeO3G1qNps4PDxEo9EoKHAAhTmhY+zetEhWs72ch2pkaERb59TTSTqWDn5Vnzk40TqXyUydtySfFwo2+R3pjcgYYR2q1WoyUn3Ouk70ueTzgt9qRKqc5N8q13L/+xlM2h+aDRGtY9F56X0zreT6VK/nPpMAzHH4SUkjEJRdw+EwpXaq7KHjdTQaFbIgfC57XaK/ta38dsPdDVi+K8IKuX7U39WZxjYdHByg1Wphc3Mz7aJ4cHBQOCOOztmzZ88mh9L58+fRbDaxvr6eohJ0FOpaCsp7jVqoUeHOW75X+cB19rj1GHyW7SV+zMni08yRW1qTwRdFoJMMpQtb6TngiYXMheWzPAlXc7d3dnaSJ5D5flQQCvYVjESCLuqMKPUgAvUuhPm/vsuNFV3ESs/PcDhM6zXUG+QCQOvkHiJNy4rqyvq6otD79DkNL7tXyLcDVGNDBbnzhPKFp5HkBN04geJgU6+7Mp0G4loLTRdSI4P9oVspUgCqsCH/0APHRXIcJx0T/b/RaBQiGArg6JWnAo68jAoqKKQ95AucDFMTOK+vr6Pb7aLVauHxxx/HjRs38LGPfSwdesctbJX/PfrgfO686+CEpNEPX8PiQIbt4LoVl2PkLVVi5H01/DqdDqrVamG7ZpcFCmgZqWo0GknJUD5yxyn1XvEeX4eRAwPaJ+rZ5JhOC62trWE4vHmwV6PRQL/fL2zvSCJ/6viUgW6ONftfeftuGBnV6vHe+pGRwfrqPGR7h8PjdVz8X50CQNGz7DpNedGBp84DlQlupLN+amSoMez9r+TGvrZT72FdVU+4g8vlXGR8qG7iWOsZOHoOjkdPtQ7TTOqEAuK5oPNco0PeNpVtuTVAThrxUB5mWh1lb6VyvEsSU2N9MyCPviimUIwRGSE6T3jNMQnnT5ShogaK951iJne4Er9ev349pUlRp+lBfRcvXkSj0cD58+dT1OLs2bNoNBo4d+5cOjdDjWQ623mNckNlfxSt0sXYTmzDJA5Ztp8OEU09Yxk+HpMYpRMbGdoQz30EjsPR/X4/DRQZUUPUvhMTva8rKysphL6wsICdnR1sbm5ibW0N7XYbV69eTfl/vnWnCkb1ymrn+Uc73SMFCnKc8dW44STjZCJpvbS9nJD8WxnEBQWVgIepVLj7IPtvWh6AgsLyqAWZ3NMP9MM6aTvZF57OpX2oBoeDSG9D9L9ezxmG00K69aPnOCpYjoxJ4Ph0ZqYS6V7aDKcyQkEASoHF3E0uEKOXmB57Cnf1oirQcl7TsVTl7sY3gdtoNEp7p589eza9l9vX7u7uFiIyFKBRGpDPVyWdk8pPZcaTz2OdW6yLgxg6BPh+3dBCjUCeqcOUDr5HF81yt6+1tbXkxaIi1nUp9GbpvupRasGkRB6k8poWWltbw2g0wpkzZ9BqtVL02pWbAwr9AMXouRp36vVzxaxG89NNdCioB9fBO/UR267zU4k8rOm5vsOUy0jWgX2mfeIpXNRjnh4BFNdLsR18LtK5ESl4VANFo4msn563RXmnOiinq9XJwPODOD+ZmqneWb532vTIOPJ0KZXHHjnKkY6XAn9PXY1AuspbTfdTHMb+5jllTLkeDo/PLdEdlBwX5Opf9nvOSVuWnhWVq3OETuHDw0N0u920FoNHHZw/fx7r6+v4zM/8zJSqvLGxgXq9njb1WFxcTDKdWwPr+JG3NX1KjWjWS8facZ23W58pM0T0Xq5VBE6uo7nVOTKxkaH5xR7BAIrhaPWyRLs2UXkDx8CpVqulPHIAScgMh8N02B13ZPGtDxXs5hhQBToFkisZDqAaUBGoVUXBPuG3/u2CWp/ne1RI66TQv8u8lk7jBL0ra1W40d/uxVZFmVNouU+ZAHFjKSJ937QqBfK8Rt1YZxUWkYdR+Uq9rRoVcTDMuUODQ6MXmt/JcVQAp4rJ+ZYChvXV93PecN5x3jPaQk89DR+W6ykh2hbnq4hP3FOlfMW55IaHtpd1Vl50I1v7Svld68u8XAIaekbZL3yfjh8VDcPo5AVN22B9dHw9cjiOch67Sddz3ClaXl5OwIOfpaUlHB0dhbs+5eSIGs0kejCVF/iczsU7IUPY/+SnKIquBo8qdJ0vLjP03pwu4nP8VhCvTiWWPTc3lww0lqHlsV5qIKmDbhIedUeY6wiP1qqDK3I6uHxQx18UvfAUqcjBNa26RSnSraSyNozDSFo278+Vp/qL/U5e5G6A6lAFjudmlL45ru8nGZfIiD3tePpcYZm6tpjtm5+fx5kzZ1CtVrGyspI+a2trKbKvaxeZBkXS+aiGhToEVK+43PKx1/v9nnvuuQebm5thm+nwyWE2n2en6dOJjQx6nnS3CRX2Kux0slNp0Mhgoxla4pZn9H6ura3hnnvuQafTwe7uLi5cuIBWq4WNjY10kjC3yOTBXmXWtjKLdxiZRDs0uk/LIsPR40zAobtUaX2i/qC1GDEV66sUGQa5yeNKzBlSdyRwYKXfCmI9J5zle/jMGVP7zPs4R66AdazG3TsNxDnCRaW6OHt5eTkpORrjvtZFt0zVw448hUYX49fr9bRtYKPRSJENz+d3EMzx82gg2+FGhkYeAKQUyH6/nzZqoBdyY2MDz3zmM1GpVHD58uW07XG/30+efXoqWT/2jadsRNecpzRKpwKaUSDNL61UKunU1PX1dWxsbGBjYyNtR8tF3Ko8j46OsLy8jNFohJWVlaRsjo6OUvtHo1HaGYRgjH3MLW9XV1eTg4XAB7ipbBiBqtfrabOI2wF4OCbTRM1mE6PRCBsbG+h0OhiNRuh0OsnD6elMCkAdlKtxqfcwhU2jsXyGvPd0k85x1R/AMTAn72q0WyMzLAc4li80WKIUp6gOHrVWJwTrwQgAU4xYvsp3N+pYf42STiqT3StL44KOCso739HQU5xYd9aL6YfdbrewsQDnq+otlYmfLFQW+dR2niaVqIy0TzWLg9HJhYUFHBwcoNPpYGFhAa1WK3n06RRTPBhhhFw0QknTjCfpixyRn7nWgcbFcDhMC9wXFxfTGotms4larYZz586lTTqo13STgsi443XKJsWruTZqn0SO8ujZxcVF/PzP//yJzT80o6Fsa3TFJzkjP0cTGxm6KNuFXwQ4VTkr4ykw4CAQOFHJ6v/Aze0OuQczBXa73cbBwUESbgwbA/GCwQh0RyFXB8dqqKig1/bq/+rxccCmwllPEKaC5HdUZwdPkXUZWZjePo9QqNJ2Q8A9utpWfZ/XU+vmRkbOI6JtiMYquk+vTRORH2lIsE+42J8gAjj26FMYMgVHU5A4bmoURt+5tTNRzrb2sXtD3Ij1MeGcIwhnypB6qebn57G+vo6DgwM861nPSkbE9evXT+x0xB1h3GuqRrqG4lkP9peCUX024j3OMaZobmxs4MyZM1hfX0/KguCLO+DxWQJg7gymntHBYJA8wQpyWQ/NR2a92RYCP10M7pFip9xvufkwbSBKc5C5JqNer+Pw8BBLS0uhvnD5R1L5qqCR9+vcUB6YZDHkUyUFDZwvwMlTkFX2s00KmFyeKqnc1DkUOaei9Q2czy7rPW3K5yfbUVaPqD9yjigfY9fLCmS9f7VfdEc+/s20U09Dm7Z5EVFOb57mPsdDEeDVcvS5CLQ6n7m+UbzAyIamljMSoGs4aPxrxN/ng9fb8YfKeW9r1L6ItO7AcXaC1pUHsHKHwFqthvX19ZS+TB1MIz5n7LDfIszpfaB1y+GpMifu+vp66kttWy592vtMZdVpcNfEUvbs2bNpX+RoW1nPHwVQqDw/7AAOAL12tAip+PmuRqOBdruNWq2Gra0trKysYGlpCTs7OylHDkACLjSCNM2EqR+RF1SBNjsz+l0jHq4AI8Ct/eH9Q+8QARnDiRq+duAfGQQsW0n/13a4Ry9aa6H3Kvj1lA31nkV95hNAFYjXNTIccoLPldg4hXY3iPzBMR2NRicOxuEiX40OzM/PJ28JlaN6uQkM9PBKftQrqSkG7DNdAJvrW1f8rjQi7yENh729vbRblBo+58+fR61WQ7/fT555RjW73W7iaz1EyOdYTvipUeKeVQdn9PqS5ubmsLKygrNnz+Kee+7BPffcg4sXL2J9fT2NEVN3OCY0TEajUYpocDvM4XCY2sMF3VyEzzYyfYz11hQpGhbczla34bydNE2Ail5qphYcHh4mJdjtdk94nNmPHpFQHtBx5nzT9Up6Xgt/e7qpUjneVlllVW58aXxHzgAt0+V/FI3kPeowoqxRuaGpe4zMUzfpRiZqcKgh7/PLjfyoT9SIcLnjxgXL0PGmYcR6c/5TfnI3S0YZeS3azW7aaZzDYZL7FPg7aFUg7qA86ivKL6AY9fBUHpVz3NSiWq2mbd4HgwFWVlawt7eXdAn1mJbL+qshzHc776mBHBkYUT1z/ch30olE/qlWq4U0KEZhdO2jvivCPny/tyeXxeLzP9eGHM7S8SX+PO084HvLjJGIJjYyzp8/nyYuJ63voa2VjgwPFS4UdJruQSOjXq9jOBym/f1XV1exsLCAM2fOYG1tDY1GA9vb25ibm0Or1UK9Xker1UK/308RDs2H1/CyDo57TLyuVBAEQnzO0zoU1PAay3MwzPs0h13rxWddiLtgZtn+DvfS5IyLKIKh7XYFoO9RpaOWeKQ4/NmyyV32m75b+9/Xvdxt4thxXlBYAUiKWw0m9d6xfeoh5xhFKWyeSuBeRfbN3t5eAajpWLPOlUolAWwdO63TYDAojP9gMECr1UonnxKccI0IjYfnPe95KfTcarUAIG3goNtZKy95JEN53Y3viEfJa6y7AxTuXX7hwgWcOXMGKysrhZQMN4xHo1FBZh0eHmJ+fj6dVs6F3/v7+yka22w2Uxl0IGh7eE1T3XzOfbISZSvX4h0dHWF9fR3D4RCtVisZ2QQWDj6Bk9GAavV4K2VNJ2T/UoZzXo07Of12tVMjKEC8C5ReJ88qmCPxmjvvcu+mbFHZkUuDZT/To6xpa/w7kr8OYCPHD68piIqMDN7L8tXo8vlIMKmOCaYvcg0nF30TEyj4dDmodZ0mOq0sGKdny37PAdcyZ57yWUSaAsj76QQj/3GjFI3+a0ThTsnDSPZqCiH5jc4k1XNsv+KwaG5GzjzgZN+7rMv1gep9lTNa7p3sQ6eJjQx6IgnaGfJyD0ZOmKpXIjI2qAQoBKnUKfD29/cTs9MLvLW1BeA4PDocDtOOLny/WqQKMvT3cR4X9bIquYBk+13gOil44nu0/7y+Xh/3FkQCPdffkRHg7fJno/d5FCF6JtevEcNHkyP3TlVA02ZkeF/lIj56zUGyGrDR+OVS3Zy0LFXikWdEAXvEY6ooyKN6uCZBIZ/VdT/c1vbMmTNoNpvY3d1NqUVaPzoDVKlp/6kXVYFF5Llhu9wJwPYzJVPPaXCl5vzLvvd0NA2nUwkx/cn7U9uj8k89eN4O56symnbARCI/MqLAiINu6ziJTFFHjM4NNcqpVxi5UAfJnSDlK9UTWne2JWcwa3vVuIjGN5Ktqm9VbniqkdaLvKzrmoCintcUFnd+KeXqGXnXtZ2MCKtuzLVTF3wTE6hxERlkEQC7W2DsdlCu78vaNO43xSRl9+TmpspJ5R2OTe7skttBk4DrMhwYOTcpW+gg18izR9VzmEZ5352DOhf171yEQu/JtTmHRZ8qTVJmZTStWmhGM5rRjGY0oxnNaEYzmtEnJE3PnoYzmtGMZjSjGc1oRjOa0Yw+KWhmZMxoRjOa0YxmNKMZzWhGM7qtNDMyZjSjGc1oRjOa0YxmNKMZ3VaaGRkzmtGMZjSjGc1oRjOa0YxuK82MjBnNaEYzmtGMZjSjGc1oRreVZkbGjGY0oxnNaEYzmtGMZjSj20ozI2NGM5rRjGY0oxnNaEYzmtFtpZmRMaMZzWhGM5rRjGY0oxnN6LbSzMiY0YxmNKMZzWhGM5rRjGZ0W2lmZMxoRjOa0YxmNKMZzWhGM7qtNDMyZjSjGc1oRjOa0YxmNKMZ3VaaGRkzmtGMZjSjGc1oRjOa0YxuK82MjIDe/va3o1Kp4E/+5E/C37/sy74ML3rRi+5wrWY0o+mmn/7pn0alUsEXf/EX3+2qzGhGn1BEnRN9vv/7v/9uV29GM7orNNMpn/g0f7crMKMZzeiTg+6//34897nPxR//8R/joYcewmd8xmfc7SrNaEafUPTDP/zDeN7znle4NnNozehTlWY65ROfZpGMGc1oRk+ZHnnkEfzhH/4h3vzmN+P8+fO4//7770o9Dg8Psb+/f1fePaMZPVX6mq/5GrzmNa8pfF784hffkXd3u9078p4ZzWgSmumUTw6aGRm3gd72trfhK77iK3DhwgUsLS3hhS98Id7ylrecuO+5z30uXvnKV+L9738/XvziF6NWq+GFL3wh3v3udxfuY+j8gx/8IN74xjfi7NmzWF1dxete9zpsb2+n+779278d586dw8HBwYl3fdVXfRVe8IIX3P7GzmhGAd1///04c+YMXvGKV+Abv/EbTyiEj3/846hUKvj3//7f461vfSue//znY2lpCV/4hV+ID33oQyfK+5Vf+RW88IUvRK1Ww4te9CK85z3vwXd8x3fguc99bljmT/zET6Qy//iP/xiNRgNvetObTpT7xBNPYG5uDj/6oz962/tgRjN6Ouk3f/M38ff+3t9Do9HAysoKXvGKV+CjH/1o4Z4///M/x3d8x3fg0z/901Gr1fCMZzwD//gf/2Nsbm4W7vuhH/ohVCoV/OVf/iW+9Vu/FWfOnMFLXvKSO9mcGc2olGY65ZODZulSJdRqtXDjxo0T1x3Uv+Utb8HnfM7n4FWvehXm5+fx67/+6/ie7/keDIdD/NN/+k8L9z744IO477778F3f9V349m//drztbW/DN33TN+G3fuu38Pf//t8v3Pu93/u9WF9fxw/90A/hgQcewFve8hY8+uij+L3f+z1UKhW89rWvxS/8wi/gt3/7t/HKV74yPXflyhX87u/+Ln7wB3/wNvbGjGaUp/vvvx/f8A3fgMXFRbz61a/GW97yFnzoQx/CF37hFxbue8c73oF2u403vvGNqFQq+LEf+zF8wzd8Ax5++GEsLCwAAN73vvfhvvvuw+d+7ufiR3/0R7G9vY3v/M7vxDOf+czw3W9729swGAzwhje8AUtLS3j2s5+Nr//6r8cv//Iv481vfjPm5ubSve985zsxGo3wbd/2bU9fZ8xoRrdIkc45d+4cfvEXfxHf/u3fjpe//OX4d//u36HX6+Etb3kLXvKSl+BP//RPE1D6wAc+gIcffhivf/3r8YxnPAMf/ehH8da3vhUf/ehH8Ud/9EeoVCqFsr/pm74Jn/mZn4kf+ZEfwWg0ulPNnNGMxtJMp3yS0GhGJ+htb3vbCEDp53M+53PS/b1e70QZL3/5y0ef/umfXrj2nOc8ZwRg9N//+39P11qt1uiee+4Zff7nf/6J93/BF3zBaH9/P13/sR/7sRGA0Xvf+97RaDQaHR0djZ71rGeN7rvvvsJ73vzmN48qlcro4YcffmodMaMZTUB/8id/MgIw+sAHPjAajUaj4XA4etaznjV605velO555JFHRgBGZ8+eHW1tbaXr733ve0cARr/+67+ern3u537u6FnPetao3W6na7/3e783AjB6znOec6LM1dXV0bVr1wp1+u3f/u0RgNFv/uZvFq5/3ud93uilL33pbWj1jGZ0+6hM57Tb7dH6+vron/yTf1J45sqVK6O1tbXC9UgXvfOd7xwBGH3wgx9M137wB39wBGD06le/+ulr1IxmdIs00ymfPDRLlyqhn/qpn8IHPvCBE5/P+7zPK9y3vLyc/qYn6qUvfSkefvhhtFqtwr333nsvvv7rvz79zzSoP/3TP8WVK1cK977hDW9IljgAfPd3fzfm5+fxG7/xGwCAarWKb/u2b8Ov/dqvod1up/vuv/9+/N2/+3dPLCCc0YyeDrr//vtx8eJFfPmXfzkAoFKp4L777sO73vUuHB0dFe697777cObMmfT/3/t7fw8A8PDDDwMALl26hI985CN43eteh2azme576Utfis/93M8N3/+P/tE/wvnz5wvXXvayl+Hee+8thNj/4i/+An/+53+O17zmNU+htTOa0dNHOZ2zs7ODV7/61bhx40b6zM3N4Yu/+Ivxv/7X/0rPqy4aDAa4ceMGvuRLvgQA8OEPf/jE+77ru77r6W/UjGZ0SprplE8emhkZJfRFX/RFeNnLXnbiowwNAH/wB3+Al73sZWg0GlhfX8f58+fxr//1vwaAE0bGZ3zGZ5wIWX/WZ30WgJv5gEqf+ZmfWfi/2WzinnvuKdz3ute9Dv1+H+95z3sAAA888AD+7//9v3jta197y+2e0YwmpaOjI7zrXe/Cl3/5l+ORRx7BQw89hIceeghf/MVfjKtXr+J3fud3Cvc/+9nPLvzPucS1Ro8++igAhLuI5HYWiYxpGuC/+qu/il6vB+Cm4qrVavimb/qmU7ZyRjO6MxTpnAcffBAA8BVf8RU4f/584fP+978f165dS89vbW3hTW96Ey5evIjl5WWcP38+zQ/XRUA8d2Y0o7tJM53yyUWzNRlPkT72sY/hK7/yK/HZn/3ZePOb34xP+7RPw+LiIn7jN34D/+E//AcMh8On9f0vfOEL8QVf8AX4pV/6Jbzuda/DL/3SL2FxcRHf/M3f/LS+d0YzAoDf/d3fxeXLl/Gud70L73rXu078fv/99+Orvuqr0v+ay6o0egr54Oq9VXrd616HH//xH8ev/uqv4tWvfjXe8Y534JWvfCXW1tZu+V0zmtGdJuqQX/zFX8QznvGME7/Pzx+r8W/+5m/GH/7hH+Jf/It/gRe/+MVoNpsYDof46q/+6lAX5ebOjGZ0t2imUz65aGZkPEX69V//dezt7eHXfu3XCha1hrCVHnroIYxGo0I046//+q8BoLDLAXBzkTjDhQDQ6XRw+fJlfO3Xfm3hvte97nX4Z//sn+Hy5ct4xzvegVe84hUnoi0zmtHTQffffz8uXLiAn/qpnzrx27vf/W685z3vwc/8zM9MXN5znvMcADfniVN0rYxe9KIX4fM///Nx//3341nPehYee+wx/Kf/9J9OVcaMZnS36fnPfz4A4MKFC3jZy16WvW97exu/8zu/g3/zb/4NfuAHfiBdZyRkRjP6RKCZTvnkolm61FMkWtFqNbdaLbztbW8L77906VJKbQKA3d1d/MIv/AJe/OIXn/BSvfWtby3sZPWWt7wFh4eH+Jqv+ZrCfa9+9atRqVTwpje9CQ8//PAsP3BGd4T6/T7e/e5345WvfCW+8Ru/8cTne7/3e9Fut/Frv/ZrE5d577334kUvehF+4Rd+AZ1OJ13//d//fXzkIx85dR1f+9rX4v3vfz9+4id+AmfPnj0xd2Y0o2mnl7/85VhdXcWP/MiPhNuVX79+HUCsiwDgJ37iJ572Os5oRreDZjrlk49mkYynSF/1VV+FxcVFfN3XfR3e+MY3otPp4Gd/9mdx4cIFXL58+cT9n/VZn4Xv/M7vxIc+9CFcvHgRP//zP4+rV6+GRsn+/j6+8iu/Et/8zd+MBx54AD/90z+Nl7zkJXjVq15VuO/8+fP46q/+avzKr/wK1tfX8YpXvOJpa++MZkTihgPOj6Qv+ZIvSYcoffEXf/HE5f7Ij/wI/sE/+Af40i/9Urz+9a/H9vY2fvInfxIvetGLCkpiEvrWb/1W/Mt/+S/xnve8B9/93d9d2EhhRjP6RKDV1VW85S1vwWtf+1r8rb/1t/At3/ItOH/+PB577DG8733vw5d+6ZfiJ3/yJ7G6uor/7//7//BjP/ZjODg4wDOf+Uy8//3vxyOPPHK3mzCjGU1EM53yyUezSMZTpBe84AX4b//tv6FSqeD7vu/78DM/8zN4wxveEB7aAtxczP3Lv/zL+I3f+A18//d/Pw4ODvDLv/zLePnLX37i3p/8yZ/E3/gbfwM/8AM/gLe//e149atfjfe+970nFo4DN1OmgJs5uUtLS7e3kTOaUUBc9Obnu5Cq1Spe8YpX4Ld+67dOHAZWRl/3dV+Hd77zndjf38f3f//3493vfjfe/va34wUveAFqtdqp6njx4sWUvzvbDGFGn6j0rd/6rfid3/kdPPOZz8SP//iP401vehPe9a534cUvfjFe//rXp/ve8Y534OUvfzl+6qd+Cv/qX/0rLCws4Dd/8zfvYs1nNKPJaaZTPvmoMnoqq2NmdCp67nOfixe96EX4H//jf5Te9/a3vx2vf/3r8aEPfQh/+2//7YnKfu9734t/+A//IT74wQ+mLdxmNKNPJnrxi1+M8+fP4wMf+MCpnvv6r/96fOQjHzl1/u2MZjSjGc3ok5dmOuXpp1kk45OEfvZnfxaf/umfjpe85CV3uyozmtFTooODAxweHhau/d7v/R7+7M/+DF/2ZV92qrIuX76M973vfTOP04xmNKMZfYrSTKfcPZqtyfgEp3e961348z//c7zvfe/Df/yP/zFMpZrRjD6R6Mknn8TLXvYyvOY1r8G9996Lv/qrv8LP/MzP4BnPeMbEh4c98sgj+IM/+AP83M/9HBYWFvDGN77xaa71jGY0oxnNaBppplPuHs2MjE9wevWrX41ms4nv/M7vxPd8z/fc7erMaEZPmc6cOYMv+IIvwM/93M/h+vXraDQaeMUrXoF/+2//Lc6ePTtRGb//+7+P17/+9Xj2s5+N//Jf/kt4vsCMZjSjGc3ok59mOuXu0WxNxoxmNKMZzWhGM5rRjGY0o9tKszUZM5rRjGY0oxnNaEYzmtGMbivNjIwZzWhGM5rRjGY0oxnNaEa3lWZGxoxmNKMZzWhGM5rRjGY0o9tKEy/8fuCBBzAajTAcDgEAlUoFlUoFXNIxHA7T37rD0Wg0Ss8dHR2lv3UpSNnf/ET/a3mslxLrwfexDrxf66Ll6vO+W5Pey3dqu6PdnfR3vu/w8HCi9/O7Wq2mT61Ww/z8PJaXl7GwsID5+fnCu/l3tVpFpVLB/Px8etb7Ut8f9SHL4POVSgVzc3OYm5tLJ12ORiPs7u5iMBig1Wql7eJqtRoWFxexsrKCpaUlLC0tJZ45PDxM48By2T/D4RB7e3s4OjrCwcEBjo6OcHR0VOhL1nt/fx+Hh4f4lm/5lhN1vxv0n//zf059s7CwgGq1ivn542nGtvT7fRwcHGAwGGB/fx8HBwcAbo7d4uIilpaWsLi4iGaziYWFBdTrdczNzRXGkuPC63yv3sd7WDaAAg/wuvKt8lE097wcfY68oXWam5tL9eD4ctz4If+xLsrDTizj8PAw9SfLGwwGaY6Td8iPvI/Psh0cp8XFxdRGHafBYIBut4udnR30+31sbW2h3++j2+0mPgWQ+n9xcRHz8/OYn59PMof1Ozo6Su9qNptoNBpYX18/cT/7ZDQaFeYH5w7v6ff72N/fx87ODvb29tDv9wHcnLeNRgMLCwuo1Wppvow7o+dO0Yc//GEAxfnMedDv91Mb2X72z/z8fGFekf95jd/aZxHldIrLTpW7+ruWHc0nfY+2rd1uY39/H91uN40J5+zS0lJqD4m8zrkRzVmV36rb9vf3E/9zPq6urmJhYQHLy8vpub29vfQc585gMMDh4SH29/dDna3z+OjoCHt7e+m3ubk5jEajJNt6vV6SG6urq4nn19fXUa/X0Wg0kpzQMvxd1BmqO9iGw8NDHBwcYH9/H1euXMHW1hY+8pGPYHNzEzdu3MA999yDc+fO4SUveQkuXryIT/u0T0OlUsHR0RE2NzfR6/XQarXQ6/VwcHCAN7zhDRNy8tNPr3vd6woyk3qacoS6Znl5GfPz81haWirMF5KPsfISeZyyGjjJV5SJiuVGoxHm5ubSfOQ4Kvbweajv4r18n48t60dy3KLXT0sR5lIq04vaDtdVnKf+Ydv29vbS3BoMBjg4OEh8t7e3h+XlZSwtLeHMmTNYXFxEvV5PMoL1Vt6vVCrodDr4+Mc/XsBRfCc/7OvFxUXcc889uPfee8P2+XiSj3S8tO3f+I3fWNrPExsZZCqtTNSh7ASSD2IOUJ+G+E6CFg5wVD8A6T4nZ1i9x5VJNBh8Z669/pwyBp9lW9xg4d9qKPEaARIBS4752Td6zduvdXUm1jpEIPDo6KjAuABweHiYJhF/037mO3J9O87wUlKgOS3UarUwPz+PWq2GpaUlLCwsFMaRwFdBNvuak3hpaSk9T4PSAbsCISDmVzVCfE64ko76OQeitD05Ur4l3/n7ormn/MZn3FmgIJv9qN9UhApKVEFqXytonZubKyhhKsmFhQUsLS0lYLa0tJSUBcczatfBwUEBAPF/CnA1aLSvtZ+8D1SxsG4A0qm13AtegYOOx7SQt095gDKC32pkqAHtSk/nhssW/1u/I4rudx3h7Yie5fhy/MlbOnd9XkdlT1J3BTp8hxqprAv5nNcXFhbS/FA5zz6NHAvVahVHR0cJRJY57fT3wWCQ9IU6y1Q35cZFZZrKCX8XDevV1dXU33Rw7e7uol6vo91uJwdOs9lEpVJJDojIsXE3iWOjGIxjE82DiCLQq7ysRqzypsp8fW5/fz89Gxn0qp+ieej6ie9w48HrEP1+K+TtUvK28NokZUbyBjjuX3Wc8Jm5ubmEYSi/XT+Pa8Ply5fxX//rf524b77iK74C9957b6FtER5j+cov7hgeRxMbGXqQiXom3bgY1yH+fw6wlIEfVU7AyaiK36fWt1rl7LicYFTgTeJ7tM6RseFtiyZ51EZtS26wORY0JBTse32pWMjE73znO/Hxj3+80D8RRXXy/1UYHR0d4bnPfS7uu+8+VCqV5JmPAK73p35H7R03cSID8m6RevJVuZPP6FU/ODgoAFn1QNGTsbi4mLxTkYdW/1cjhH2u8xTAiTkSKWn/zflcqWyuEzir8Q8U56J+dC5rHViezl/10Hp/agTA57MKdgJXRh7YVxpFcPBUq9UwGo1Qq9VwdHSExcXF9F41dFUoqxebzgEdN/aJK3Wvs46V3rewsIBKpZKAmjpUlpaWkpf/dinn20VqVLJubC8dFsBJr5qCq1yUFThpJLjM8ggF74uAmPOfRt7YBr7Lo06U1/xQ72g9PToZATuto7ZL+ZTEcnhN+Yv8zWsa/aQRzPp5O1gnjh+dRvzmXNby2T7+1u12k/HPZxm5jQCpz1/XE+6cq1QqKXJ37733otlsYnV1Nb1va2srOXIYBWg0GgCQjAzXoXebWC+VMZEO8P5zQ2IS7MFv72teU53F6+7ljnSg1knnoNaZ4FW/dQ7qZxJwm6Nc+yd9lu0ue95xjcoZf4YGuzoIygyMnL6+FYr4JuIhd8CfhiY2MhwE5Cwe/ebf3uF6n1pF/lwu+pB7V87QcKWfUyJlFLU1AgY5Q8frou+P3jPOaAIQCsOckQHcHMM/+qM/SqkKt5u+6Iu+CN/2bd9WeLfzSSTUyqhMEEZ9dLfJvUoqjKiAqWTZPwQZtVothb2pADX1xgWCe3FzAAw4yVcOZpxckEfzPXrW55reo9fV4Nd7vZ58RvuNRoamIBEguVLVurtiViPDlQDnESMOvO/o6CilJ2hfa5TP+0ENqchQUwDh/O1eRVeyVPaLi4sFZc06q6KfJmM8AtJsr/arRi08TB9FRSOPeDT2Pk+0LuoxVn7V9Dvn7wg48XkF3urJ1HmsdS8DLg4GeH80NxmF0D5RflRnhM/FcY5E1d3kXe8bB8Gj0XEKF3Az+latVtFsNgEggdVIrntdIsOH91GGMt1kaWkJnU4Hh4eH6Ha7qNVqaLVauHDhQkpFWVxcTDJ32nRKLp00MjCccvgj+l8BsfIoyR1cXgedn+70VL0TfXiPjrPX2x0ltwKsx41tDueNw5vatjIZpP0DHONqGuXUb457JjFongo5TlCK5txpdMnERsakEy83+Z08VKf3Rx4iH9AcAI8MigjQRNELJVcYLqi9fWXt1v/dqCm7V+uiv2lO5dzcHPb391PoOZdT6crz6SAKeAJt9WZz/Cgoo/ZFf+eiRNNKzWYT1Wo19UOlUkkAmR5tNRJVuVHhcSx1XUcUwXDQpYZHZGAoqXDXPtZrkeIqGwvlMYIPB0Dq7YwMLqCYVuV9x789ahHVW+e3An32E/uXY6WKgm1Qz5yCo4ODg/SsAiqdf25gaEqCyxVth46jKmn2iyph9fJ7VEhJ0/KmhRTcaF+T93WtRQSmlL+9P3M8r+8FjseIyp3pnpynmpqnf+tYcLyi+uqcUJCo0YucIRmBP5+TLlcdBPEZ1oFzZjAYpN89SsSP6yk3vLTvFhYWcHh4WPBwUz9VKpW0XoJrUba2ttDpdNBsNrG/v4/V1VWcP38ejUYjrU3xsXLwSdnq15hqWq/X07q3q1evotPpYHt7G+12G1evXsXKygr29vZSHeiomDbS9XrkF67F5LeuwQNOprgAKMgh5zPFLhpJUCMYwAm5pNfcyNB1NiqP+T/fR5zgRgjroHQ7ALXWJ1dehOdcXuWwTGRMaPvdKKPBz/nDNWmcXzpG43T5aUnHzMtkm1XG6O+T4rJTRTIi5R0xqX6Tyhja71GLNbLSc+/Xj06myLhwisBtZG3nDAu9Ft1XVnd9v5eXA3mqOOh5Go1GoSfmToJ0BVt6zccvZ1jo/e7ZiPrGvS13m5i+onmmvlgOQAJTusibxgXTpjT/PDIkXEBE/aFGOuujv7FvI4AS8Z6XkftdBbACFQXCPt/1nbymhoWvY9F3sA+0L9S4jqhMYEcRh7IFcK4gc33j7/HxYRsiAMpyojEEUPBIe7/r/9NA3nYCbwJ1XbiaMx5cRkRyGyjKXF+voxEx34xBDQp3VPH95AM1VJU/HCDkdIsrdW1j1F6Szxsl5QugmIahxj4NI5Vbfr/2Y8S72k5db8Q+0LGkQddut3FwcIBGo4HhcJg2KvBFrvqOaNw9ish71OBbWVlBtVrF/v5+St/a3d3FcDhEr9fDcHhzjZVGWqaFchGMcTLCQXAOJ6k8iWQqKSevIor42w1WxX+KLaNyXEdpuTmslasXSdvnPO441Xnf+4P38X/KgnFtYx00Is3UqWi8IpmRm/9lFBkN4+7VuXYaTHlLRkaOecu88+MAhl7TSR55sXRiuPGglp8LSH2Hlh+BKwV0kwxAxJRRH0Rt53ujvuNvrKd7JvQ3CnF6V+80AHcwoH1bBuiia3zWI0henhs0d5uWlpbS3wpodIF6tVpNi8Lr9Xpag7G8vFwAWZ7Tqh4i95pPQmVCepwBwd8mESyRQ4LPR2syIsOf4E53uaGHmXNA+0P7i+9U731OcfBvF7gESgQk1Wo17SS1tLSEvb29gsHhfer/5/g/F6VyT6COn84rtoNKTT++g9s0GRmUVcCxJ5RrSNSYixQ5UJz/7kF14KVzkOt3ut1u4ql2u43BYJB2yOv1emnzCgVBUdSCc5Vrp4bD4QkDyfVIGV8ooIp+c4p4gv3kfKVphQcHB4kntM+17zVa6HqLc1jrQKKThNENgntGPGjIdbtdVCo3oxFnz55Nz+kaqZy8UXkI4ASuUL5aWFjA+fPnsbq6mubuYDDA5cuXC/dF/DYNRPmjkT4dJ49wKQbStuQwkssFjxDq35HsyWGXCD/p+6I1JlE5ul7OjQTVMZPoJjdESW74eBTB5YDjK383daA6CaN6RM7DSqWSdtlzntbnov8nJZ3Titv89wh75oymHN2SkaHC2yvsFdVPlLbkAkwb543VukRMoRMoAqTeQTlhkhM0LsQjKjM2IgMjAndu9JSVy7YQfFGZcOePWwGjT5Uipi17f5mQ0nLYVrYTKIKVaSIF0gQrKki47qLZbKatfpkmEKVSKHjS3ZC873ICV5WFX1fPd05YR33s3haWoYJfx1DnquaoR44H/q7b/WmqmUYuHCDwHb6Tl6ZvcVcmkhoo2jYlepl028j5+flsKpIaC2oYlQHj3IJJrZPyvwp/Ny5USU6bMa5rSNTI8P5wikBCBHyBY0OVvMPtVOlFHwwG6Pf7BSODAFQ3ZmCddKtZGhR8P41SHSPv92i9XKRX/W8n1xmuz1x/eHRC+QTAiW2YdQz4DIGVAxMHip4yxv5YXl5GpVLBysoKKpUKBoMBOp0O9vf3ce3aNezv76ctpA8ODrCxsVFIF3VQo+CK/azvIxZgPenImZubQ6/Xw+7ubtqKutfrpTLvtGNuElIedCNcZUWENdxb73hM/490g/aJ9i3fwXK1fH2fl+V4RnnY3+/yN5IHOQxVRlFdVGbqx+vpRpb2u7dd9VE0v12267OcW9VqNe3UGfVVGY4tI9Ub2i9RO3LGxdNiZHi4JMcwWkEVuAom3BiIGDYq342L6B3egdGgjhuYMkNjks6N+iTXT/5crh+i93M8dMcOfY8u4LsTwlP7za1tbUPZ9ag89cRq+ae14O8Ekf9UUAFFJUzDolarpQXfXICc82yrJ4vGCMkN7xyPlXkgdC75MxHo8bIixcG6aT3ZN/xWjzuvqYGghoJ6kFwJqhHKMphjz/cARYGuytM9mc6fmgPt0SbvA60fjQwHQ6q8HVxH81X5XhWY9q2OofIe6zotpGlQvp7BDVMl7Vu9poYy204DdTAYJOOBZ5vQoCDgZESD0Q32Jeuma6f4ThqYlcqxl9V3nlKeigwBB4JAPtKhvBWBi9xvavRTjrKOehaGjonPiWieRzo1iggMh8O0Y1i9Xk+G+mh0cyF4q9XC0dFRWksBoLB9t7dBKTIydKMT9i2NWhqKh4eH2NzcxGAwwObmZmF+TqORQTmiH5eDbizk8BjH3h3Dp+FFf6eXPwlGUsyXk7nepui3qK2TUPQuNzS8XDcY9Fkn8mIkt1V3sS7uOOW3R6YiA+NWDY2oT3J8489MOs4TGxnaCAchuQrwW9NGfPFRGfFZvtMNC32HGhmsr4OQHCCdlFEjQ6fsPu2nW52I2r5xv49GowSo2M8EFn4wz9NFKtijCeA84pax8gavu/dA7502I4PpCDoGGoHQAwq5Ra0eoOfeDo1kaJicRoYDD11EFwkL/5/P6NxR0rlTJlijUHwk+HifLqwlz2oevB+8pfNaDWeWSWCoqWm9Xi+BTN1Wk15zAsejo6PSnbw4hvTGNhqNVL6mc2kqgBsNHCsAiQ9YB96nizfHGS6uuFg2+5EHOwHHO55NE9VqtdCQJqnRAJyUJcq7NCiYBtXr9dDtdrG9vX0iQsHx4voLRjholPIdUQpNBPBYF+d7HU/lK48uq2yLQFxkbOXmFvkgeob1134jv+rZMhqlo8zyrAD9W52OLC+SFXNzc8m4aDQaBafR5uZmGq/NzU2cO3cOe3t7KYVKeTwHjLgWjvdSZug8oSHLZ3q9HiqVCm7cuJHeT8N0mogRGI5NlIKjGED7wcctZ2D4XHRyXuU7o7+B4xRFLVffn8NBDpx9vqvh+lQMDJI6pVXflPFaBPL9Hu1HlqOOB+0nPgOgIDeWl5eTfqSecCdbrg7jiPwUYUuOVW5tUo6HcnTq3aVywMVBv358sZ0PYlkn6QB5wyImVwZVgObK+TQWWdlk4rvK+iXqpzIA6M9E5efqqMKVXjUybZmh8nSTT0xtowpAFUJlZWnfTJPnKRJQ6g3lyeeMXuhuXO5hz30UwOq7VOGzjNMYskrRPMr1c6S8cnPb16noQXoacYh2QtE6KD9pZERTo7RcNzK0zTS+aQhE/U3Pki7Ud0DmylPLIMAjcNPF/R69Oo13SpWTGovsx0jeTQO5TM4ZsGV6h4YB06D29vbQarXQbrexu7uLGzduoN/vY3d3t7Cmh88p37B8NQCi/Hc3MLQuLpNGo1FhXivv8W/OWZaT65PTAAqf9/pcJDNYf+UX1lPbqtd0HHU8SeoAIt8ruFpdXU3bynJ8Op0Otra2MBwOcfHiRVQqFWxsbGA4vHmYngNQ7Ud9h0Zfon6kkb+ysoLDw0MsLy8nh0S/3y+cXj4NpE4ol8WUfzSseA0Yn6IU3ZOTPXqfGjKRkaDOFufv3Eefn4TPI9wZ6YZxZeTq4eSGT1m/KeZ0w8zlhr9DZYQaFV7PqD6nIdYRyJ83lzOgJu0z0i0ZGREgprDWezQlYhwIcevZGxIZGdpwknoCyxR4BIwm6YMcw4wzXiYdmOi3CGTlnvXFSh7uvhtgw5Vn1EcKjiJjctpAUo48xKoeqOXlZTQaDdRqNTQajeRZywFLB/jK154zTVIjzflPvyPyeeRpOy4gtUx3JLii431uABAgcqGbr9HwNqsAZ9tHo1EhNUa92wQOuvC+Urm5sG5paSkZHg5konbTo8hIBj3jo9EI/X7/xPxjOep5pFFCI1MXOGufT0JeP436sm+poCaVcXeKfE1MmVxQeUYe4lj3ej30+31sb2+j1+vh6tWr2N7extbWFq5fv45er4d2u514gqSRCoI4pitqxLFerxe2k1aDAyjOPZ+vChC0/9XgdDBSJt8V4OV0oINPv4/1rlQqqT+UbzStUNPXorbp+iiWp98699nO5eXl1LfVahWNRgP9fh87OzspknDjxg0sLi5iZ2cHCwsL2NjYwMrKSmFjDFIOxGlE13W+OgaazSZu3LiBg4MDXL16NaXQTRPpQZv8jJPnrnMVqPrYuOGSwxmRwRbNUb7feSc3n8e1ITKs+F2GBXPkz0f6yg2ESA87ttT71KCO8K7XRd+tDkTONQBpi9sIM5/WyOA80pPbvSxfB3Kr7zr1mgwdIE9hUqbRa76wM2KMnPESlcdnokniYMwH3MEJ30FPYFn7TwPYxj0bPV9mhJQxKq+xH30cVJF97dd+Lb7oi75oIkGl79LJ7qCI777nnnuyofrcmHMS5Yyw6LeI36aJXBAxJarRaKQFiLo4UikHNCIj2b/LPlq2j0ekPKI5pe/hvPbF21G6lNZDD89jSg/Te9S7rIDM6+kKjb8pYCRvVKvVQp485/jBwUEqj2OhC8MjxcvxqtfrKUWLxkWv1zuR+qJGBoEpU2f8oLycYaP9GCko/Y3tZxhc16DkgMPdokj2uexQPtU1Nt1uN6VBtdttdDodXL9+Hd1uF1evXkWr1UKr1cLOzk7iL/avzjvtL24dzShTtMMb66aOEParRjo0PU2dXSqftZ0OlL0PHCzzut/vsiH3P1A0NngP28axYPt8Ib7zqt6n+l7XCWo72Cej0Qj1eh39fh/1eh37+/vo9/vY39/Hk08+mXafesYznoFz587h4sWLSZZ6e1z3535nf8/Pz6czjc6dO4f9/X1sb29jOBxieXkZ00SRcyXSe84zAE6MWyQHXM5F13zMSSo3I92lKVNe7xwWKqtfTtf7uI/DBPq7G/iUm575wXnuBl/kyI50X5n+8r5V3MqUXtd30fsmJZbP6L1H+V3mlPHdODpVkn4E9hxY6HUNxbpwjQRmjvlyYNjBnA6MM4CWx99VSUQTpKwzx3V2rg3Rb2XPRvfnhGeu/7iN4NzcHP7O3/k7SQlGfRuBT/ax7m5BQa0e5rI26fXchBgHlH1yRkbJ3SbtMwJJXeTNVBvN+4/GO2do8PcyQ6Ls9xyIzSls/fg7dP7rnOc9/q2GCbcS1Y+mU2odncqENM+J4adarRaMF00pogLUNSDa/pz3qlar4ejoCPV6HfV6HYeHhykKEm17SjCr23M6eM0pDJVNuTmm9aNBMxwOU1/kAMK0kfKKt3U4HCajdHd3F71eDzdu3EgGxdWrV9Mha+12G+12G91uN403jQk1AniNqWu6hWrZFroaAdC5wXGnvlFjxiOPBN/AcZpeWb+MGzvlI58/ZbJE665zg2vLqCe0P8hfamRQn+rfrIv2E9vLSEa9Xke328XCwgJ2d3dx/fp1DAaDFIXS+cm1HPzOzR3igAh0UiaoAbm+vo5+v4+NjY00l6eJcnyoFGEEBbRsd2REkHJ6gH9HThB13LAOKpd1XYzX9VaAce661lX5bxzW0me0/rl7o3VZfpaVvi9nZORS2/g3xwtAWhelTnDXUZNGv70tis0jfK3fUR9Ogr1uychghbjYUT2PZUaGA8KIaXKGhP7tSl+9ReMmUkQ6SDnQqu12C1efKzMo9P8cQM6B/ggojotGqGDR53WCRBOjrG25HEutV0SRonShoBRFycoiZ9NCtVotKTGG5XmSN7etjdZfADGvqNLWBYnaZw763fDX96jw9fkcKaqIX327Pzc09Hng5KnKujhZve30wCs/aT/pGg4Kd36YyqQLRfmOTqeDXq+XFgTzvVF+Pcm9tyof2F/c779SqaDf7yfgxMiJAkzKIvYRU5mq1ePzIRxMnEYZU2kAx2ldOs7ku2mhCHjwo/qExiB3hur1erh+/To6nQ6uXr2Kra0t7Ozs4NKlS+h0Orh27Voa66OjoxRJ5DqolZUVLC0tpYPfdDGtO03Yf6qIXf8on/C8DE2PnJ+fLyxy9+2FtT8mMQQn5YXo2+WL6ku2jfOUa1dooDHCQyeTppu5TNYyKLdU1rCMWq2WjOHz589jeXkZjz32GK5du5bG85FHHklrbebn53HmzJkUbeD6NvadzxcdK42usC6UF+fOnUtjffbsWQwGg7F9PA2UwwpA/twElanjdFCEo/Q+nQdAfKSBj0kk23PGsAPp6DfFONoe58scOZZSfKPk67NUj2vKs+o8xSza32p45/CLY13KIa2f4+DTEJ9bXFxM+mgcjnIcNinuOvV2QxGg8XSg3O9l4DsaWLdOScpUamREjBvVXd+fG2Cv67jnouvRPeOMjNx9/g6vY47I0AQ/FPzu6ckpL31X7kMgfJp6TUK5dyk/TZOBARznMWsaRrQryDjDTkmFX044uTGmgJ/kET1XBrnxU77T+6P5HY2LL/b2dRfAMUiOgIKCF62ne2wJGgiClpaWkjFBoAQA+/v7yThwY1vlSjRHRqNRMiDpBd/f38fS0lLBeOCc83LUCFRwmlMSOSWdI62/esg1hWcaKIoua984z/T7/fThWhieAs+P7iBFoEgjjn+TDzRtzaNL0fz0VDqNnNPI5W5x3BRAIyMshyBX5zGQT3/gO0njHDlKEXhzEKlg0d/rUQhdS+L3a1n6v673cF7kPc1mE8PhEOfOnUsHkLXb7bSmqtfrodVqYXNzE6PRKG2DC6Bg8ESpHjpvtS+oswAkg3B1dTU5J6aNynRdDkPkgLn+nTNEtf/0/e5kjPhGKXLIRrwd8WrEl15G1JbofRE+8/tz2I5zXg1sdUj4ukrg+ABFjz74e3Mp+j5OzHxww21c23PkuDoy5Mr47TS465aMDE15cCNDK+HAIALMJG1gLk3BLVs3MHKGhTK6G0TRPf68tysH/BWElfWfh8r89xxYi8CftztSKF6e566rsZbrQ+BYYOiCP1c6kXdi0gkQCSqPiI3r37tNujiRIKNWq6Vr4/pY/1fh6FELj9ixX8o8pVFOb2SM5ECJRy10Jyg/68KNEU2PUhAJoADCSQpC9DA+LhgniGYKGr3FXKzLiBI9quoF50JT1lHPvnAQ6vyrbeJC/uFwiGazmeYTIyWqnFgG6z8YDNJv5ItboUgOsW+Ufzyl8W6TnjfhPMJzLfi3LvLWsy7UyHReoWdOUwIIDmgEqAPA18ewXJ1/BNy6UJwbOayvr2NpaQnNZrOwZS3lKucI68WyNN9+3BbjufFzQOnznnK6TD/pfcDxBha6G9fR0VEyXHVnPPaTGs8agdUop+Z+s848iZsRpgsXLqBWq6HVauHatWs4PDzEjRs3MDc3h9XVVfT7fVy4cAHnz59P6aisixqEyhv8W3UJ6zU3N5feu76+Xro2825QWX00oh0ZEblnlPdymEGjXHpNo7q5d+XwFN/L5yOQ7LhPeUUxTKQLy/rH8ZTyA+vsxhTr4amVdEzoPFfydVt8H4DCukStQ2Q8eF25BpDXJol+5ojPUZblxnBcls84OnW6FJWB7wSk9wAoAEL+Ht0HnASkylzOaDkjQ8uKDJkIvOcMhlzYL7rfjYayTxTxuVVDg0znwDwyOLwO6mn1vduj0GNk4Wp7WKbWaZIJoGOlbcj1nfParVjwTzfpDjXRwtFJycdOFbmDCuBYQOoiZxdGKpAjI8PBlb4nx6f8Zjlq5KhC1y1rXah6tEB5xz3IBPKsI4X13t4eqtUq9vf3UavVACClTo1Go6QgDg4OMD8/n8D+4eFhYaw0HM554XyoHnA9UHE4HCbjRhW4KsSozyNHTa6vlSd0rJwPnI+mba7s7e0V+oO7dXHxL0/d5s5gugUtx58G5XA4xMrKCgCg0+kU+IQAkpsucH2UpkdFTq3I0ODvHPt6vY5ms4l6vY61tbVCGpYbzlzjUAamVI/5nNRnlFx3+dhHskJlCZ/ROabXKFNYJ10oynml/ecLynldAZdiBP49NzeHer2Oc+fOpTVPrVYLS0tLKd2x3+8DAG7cuJGMnEajAeA4gqwAVtvOdvnidF3oTmPlVoDU00k5p6SDV+Xh6KPPlelol1W8xvmkUaCoPirPPIKVc2aOa4sa64p7on6J8JkbEHyHy1WVzXwnHYaU9eoYitJctR25urlccX3N93tfMGqSw46nIX2eek77Vsfe20Y+mIROtYUthYt+dNC04hE4jxqnFAldT2dQJtX7coMZtSE3ifSe3P0OrKIy/Fm9Pyo3qnd0f9Se6H+fsOpViowMKkWdOONAiTKkKjMfQxf2ubaO63MHYlq/aQJP7MMovxuYPP0lGtsyweVGhveT9qWWo/PUPVTR3xFf+xhpdIN10qiH1s3ns14jkc+i+c73qZFBUESvk0Yp+v0+KpVK2g+fAlPzbXW7UgpTB0nqEed2uMPhMK0XUbClc0/73cdlkrmSGxPtKy1n2gATiR451SncWYiAkmltjHAo/9DIqNVqGI1GychYW1tL844yrtFooF6vF/L4dZcpB1xudKhsU9BBI6PRaGB1dbWw5a2CXQW0ERhRR1oZRTJ5nF6N5E4kd7V8BRwOyHlgIftE5ZvWT4GaO4j0f+qjarWa1rA0Gg1UKhW0Wi0AwNWrVzEcDjEYDDAcDrG9vZ0MxjNnzmBubi6lqWn9vW0uO5SfqtXjtLpp0ifAyYMpgeJYATEg9TGJ/tYy9H2uG1Se5PjUeWs4HJ4wrsv0XpmBpHhC68iyIp3oeqkMk3rbWR96+fV8JOoLlx/axig11d+Z+79s/GgEj3NKnZZ0XKJ+zbVzkjpMbGToCbx6QmoO/PqAljVOBYB/e8P0OU0BcMGtID0SrLn6ObiPLPLoWg506TU+q2Xk+s/rWUZeh9yEjpSb5rHTk6MpBDpZPJ3A26YWOCfLJMpTFZjm7auC9j5wBTdtpOCagFKNZo++ReAhUpR+jwtQ9z5UKpUTu9dERoY+o8Sx02hVmVD33aM8pUp5xOe9n4asZRMUMkqh7yJA1UXkc3NzaDabhYXho9Eoeb5173k9WI+pVwQ8lUql0KZKpVKIZjCCUa/XASCtAaGBxTEgH3ChajQ/fMyjPi4jl0G660vOeLlb9MADD5wAATyMkXyjnmY3nsgvTJPb2NhIY8a1GcBNXmC0galNLjf4t/Khr/EjuCIPLi0tYW1tDc1mM703KlfL1/F2w9YNk4jKANqtkJan81LBrDoO+N79/f00Z5rNZorgsE0cJ91pTd/H8hzYqAzgeHL8zp49m7aYnZ+fx8HBQVqncXBwkCIhHAuPQCoI1zmn9YiwxDSQrmtxPiozHE5rwPIdDsTVwaI6IMJkvKYptJxb7jRW2Z+LbkRtoAzme3Jg3fGb60n12kf9SJ3gUVDWKdKpkXHE65G+ZR10fpHcUaUYktib8+FWeZb1cdnideQcUhk3jqdIpzonQ5W6Hm7l5GCH3zmDIApXR5ZTRDmAxus5gZxT6NH1sk/uWb827j6vm9ezjKJJphMxiqAAx2BsOBwmEOfMFIW/o3rqe3US8/2RENE6uXcrmpCkSJhOC7kxqgJZF/uqwnAeViAfGVeRAoiEbWQUTMJbUb1UaSuf+H25uhE0+jOucFQZKVBRTxaBDCMY/BtAyufXU74dnBLMsE7RGQcEfj622q9aZ42A6Lhrf2pOu+4fH/WfjpHSpADTZY2CvWmgGzduFOaJAlnXHT43vO+5cJfzimt/ONY0LnjGAmWj9rUCIV9Pwd/VyKBnkxEvHT8FL9H8jXjdPbWRTCu7prJXKQJc3sf6TAQy/Xk1AMnPajxrO1UX+/hpxARAwShmpJCnclMf0QCtVm9G43lWzWAwOOFhjvpMHRgqgyedV3eLcvWLZEhOr+TKcZA5Dudw/owzyiIjQbGdGxzj2qbA1nmrDK/lIjOOKfydKtN18xblH31vTk7p/VFfaHsieaHfjsd4//LyMp7znOdMzMfr6+sn+qsMR0X9NSnumtjI0OgFPU45gZgDLv53BDIib3mOyoyQXIco6ON9kRDOCWYK2Qi05dofWa85AK11zAHN3Lu8PN2hhe/TnHn2O0PNmvYxGh1ve6mM7X0dgZfRaJS8uRxPB5j6fNnuQ9oeH0cAWQF1t4geVAfoLnQ0rSoSpmVj7jzpxpkL9igy4LyVAzDat36/lqHAySOBGo3SuaftZViaAt0FOQEEUyOAm/y9u7uLbreLfr+fAAi32lxdXS14ijSfnwuPOQa6xsIXtaqxRt5UY4WAk7/Pz8+fWHuiDhpfKMj/y8C197+PUzRuKq9yY3y36MEHHzxxTftUzxVxHlYvpBoHw+EQGxsbAI5TC3TjBRqNw+EwjMaTvzySq7zNyJfvGqfl6r28rkY25zz5zfUe78uRzj3XaxHYihw3kcGhz3kESdvBlECCfq5DqtVqKV3MARbbxb91zIknuCie761UKlhdXcXy8jIODw9x/vz5dE4K9US328VwODxxYJnOX75HgRoNSY+0jtO3d4sisO1g3e/LYSkfB5c9OQNDeUUBc/QOlXE+T3VOuVGofe/OJ51P/L1SqRSMTuff3MZD3j++hk5T8BjJoF7SfsjJ48jI0H6jvPKy1Dkblct6KsZbWFjAc5/7XHzf931faBDm6qd117PUIrzFvnQDfhKdcmojww/MKqNcA/W7zMJ1I0KZwCcWkPd2u8Wb65ic9QsUFzP55MuV4QIrei66zwFc9B4tM1d/3cXAgSgZZm5uLuXZUlmqJ0/Dnf5e9wZq3Vk+UDz10712uT6PDC8dNweh00KRkeH1JtDQb+X7cUZTmfBXKjNcyvotMnqidysPkT90wa0LWO8L5x2WReA1Go0KaVB8PlIILE9TtXSbWl18zvpRFug5CS6HWC+XSaokCYop8Gl0KWhhuzViyLarEaPgORp3/WZ/+P86bydVBHeauB4mB4rU4FADgWCVyppRWN2mlmOju0DxugJlNTyBY7mn4F9T+Pi3blPtusuBBXlSHQAagdHF57xfKccHZdc1ghhFhzW6yA/7zoFFBLpVRnN+cjOF4XCYIkaMcqjuUF3M9uX6isR+56J6AGm3Oc7jvb29wlhxvY4aqN5n2ufTqk9IZUZGjlSesAx3+vkYO7/k9LH+ntNfrvciPajOZZbLuuf0EJ/RsqLIZGRYuE6OMKVuga5bz2v/6NzSuqrOiNpf9tF+UVkfYWaNxJOidSDKCznDwzFEVDflj9Pqk4mNDE1LiARPxETjFJyDzmgi6X0ACkyZA1D+Dq/TOMOgLLwWpaV4WV6m/h+9NyfYIoOk7Hf+TeajZ5cGoudok5n1dFfg+ERWAkYHvWX1ckZ24DQ/f/O0WIKGqO+9P6LJqOMxTcSFxRHfez84UNEUtXHKIyI+45En7zPWRUGulpEz+JVv+B6NNOg1z7UtA84KxAkQyB8LCwsn9q3XcjUXnryjRgbbRMWgRgaf97z4nODnfIkMDD3UCDg2rH3eLy4uFnbrcaU4jnKGhv/t3sFJnEJ3krh9oxqprvC1nwkuFVBEmwjozlFqKOh7mWajDpjRaFR4zg+ei3bhi5S66i6XaQrslHfUyNRy9O+cYen3KQjSk+5dr+lhmORHTxkE8nqLOqbX66V7GYlge5ia5vVzgKeATOsL4IRspMG4t7eX9FqlUkkbPwAo6Bh3HCjpNV33MG1GhgNXl8sRRXLC+SySCcqrEf4Bbo6bOhF5jeWrPFaK8J2OL+/JgV03xB0jRtG5qP0uI13mcM7XarXEQ8onxFbqbGcZ/DvXbnV2+HV1nPj4+Jzx9o7DwVF5fj/ntbZXHcWK5aKoZI5OFclwZotekpsE/kzkGXSDQ+9xJcQO8onGa955Ud2VIpAbgV9/xttWZkxMUofo77J73ZBRL5UuvOV1n2AOBkej0YntRpXpFWT6u4GiInHjRIVTNHbKB04+xlqfaVIKamREAN89H2owK3iJ+s/nkIMeBz5aFp9XEMJyItCk808FIw0KFXLAcRhY+YHgxT2mCijIT8oTFPTAcQoL79edpFToEeRrXekYUT5hHRS08h30fOt4KT9S+KqMoUdJDRUX+vxfTwJnv7iXWflC+yrHBxEp3/B90waeNjY2UjsV3Ds/chtiBaxumOozesieRgn5HPtbz2thv6hBQwMl2qrSDW+W7aTGJIn1JK956txpxkiBB/sCQJL91NkOvuh44pbBdDK58eyyWDex4Ds5x/r9PpaXl9Hr9XB4eJi2lvVITeQ4ZDSCxsFodOz4ijaLqNfrWFpaSu1wowpAimxxLY7zgQNVfk+bPiE5yFRyJ4L+7kYa7wfiRdMe8XL+8Xe4jtD3uo7IlaXtUgAd6VHlI9ZRQS9/d+cXgBPz1x0GamBoRJ19pfzmUWrOB97vGKkMJ7O+anx4H2kZfFb1lZL2ndbBHYsRvnCjTHWd4kDyzm01MiKPcfQCt7aje32g3XiIfsuVG9VnHIgvM0DKPlHZETP4db9WZoRE9c1di+qmAsINJu2nnGEXlcO/dUJEbXTDz38jKShWYMq/c+Mb9fG0gScacsqzQDHy4grBPUCRN937koCKkQOC5hw4VWPAPTA6BryW+/jvbtxo/qyPcU6Bu/Jx4a0CkX3owpDgXhWqRi90DFzWqPc2Mma1nzjG3j7tB1Vw3iZVQtHc9bEbJ9OcXCGXya67SY1GI/WZbqHtc0fBuJPyiBqKGpVyWaKGrTuOvAytk/JVxCPRODopL5d52KN25v7OAU6PCOvc1XrqfNKd0dhuX9Tu89gNZQBpW2FdIO+6W2W9yxEHWj43VF6yDiQaG5VKJa2P8fUZ0bhonaaZnN9cbgJxFkmOb1UPRJjHMYQbtk5lvKwYIaqv1915Vq/rs/yb8laxon4cX3r0Qo0Mn5vqnHPnhBsKbGuk88rGKsd7ueuR7NBxmlQmlb0vMobIF9r2MjrVFrYO9rWSrhxyeZD8Xz24/ox2Xo5hojK9g7QzvMNz4Dx3rWyg9P7oHRGjlT0/7h3RvaowfBKwj1RRUnHT8+dAywGaKgJlYO1fNwAj5TQcDgvjrJ4tVbxRG6Px8XbebaKR4aDIhQg9IaogfU75cyrUGM5l/rimB0RjxY9uq8uyIiDrgpn36rjo2Onv5B1NnWL5/g4S+0I9sKx7tVotbEig9ScQpeeU3m/d7SYKvyu/R94+jqO2kfcqwNIyOKdYdyo9Kh/2gx9KmNtEowwUlSl4lbGsy7QZ4/fee+8JA8EVNFA8ZM3rX+aR1P4ep8j5m0cX3Nvn88QdOA7M1POvOk4jJD6HyijSIRGAcU+jynUaEgrMNELIk9QjY0j7Ww0ZPWW91+thb28P9XodBwcHaDQaWF9fT1vLcoE226xOGc4d9q172nWOqB4bjUZpRzHKD5U/rPNodByFzfX3JKDpTpM7hJyPyYeK0XTzCgejLg/LsITzeM4IiByVGt32LBDeo6R6xNsbGRosm3ykOk7lvPKyl6mRRXU4qXHBMsnrkSz1vtS5yN9z2FOf1/LUSeV9BKCgT7w8XWdVRtrnHvH0ucLsAJafG1enU5347caDd4oOoDJcjiFdeGkZXq7/rR2UE7iTUDSAuQkxiSER/V5mqIxTHJEBFTGpA7AIMAIn06RyE9mNDFX0Xqdxk0Z/U8ETCS4NG47r01zo9W6S9qWDFP6vIV4XPkAevPDvubnjg8YU8I9GoxOeV6Woz6JxyM1LBazON2q0RM/m5AVlSuQxZXnz88fnXLAOvNfX+NAgUSWrSsOVi84Df7+G473u3kaXZ6wLy/Md0+bm5gp7nbuRod9lBoWSjmmZ3JwGWl1dBXBSpwBFxwX5Qg1VPqdjoGVEck2dFySXiepsyckvrZ8r5Zxc0vp7lM/HRecZaRIZ5zJE26xgU+caoxaj0aiwRkN3YVMDUNMznW8BFPQFF2Lv7++nfuc5THy3RpUo17Rv+V6POGk7NTLI/tQ2aQoc38X7I5q2eQLghCMqxxvO69F9Kk98vuh9OXDr8jzCGarHvZycTtd3AAjncIT9tA5qZLludIcSn3X5r+Wx3ym3c85bfnvZZRgwhxuVoj5X4hzV/9mnni3BftA+cWNOx8MNUZ03ZXWOaGIjw8FpNEldwGslI0XsSt47JSIX/LwWebnHkd+vDFbGANHEid4fMZiX44LaBzh6bzRRo8V9ylD81vHJgUGWV6lUCov5+K4yBRgBnKjf9ZlIyPkWoDpp1FM4KaPfKVIPm3pnFUCxP+kZ8ZSDaDxdmbPPlFeGw2HhsKDIyFDeiQBObm6q0FSgrgYT25UzMFyJKLjTRddsN+vAcxBc8LFN5AWW64tqfQxUubiBARTnYGSAl4FY1tnb7BFGjo2Oe05ps056Xa9FStrL8LLvNnGfdiCOeDoQcl5WwyIaQ3/W54MbGBGIBvK77Sjw9Xka7frigC5XZ++PSSh3nxoHNDQ0yqhRhcFggH6/nxZU0wDWhe+6q5aOF+vMiAbPrBiNRoUd3igfXD6pkcH/2fd0qKjzjH+7jNIo/HA4TAYOZchoNCqkTkXzbRpJN2whKX8CN+vO6K1jtDI8pONCioxkfo/jWwes7qQZx9Muax0/Rr9rWxx/8nouDSoy+B27+S5tWm6k4/TdvsxAy1Gspu/18YmwVHSvYyTeo3JS+1nHSfVRzuDhM2VO84gmNjJ0Wy83DBSwuLEQGRduVUZMmwOvWrb+RnKwX0YRs+p3zrhwpsgZGBFjenlRuVG7vGxXbLr6Xxk46i8vk++lJ0v3ej88PEw74ujOLZHVXkYRHygvROPphsS0KgElnkitPOUCDzj2wKsAU4+JG1LumdD+Z6qDLmpeWlpKW0vqfM0JMvewRoBZwb+PF0EFx5N8klMybIOm7PkZFawD87q9D30ueN9odET7zsfE26KpUg5Uvb9cJulv2gYdy0qlkjy9moKldX8qQIh9wnInVQZ3knhCOnAyguz1dYNNx8SNEDf8IuVfZpDoHFFnRzQnc30aKfQcUCqjMrka/abv4HzUegDFdScK3iuVm5sn0ChQHcIIha7ZcNK6MBqyubmZDsrr9/tYWVnBhQsXsLS0VDgl3aPmJDUkIlBWqRyvGWGdeRimbt/OHbD4uy7odX0/bfMEQDL4nO8oG7mGyM9e8r4iqQxWOREBZlIO+EfzSGWa4zavC/9345vty2HECNCr7FRdpUZGbm6yX9SY1ZRmxyCRbI0MFfKlgnM9C8wxXcSD3nbFRz7HHfuqsyznlNG6sr4A0nzX8tUYmZROFckgeHBgWDYxVRmo8o1CV0plytE7PFLGT4VyBoZ/ex2jv8cJrpwhkbs3Z2i4EI7K8UkflcHrOja6XZ0ytYOsqB/5rUIkUv7OS+rNyvHAJPx3p0m35iVFIFHnBceOgojfHnJWQafPc+xoIOp9R0dHhXxTrZMrjnFjpELbjYfoefcQOSkg0t2ZHKBrv6qSyBkZDjxz7/ax0b5heZ7bPYmS5ZipJ5l950a692fkuXLwG9XX26MybJrmB0nXLHndo3pH/Z6LEES8F327stb3KSDIGRlKZeBsUr5xKjMuOea5eUyeYluUv3xuUx9Hnl6fC95POYBzdHSEwWCQ+pG7sDUaDYxGxYiCpsJFY6HyJ3q/9oPKOR1DnqmhhpX2QwSGp4XU+aTzWwG0r7/IzamI2Bcsl9/Ox7lvv091lupxJS9Hy/L5ndMhXocIU6h+icqKsBA/atx5uTr/vP7a3xrpj2QKKcKLZTLB73d5r7iA5BH2svHlszl5dhqa2MhQa1lBi3eqhvYiZimLYLgCUKETdYTeq4JIKTdgZQZMrhN9gKMIRu6+Scoruyd6ryo/Ty/S96qnwuujJ95GO4VwEW2z2USz2cTy8jIqlcqJU5FVAUXMzPFWZeYpRdHELQManqc9DaQnP7tyyAHVCBT5ortcG7V8KnYuftzf30/rGTh3XcC4JygamzKFoMYHwQR5iF5FF+yuKDW9yb1y7uFyQT7JHFJ+j4S531utVgspL2yX90XO06aGkaZqjEajlO/u80AN93HGu5K3n+Pgv08bOf8DcZ6880r0HGWB6xcFBC73VOHrmRl+n8tcn8d8h65z8LGLdFzu99P0nwNjB1R0OCjPAcc7wHl5lBW69bTrNNcP2g/kP76/1+uh3+9je3sbu7u7aDQaODw8xNraGi5evIhGo5GimD5WbE9kaKke41bEHLtKpZI2iWAb1ODhb9RhqqtI0zZn9LwT8rcupI+2awZiB6Z+R7ogkmM5/swZCPqszpcIL7lx6NHJaGy8XcqD6ggnFlGsqnIDOLlrFLM5GFlTuVqtFs+1UuNM2wqcPHeF+pkyx/swklHjDCIt1+WhG+XjcITPM5arY6m/R1g7R6dek+HAyDtABYUDhMiLEgnkiHkjYUOKwKneW2akeDllA8F7/O/omXH/jyt73G9ubERRDFUM3g/KRGq56zdw07is1WqF0CHz/knubc8ZGDnjUvtRQ/TaLm2PTihXtHebNLRP4aVKwueP7+zFdrEcJZ8zmuevZ5qw//RcBjU4VYCX8bsKNf1bf9fxZpsiQ1KjYVqPaC5r+Vqmz19Xms4nyo9edtk7/RnvI+dr/zifKq/qeEeRjEl4OWdEaN29b7TfpoGifot0QtSXkcHp3nfOC/7v8pI7Ee3t7aHf76e/HVRETjF/Z84YPk1fKEUgyimSe1pvn/cOfoDjXc40ZYprNSLZGxlcpAhwcBwODg7Q6XRweHiIGzdupC1yh8MhGo0GarVaejfBoY6b9gM/rK9uT+33aFSZdeHuOMov0fbI00bumc9FnYB8FDO6xvudyjBa7t7of9UzXsfo4+10meoOAP9b352bm0rKG25kRGth9P2uI3RXq8jhqyntXteof3KYytsdYa5I9ygGiPrASfvGn1HMN45OZWS4oGdn8NuVQ5kyjiaHkgpyb7S+SwF0xOyudH2QTks5IJNrhz877to4gyUS+JGx4c8o8+t1glEKYHr2OCHo3er3+2mi8HCj4XBY8OC5IRAxvANGZX4H5znjyUHZUxnP203z8/MFYcIUJgow4Nhr6OsY3Eui7VJDhG0mSODp1kdHR8l7qQYkx4fjpYpc/44oB+DZDtZFvffqqfePzmuXAQ5ionZPUkfyzbh2lAnJsvkdyTSVj27QqZfWz3CInDVlctHrV3bNZd40GRkavYj6MLo/Ah8u81V2eM6zGuW9Xg+DwQDdbhedTicZG7yXHuLl5eW0xklPEOd7IyPElTupbDxzY57TW7myWCcABZmsQIh9o/KDDhDdhcmjN5FsLlufwvdxMTnXRvT7/cI92q+qq1Q3sG0R3uB9yh+j0SgtUNe69Hq9VGd16LgcmiaKnLWRTByHQ1zmRYYzcBKcR9hOycdE5Xq1Wg0jYmXYMJL5OsZajkabtT6uZ1zOOk9zHuzv7yc8FM1FBdc6xylXFJdqHdWY57M5Waf8H/Wt9jnLZ79pH1IPu6PhNA4t7XO9P8IoOZrYyIgsQQX9el/EaNHz+kzuW5kzApTRYOj9ZPLonc74DnByFIGUHIiZpJzIW58T2n5PpASi511BqeXOFJt+v592B6H3nQq22+3i8PAQg8EAy8vLGI1GKXUqMhiA40VCUb3VeIja5575qI+mkRRQ0sBgOsbh4eGJCAZPpOW2q0AxhMv+1UX3mnNMoLC0tFQwNlTgqcBkiJcKXSMv2rf+fmA8QFcFqNtG6o5XDtR5TSNoWge2dZxQ9HmQ4xnnOwU1rpxc2aqRzHuitCdXeO41LTssTus2ibER9YO+O/p7GkhPXPc+j/RJ9AGK3vKjo6O0Q9Le3l5KkdFyOTd2d3fR7/fRbrexu7uLvb099Hq99M5arYalpSWsr6+jVquh2WyiXq9jcXHxRJRD0wpdx6memWQMtF1Xr17FD//wDxdA+TiK5ij5aXl5Gf/8n/9znDt3DqPRqLDRB72wTLvRLaP5UeNN9QedG556QrAzPz+fIkVXr15Fu91O52mcPXs21a1er6NaLR4yqsAskkMqb5xfdCE069fv95PMrFQqBZl8Gu/snSRueqFtiyJ3EeXmEhCf+hzdGzl4VJe7QcLn2Z96jfV0A0PnlBsZnEOKC3w9g+oNr4feV6kcr4+gzlHHKvlZy4sAtZZLfaCRD+3XyBhXntM+8HU1bmREelANG+cP8ri3yQ2cHO4lb+XeO4lMO5WR4cI9d5/fHwngcdZwWT0iq9j/jgySMuERgfdJ7tVyJzUw/Nnc/VH9I6PmNPWPLPder4eDgwN0u13s7++n9AEaGTxBtV6vY2FhAXt7ewnUcpeSaFyp4CPFx48KkKg9ESj8RDA21JBTg0kF9/z8PGq1WgI09MBpfnEkgHXXJC6oBI49lxxb5zNfG0LhWZYawWe1HP3bAZR7jjwFguTzXRWlCkA9DLJMNkRGRi6nXPnJ66LvipRgpEz9Xpc9LgujVIeyfo7+z13Td+bk4DSQrglQ3uH/OeXqcoZzjA4SAliuBxiNRmnO6I5uu7u76PV66HQ62N3dTTsgESAQFHN+KeihoRGNMQC0Wi10Op3022n7n/c/9thj+OAHP4hut3uq53PUaDTQ6/VORDI0XUoPxGNdckaGzk3+rXJE+V3BHCO6dFKtrq5iNBoVDoYlGMzpO5LKUweZOud03Rppb28PlUolLQqf1rSpKFU0mgsRn0VyMyorKlv7T3/3d0ZRD5eF1DWcN2X3R7JXecplbJlu0fryGTeGOQ/8kFR/Bji5Tay2SY0MzTiIIus6N8i/KhM1ShLpvGhc3aHi/aA6kOOh/VOGQ3O/3VYjI1Kw+uLIKnaGUSstUva58Jy+i8JQBYpf02ccRLk1p9+nMTSccuCsDCyUgQqlMqDggqBsxwIN2w0Gg2RQMF2ARsZgMEgnv9br9eRh6vf7WFpaSuHvvb29xKyRt8MVFycM7/f+0uc91YHl6RhGz00DReFXtp0L6c+ePYt6vY6zZ88m5co8cfV8ADFvVavVwkJurpvhGDJ6ot5ArQf7kEZiztjg+5WUnyIe5lynt5pnXKhHRAWw1o/e0YODg0LqlbaV72A/sCw3Mihb3NAtI/dSc3GoLq7MAZ3IE6/lci7ownbyi6ZweMTH+93HIkeRsTMtpGctRMDJDQ8SlTm959widWtrC91uF1evXsXu7m6KVAA3wXWj0UCz2Uz5/5Rh6nHXfudvrVYryUNGcRk5HI1GactqlX9vfetb8Uu/9EtPuY+Gw+FtMzBIatjqnMx5UHmfGhn09tL40oXiCl50TQT1SbvdRrvdxs7ODvr9Pq5fv46joyOcPXsW1WoVq6uraa65vNe5rXMut2WrOzdo6DCiAdw8HwRAYVvdnHf/btHi4mLhfweeKvv4PynaVSkC85HTw6O4kZGh9+nic3XKqJ5QOadOsygaGMlT8gVQ3DVNjVqlHB9TfjCC0e/30zW2L+ID8g/PkqGOp2Hh0W6Wx37yPmQf1Ot1LC0tJUeuGh3ROLjMct2g8pPzQJ2MkfFSpks498vSlnN06jUZkXWZs7aAkwydi2a4lerMxc5xJR8pKQUdEUArIy/7NIZGzrrOGSDRO9yA8rL0Ph2HqL/4URBJ0EvFSY+fpklp2gqFB3OSdY9xD41rnUn0IpHUio6MjJzVHpU9jaSpBB5yZY53vV7H+vo6Go0Gzpw5k+YEF0eqUvU1GLyuKTcEbPS6sjyCATc0WR+tY2QclxnEOX52p4HmWrsi0ZC1LlRnPen51IXjDkTVyMjVTesXGQj6tyvIKHzvXiktZ5wc1LKj/nTKXSuTS9pWrddpZNnTTZGnLvqOQALBYrfbRbvdRqfTweXLl7G7u4tLly6h1Wphd3c3Hca2vr6OtbW1NG5U4owech1VrVYrGNusH+Ul5wyBtbaBirxaraLX62FnZ+eO9ONpiMCEddU1EKrHtd8J4lyWkWgss584r1WHeLoF53qr1cLh4SHW19cxGo2wvr6edpjTdLrIsOdvlBWso97r9eQ3ZSzrSEPDD++cFnJZoX2Zk9kuhyKM5IaG/q5lRu/NGSMRzotwo99XFtl1GR3Jz1zd+L+2w9cj8aM6SMtRYE78xGwPTb3TlGa937Gr6nEa1KyX857jOx0vNah1vKKIhmOuiHI6Uq9rfaK+jujUkQxXkpH15KSMQUWtIaZIwKk1qOAoUvAqKHPGiXaUW/zjlO8kytmVeA7o5ECQMooLkNz/2j86+Ar4fFIxXN1ut5OR0ev1kleQhgPLp4dnZWUFzWYTjUYjKWmWGzGcKiltp4+j9oMLGV7TtkdpLtNEFDyqZCuVSkqNWl1dxerqKi5cuIBms4mzZ8+mfqR3TReeaT9SMbI8Nfw0bYrjw7FWY0LL5RhGaQmkiH/995yi4xxWwODRTApWP0xSQ9m67iESnhEo0LlCEOJyIVKsKnvUy+YnkiswiygyZlx+ahk5WZDra6D8QCRt/zTOEx2zMseCEvmXDpGdnR1sbm5ia2sLDz/8MLa3t/Hoo4+i1Wqh1WoBuDkXLly4gHPnziWlXq1W0Wg00jgrIGAkjSBiMBgUUino8WR0jryqKVnTZMw58TA69r87gZQ4HzkXSb6BAw0WenV5D3CcSqVzmEbbwcEBWq0WFhYWMBgMUhRDo3zkX+VndVDwN4/Gsm78nc6xo6PjDU548CBBoUZQpokio4J/l+GJMrAf4Syfcw5YtWwtL8KGvM5y1Ckdvd8jaUqRzvdF4VrfqB0shyCf6ZDUkTQe1MjQMnX+7+3tJYegRgLr9TpqtVrBgUcDhjiJ0Tz+zrWYqtvJs372ieJnoGiAsG/YV34fcJx6rLwTUZneya3PKKNTJyGOY0yvnFtPZDh2pDOQfvS6vpuMpDncubr4BGUZfLYMYGkZrrRzA6FtzXmJ9Z05qzsSKtF7cyDc30fApjt9DAaDtABPtzvlYu+lpSVcuHAhgeJz585hdXU17W/Od6vAjzyUWg83OpwiK1nBmBqoZRPlbpFGgwjo2Z+rq6tYX1/H+vo6NjY2Uioax6DT6aDT6aDVaqV26kJTnn1BUMMF1bxHAb0qW9/3Pjc2ZX0ZeUE8nSFXlioU9RaqEqMQ9oiGlucGhpady1vWb6VxsiKSRR6m9/rl/nbPuPdjZKSVydXTgKBxsm3aqIzHCHYZfd3d3cX29jZu3LiBK1euYHNzE0888QQ6nQ663W4yxKn8O50OBoMBFhYWsLKyktZDeboNdyHa39/H7u5uMjYApPUfygv7+/tpHtZqtSxonwbyM2jUoRGBK09xjHS39htlEUE9o0nsHwDJmUIn19WrV3F4eJgO6tvf38fFixfTDl98t59bAJxM5crpGOIG4HjtWq/XS2PNOXd4eDh1azMcC0VzOXKU6Hck2yKnnsoWNQi031XPa3mRzNR71QCgvvI6RBHeSI5rGxT7KP6IMJoaDDQu+K1ZCMr/1LvETfwmra6uolarYX19HfV6HcvLy+l96jzTtEtNzaIMYZRN10ipEacL4dWg8CiFzk3vW8fcTlGfRd8RTs/RqRd++wscdEdKLfrtVgCA/u1AXK/lyo4sX69j7v5JO9WNDf8oM0R19uteths8AAqgza1bfS8BnFrxtOSVYRcXF9FoNLC8vIy1tbXkfV9ZWSlEMlT4eKg6MhKBoqDR33Njpd9qyIybLHeLdDEl+4Lgv1aroV6vpxxxAhwKo36/nyJLkVdUPSOMVPDwLDU0hsPjrWqHw2Eh3YjXnOfKjLbIcBjH55EwUmGpfEqQp1ExluHeF/2OeGTcPI3mtP+WU5jK65HzJJIrCpLL7isbg9yY5MhlxzQaGDqGZf2g4JHyi7nUXKzd7XbTOgwu6O71emmrbQUJ9FgCxymMTJtSubK4uJjOVKCBQTlJPlVnGw954/yaVtI6A8jKU5XT0RyJjEHOb/aD6iOVQ5VKpeAw6XQ6mJ+fx40bN9BsNpMROBqNwgNEHcCqXtTIrI+D1oWGIYDkQdY0smkkxQVleGWcgeHkZSpApd7V940rb1wb+J2LXLBOubZrHdTpHPWLy2ePlPsGCJrqrOtXiZW63W5yOqgu+/+x9+axsmVXff+qO9atuuMbul8PdnvEiW2QicMgiDEExGQTjAN2CHYDAWwRIYhQRAhBCAhDEmLjiDFGigm4HRMSmyEBAWJIJKIIQyYHAfHUDqbbr7vfcKequve+e+v3x/t9z/2c7137VN337utX7dSSSlV1hn32Xnvttb5rrb33WVhYqIKGnU7nBNZstVqVblpYWKg2ZnFcyLqSR6W+zOwYZZ+YjI52E6+byPsgm0XgdFujiR3t3pV7xFx578LlvzMP28FBVhdnohSH6qM6MBI+7jN8kCkbQmNIYck8S4+yiBcl3vrzXXB5nWc0/HoNGhlmRc+1zWOr1aoieysrK7GxsRHLy8tx6dKlWF5ejnPnzsXy8nIsLi5W/NPuK1ygxD3kPX2qfmDdswFE4WUbshTppJGmV2jLxFarVUVT19bWYmNjo8pizMzMVNM+FI3d3t6Ozc3NWFxcjHa7HQsLC1VKVTIm5SdnRBFCTkX0tRB847fkThFN8ZRKtwlYeybJDfoowJwZ/1arVU1BEQj08eRlZ2t9XIZKcpU9v0lZs/2MhGUZHpHqJ1kQ4PUdTDJnpaSDRjkXEWUgMUnk8qJj4jmnGzgoUBZWzoa+uXMRAyWawrC/vx+7u7uVrHHHoYWFhWrhrzIgR0c3XxanLCN1ZsSx8yHAqkXgqsOkEXWD6+iIuoyQN27TMtll/ygiqx0Il5aWqikjy8vL0ev1Kt22u7sbg8Egtre349FHH42Dg4O4fv16zMzMxMbGRjWFidOY3K5kNlZ6RMfVRtoQAUjZw36/n2KPSaAMWEbU7Tz1mINTEvULcZk/i04jZYeOHfGV23jaiczu67mSMW9nCQuUnC0v13Wq9LYcXOkO32Ze9pXvDdOH06Ta7Xa1zlIYSdOXNYVZC7rb7XZcvXo1tre3YzgcxtbWVhXgmJ+fj9XV1UpXaRaJgh/KCnpfZsEukdZHaRt5ysdpMq0ub35uHDqVk5F1IM9RIDJj7gaURrHkcOg+F7CMmrxtd0IccNATbnIwsrY0KV8/TyeDbTk8PIwPfehDqYHiYIkoG+jFxcV44IEHaoZD52SouSOCAI/mRGr9hXZi0d7wirirLPJDESoqnNIOBLyPDha9cVeMTf09icaAU2PUHoJ8n9tPgCSld3BwUCl0/faIhO4nIKPBJTm4oOPBHUFYHvnusi3ifx/PpTFDZ6FUjk/FzAANnR3ymuCDusidCMqOOyKsX+ZoMOpV4rffzzIyxyvTi9k1fiwj14OuPyaBssyOeCN5lr6ijPN31h7JD4MmMtLD4bDSfZqy02q1Kmcmov7+jtnZm++xyYIoHHMRxxlMOZB3mh588MH41E/91LGuFZ+k2yNO2r+SfIk/Pg58THL88T7qG07JVRkLCwuxtbVV6cLt7e2Ym5uLq1evRkTEyspK9V6mLHigtvi4pj7jcfWhgjfD4bACmFqkO2nk/ZRREwh0e52VlTkZzMpRXtQXrBexlYNY2o+Sw9PkZKj8Ei7MZMFtR5bBYNaCszyy90qwDrQzknc5JXqezsmR0PuwDg8PY3l5ubpOzogCuHIypLPcuXDHicdc1/PjcuH3lng5ynaMg8FONV2KROWi8/Q4KZAlw+r3liqceax+PGMmr/douk8vYkepPN5b6jx3HjIF7BEW50PEzajYr//6r8fW1lbahnHo3nvvjde97nW1KTERURlrLZhU5EaDSZ63HIuNjY0qk8HshdLMbIPA6+HhYW0xcqkvHVRQZjh4SU2OxqSRy5IUjRZcytGIiEoxqU8YjRU/BoNBTU5brVYtW+SOgerAMac+4htwswXNAtDcESNrF9PTJcc8A+4EKbzXeUbHh1MXCPKzzGAGQkpORdP15Ks7GHQyfIG+yuJ6L30z0+lOqBth9nXG/1ulcQzC00WcTuh96ZkMn2/vvGJknhsEKEiibSEjjt+NsLm5WY23paWlanpUu92upjIqSimd1m63Y29vr3p3kDIYGju+O82dpM/8zM+Mt7zlLcXzGYB0QBFRl0FeI6eMNsx1AI+J91wIy7GsPhRPxWdtY9vr9Wpb2y4vL0e/34+lpaVYX1+v1tCU7APrzPZQL/o9Wts2GAyqzBinDk8KZc5CRtl5HsuAc4k34o++Nc5oi3TMM0XZs0t143h3h9Vl0x0N2h7pArctIult7ijFwICOKXtBGWAWTbb36Oh4h8eDg4Po9Xpx5cqVKrAhPtOpVaZ+Y2MjlpaWYnV1tXIklEWVnvEAoDtN+l3KZNDWeB+LT5kz6DbR++pWdNvYToamMPDNmv7w4fB4m0oKW0mAVE4GSDIvLaLuMbuH70DCnQMKIMmBCMsqeY7jMrukqEvtvF2iImCEmlkMKVIBz5WVleh0OnHhwoVqWo/ebislo8xHRD2SJZA6HA5rCwo1EH2wl9rpcuTHPZo5qaQpSZRRGkaCEYKSVqtVOSJ8H4PSnprCxIWbAkDc253RGfJKyk514RoOT4urTqWMFB1DN1hZ//J4pvQY1aajyTqLp5JldzCaZKzJAcr+Uw45naBpcWnJoWGdHJi5PpGxdn6wjMyhK/Gc554O4Hsaok1glDGibDwlB5RZz8JpvEh+5UjrmOZCz8zMVG/81hjqdruxuLhYC65oFypmMSKi5oxL99HmPR1UchrdvpTGaSbzJdnyPmE2wgG9bIv4xsykAi1a76cF39vb23H58uUqyKLfCwsL1dqNCxcu1PSodIk/g/0v+8U2qC/ltPT7/Wi1WlU2axIX7jdhDp7LwHdEFO1nhod8qpX4S4dC3+xnPYd8JgbT8xjYZfbDZZBA1x0IlaP269ksX84tdblvW8uZHfpWnTqdToWRuBZS0y6Hw5tZsO3t7cpJXVpaql4yGRHVpgKHh4fVO6ykb1S+nuE7GmYZrCyI3SQb5ElJdtgv1K/CdSoncwbHobGdDJ9CwQfQk3VQxYZk95acjBK5EPKYgwY+w59VqosfKwGCcYy2K+gMPJB3t0uZN8/n+M4Fmu+nhchyNhTZ43xLppIpaPK45XwuLCxUESIqm6yuJUeVvKXSysDdpJEipnLKvZ10MtwJUMaDwJqGwbMPms/pa1Uc0IqkxNTv2Th1sJdlGDNnfBTR8cqcyNJ4JFDRdTJ2LC8D7FmZIjpKfo0bQPLGI+5u3EsOBj/uHHmfuWF2/dkENlSX7JpJGjee5cmcRgcn/E0HQ+3NZMmnG8iB7vV61XGNuX6/H+12uwIM7Xa7ciAWFxcrJ18ggXLogbW7TZn8OIlvkrdszFAW6czReZFToWc1AUJlOzQNVPzUi121qPbJJ5+MwWBQWyOztrZWA7sMWHiUW8dEDqyZ2V1cXKwy+lkQ5G5T07jPbCbbzT7iFE+ez/AYx5b4TQdTelj/6VC4vSvhPdd9usexHJ0SEs952QzWRNSzpdlUKX5UloJ+nU6nlvnQe8V0vXaUZJkrKyuVg6z+0PR0lSt9Qv5RrzX1cxasymQjsyeZfJNvmc0VMUvv5ZZobCeDb0LMDCqVjz/YlS8FzD2oDCxlwiXQ4gLIF5t4p5CajBiJwumKqjToPeLqi+f4PLb3dkkDQ8+Q4FNwtRCIA2hjYyO63W6cO3euAroCuJq77IM04ngnKt7DNR6liFDmDJJf7AuPRNDAsaxJoU6nU0VTqdA1NUrgRqT+0XQ1KUe1k9fKsdBUDu3EwgXdcl64iJsyoEyJQFPEyW2cCQA5FSXieJoBQfo4gQH/744QDZjS0w56GLV24nSkrOyMmupNHvAYozlsy6i2Uw+xf3xciZ8+RWGUY5Edc/08ScS+cf3qYMH7XPdmTrnuF4jkeyFkM6TXND54j3Si1gJcuHChmtqg7K4yiVocTsA7aUGQJvkYx1llH/C8+s03MSg9W79nZmbif/7P/xnveMc7qnOUf+p36YIv/dIvjVe84hUxOzsbKysrsb6+XtvkwvGEyOtO3RYRldx0u92qPM2bnyQapWNKeknnHA+xLzwonOlzOeqMsIt3jHrLXmgbYDoqlCW3ayLqPz7XHdUmx0htL8ltlgnwchTI03TLc+fO1RaHz83N1d74rXuZieAMD+oZyTAzrE2Y1+0M7VyJ1H7vd+d5Nla4DkRY2jFXCVOX6JZ3l3Ivkg10DzYTiMxjzQTcG5aBjMyDdU92VFtYbgnI8PpMCNwhyUBURqOUyLhER00DnpkGfxGTpgNoBwQKpga8Boe3iQ6Lnp21id6097ffR0PhSpJKlErSDcvdJkUo+PKdiKgcAM37pFMWERXAOTw8rPbaZ/aCi8e5gwVfIOWR9wwsZBFg3uP3ZnLJdmVjdhSI4TNc8UccR7c5lr0d+u/1V90YiGjSA5n8laiUgSjxiNfSocsCF15epl9KPD2NAzIpNIp/omxsO3DJgIzrPpXDtR7cH199ND8/X0UqtVtUp9OppoxqASd3b3OjP67duV0a1e+ZzDSNcY7DEl9djqmLCRIzYKmxfHBwEFeuXBm7ndeuXYsrV65ULy7lDjzuhJbsATEHj0UcvzuEaw8nkTKsRQeD7xFRGyTbjNDru2Q3S7qGGe6I4ylMXAPqGQ93Egh2qftK9mQ4rGeuM4wwDpXwpZ/3SL7XX+Nedp4B8qWlpWoNmL/jpdU6Xkup2QfUS8Q55KPLbYY9R/Wh4/GMzyWsHnFy45Rx6yC6JSeDnaEHMVKUNcSVlKe5MhDKTAWjC5lhcvDBzhslXNlvb4PK5mCl4aLxKjkYmbIv/b9V4poZKX29S0ELig8PD6v3NvDFekoHen0yAMR1ABx8VCyu8CgzzkN/Tsa7bD7gJDkYETd3cFEannvyK60qh8DHDOdoRhy/9Vt81YIy7RCjaW5ShHz7aMRJJ8OjFBx/7CP2O6c96H/E8ZjyyJM/Oxunfi4bJyxbzgYNW5bxlLy5I8yM0jhjrKRbSjLpfHZ+sJ7iHTNM7mA5byZNvs+K3E4QfIjYD5mBdNui6Jscce7qIv0hfisyyZeRarzNz89Xu+ptb29Ht9uN9fX1KpuxurpabUvtRldj8U7TKIBRckZ5LstgeiZGuomRbOksZoG47bWDSu5qp3JOQ1evXo2PfvSjMT8/H+fPn4/FxcVq8azK4nTebLoJbbjzhzZzVFBiEqikSzhlh7MoCPppA7iOxW0x5cCdAck47Qr7WrJBXc3rIo7xX6mvJC8E+tLlzouSPmZZ3k5vLx0LD0wog6H6CDstLCzEcDisAn2adr68vBwrKyu1aZUKIko/6ZjawHfw0OGgfaNdGyUbLidss2N38orH9Fw5URFRG8vj0tij3b1SVcoBhoPG7FjTPfovASRApeF1gdJ5Git2kH8yB4kRrVGMHA6P913WAHcno6ToS/y4XWq1WpX3TKGQQmi1WpXB1cDQQBkOh9U7M9wxc+VNJSVjrh1YNJAcCNIzz5w+B1ejpqRkcjYJpD3hGZkhKOeONJxfHHGcBYk4jrjqGkXvBJo4Taokry7vnPrkGSKPJGUK2+XCAwX6zvptXICv53ANGMeS2pI5U3QsMoVZqo8DrayuWbsyY6ZpgirL20cZb3JQvG4lXo3ipbdhUiiLrJFKDgbPC2AxGzEzU982kmCAASJufqH6aN61FofrJZe6j28C1wJxbkstG3m3QGrmRDhR7qgDqAcItFutVgW6tJ2v3ssjfe6RX/533cT7xyXNg798+XIMBoNYWlqqovbaoUd1JS+c3Ka5TmFmfhIpcwg5LVZOBrfYpt1lEJAbiMjGsK9KzpbGEfU9s82cNsVpVbxO49SzK/pNHU5HQ86NyqccU35LDkcTX/VM1tfXoTI4qKzXzMxMbSc62WfhIOp1LvJmoG84HFbBRx5zG+341NvqcuJtzLBw5kyKfBzz9x1xMjJF74axZChPWy6PE9CUvDgXUr9ud3e3EhIJqW+DmSlZdb6TOswXDDFl6R1W4s1ZGn4KMhdl8d0bmgJAhaOIOx0mOgleNj1+Tt9xgyteEZwSCFLweW22QC3j1ySBJpEcBQEWgRUNTEaAPGKSOQHiNbfRpCPnlAFfAgE3JDRG7BeV5X3gSo7P4ve4SijrQwc/JUDvzpAHF1QGZa2kkN2Z8jo2OSe8jkBzlHyW2pSBpSZ+jsvrSQJQp6mLrmWmg/qX0T8ack4rpBxwfPpUKpHG1mAwqABaxPGLFbUoXABDL86S3n06qAQm/DuTbdo56inaMvGKa+wExBkNJSjkN/UZddxpMxmq47Vr1+LGjRuxurp6on99W2+3LSIfm5StSbQnEXmAJMMt6jdfhBxR35KY02/pdGROxjj6Uv9pE+h4EFDzWBbQoZMqOWE9vS3uZIyjp52vfHbEsU1ips6zCpI5ZTCY3RAWovPrmRKX1Ywn+k295FkJOoN0mkfpIHf+iWnVfo4T9pv6YNxgytijfW9vr3owG+OKlcBI17Bh3tDsOMkzGLo+S52JaWTM9vZ2fMd3fEc8+eSTVf34LcqEcm5uLr75m7857r///to5RtA0r5dOSwYeCM6c1J7bpZmZm9uaimd686q+FaHTM6W8FZ0bDofVrh8uhPLeNZVA6zm0pzyj6x5JZipd/ZilbUtAkO0jrwiIJ4WUwle9Zmdna06e5IeGgEpfCkz8kjPBBfaMhEi5cu9vRojodDLDRIOkermDoW+OqRLgFo0KNHhAgsf4PAEfTfGTQnfdQ1mhsmW9pT/cMHkb/Tpvr9dRJBmmo+YRbbWXUUOOM507LdgZR/5L4+luUlOdvD8iTgLZiJs2aXd3N3Z2dmIwGFRTNDSViR/pZq13arfb1ZSo2dnZahtTXafsrLa1laOyv78fW1tb1fP0VnFmju8GZbqTzrrIwSkj4Aw28SWIKlPASm8n1txzAkKOO45vyfzc3FwsLS2dqm3Ly8tx4cKFuHr1avVeoatXr8bly5fjBS94Qayvr8e9995bBblkywSYmsaUzpcymJNA6kNG0+kg+iYfbgcY0JJccwvfDPjqudSJ7tCwbsQJcmToWDDTxWm2rqs9s8LdGvf396t6ZpiBeJB4ygPIuk9EneLrrDh9nNhW77JQBsP5mQWN3LFtCiyxDnR+pKPYHo1R4qxxnQzxh+t5ODUscxT5jHHGzNhOxmAwiIioRYBY4awBzrySk8Hf7IBSmaUyRGTE0dFRfPzjH4+Pf/zj4zUUpBet+IDQgObHp0iU6lU6dxaUOX0SksPDw9qOQjqm9vlg1v1U1PLU5WTwRVWevci+s8Hm0YOm/s+iZZMGoMRHKSAHty5LHmH1NioiIh4z8krF73NxyVsHrzRSGe/IUwL1UlDAAXk2rkcpWJcVAXZP/7sz7k4Ln50FKLyubL8bV7bfeeNOjMpsChbQAeF1rDczTqyT18/P+TUZTdI4yRw3/nbA7P0sPczscUTUHGruPqXr5QxyCocCaHzxn8CY9BvBh4w5r2ff3in97jRKNpyHfpwghQ4Hp6CxjeKreKDyGLyYm5s7sW6RDjS3Ox+X9E4NvWdgZ2enmnK1vr4ew+HNaVOZ7inpqtL5SaRsOhDxBnW5/yfA53oDn3XAwIeIulgfjZmS/qRDS5tG5yPTwbxWRCdJ8scgJZ/jz+Y4dAdDz84CF67PXe+4HPsaC+p3lp8B8yabyvOsq99LnEvHy/uwZDMyG+x1IJbQ9ziZetHYo/3atWvVm1PpZTpIpFDRo8samDWoVHFXHm7gec4F43aI98vj49uz6WR4HUpKLgPXZ0EEpRzQiozLCEhRKHqlfZ4Hg0FqbNSnylasrKxUUREqK/WHK5oMKHAwcm6oiErC+cn0qSuPu02KjDJVHVHv9xIYEV+4BZ76k+svVJ5AAGWR60H0jGwXC04x0bO9rplsjiuvDrYzxVd6Fo2osm88L16wTjQUrshLzymNTZdhtcezH9nzMweBPBYI48YJbkh8qmKJdyU6rfNxN4j18XGibzqImZwSHEccZ1u1FoMfyRSfKf3VarWqaKTGkAIpy8vL1Xj0CDHHmqbv0CY+XVSSdb/GP57R8DcfyybwTdiaHbCyshL9fj82NjaqDUQo/yrXdbamfp6Gzp8/H8997nNjf38/rl+/Xr2o78qVK9FqteL69evRbrdjbW2tepdGRLMO0nkFMqgfJ424KJiAWf3I4FI200TT+fRRFL7dbtfAM0G0g2J/vq89pczpGB0SOjqZI6Pr5UhQXhQckG2knGXOTkQdP9BJ4nQjZqBLsyI8C0PMwg9nDGSzBxgQZbBsVFDCHR7WQ/0i2+RBXm+7SPqLjmUWIKZTqXpybI07ZWpsJ0PvS9je3q4GpiKsnvZXA1ygVHkHniWg40Rvzj1ACpR7fbdDmRKWAla0xwd2k4Phv9mRZ0HqfDkZokyBHB4eVgu35XBIYWnHFb0fZWbm+B0LXABIzzZLRWb/M+/c5y96pIH89GjwWTpqt0uKsC0sLKRbCjoYdeWbKTQHz0yP0iHknNQS6GWaveTwuqMeUed55pDwvqzefL5fm8m+rvVF9MPh8SI5ygf1Ag0feRERJ2TU9Y87ciqT0wM4dnXM+eXXuj5i35NPJZ1RGlMlQDnpVApE6H/pOIGNABR3kGq1WpVjwQAIeavfAl+dTidmZmZq0w4ZrOF4k8HVphl6tp43Pz8fn/mZnxkbGxvVRhoR9QyLgyWuIynZzYj6uHzBC16Q8iqTB93LtvtYZUSb2WveK1u4s7NTy3LIwRA/lc3NMhqjQFVGy8vLcc8998Tu7m50u904ODiIfr8fe3t78fGPfzwGg0F0Op24ePFiHBwcxMbGRi371DRNJiJO6KlJI989KnMqI+pOhfpAvzXrgJk5TpFyJ8MzBQL+wjvSwVy/k+2MREeTds31pGM2dzoYVGQgJnNYIuqRds8CRUTFJ9m/kj5ye6xxK93CgKBvN8+xzPHHKYjqN+eHO0aqC22S6q7f0ldZ8JC2l7wi/9SXbgNVB8dlmb3K6FQv42u1WtHr9arBu7i4GMPhsFKODggzgXIA4NTknfI8y8wAfWb0b4VK0R5Gd8hs8sCJHU+QNIon4xJ5TmPihsQHn14qxWkpiozTyXADSUXkAydrd6m+EXFCAZXqrLoQxE4SaWxIuYvHBPQ+RrztfpxAmMpcRofrOyLqUQ8fT5RnUpOD0QQSvM+ztvh1WdSF9WTZnAqjeySTNJJUwLrXHZpMZ/gx/nZngpTJeslJYQQtcwLdAWlyGvz3KL0xqcCpBJSajnl7GaVdWlqq+smBlIyvG+mjo6Pa27wZRCKoiYjaOBZ44M56AtczMzPx0pe+NJ7//OfH5uZmdY+yHArQaKG4nBVtYc0pXm5DqO9cJzhvHEzTHugYQZvaxagxx7v4JTsh26B7ut1utFqtar6/9E9Wl9Pa5KWlpTh37lz0+/1YWFiI69evx+HhYfR6vWqdRrfbrcBvt9ut+r0p+PVMcTK4fs7xBuVA7aADK7nTjkdclOyRbHc2qZNpNzh1iZhB9fCsiupK26C6i9yeE/zTbupaOh6j5MmdIbVZttr1b5YNYiaFAQFmKoiLfMc5t8Eid5T4fM++eH+zjm5r2AaXf7WZfVCaakWnhTrEncImGtvJ0ILig4OD2N3drd7sLIDKhUV8QZgrFSp6Ai8nBxzZsdJ9YtCtRE2cZHQGg0H16ff7lUFSPTLQIspAgwOus9pbXQKuemUgNqLOJwkSd95SJF7zlVlnn6agdui6EthyAVZ9JEsy+prC4HUnjatgnm4S77n1JQcqeePA3XlGpyHi5NxcKXgB8VarPpWMyo0pdZ/K5cZWvz1ixGOiTCFnDhKNvYMeBz8eIVFbtV+5ZEZ81rxY1pPgUMRyHeyLR5nMZoBtFMD3fuQ3I35sP/mTUWkcZddl+nPSqMnR8OvEN/FJgHZ5eTkGg0Gsr6/H/Px87O7u1taK0cngmBKPZmePF3G2Wq1K3ztoorwog6GF41rwqToSeHFb3NnZ2SpLoilzig7LQSEIciDg42IcvjbJAHVsRFSZaY15LqTX+Ltx40YMBoMYDofVwvvhcBgrKytVGczMOEgZVaeM2u12rK6uxtzcXJw7dy5arVY89thj8fjjj8e1a9did3c3Hn300djb26tedLq+vh7nz58f6dQ4yJs0exJxMoNHWYw4nvbCaaSyo3L69M0Mhgf05JSUgkSsA22JglySj729vdp4o41gvWn/ZC+EHZWJkWzqvMYidXwJB2TOEXWsByBEWQZBz9A4ZQDDHRBmLDn1NRsL0tPExf581Zft5BhnBsPbS31CJ0v3ZjiZsxzYj3rWaRyMiFM4GRQ+dYR2Itrb26sapkpo3lnmqZEc9IrGMZRN95TKPS15FsM9dweI9P5ZhpMriuya0xIVBgGfbwHnPKFAe0aC/ym4vIaDJ+JkNqcEjDylySlT7qSyzpnCmhRyxS2Fk0UkRjkZBL5UQFz0RznKlHZEvhWensFniTJ5dmOk+6hs+Gx/fqnMzNHIjAbrL/Cjb8mLl+FBDh+b/oxMZ5BH7mD4Nc4/nue4cSePfUD9dXBwEE888UQjGC/px9nZ2bhw4UKj7p0EapLBUdcxE8AXjgqoUF7Zb8wiSz/KeWHgw/Wb6kWAof7SBhoC4Xt7e1W2my8mU124+Jk2k/o2s2fkDc9l/MmAvUdJXX9QZ0XUnQbyhXyUc6UMP3e/kx0q6aBxSPVqt9txdHQU586dq9aK6KPg5+bmZly/fj1mZmZqOx6SX6Xxelrw9HSR92lEvb/c7stZUObMFyczS+H2IlvzwDqoH9Wnsk/UaZljQUddxPoTSwkQewaA7fcxQZ5kfHI+RpwMqulazwbwnAfRnE+u+9mHWZ9K5zAoVhqb/pxMPvx54qdjD6+Ty5Prjkw/s95NNLaTsb6+XjFBFZH3ygh0xLFiEmWRaFITiCSVBKd0z1kAUKbQ9eHcXBc6EQXFIxBZPbmj0+2QFAqjEtxWNjPePp+fbVOkjcCW2xu68aDSKvWpC6syGVojwvdKLC0tVYOb9VUdJ5FUX40HRhf8uqaoUcmJ84FP5eCGJCJqhkDHPMJfMgA0SJmc83p3ROjUZspfpOu4gw8dGfFPTr7awnoI9PF5BIEEiQQSNFajDETGoya+SQlLZlUPLqDM+lblXrlyJd7znvfcEjBbWVmJr/qqr6rei5PVf1KoSTc2OVaK0HY6neh2uxFxvM6MWQzJBUExxwOzqAooedaPWVtFhSOiWh8gnUg7oYy/9JuCDbKPjDTq+dKD6vNSlFbkDoa+3Znw8c62OQCUzRDvGGg7OjqKbrdbG6ezs7Oxt7dXc+KVZXLnimBnXFL9NRXqgQceiHa7Hevr69Fut2NrayuuXr1avbBPU6qOjo5idXU11tfXq5en0Ukq8fMscMNZEuvLIAoDWYye8/0hmp7n047d9ggj0EH0oGQmV8rCaSxxmp9su+S5tBZBz1dEXiT9TVtfcizYFvJNY9f71fnIDIXqyEADr6ezkT2Xz2JAQ2Pd26D2lZx/J3c4VIb3leorp5A8ycp0HjOT43iDmGMUnSqTkTU0Impep7Ib3PpVlSRwyDyv2xncVLY+kG6HHExH1L1eB2K6R8CboJyC4HW8FSDhJOHPdibKBoN7za48OMXG6y5+Z1OnXKllgI79L0XAZ8uIc+9nke5VhHCSKOOTy30T2PNr6Pg5sWzJoAMrBwMO+DkuWSbrT6XqbfN7+M36R5x8EZauoyJmPbz9klPpFs0J5/gpKT6XWz8+bn+w7pk8l4yZjy8fd97nft9pqSn4MolU0t86njkZkhnKPD+eyaDTSWMp+6WyuPU0p7ppDHIXqcPDwyqarrVs+q9pVwzAlHSt6pGBsVH8Ik8oW+4oqf7uZEj3Zo6vOymtVquGBXQd1/AdHBxU6zW1Xob8Pa3OFo+l09rtdrW4+8aNG7G1tVVNRbtx40a1FmZ5ebly3qQbHSy5PE0ieZCSoJqyzsxe9iZ61+mewcjGjYN2yZ2PKY0Fybh0unYHpH1ne1gvlddkJ70NpU92vf77TADnq65t2mo5s4UeGCP2pbxRBzHIUGo32+P2Vfd64Ey/GeynLOk3x7Xzgfqi1Bfj0NhOhk9H8EFKYMrojb9Tg9TETP6/FUNZErrTUpa+IrDzLA07Wrzgrk0iAj5lC24XEKiskpPBZ7J+jLjScfAFXHqGOyrK9ugabtNJyhxJPU+DRc9VFkZT8Jw3HACTZBx8QLoSakovUuHov5dZkutsLijBTGY4MkUbESeMkhuoTNHR2Dg49Ahy1g6VQb6x7ayrHE+9nEl6RnzIIkukkh4b1a9engO90jOc3yUH4045BpPsaGT9UNL7Ph4IlLI50qWxMhzWdyhzR4b9mjkZGmMaqwK3mirFl7QSTGn8Z45GSS7IJ5dbp8x58cwMr/EgGIGgP4O/iQXUdr1HS+NS03SGw2HtPUrMOI5LrNvs7GyVSdJib+04tbm5GVtbW7GzsxMHBwexvLwcs7Oz1QsVM9vj/5vG9N2iEiiXzqTD4TseuS6POGmTdD0xQsnJ0LePmZKToTHggTbJnz/H8UYTuM0cCLdLDGLR9jrY5v1Z1sevZd3c7vEcr/fzJfCetZHHHXN6pkFtdhxAnmZ6iH1b6ne2md9NNLaTwZRTBjo8euqK0wev/5YQlABB1rk6XwLAFLjbJQF4Pod8UDvlUNy4caNKo/f7/WqBlIhKQfOJz8rJ0FQBKeMskyF+crE390nnO0BYvhMdEykOOpgZ2MoEWHVRFLHX68XR0VE1D9en6XBgTJKT0QQUSlQaF6VjHHP6z52/dN4BrI9blp+BmlHpUCo8dzLIi8yhUF8y4sNryU8HTwQ4ypxyO0JGr8+CMl0lUjs4Fc35wzYR/BHQ+fNoBG+n3pMGmEjS3ZneFlG/6L8HfGh/Sk6GyAEIx1H2/KzOHHd0oiOOo5/S7ZJJTSfWDlKST77ULgvqlJxgN/yuf7kgV2/y9uyGrtOW7NrQhA5VZj9pS3zqrAJEi4uLsbu7GxsbG3F0dFS9T4Nb3I5LmS4SMD5//nz1BvErV67E4uJitcXutWvXqv6/ceNGLC0tVdvtMgBGp3USyQFipktLTkE2RYllZIGOzBlTWTon+dUxjgtN0WTwhxvI+KyFzDnwtunecYn80BiVI8QNU9y+kE++DjkiGm17CdfonGcNqDe8T9WGUj9TfrNAMNvDDK6u139hNI5Jt3fEWpljOIrGdjIoDGpIJhSZN8fKZg2h4PtxXZuV6ddlx8/CyfByvPMzL5Hb/EnJK9qvjp+dna1elDccDmNjYyM6nc6JlCXr4N+i4XAYz372s9O9mn03iYynjC54RkrPd/DoxtCjYJlCdEejBOAEHhWtdvnjMyaJXGFlY8CjATpHctAl3nCAUw6zNDeV67gORtZXWRtLBo4y2dT3/rvkXDVF/l1eW61WTfmyfaPoVmQpcyqy/yV+j3reWTgZZ1HOnSDKdHZOROfTgTWvdzlsclz0nzLsYzL7Vtl0SiSDNODMwKoN3DWH66VcnktykdlHv4fjxXU4g0l+vN/vV2/S9hcOZmAis30CnGo3twbudrvV2oBsa95RREfQ+0qLm1dXV6vsEdumtTGdTicijnejc/Aofk4ilWxGCXMRwFI+/N6mjCqfqWtKmT+WyeBpRNSyJLzPHYxReGEUX/Tf9QoBO8cdg0NNAWwf7x6883uyfsrqzfqWntVkO70vPUjHY6pzSV4iyms6Mplw52gUnSqToQc3gWBPM2UkheRMa6p8BkoycML7SotUT0Nqlzy94bC+5ZfawkiRMgG9Xi/29vZie3u7cjiYcpcy1h7Wr3jFK6o3l+qNs9wdQou59BZazo1VvRQp4n7rzGRQSEqOBd8D4gvSqRAYkfW+VVku9ASj2SDlfYeHh9V8Xjlj2RzD0xqtO0nkKQ2+O2WnIecd11/oWLYrCA0No70edS8ZjJKid6PH6DGvycrwwETGP374DpDMIGq8aQMKpYdPMyXDneXT9JHawCl9o+TRjRQNl9fprByNLGNytylzAjJZi8hfWkpQ0zRNyo109pysHhx3ih4S8Er+mMHm1FjV2efNOzinbiiBvszB4L10IuQoMLhF0K16agesnZ2dGAwGce3atWqbdtl7z8S5LWDWnFHimZmZ2N3djWvXrlWZknPnzsWlS5dOLYuykWqrB+va7XZcuHAhFhYWKlva7/cr+3v16tWYmZmJwWAQc3NztS2HMwwxaVRyqkv60zeZoM0g8FRZBLjsa0avJZeOfei4Eh+22+1KzobDm1PmhCkyfMDMmcZJ1kZmvn18qE60ebRDynYrwzg/P1+NES+DTpDaVNIZXOOh+/ntOofXlnRTKYvB35QH9mlE1NaV6Zk67zOOJDPsC7dFbLsHOUfR2E6GExufCQQVoDsU+p11RmnglwyuC5eXf7sAtJROZ/uYfhYw5+I/f0M4y1VKUfu6z87Wdx3RNYoMceeUhYWFE4Av65eSgiFfPeVN40Ulw/7yvqMDmClGKjLyNDOeWitCHmb3nAUQO0sqgYcSP0rOtF/jCib7+MDPohusp1OpTk3XlUCct4fyV6Isdc1NE1xpu+y2Wsfvz1D72dYSgPXfWR80tZ/tyzI5mUyMs7j3dmnSxgbpNA5G9l/89jnopcDSKLnODL2DM1+DR7nigmYu3naAkNm2bGxmzoauzeTJg0Ulx5yBML3/aWdnJ/r9fmxtbUWv16vWldAJph3J2sRjcnCuXr1a2cGjo6Mqo/Cc5zwnvvM7v7Oqk86X5PWv/JW/UmWzyQP2lzIay8vL0e/3q8XeqhfbrH5ln90uTrjTVBojESez5zomW08QKuCt35Qf4hqWSweCQFQy5m8i573EIJ5hp8PgMpRhFN2X2bGSA846U54VkOL21TpH/ikzR12Q6X3yyevp4zvLLjXZUOdByXZ7gDHiOPiVZTkcQ2V4Wde440EbPIpO5WQ4QwiUPYtB4aUwlSqZORhNjc7qlgGacUBTE7GNrAMFhZ65Oxd0MgaDQcUPgkINVKWX9/f3q8gQ+eOGrgR+OFA5uMX/Uoo9M1SMguka8cUNjf5nxo3Cnyl2lwPuIDQ/P1+9ZEnP5mCbJCBV4uutgPrMgLuy8z7mh3KW8fo0dSldmwHu7PrSfRnP6OTSycjupzMcEdW6p3HbUlLcJYWcXRNxLJPeD/6McTdUOEsHoWRA7ia5I+AG1oGOiPxiAManZbCt7EenJtl0XZqVof9cSO5BGde9+va+d3lhNDazje6UZ/rbwbtkUIC73+/Hzs5O9Hq92Nrait3d3ej3+5WtijieEcCX9YnfnH6k+g8Ggzg4OIjt7e3Y2tqKa9euxXA4jF6vF/fee28873nPi+/5nu+p6qw1FE2Od2ZL3Alqt9uV06IAnNsyvc2da2fcHk2SPYk4GTAtgVAC2wxYqp8E/rMgGOWKupVlRERt3Y90dFYnjVN3sl2+1S63dSrHwbvLNOUhor7uwLGSnkG+0iERyalVACvLJrAuKiezJR6YcDln211/ZYFhd7Yijm0Qjzs+K9VhVHYxw9Lj2pRTORlirOaV8m2SDjgFunUfK5k5G6q0U+ZtNSkBlu0e8a2QpimR1C6PCMmRUKpW6VotAFdqTkpPNBgMartxdLvd2s5QEVE5IDSqDrYJQEkcFBkApnFypaPj3KZRhoZbOaruFESm8MlPZlRKYEOKbTAYVM9SP3CREh2fSSM6el7PTJmIeNx3+8icidK9ESejXOxz1aO0C0lm2B2URZx82V7WHt7jxpwggFlByY7qwOkq3D3FnY0SnyR3rj8yZ5UK2Y1aiQ/qLwFOlu8Ou6J/GQgc10FqIva56jlJ4MmNPr9LOp+gMiJqWV9meJucjCwL4QY+kx9RxsMsKkjgwr7g1AoGDSTL1Lklx6jkkHPseFDIdUjE8XoSAUXKo9sF1ZXjTlOPOp1OtfiabXziiScqe3j16tW4ePFidDqdePDBB2uL4BVQ8/UgqnM2LgmQ9d1q3Zy+tba2Vk2bkt0SnxW8UhlylKRXXDYnhUo6n20nqKd9JSajflH/Eowrg0Xdy3U2fEUBp+K5LuNYzpwQjgEPirJ/eD35UMpo8D/ti+7ltz/Dy9M5Ts/LnA0fY5mTkem70tjM6snx7vY4K5uOc1OQRPUgHmW5PEeH5DRj5dTTpVRRLi6m4nFly8i9e66kzBv186McDNYx66hbIS5iUj3EdCp1TpfSh4u+fQEet3yV05CtjdAWwDSwJYA6qs2jjHkGeLyd2jmK51WX4fA4QsK5/z7gqYRKdfVn8tnZziCTRA5YOLipqE4DyksfXl8ijh0H2a7cM1DlfVgqu4kfJfCcASY6vJmB8BQ8y3Ln2aNYWf1PU1+vS+ZwuDIvOfVZJPFO0KSNj4h8Wl2m/zPnjgY0s0FN5WfPycaqz09XXbxu7HsP4nDcuK7N6sVyPRhAYJXJU+aQ+bOb9IdnKPSCNd7n5DhAdRfv9vf3Y3d3N65fv14B/Mceeyzm5+fjnnvuOcFrtit7LgGTyMGRAlIzM8eL7wkE3WY7XzPZmRTK5ISy5IFcP+82nvrVHWLq4IjjTJ10qq/3YWDI61HKqrFdDrI5XigPJfkujdOSfifPyEvvex9nWQYhK9dtc9Z37giU7HrWXs9ujENu1zJd4DrN9SUx/Lh2ZWwnQ51BA68o/9LSUqXkGZVUpV1hstHOSB33Y7dqKG9XYehlQnIuOCg5wORUKIOxs7MTu7u7VSaDg5ADJyIqXrbb7SrNq6yIlLd2x/ABmQ3CzACRH66sXbGIOODpQHHfcxoaDZxWq1VTUFI07omzPuzziOMUpXaXGgwGVcaMO5Rkkem7SQQ6bCflnwPdwSjHQOaIOBhyoJDJO6P8VJTMTBKokUqG12VYbfIIRwnYucz5AlWOEwdByvJlc6pZrivhUXKSgSlGTjMQ7PdxnRX7nnqRmyqozZmB+3+F3LBm4JjX0QGQPEt2m3iYgdSIk1MKCHyz8ZnZJM/Oqq+pj7Pxnb08U2NV5ZIHvCb78DynH+mjcaNtZg8PD6Pb7VY6tdPp1LLWtHGjnCPWdTgcVovKn3rqqdja2orHHnssFhcX4/HHH48bN27Ei170orjvvvvi4sWLMTMzU9vO158l26IAFnWKeEsdIQdjb28vFhYWqo0hZMcPDg4qm6X1G6MCEneLVE/ZxMzR0DHKd6azyTPuHimdy6Co+kDyogXzut51tt5wr2yHHD7VY29v74QN8mA1+4C6P3OQNP553h0sypJjhUzPONjXWJbs+RQqL0PEPijZlAzwZzaLz3GsV8IJJScgs8vqq8zmNlGTw0U6dSZDwk7gGFFfIE2lMM7gzZRK0/nsmjtFGgQeaeW0Jy74llPR6/WqrQGZtRAvBEbn5+djfX09lpeXY3V1NdrtdrULAiMAmVLPgBuFscnbZDnMoLCevtBRx/1TchQ4f9Pr5tGOrF681ucZ08hMkpNBQ+ggvGSodV7HMsDpQIy8yxRNFvmgTDioypShj2Efx16eOz3ZGNX1BN38aDx5PTUOGeRwsOFKPzM0/G6SG5dDtiu7LjvvYNAzlcxm3AkqAeJJoJKcl2yBg/iS/JZ0IsvLxpKe4UY/K9dlyHlL/cTr+TzqVo4b6m43+g6qs+mtXh9eL5Jzs7CwEEdHR7XpuRqHHjzTtGDqdoIlYgH95jjV2P7zP//ziIjY2NiIlZWVmJ+fj5WVldrugdSdpf7TszPbwWczAk/b4bZFZZ02Ovx0kGS/ybnQdd73JLWZeke/5VzwLfXUsVkUX3KkvtVuZb1er5JvOSYzMzM1HU9757rdx43rsXF0/LjX0RF3e8oMGI9HHL8vosmelPBakx13+5pd6307jm73e0t6jWVlAdzMmRlFp3IyCA48DcYOcMaMijBllIElHs+uLwGDW6VW6/gN2vL4GQHgxx0MLaZzB4POxcLCQnQ6nTh37lwsLy/H+vp69byIqEV1M0BO0jOY0mzKZPA+Bz0Rx9ucMTKvQeUGkoqBjqbqzagIDSTr44NRdaPMiR9SgLfbv3eC2Ef+ZmAqLVLJwXCelD7Z1A6VSxlg/2bl8h5XgJkTQ0VLZeUOR1Ynd865gJBORrZeJAOGGbD0tpZA4biU8bgEWP15maPhjr2curN0DE5rjJ5OGsdYsZ95zGUzi+BmtqPJqLO80vWsb5aVVh9mssdnOLDyjAn1hfSHiJlJlp05GJmTIbumdX7D4c3MubYddfA5GAxib2+veo8GAaiew3nbslmyc4uLi7G9vR0HBwfx0Y9+NPb29qLdbsfGxkYsLi7GvffeGxFRe5cGHahMFog5qHN5vcoiP7k+kOORMjZpdkV8dhkguRNacjhclqR3hVWY8VHAU84owTjHijYJEP7Z2tqq5FoZI04HV1ksw9fYsd6ZbvAMhtqmc5nT4WUSW7jTkwVR1RetVn19i1NTJon9xesy++o2NbN/5EVJ7/GZLKuJOKYzcvlqorGdDDZCD+/3+7WoLV80xM7SMaagSwbGgbT+NzW4iW7XsGqAcC2FdoziLlK7u7uxu7sb29vbtalSSqtpEC0tLVXRm6WlpVhbW6tewtfpdKrByikjqgcjCxH1wURFmUVHHejs7e1Fr9eLzc3NuHbtWpV5UV3du1dK+ejoqFrwT6Xgzg8zNhoEUmgeSZDAZlF51Ztp2XGczrtFMmIu5wT5GQDWNQ6YS45FKZvEshzgEuB7upeRYkX/uM6K5ZdSthH1VDCnFsqp0AYJ2hSB+/Kzb//tv/238cd//Mepo8P2ftM3fVN8/ud//olx7mOgyeh4H/CarJ8cmPq9PM5yPAPKLId4dxbBkaw+k+ZglCgzjJQzymLp433o/e2GumR0Hbw4CHCd6r8duETUN09pGr96RiZ/npUsOVPusFLeNOa1eFvvVXJeHR4eb/qh6TDc3lZTZzl25QAsLy9XbZqbm6s2QLl+/Xo8+uijce7cudjf368Cbffee++J6Pn+/v4JedC32udjWyTsQeDtfadAB+Vr0rIZ1H8OoP0aHXcZ5LjRce6Gubu7WwV83AmW/MphlMyoXL3dvdfrRURU8iEboN/MjkUcB+EybFOiTI+73NGukT8R9aCUbCDxJR0POv/EQ6o3M6v+HPK8pNNKTnIWiGUf+7NKdl/kAQx9ezAk0z/ubHA97Lh2amwnQ4PVB+jMzEy1e4MAKB2L0scbnZEbmHHIGT87OxvPfvaza4MiorxFIq/RYKJhoaKmUeGUD99tQYLEubDdbje63W6sra1VDoecGUUG3MN2/lEgOQgyg8q2CbQPBoPKOVIkgwOdz2YWxh0M5zkzHsPhsAKtnNuY8b4EGDLjPalOBhVXxDHvaOQ87Uz5HgUGM3CUyYWDoaZPxLEi8giF6kol7nUpGXuONWYu/F0yGjNUeB/96Efj/e9//0h+f/mXf3nt+eO0eRSVrsn0VyZ/TU5INmYzgNRUj9MQyziL8s6KSgZNv3mN6/9M5/BcJgel546yScwoNIH2koPh9S1lgUv8GCW3pesynVCyFyWdr/8El4x2S58T1BEYLS4uVtcJI2i7Wq3V6HQ6cfny5Tg6ujltq9PpVAu3m8ahKNM9DuL0cWDFOjsfJolcx2fOA8ll1OWHmEU6WA6gZx7oaNPZWFpaqvpd7zlZXFyMGzduxMLCwolIvzu4bFspSKbzfsx/Z/c0YaDMUc2eo7b7zB31ATNqJbnJdJo/n1iH/ebBJ6+/l1fSd8QgPOY4IuMdcSjHk9ejicZ2MtrtduVYUHGIGXqfweHhYe2tmiUgWmKKjntHsNGZoSilv9fX1+Nf/+t/XTFYEVNFT6UwXfnSQfAFdGzXcFhfFK366Y2LR0dHlWOhKVGdTqfKXmxsbFTZDWU+9E0eqT2Zw8CUb0TUnAHPLqnftra24qmnnoqPfexjceXKlSqLsbCwUM3R1fVqs8pR9Mp39yHfWU9tPatjrC/Bq8sLBw+jTpK1koG+m6R92LNpECXygT0OOb+4YJuGMwMZVBxUPD6VTxktvgPADTzT3S6njJgpara7u1stCNVUDG5xqHqMyw9GK90RasoanZYcuJSu0bd4okBMxMlsoo/bzLDeDrlBfyaQ17cJQJWMbUR9KgwBdaYvssw6gWhmlDXGfDy5k+E6zbO/brtKdXSe+HnPnEj+OA5ZV8+UU66Hw2Etgu1AUVl8LhDni2YV7VxfX49ut1sF0Xq9Xly/fr0CuB/72MdiZ2cn5ubm4v7774+IiEuXLsX6+nq1RiMDYOSDOxk8TxDIHazUT5lO9GdMAjGz4wBY5PhK7ePmA7SjmZMh+6qsln5z2raeoWCyMMLs7GycO3euyop5sNXXn2WONtvlerapT3x8q3znDa9lHWTfPHDAeyVHkhHf6bI0dksBgqYZCMx2084zUNmkK0Y555mDwbHk453rsZaWlqqAw5k7GUz3UgFLYanxEmpWgoxyb7TkZDhTGIkgcMqUszNxdXW1ul5zShcWFirgw/SUC1q/3y9GStgGpp4FfBTJWVxcPOFkrK2tRbvdrjIYEccOEHcWcTDPetBgZGCFOzeI6CAOBoPo9Xqxu7tbvY8i4tgpmJmZqe0s0uQgZt6z+o2L+dSPmVedCb4LPOXNFcskkHbWODo6OtFvHs0ZpQxK1CTrelapDN7jdZHi1HGNYcmAgyGfDpkBH3cONcWQWQzK1630pQMRkY9Z520p8tXEs5JipxMmXcdpANkY9vqJByW9eCs0aYBJlPXDqLo6wMrsib49w5A9P+tPLy/L3vEcbYb3WfaMkkPh55xHJR6WZLep3Oxa8pP3EAiK9zwecQxoGXgjgJudvbnrpKZjCbTcuHEjdnZ24sknn4z5+fl46qmnqvdbNE0jyRxMOgzsP+cHAyaUo0weJ4W4DqAUZHVb6eCeDjADxR5c5dih3haOkG3r9Xq1vh0Ohyd2G+UaSn+pKuvtmG6c7ECmI0v6mXrBnQzHcZ5tycaAl+nPdz1P3a7reL23a1xy25a1tcS7EnkATXXnWqxWq1V7V9soOtWajIj61l2uWAVMhsNhLbJKBTXK0aCSYieMSp/6tU0RcdaPxwiAfYFYlubT/QJgc3Nz0e12Y2lpqcpIDIfDahvclZWVWF9fr9ZiaNvabCePUjZCz1S9BLq1ZSYFWoqBu1UJTMrB2NnZiZ2dnWqrv4iorp+Zmam9pCnjJQGrKwz1O3f44H7q3n/67X3PPtH8Xzotk0Sc0+qDkEpM/yPK02tulbIymhQwnVQZYr6fRSlyjz5pkwI62h6A4FRCRcyYnuec62zMjtNWV95uOJvaz3IywJpFjjzF7QaEDga3ZnRZKOmzDDDdCp2Vo3InaFTbS+dcD3s/Zw5GBkb8t8uEg66szp4NdACjcjPHgs932XLQm9FpnAYBwSa94G1zR1kBB5VHp1m2UiBkZqa+Zbky3wKr/X4/tre3Kyfj8uXL0Wq14p577qmmSyla6k5Gqe60QaV2MiLM8txpmjRSNoH96H3m+oi4gA6xZ/dczvlfAbNer1cbSzquflIWS5sJRMSJDBeDVxlWizjuY8eLGWX1z5wWleO2l3o6CwSyPNcRmR5iP7A8frOMkpyWyszON+msEr+yssk3L5/JA2GbiOMXIhPnl2hsJ4NvglQFKJzKYGj6ERmgink6JqKe5qWCFmihwDjI5rHMsXCwquiymKR7pBD1XI9OqX2caqWF05p2Ja9+dXW1lrWR19dut2N5eTmWl5djcXGx9hZxlasIr7IffJuqlG7E8cJ7TtOiU8TIkkAOlb7aoG3rxEcu9JXTQsXjSoYOQ+a9k6jIpXC8D0kOJKQcxSsp3EkzDpouxakyWbTCZXpcUH0a4JgBGPGeoIHyFHE8nY085puUJet647vvca460nlmVKyUHTvNAkDnB3WMjmdTDj1C2sSzTOG6XnE5Jp8lAwRlmQ4jSXfernPQZHAmjUpGMeLkS8I8ypg5HQpIUE945pR9mIF6N7r8zn6z7OzjbXM5oH7kZ5TD7c8gOKINla6WnXPeeVtc1jOnS9l6jX/xXdN9aV80/Unb1rZarcp2avrk5cuXo9vtRqvViqWlpeh0OtHtdk+ASbad3yJm9dme7NpSv00S+csFXX74W3qXL8tzx1syIRwiW39wcFBNm46IaoH29vZ2bbObhYWF6n1Zi4uLJ+RC+o8OIIOg+jDQ6xij1Ad+rTtdupd2QI5lKUhGrFaSAw9WsI2kkpPBcV6aZs5yWX5parrryBKfXD+OIo4rBRiFV7lZwLi4a2wngy/XyxRvq9WqzSOjcZUwcHcp3ZdFgbzBo4CYAykeo5Ik+HcPjI6IrnVHytOInOohYVWqkGsGFhYWqrUOWn8hJe+RBipwda7mx4+qE/vA5yKT35yTG3Es2Nkzsv7WfRRudzL4mwOMxpTHSaqz18EjlJ5+nQTi1MEMKDgvSE0GrtQXPKcynDJHQ/JP0KGyuF2z2kEjocwan8/nqD5KkSuaxRcxsW76HjeKm/HG25rxhtc2KdtSv7jxKTkjzu8msJgBhnHqOA65XEyyw9HkaJSAfWksSMakB90xKfUlyY97/TKwK2rKyJXKKTknTfogo8zZ8KxERN2ZzfhYGkclwCQQLL1O20hwrEg3t2aXjtjZ2Ynt7e1YXl6uMuulsVzSn008iTieetR0/yTZk4ioZe1dP7Itbt+5myOxhZwWOQh0Prj7I51Ggn9NfWNwlvpFMkccpeNOTbq6KeCiejtOyMrVf8m+xgGn/NA5yQJCjs/Ie12TtS3rK7cHaoP+O+/oGDnmbrL7rFcJX7NupTZwIwDiVbflJRrbydjZ2ak9NBuk6nROoeAxdqKIFVYjuZBTz/Cts0Yp56wjVbbu19QbKUgOLi+DIFreXK/Xi+FwWO22sLi4GGtra7V0r1KI2llKbde0EUUcPOqztLQUy8vLsbKyUjknnBPpzs5gMIiI4zUBs7Ozsbu7WykBCUi/368iSBFRrRU5PDyMxcXFavCJ/55md4XlRktKSMdcIDN+Ug6oMKk4I+ovDdTHU3x3m7S2xZ1qttnlVMeayJ0tGeeIk/vGe9qbz2JGghkNZvEkK61Wq5YhE8npPTg4OBENizj5hnE6F1wc6gu8b8XB8ACGynHw7g6yyB2GzCDymANI8tblMCsvM0yqH+t9VjKdtWNSiH2UncuOZeAis0PSqa1WqwK8Ebnjn/GoZNAzsO31KIHYzNktAV2CHQc8mZypvqXAj2+7qfGfzSTIxo7KzpwM1pdTa5mtpC7kVGBuh7uzsxPXrl2LhYWF2N7ejrm5uWpmQAbYSlQal8IhzttSH00Kqb4E9hm4lS7ki4F929iZmZsvyGu323Hx4sWKH0899VTs7u7W1njyW8/WODg4OKj6VUFTH1PivY+XTJ4ZbFY5DMZmoJ/jjqCc+pR1Un+32+0Kl3mGQHLp09P5CgPiGdlM8Z/l0L7rmLc/G/+8LiO22W1Fph9GyTT7zq9VtnJpaSlmZ2djb2+vGvNZxjCjU2cy9GD39iLq72jgAl1G2dmoiHzuKylTxq7QvdMyBc9z9ApLissBmi/iFPNV3srKSrTb7VhdXa12Z1A2Q84FDYH4wy08xUMtIG+32xWII78duHvmYm9vL+bm5qq5lOwXvoFcdYu4OUAU4aCxoBHx/nAjSyCnwecGyqc3sN8yYOxOCJXLuJ7000ny9CPq08hKSoX946lwUcZn/1AuvD/0XCp+XwCp8UnDoPpl/ab6chy7k8EdRbxfGYi4HeI4yIyKZ0rpYJV0hDsMJecio6a+07dn4nTfWTsYXodJoqa2urw3leH9ynOZbowoO5AZuePngMj7t1Sul+HXOcDneM10YUYZDxzocIoKxwLb02Rr9e2ALqsHMyisOyPJEfUtQrUoXHaK44PfGe+yOjgPmdEZdwrjJJDjHB6POKlfqL/ldKu/BLC73W4FqLXBTbvdPrEhB50DBU75yfCXE8ee94vqyTbRucjI2+f4wXkmmzM7O1sFbLkDqtsmBqOJX91u8NmORZoCUuw778sSub5hxiOzM/4p9YXLfTYOlM3IHL5RdEtrMjRdwudpq8JSFqoMvWgKLBtFg+uGV9QECjIAkHWip8aaBgUjxXIaNBVKg1S/tRXt8vJyTYExcyOQPxwOawthtcYjImoKQBkMed6Zk8F1Cpky0cJykdaRSNkrA6Nnixea4kJvlSlTFzIaKu6SlQn3qD7V8Qw0OHBw8Hu3SYZRA1t9rz7xCAfHA4GItz3iWKG5UuU1BEIZoMmiSDIeitRoDJPHbJd0AB0SZjJ0vyt8Pt+BB+s9boREPNGaKB/7Lqcqn04I+ewZoZKxGtcYZB86XhxfpTrdLmXjb1JolKMxCsCXwKXOMciVBbhKVAL1kn9m2puMuJdZ4n+T85AZdLeXuk5jmXbLdQkDA9l89hKQ8WewDtT9XifZQtdhyuyrfxTY0q6Hsoka21k2uERqk0/PJoDMAPKkkrenVF+PsEfUnW31s2ZeKCCqjNLs7Gz1Ul69WM8xkGZpKPgp7MC+z2x31o7MyXCwX9INJI1tBsn4LMmh1hB2u91qtojzUphNMiN51UcZHK23ow5jYNb1ecnhYJuzNpbGJWXDnRu3/yU8wDIyW8nfbl8dvzTR2E4GieBDHakHsmN95yMqZwJaghc+w6OqmULMQMU4SsOjlSJ3UPz5c3Nz1Q4YKysrtZ2jJLjemXQGtIBKYF8LsDXPUeWurq7G6upqbUs/8opAkKlNpkyHw5tzYOXAtFqt6j0F6oNOp1PjG/uVW90xsiH+uZJQnRQJUR18UJQGHcujEFNRcuqNnNdJMhL7+/u1qX3kl2iUE0xHg4NdCqUku04ZACKv+Z9TvIbDYcXbkrJyJ5f19cwFHYvMydL17pSOQxpTmresFLsTlbHrGtcZTU5Gib+uxDMQmmUfpRsZ8XUH8hORxh2zzk8eI5/EQ8oV12Q4+GqqF8vPvkt9y7qV2sH7mcEkUTa9rWxHk63KAD/BEPUJeVTitfNH/C5lktkffA8B9T3BJiPKsjfK8Gd6stQXPJ9F2OVk+BrESbIhGTloJu9Zf9lF7ujHbWj1/i7qHuofvUiPtmBubi63WhOzAAEAAElEQVSWlpai2+3G6upqbet9OQIE4yViwFVOC6crsRzXvw7Is/5mW1Q3BcM080RBYa7H4Jgn5hTftPumpqVrzLIfZL9areMZO1nZWX2dMlvL46KM5zrPTU/chns5PsZL+sx5PC6N7WQ44CkpOikOnxLgUbtsZwE2vqTAsuMlD3Hcdvnv0v0SKnnEigh0Op3odDrVMUVXKSRUngThjBBLCSwtLVUfDQZ3rhy0OOCTciAAjIgqOiQjp6lYNGKlNRf8dkHTvdxFiG1jP2nQe9Qg64cmgKu6nkbg7zRJxgV6CW59DGVgyY+RmgCsK5rSNXTiXAlqLY4cjgxUO9Ew+LNJDiZ83RX79TTjl4EM8T1zGpynDsCcWEZJtzgYa1LeTeOWhs2NUqfTOVVmR7S0tHSiDpNEp6lXk3H0MZNl6vy6pjGm49mxpvE3TpsyeSmNsaa2NjnIrD+Py24yG1F6ZqaPSrzIxpqDEYKxElBxIOnOzzgZDAdEnoUR7uCH9ZhURyOzn2yf8446kbti0slUMFAkx1O6mUFgBVL1EUiXDVf/ZHLH+rHOxACUN5blY6RpbIi8j7kGhw6mr3diPRWwVRB4a2uryqzptQScEk++qgyu03CnyPniPMtwbxMWyJyMEgYo6S4vu1TXW8HYp3pPhgr3CkoZ+F7aYrq2ZY04fmeChIGKgGV69IngwY1yxEnQKyopYD/G+yXonIdGoV1dXY3Z2dnqTaZyMJS9UUqNu+ooDdzv9ythVaRfZa+srFRvAV9bW6u2uyXQ98gcX3jDSL+UxuzsbAwGg6r/KMAadDynMtXn2X/yTP2gheveRkbIWq3jnYm0eJiDPyN/DvlLBTcptLe3V9t9iUZO/52POkZHvYkcbGTTIkpKRPVwA6tNECKichAjotZ/utbn5Ep+dT3b2Wq1Tih6HRP5rh2nAdXKZCh65bxsIvKwBNbcMdN9/vFxqeszwMtxzDo4yFtfX49Xv/rV1TnWexSgbbVatW2yJ41GgXt3ADKQLZ1FI6hAjXYm4lgS3x3slAC/18vr545qyWB7BmUcp4RyIvKMQwbSvWzXE7yWTj3rmGVSSiReks+UYa+D7BKj6N5ujidNpRpVD6+T2kudKh3hTsakOhcizgSRjiOOUv0VPJQDoWlPspnq4+3t7Tg6OqptP873Fgk3KAC5vLxc205f4NpJciCbTL1GXep8lzzod0TZ4cscbAauFhYWTmRadM4zJ8zo6dlHR0exs7MTvV4vLl++HNvb2/H4449Xx9QH2l5ZPPGsnMYUxxmzdVmmXCR5Z8CNjpDrwZLe0XfJOeO1fs71r46NwiYZnXq6VJPX5IbWI8+Zp6f7eX1E/jbXJiAwqq76X1JW7m17xEODOiKqQabF3prb54JBQ+FRBWYKNBAktJ1OJ9rtdm3Bd8Yrz5S48DGLQUNAB48RC15LHkjpOE/VjzIG2nFL60wGg0FtnqIUD1+ylHn5JSI/xdOI8i4Md4OUWXEDHpHvbOSKYxTwcNDqv/mfxwlCXNYJslx2+fH7XE4iIlWenrXyCA7H/GmnL9DRjojas9gW8tyPlQCvf/z6EqDL+tHHjfMgk4FWq5VmJG5FTiYVSGVy5+Oi6V4H8dJpmmKqKRPUzw7OnLLjGRjO7At/Z2M6k8VS2/ybH/LI65ABE5532+rAJ2vrOHXOxgzHvY/vUTLZNJ5Kz3d9R2Drumjcetxtkk1hnd3BdHJ58YzSjRs3Ynd3t3K6uAZT40Pjh44ZA7El2SsdJ8j2Mc860wlxe+SOcoZXOFWKuyeyPAfoavve3l5cv349tre347HHHoutra24fPly7OzsxGAwqGaxaPq4cCyDbrL5tK3+PI5jH3clwO/60HWE9/+o/6Vxldk6HWObxhmTEbfpZLASjFBEHEfJGY0hE5k+zZyMJiZRiep7lKLIOjBTiBHHwH84HFbRwMPDw8rRkANw7ty5SpAFdJSClNOlqIIyGXzhXkTU5ghq8fja2lp0u91ot9u1CHHp4/xT+xi9UORYAF9evU9b028NdDohXECpa9VuZTA2Nzdjd3c3+v1+9Pv9WpaLi644sJiyjCgvfpW88AWCkzhdShmtDEgzEuByzPEwjuHLnAkez8jlvTR26Mzp40Za48Tfm+HPYno/cyQka4yCjWv4NeZ0r2SdGTqvj/PInayMR+Rt6TvTYxmfM540AbumYxk1gd9JIQcaIuphjofsfl3D6L6imQRI2kKc9smBWka36oQw48W6jTLo3r4sYEUd785CyS5mDoV0J8+z7BLfvX4lJ9bBUxZscFvi5fuYaqISFqCukkx4wG3S6eDgoKbPmIXxLKjrsYio7Lg+R0c3N6DZ3Nw8MZtElIF2YQhhG/FWz6Cz6v1BnrutysYH5cRlgW2jHuWmPFx3IXI7S5lSYFROxbVr1+JDH/pQbG1txVNPPVXNPNF0MQVRtYkOF8Rndfbnsg8d93jmkzrAx+WocdFEpXszW+ROhtexicZ2MrhDkRtqem3MWjCqqwqqcRosmZITo5uiGOOAMRr6JkMlIWU7CKJcuLXwu9PpVILhuzAxe8HpUTSGyoh0Op1YXFyM9fX16s3gmk7kvMgcjGwQsi1sowChBoPa7cZC93EKnMpQO7QQajAYxPXr16PX68XVq1crJ0OLpDgIVZ6cNq//KMGVgmObJsnJ0N78mZLhGInII9jej6TStePwzUGVG6J+vx9ve9vb4sqVK1XGjTtM0Xh5FsxBNGXu3nvvjW/6pm8qGnU3RuOAPxJ3suOGFFTiTes0KPMlJ0M0Cgy5/iM4cn5nz2t6TtPxpmtPc8/TSZneptw4aNE3r8t2mFOksdVqVUEaviOCQTA+y587Tj113h0mfXNeto/TLJqeOV3uxJJoL7OAAXnodc1so4/1kuz7b++DbIxTd8g2ERs08dufmzlR5KvIAWhJF4x67t0mBVEi8uCIO2LM5tGOa2xoCnaWMdD9xCeceUDy/nBZyByXiPq6TpbDZzMTwfuyemRt4CwU548CwcyCKzj65JNPxhNPPBHXrl2Lxx9/PHZ3d2Nra6sKXJEnKkPrNIgX6SSxjVnfZc4Z+Ud5L2Vhm/R8CT/7+MvskNfbddU4Ts7YToZvAdgEjrIPyxgOj3eSIWNLTkaJWRk4yK4jubLPFDwNgAYsHQ+twVCWowloCAQJtOm5Ekjt2kDnQmBcClm84eAtORpZfdROH8A6JkDEAeEGXoNV5SkaogzGzs5ONSA1ZYoZG32TD5mx8v7L+odK6jRR76eDmHL2/qDjkIFK9usooMNyxwWSGcjW74ODg/jd3/3dePzxx8ds6Xj0ghe8IL7pm74pjZbp2QT6XrdRJEMh+aQMU78w4lZ6TgnoEYiRSsaev0vljwKVJfpEcTRG9buPkxKwdEeO67w6nU4FzjguqYe9HzJnYZy2NNmgbJyOkgPe6+WN+u/1yH47qNRYkY7yoJuPgSbnx8v39mbZTN7TxI+sjaXnEui5Q1eq4yRShpVEJdkSIFZ7hVe4WNltkP5nIH/cwE/JJrHv/XpeQ4zC6UcsO7uPx0rOLgO1+tbMks3Nzdja2oonnnginnzyybh+/Xpsbm5W5+WkMUviusVxTSkLrnFFPEx96O1pGiMcl65PS9g506X+3dRH+qa9baJbzmR4x9OoklnOTC7yzBbeRBx3jke6SeMoIlEGwD3y4uVR2Jl6l2NAAVO2gi8S0n/NdZTy1oJEDfpOp1MtIF9eXq6lJVW+Oy3crrbkaEScnDfJQVxKaZJnEccRPy4olxOxubkZm5ubsbOzE0899VT0+/24fv36iSlhLJ/RFpchtlHXsN4qh0pikrIYEVG9eV0ykjmgDn59/HiEMiJPYXq5mRIfZYhV1p0kyVwpauIK9jRjW+Mv4nhHL0aduKaI2RQfFw6ASnyPKAMrB76jrst40eQ4ZjqwRJPsYESUwa/IZSPiGAzLbtC467zeKyR9OjMzE3t7e9UiWOqxbKyUwJDXPaK8Q5n6z6cb+vUOgDPwndmurC4OSPRN597v1bNc1+tel2Hq3QywZ/akKVLq9fZIMQFuBn5YZsYHH8+3ol8mgdgP2ZQaD8jOzMxUQFhtb7fbFV99MwSfyeDTDLlgWrqcs1BUBne0orzrHj3PZ7TQ1hHIZxmUbGxwwxLJkKawcyaKB4AODw9jd3c3BoNBXL58uXIyrl+/Hjs7OxUf1tfXY319PVZWVmJjY+NEBj/bilffJXlnllMYWeX5pixqt3hJrEA++LPHIWIQDyyUsLnwsLDtKBrbyfjTP/3TWsW8oy9duhQbGxsp+BE5AM48t8zYlozrOEbWj2VTjFgu66AOV2dzEZSuJejnFBOPsKljNEC1rkMv3dPA4gJpCkxW7yYeNZFfXwI9zl/ftWJnZye2t7erLIbWnPCdGpnxcWNeAljeFy7wEfkCtLtJBwcHtU0CRFnb/DjHjCssL4v3kgd8Rsb3rE6l55wV8fmZM8Fjp4maqd4+1kQqJ4ti8v4m+fRrS+NuHODCccwAAe8b11iUQJc/r6mMSaHMwRinzs5D6Wc5GdqQQ1nXiHIfjur7rH7uqLJ8BoYcrJemSbld83HOY06qD4FoU315D8cdnXLd1/R86h8CllF6m2NB13ENQCkQRv409VOJv1ldJp0ITLN+jKjzhOssxEuuUdC1sjNZP9AhcUeYAJjykcm6y4We63iDzktpdkI2NjneOD19bm7uxJRsEccm38dCPUI8trS0VDkZq6urtcB5RD1gMEq+qNscI/u4GTWWM15kvzMaR/6bxtdpxs/YTsa73vWuxvOvfvWr46/+1b9aVYpAOwONWnTmAKnVatUikKMAsDPZO4nnWB+vl+7xaUKaEiXh45uOFbHXC/X4pmu+J0MDR9uraQH04uJitZOUT79ihM5BybgORgnAakCqva5kxEcKuFKLu7u7lad/5cqVuHr1auzs7MTOzk7FC49eMRPki/9ocDPDzz7OjOSkkV4M55HLiPrbUz2Kw74Q+fSFiKiNGVc+WeQwm5aguqisO+1gNIEF/ifQGQXYRZIVvd3ZxwQVuD5NTgeNdCaTTcajCfxw/HkW0sEP65w9J/vOwN8kUxM41HcGcJ2P3FgiIqrAzfLycvViVAVHBA7OwtFo4q8CTr5jj2SPbfUshkftS7LXVE8eb5JdApmI40yG859ySj55nzlvSnqHIM/f2dRut6PdbldvlM6yO1525jw0OSclmuQxw77I+jviOKhCzCJnwaf4CAOUgqGcKuXg32WUmCLTbXQwdL2TnsOsgDsrHoCiHoiIKqMte8Bp4bShqoP0Al8loNkk2rZ3cXExVlZWYmVlpZrWLuzHKVJqA50vBtJLJF4ID9PmZ2sfyQvHSbQdo2gcLJnV27NB49AtvfE7I3mFTcogS/9EnNzVQtMeMo/XmR1RnoMnyhjYpHhZPgG3p8Sy5/Javm1SwqLB3u12Y35+Ptrtdg18Oz9KBtYV+ThGkcq9BKKcBxLmGzduRL/fr9Zd7O7uVm8PZ4SFu16oHKa/S9ERH5wE5Fnfjhq8d4sGg0GVqlU7XGZ4TH3g/eLtp0KnnKgMlTNqlycHsM7vO0F8vo9BXuPj5jREvsrglTIZGZ8ygJnpMR4jD3UNgyOu/DOAxQhaCVjrO3POdOxO9t/TQSWgmpFnCSKOdzPUFuBLS0uxsLAQR0cn386r8ktO4yid6lkzluXblTNYdNq2u84XUXc0OWuuh1k2f7OtnFJIUMvysudkINLlmQE+yr/aoEAbo+7sO3cGve6ZLS/9LvX9JJKvh5VT5viDC7ml87SBDB22LBCl633L2iY8J2LfOobI+OyOjZ7LPvcxSCc8o6Ojo2pDGslXhsEyQC7nQu8CUVvk6Op9ZdxpVJiIQVq3DXSA2E/+fG8HsZnK5zgg3zLZL8k1+yJzMniv40wv/zSY4UydDHmPWXSUSsGPudeXORi8xxk7ClxnYD0rV+cd2BI809P0OvE/BVvvu6AC5eJx3p8JS+ZtnkZBuqKn8WkCfWyTvP7BYBC9Xi96vV4MBoPaOz+oWOhAcDEm+ZJlMyJyJyvrr0l0NJR+9cXfEfk0kFLfetuz3+zLiDjBRz2zpJAyhXOnqASI+EwakE6nE8vLyyeucdL4EXFsSsEraMFoEYFXVs+SvhoFhgmIfEz7OGQkLDPK/tuBlUfmnmlUGr+ZYeM5GjldI5DCSLimTHhQI3sWqUkGsn7luWwdRpOdaqqPA3Nd38Q3AmjKCQFLqc0+HljGqLrTifHrXe4p++qfiOMFx3xRaxPIdb2W1W+cMUu+TZo9iTiOclN3ZTIlnEJZ51b13jbvPwUEs52nSjyOODlLhGWTr5RLndOnNFWODgbrlOlJBvYEzCVfwh7Z/ZoSpXYQtykgrGPKfPjLA73dKt+djFL9nZ/EQj62nL+8LyuP512nlHCWn8+eMS5eOFMnQ1NFnIkkV1wcMEw9+bz2TMgz0JYRO77pnsywcBCI6BBxIEiY9Z9RNm0dJwW6uLhYleuDhAq4aZG36pdFar3dVAQCpk3KmYNkf3+/Wn+hLMZgMKjSkzIMHFCKynOnCv9k06c4uNgGtUPnaBQnyTDs7e3FwsJCNX3OoxzeRxH1Oapu6DJAyXt9+ofu4fWeQfByCGLuBGXgjs9XG7kP+7d+67fG3/k7f6dKZXPqoL4PDw9jdXU15ufna/V3Repyz+uyzE+pnq5sS4A3M8x+LyPe4lFmBD3zpPI8KsdzzxRqqq/zUsc8IyRZ1xo3TZPqdDqVTmUWtZRVKNWlBMyoi9SfyqAxQ+UBmNL0H7WNTkEGACjbXp8SAKGdYRml9rrz6uCWjkImez4u3HaVMhmcCy+A59N01M4sUJDpTbePTX08qeNH26L79qhu35mFIlAujaGIYz0ie8yMh8rSd5YJGOVQU3bZX+pLYQDN6CAuUBt8NyzXiz7WGNjl4vXMQeM6Lt9VS9v8c12HnIts7S1lVbrA29/ksOmYdBSDYsJTkn+OZ1IW2PR+J4Ys4Sy/3suTzIwz4+DMMxk+T42UgfzMu3NmNFEJVPs1vHZUJ/NaV1BZ2e5okPb39+OP//iPIyJqERo5Iw7o9a2PpiNxfq/SguT3PffcU5tTq7q65+mGKxPIiOPotnbI2tvbq71MUOBP93ka1vkjpZFlMdxJ8rqwnlmbJonUf3y7+/z8fESUwWdTH5Uc4wzwOkhxyuT4dnn4wAMPxH333VfswwcffLCKIjlAcqIRu+eee+LChQvVLmV0piJOvpyyxBe20fnk58b9z/JLusYpk2dmVwgSm56j6zybynNZGc9EytqXgWxGQQlSOB74GSX7PJ7Ziia5ygJBLKc0/jnGs3qVAIXKLjkZGfDmPSV+O7hURNXlMNPZJb44j3ic9pNRZ2979rzM0cp4PoqfjiMmhQgwRVld9TuL/Osev0/X+hQpDwxl5ZRk3esTUc+0Og5rmtVAokwRKwkbyWGVfuS7LDIsR7ym9su5LW3zL5vuDgZ5lGE6Pa+kB3z8k+hQ+VT3jOeZ7ih9eE3T9f4MOX+OOTM6MydDq/rl3TiYyBpFQCSDMBwOax2ZdZCTHyt1AM9lg9MpixiUMglitqIvSrttbW3FD/3QD8XW1tZIHt4qzc7Oxjd+4zfGfffdVzueCYlnMkgcIALJWoNx/fr12Nraiu3t7WoryIzHHHzinQMAOlqMMKgOGWBV3bOBOElGQbzt9XrV7hSKiGTKO+JkRoFzcDOwkoESZqZKYyQzFDQWt0Jf+qVfGm94wxtqkSACBoIU8YZtVN04jU4yo3u4QDTjFZ0QlxH/TSXtdctALJ/VxKeSoSXvmfZmFDAiau1mmU2/PYrkuu1OZqdul1wHOzkQ0X8CG46pxcXF2oJhZS2kh6R3OL3zrNoh8EF59Ahhlq3NynEgn12XOTl6Fh0CgSTKVJNtJHGKFctnv2WOjcs2x2fpmMrXHHrZUOmLLGiS6Tq2reRoNdEk2RESs7je9+5I0FHjTlJOkgt9FPln8LMUpeY4zKYFq3yXY9etTQ6GA3Xdz/UQygRrVkW/36/arxcmd7vdWoaG7ebrAnzGBWfkKNCqZyjgqvplvKIOYHvJ22xKmvOZtp5Bk+w6571/iF1L9orXlQL9Gqd6r9soOjMn48aNG9VUEc2FyxwLVwL+P6L+xuwsVdNEJQWuc5nhKt03SkFRYOhsqJ1S9E0A5CyoVLaDSBcytYFt0Tn1pxZ47+zsVJkM3UtF4x4+y/f5lqVt8ZoUYkQ+77dktO8WKerR6/Uq4K2tNLlvuSiLwmcKwoGjg1aWwWtG8WYUeB6nvexP/qbBkoLk9AiCC3cyVH8H3RlPMtBDEEq+uA7wsn0aQdO4ZTClBPxKxOu9HZkjOUpXNQEC0SSNk4iTun8cHcz20Hng9Bp9IqKKaApAaHqaymqKxPL5LgslQNCkW91WOED2MksAWqAr0+ccR3QSOA55/cHBQfzCL/xCXLlyJeWxy/W5c+fiNa95TQ0gUoadtx4IoBNGO8kospwjtZEBsVF8Guf4M41KQbdMl7FfeDyzmdTZ/Hh5ut8Bq8sSnUEH2JlNYzt0De9z50QzK7grlN6BI/whnXBwcBCLi4tx48aN2lpYyVlEnLBPLF/6VAEEbc3f6/VObOaQYVd3sHSd+E4bRjvnvHf+68WzlIem2QHOz1H2qeSciMQX8XlxcTEth3Sm06W4jat7ciWHgwqZDGWUY1yAXhqAfKZfO0qxZ/fyvAuOn2+KJpwlnVZwnO/eVkUJ+v1+9dFAy5TNOE5GycEg8B4F6kST6mRo0A8GgxgMBjE/P1/NC9f5LBIx6rtk+PlcXssIYBNP3WDcCrkRdGdDjheBEp8lpcnFiQRJItaxZMQcjNNxzniRKXI6I+ST8zvTL6fhYdO1mYMzjs661ec93ZQBU9G4fciFwr7Gi3LoO9u5/hqn3xyssf5NgCLiZBaDOiADFRlgdwchAwIEHSpf4MWdZoKW3/iN34hHH310VJdFRMRznvOc+LIv+7LaPHmvt9sGz/C4vlE/ca0eQR7b5v1R6qdPJMoyYCXe0yaW+MWIPp2MTD5Jo3CEYyAPXJUcDAfputaxhbaFvnHjRhXwpJMRcawThsNhhVXkONDRaLVa1TutVPeDg4Nau4VD+ZJlYls6CI5l+KoD57varXHquiDrP5XjO425bswoC0awzJIj6U4GnxURtUxQE535FrZ7e3sxM3O8Cl8dzMboeoEICboamgmXL3xx8sGWpVlLHZdR9oysLNXdgYmEbxxP7ywoEzLyUiCPCtwNA715vWBvc3Mztre3q52kxH/yOXvLp55FEJC9ydUVaOYosq7yoAkgSlHcu0Gzs7Oxv78f29vbVUZPi1Cz7fSyaHhE+a3fUk7ijfjHaJ+OO6Dgc2j0PTJz2vb6FDj2Fdup6905LGWyXNYocyI+yx0EH+uuE5rGeKazSjTKkVGdOV3Ey/Y+Oi2IykAv6zaJVOpfAnkHq+p7yZqmR/ENwQRRETfXwukaZWKzDRMyyupHW+MZA06DoF7KoscOKjxCGVF/I7B4IxnxNjjg0846/kZi8v9WZKPJufA6erbbX34WcbxxyNLSUrXwW2VyeuM4mzSwjp8opEy4OwKux8gn72+ONenoLAOd6WHdX9JxDGbp484KQTnrmz1TciFQr1kUg8Gg2jZ/d3e3smHKTup9Y4uLi7X3dRGDDoc3t6b90Ic+FL//+79/op4ZPszandkQtus1r3lN3HfffSecAeetO9DEaLSl7G9hLuIB1mFU/2XHHS9kMxt03DckGkVn5mTo4QcHB1VamhXJIv00Gll6z6dNORgrGQAaKVKmEHnOf2fX+rNdSH0wn0YxniU5YM3459eK19qqVhkMzXlkloL94wCA7fePKzNXPE3tEDHyNWlOhuROi+Xn5+djf3+/mg/u70RpMtJyHli2gxeOHy+jSUn68VudLqV6ZdmprE/dwdCxrP1N8lpSmiUHYxxq0gmluo6qj5efRZVoPLx/s/IyfmV1Lhm2SSIH7qImB1k80hQo3/KUZQtMUf/Q0WuSr6b+z/SX5D4bg+5QeNTYj/F5WV0y0OfP1b2ZbSq1/TSU6e0mvePjWmWoL7luj5mXks3nM91ml651up32P13EBcgZNuExt62kTFabZE/U1J9ePq8vPTvDZryGz5ITsbe3V22dv7+/H71e74Sjw6yM40jHJ/v7+/Hkk0+OYv0t0czMTOzt7Z1wrFQnt7WZ7PqMD55Xm1Qmg1ZuW09jm3i9128cPFGiM1+TIYXGqIQbCDaKCzYjjgEkwZqiwxH19K8YUAI0Ip6j18168NpscJYGRTadQ/XhezCebioJiyJDFHQNQKUEe71eXLt2Lba3t+PatWvR6/Vid3c39vb2apklLojSjlcRx1HGpaWlajvJpaWlKtLg8z5VNx+IJRAlB0PlTaqT0e/3o9Vqxfb2dgyHwypCpzZkyiWi/q4H/SfPCEb1PB3j2IkYHcFgVOJWDC4Vu0+R4nMyJ1Tn9e0Ra3c0sgguyy0BEfKLmQ6XL97P/vTfzPqQjw6ivJ2eOcqyGszWlvRGkzEf5/ykkIPsTCayXQsFSDudTrV1rTsYEfU3IMsWabtjTaVwJ94pA/juaLjNkp7l2OO48B2UsqCL84HPK/FS13Kc+O45bitvJYNZcoSanAlFXyn34pXspGwEs1Jsf0Z0pkrj9plO3W43Isp8oC67FSfDx19pHLBvS5QB0Ey2fQyJGJTd39+P4XBYrYXY2tqKXq9XOR3CAXrnGN89JlzgMyfGwYtnQdJbnnlyzJj1KV/ypzUkzie3gxEnt6pvchxIJaeBdc1sLsd3E52pkyGHQJ6corncC16V17eYT8bzuBtmLhzNFstk1GQo/JgLgd/fJDAeneYCxLtFJfBGZSHHodfrRb/fj+3t7djc3IydnZ1aqlLpSzkbcjB8mpQGupwLGQ9FHP3FONmHdedvgeymSPfdJIIOGdbBYBCzs7PR7/er8eEZDRHbQsebjofLoLIe5F+mYCjH4h+nJN5OmzMiwMgAnTsPvkMPz/HjyjUDY1lAowSExgFv5CmPe3nZNByvOzdKYNqbfMsMYeY8eJufieTtcb3vDiozGL5Q2MuUHubOMXyRVmZcMzlxYOAAitMBddzlndNS3CFnGQ7aBR48MkpQQb2YyWQGwM/KGS3xLjuWRZXZP8w4jQKkp6EmB3LSbIgTAw8RebZSn5LTfjsOWKaDVS7J9bnXK3s+r9c5fbRpjnaO0/tCDg8PY3l5uZKZpaWlKugo2yoe8B1lniV7Ooj8aspUk5dceM41Ixk25b0a51kgzZ8RkduM7BrqGd/KdxzccOYLv6U89/f3ax91eObNurL07IAapVR3ptBLSkTnqVD47BI1RQFYTwI8Eg3J3SIHeZmiEG8VLdA6jK2trWpdBp1FgWY5GR651SBfXFysZTC46CqLoLgSckWkbxopCfzTpTDGIdVdC6LklM3OzlYLwbnDRQZWSVTCLn9U3qXt8EpOhgDvqHfbjNteb4MrTZ1n3R14sC7umJAPnrko1cvbnQHHEt+d126wmxyX7LiDPn4cGGRTS0mZYcr62M9NImX1LgVFqF/cyWjqRwV7/G3GDnBYp3EBFZ9D2yXngOdpE3xdWmb36GC4c+HE8y6Dvm1zZndPQyX+jPPJMn2l3QdPY6+bKAsUnJWD9XRRpov02/uiFJzIzmXUZIPGGRPZWPSxUpKbiPrbx4fDm07G0tJSHB4eVou6NZblZPC9FiRdw80hbsdZHZdcvtg3nglynlIn6L9PsfZ7ieeyZ9+qbde37hdOYLBsFJ2ZkyFBlEOh9wTMzc3F8vJyTZlQ2VGwHMDrmNLbfjwzKAQBrlSotFln/c5AGkmdTCHxlC7v50LYO00lsKdzrC8jY3oXRr/fjytXrsTOzk5cv369mibF9CT3is6A6czMTKUQut1udLvdaLfb1dS57G2erF/mgFKJMovFdTp3O1tEEoBYWFioBmO/34+IqPbqHg6HtYWrmcGjPPoxETMd+mZk3BWcg23uNc6tPU9DBM4OBnme9WB76VywTx1gekRb5fi8VeejH2syhFkQYVRGwRW8Azw6Rvxk69V0nXReBibG7ZNJB1FqL9sl3jmfaHhnZ2eryCUDF5QTlaHyNR5v3LhRbWtZcnQJ1EvAIAPMPC995LvOeH+yTfoWsT4cS+6IidQeTkPy9wuIaANup+9cxksyn51TnX33L5/W5QGK25XnZ6KjkdXPbTqvczsxqmzKbylSnvWn6lGSA7/X2yG7EVGP3nOakzDk2tpaZaekD9w+KujLKahc6/N0ZjKysZBhRF6r39T3shOqN6eB8Vn87TalqX5NskU5Es84zfSuOBl8uARCH2Uh1AhGb7JotHvppfQ5r9e3OxqqH485mOUz+d87vekalsE23g3KnAzygrt9yMnY3t6u3ouhBd/clri0TW1EfTG2dnPhi21KcyIz/mc84yBU9Fdbzrks3G2iXKu+ctT29vZibm6umm+azZNWGRkIzhwRB6QO3vwejlOfI31aUnncotb7JOsfKjmvg4M3B+XksX5nvBuXmuQuGztsA9tSOp6B2SYD4OV4XZoMh67L6jNJxDrRuXA+RdSzg9zwIRs7pT50MMtAS5PB9bHl9c2cDHciOOXBgYb0puroxGy5g8nsOo0/1ok81Ra+rMNpyWU6O17KnrtdUvvdRmT2IbPr5Pm4dFr98EygDBhm1ziwdacr40tTH5bOZxndjGiLKMM+NmgjXIe6XciwWJOOvxOU6XyvYzYFkxiTLzzm2PUZPN5/Gc8dT5T6kZTpVR7LcHhGZ+ZkqMGaNtXv96uFuYrkZlumcd1CpmDUSVoMMzs7W0VdRxnqzCi7ksoyEV6GFHdEVIvpSkoza8fTTXTI2Aad05SnwWAQOzs7ce3atdjd3Y0nn3yy5mxoqhsj3u69arDIsVheXo6VlZXodruxtLRUe0kWpwdk06XogDCyoroThNLRGWev5qeb2PfuUEhh8KVA2faEmdLPACSVM5VUSYEMh8dvdOeWkrdCkifVLVPwowC4MhgZSJFzwfU/EVFFdZQ+pwPbpBMEGjOg4/X28Sywly2WzRS4ZNSdOXfQs2dmbRgHSJTunTRQ5U5oCcTQXiho4W+XJ2WgVPcOh8Mqk6HsR8RxFDWbulZyPKhPaWyZqWRW07MHzJrwWrbDM2O6z50Iby+/M9B3u8AryzZmGTuf9sjrIqI2X17r9ehMjUOnqX9p3Ixy3ieJsvZmAHAcnmT4KdNjEVEbKyXwmslD9gzHI7JHERF7e3vVGOx0OjE3NxcrKyvV9bJVu7u71cYz2SYa7kzpWT5e7xR5QFz/Zas0hjNdozrTRusaThMjrmIZo+SYY3BcmRc/GaRQ3UbRmaEzKUkpakbK9dITOQqMztDYZ4Ml4jh6rTKljHyhyziDzBUxj41DJSfEn/10e84+qFyQ6FxERPT7/ej1erG5uRlXrlyJ3d3duHbtWrUXtW9by0gy+0mRQU2JWl5ertZi+EuyfL5t1oYS37J2UQYmlSS7rVarWtvSarWi3W5XYERt80VeWVklw6B+ybJFfj9TnVwHcSukLI2IssE6lCIoDpYI7HkN66vzJOkE6oIMWHGqpeseKmvnYwl0umPH4+QzMzX+XP9kRjzTbSUQzDp4PSeFPKqXgQIRnYymzF/2m/dzcTEz6wRI7qSW+tv1UZY1oMPh7eT/0rQ8Pl/XsX1eT2ZOOaYy0Mhnn4Z83Ga8yICqX0PnTwEq347c8cAomzrKDjyTnAnSKKeQ+qH07bLSBEgzO+N9WrqeY6l0veSO1yvQxPoqEMC6KtikrWz5gjy1y2fJOOC/1az9aYht9H5jhpPrw5x3GeZRgITTqPy9J5k9Ktmu7H+TXKjMLINbojNzMgQgVTkJDqdL6ZuKNaJ5/rML4szM8bxzfZcWxYjcmeB3E2Xnm4zZ3Qa7mbBGnNxJ6PDwMLa2tmJ7ezuuX78eTz75ZLXgW1kof4ENByYNlIxEt9tNnQy+pM0BQpNjmMmBRyDU95NEWVRWfNT7RyJuOnkZAGnKgmUG3HlGBctx4QqM2Sn9vhXFe3R0VG0vzXpExInnlxwNKl8aB45T6hNd684DeeDP0XUMTGRgv5Rla+qLzCkY5WRkwKmk+zIg6MA8q19TPe82MfLflIVSOxmoyBw6Xu/fKtvnZvvaDOqWJmcjczBcnunMyjnSePe2+Zh3cJaVS6Kekbww+0aHZ1RZ45DLVIkXLoOebVWWxzMZJYfaj49b91H2/m7b7VEknjDb2jSe3ZkVZfJM3vC8Z9D8t/5nfZzpOd5PWST4Zz00VpRlVNnCJr1eL/b29ip7SgeDWFS8UHCauv+0Dva4RNursce2edCEwJ0Ol2wyeSo50DXz8/O12TV8bglflWSC/ej9ynuJ8ccJTp5pJoPvLNCAyIysOjoz9ux8F9xWqz4PX/sHa8qEM0JMdg/ZqeTlufIppakngcgrVxCMbA0Gg9jb24snn3yyeg/G1atXo9/vx+7u7ok0dxbRlcHX3uaaJqXvTqdT7Uuv65jJaBJyHxiqDxcGs59vNQJ/J8n7wo07lQOVD8G2lJM7eq58vGwudBPfOQ3Dsxhc1H8rIFS7Z2WAPZuLXpq2IcXL64fDYRWYIPhwnSG9wik0+rjSVBmcykTj5w5PJqsZyGLbdY0vrNd/n15C8ODP4vNIWd1cj02qgxFRnzrLN9xGnIy4R9Qd0IzY306cckVQq7EUEScMuYMvB2AZoHYwrZdwauzquT7FwcuV7PhmCGwrvyOOt68U/1yPO5+aHOhR5G0tTZEpXRdxs/87nU6srKzE6upqZT8cE6j/2Gb/P26dM+fsmUCuH90x9v7Nfot8bJX+u8w3/R+nLvpP/U55VfBIMq/p3LOzs7G4uFiVsbOzU73LS9dy6j1tBwNPc3NztUzGAw88EF/5lV9Z00EuW5mj5e3IgnnD4TAuXrwYCwsLNYeLss/dsMh3TQ32cc/7iYm4OF64gnY0C2ow+MD+9L5l/2bBg3FpbCdjeXm5qmhWMW7JmSkvVjjiWClyrYUrSjVOTOE9AhfuCWeGxo1Gdm4U+XUl5eaD5+kkFxT+Fo/0LozNzc3Y3t6O7e3t6PV61SJvb6NHGlutVhV10v7V+pYB5y4hvhbDgZi+M+XI8+xrjwxMkrEo1YdtEPCcmZmJg4ODau9+yrq3j/NOtXUw16hE3OSbnAspZp+37kafYPtWiE6P6kBZaQKF/O3OBgE45YdKk23nNKosW5Y5CA4Wm8jv99/eFtbPQVgGxpwnTWBA50tAy3Wdf08CycD61qURcaI/vC8z8BJRjsry/mwXI7c1JT6VDPEo0K2t3ekE+7hoKqPkZGT1awIDJd4961nPSsdpZk/uu+++xvaXwCg/6netx5DtKE1lbKp7Ez+a2pMdu1t2exS5fpSN4Llb1V/6LjkYJUzBYy63pbowYKBrZM9VlkfzFbXXea3FGAwGtWcNhyffJ8Nnebu0AyZ3bSJ/hS8zPui8xjTvdd7Rlok4u8Pbzr713eYcD6iuwsWaXuZtJu9Z/0zes9/exypjXOw1tpPx6Z/+6VVnuEBJSNVweYZU5D79QJXkllhqtDwxBzCaKqXrVRcaJ4Iq/z4r5ZENavGADs24yu8sqARa9FvrAZ566qnY2tqKj33sY9W6jL29vdqCWvaZL7KcmZmpto4UmOULcfSfC5NGvXiuqV8YeddbxTWIOK96Usij7PyOOF7D0O/3K3nV2NCYYQTS366uKI4vxJfC4xbCy8vL1X/PaGgMsZxbGR9S+GwzASN3ziH457M8os25uIwER9wEp9QZOqcXROpZdFjojDGdrPZz4brqzqCF9y0jSQSABAJuPHxnNt+lrYn3OkfDwmwXZYxAedzAyN2gtbW1Gr/FM+fN7RD5Kr5Jb7Xb7ZrcqJ9GTaFo6isCAEYd3QlSxp+A0Z0LTplwRyNzuqgnxT+OSbfBquvCwkJ8z/d8zwldTLlkQELleYR2HBlW/WVDVlZWYn19PVZXV6Pb7cb8/HxEHGcZm6ZznYUsjwLDk0jehyXnICIHiRHHAV4B84jciSuBzywI6EEvlufyytku+k87J3kaDAa164+Ojmo2z+XawXxGvIfBjez9GT5zxZ0yOiW0Xw7g9eG0Nw+aqd1cc6Fxdnh4WAUiFWCkriF2I691He2ROxul/uYxdzJcR4yisZ0MMkbCxJexqdKcolHqBAqNmCRBE7BwZ0RMpCHQOznkSXrnq04l5pHGiQY0kRuSu0UZcBeQ1KJufTRNRjzkgNN/OhnqO/UxF+zpGJ2L0mLvzLse1SZG3TVwmMGaFGLbGN3gWIg4zgAoyimS3ErpCgSpr7RmRvcybTo7O1stwO90OpWTsbKyUssytVqtEyB3dnY2PuuzPqvaCc5Twdk0t6Ojo3je855XKUi1W46BZyFUR93PAAXLdUeZU2kkm9QdHnGiQ+F9kBkAzzLoXOn6klFXfUttyUCZPnt7e3H58uUT45f8ccPGYxERq6urceHChRMyeLu67U5Qp9NJQYI7Xlm9PVjF45n+43npsoWFhWo6EwGSy944doK2J6K+Y6E7ALJ1BEN0lrNMiOu/jBd0ZqkXCTJclunIZ/xzx8enazbxOQO/HMt6f5LW7y0uLtZAXdb35DEBckaZHfb7nynk/eaynwFrdxCy/qKuyxxQr4OXn13rz3G587Gr+4XhSrLvY5O4suSMZvLHe4hNWDeXfU5ZbtI9PmPD+4ZOhu7J+Ky6aboVd34kf4ilVT/V1wNdpfHi/TVKh/q94wSCxnYy6Bjw/Qpigho1HA7TqVOe3Yiob4El4BMRNaXHTmcnDofHu/Ewe0GD5cI3imkuqCXBHaeMu6HESs6Uptho3cX29nbs7OxUBknZB2YotP2w1lUwG8F0n2erPDrQtA5jXIdMbfCpcQIIk+RkiNwh1jHVVdEk7TY1HA4r+Vd/KWuhzIeyGXIyFNVRpEO7fKn/lpeXo91ux9raWiwtLVX/Nb4ISObn5+OLvuiLIuJ42pWcTE2NK0XnuQWu2i3DoWPc2SczJipX7ed/1UfOi56v9SR8vpep57M8/c6AFNtHQE8glxnCErmhy6I/w+Ewer1efOADHxgpV0300EMPxcWLF084GeyTSSFNv2XfKMjEvtC5iHw9QZN+zxwVOhna/U5bRGbXl4AAvzMHw401swxqo86NcjLcSaHclUAGnX7qZ16XtSnjHeU+k+WSXPE68l9r+fTCVjoZEfUXEZbqlNnqrP9L/cVrXIYmzZ5kINrlzcdLyUnLdGAWAHTeZb9P47RxXFCnCgtyPS+DR5mDofsc2Hu7XD45FjyD6jKQOdV8HvlAPcssPnnm16nPMr6RV1xCoP8K9LsDl9Xd68LneYaG5Hzz9nhQrolOtfB7OBxWK/sHg0Fsbm5WwEeA8+DgIBYXF2udIjAj5c6F2nIy1JkRUfPcIk56wypLzgYdj0wIvA1OTYYku1bf4zD46SIXWNVPxlv9pAEjIzszM1Mt1O52u1XEW06GMhnMRnABGh0IDrQsehaRp12pMPVxI0zFo2uUWpwk8BRR5wMBE6OL+q8xpUX3R0dH1a4Ze3t7sbu7Wy2EE9DI1mT4i8oULVxYWIiVlZXodDqxvr5eZTf0pvEM1Pg4izh2/Dm2GHDQFCb1B0Gbg0Ivo0lZ6X5fLKtn68WG2uGqpMDdsWXbMwdA3zRmLKvkPLgjwnNqB6dknaWTTP7quR41nxRqiuaNctycCHgyI8ppPnJ4FxcX4+DgIBYWFmJvb6/oOJYcDsqEg1/xn/f5tZQJOhneLmbhdJ/GGgGIl+/jjcG3DPyXnLaSbJcAvR+j/puZmakyGHqfknSTQCbvKTkZWf+fhrwfS+cmldwRYiBB5/nN+1wPRhy/+4LBFJZNoEriuOMn07W6nmOBvznViOPB9Ww2JcsDQWx7JqteX10nEs7QOPMx73p81IwN/c7axX7J7IbsvLbuVZ3Yjuw51A2si99DmSk5Z7yP8iIsNopO7WSI+Ywi7u3tVbvlKO1Fpnia18GoN1CVdwETidECmYpkcqDptytOMjz7n3lt2Xkf6OOU/XRQk7Eg0BHInJubq4Cndvhot9snMhl0LDLF4QORiqSJD1l9S3Wn8eEAPCuQdhbkPKJhFzkQVnRTTqB21qCTwalRchT5kfzv7+9XY2swGFQgvN/vV2O33W5Ht9utrhO5nKiO+jh40j3uoLhiLo0/V7KjZITrOyQHNDoEJl5mZviyyKzXfzgc1oCel136uIORgb+MN2dBHJvk3yRRqT6ua0t6lte4Ts7kivxnVt23Tc3uyZ7JekmWIuoLTXm+KaueySl1R6bPXfdlNspBHa/jc1hHpyZejrJtGd+VydCGIZrCqbE9btkq/zRyPc71py3z6SavX+YUlXjY9J9YyWXDZdVpXP2S4QaXUWLCDAPSEXU95+3346Xrec9wWM8o+nhkfT2Qmo1v8sszI5nN8KBk5mQ4P3lvxMl3TPG4t9nbnulL8d37cNxxOraToYUnaqhAkDdcqed+v19lLfr9fszNzVXRWjaQET12cuY967zmgGuHATFQkVdOydJ9o8BuE1E4M2VeGrzjdsJZkAN7DkYOFC2w63a71dQBZTKWl5dPvIFVEabMCPnA9MHtgEv1pNEtgS4a0uylca3W8c5kTxePxyXyROsqCNTl3BHsHh4eVi8Y6vf7VXReGQyfQhRRV5bZFCN95DReu3YtVlZWYmlpKVZWVqrslabJsX+lEDW2uQucnuvAiQqYa3josHBqSpZFIblBYsRIio9OJ9dnMOJLGVRZmsqlch2g6npOA2Q7sjGvdkgn+ra1HAPK5p41uSF1gzxJ5MbVp/lQj40CfxxLrqcFxnVOQRY53HLAOYayckgO3EvOhYMSgmndywxGCQgdHR3V5JTHVQ51dNNUimyciS9N92TZudIYzsChsuYrKyuxtrZWZTGUUed9TTSOPGQ0LhCedMrkTN8lLJIBcX5n15ScjqZ6+f2ZU1SKfjsGkI6mTGRrp9w58DY53hDpeukGyrW3WXaH61E5LdztnMt/RFQBd65l1nnZCLaBMxcGg0FtTRdnBSkQPBwOay/nc3xK/ME+83Z73diPtGHZZj4ZncrJ8E6dmZmp5rUKmGrKDaPhqpze/O1AhcLgH6ag6JWJaeoI7afPhXVZ6ipTYBQo/13yhkuUKdmngzKgznOaSqM59nLI+K6LTqdTE17dUzJYvkbCqZR28yhANrVKfS2QJtCtbFnEsaBPEoknzDowC5E5GTonJ0NvW2cWsAQMInInl2CN77GQc37jxo3qreM6p7HKZziA0LinYaODywixj/VSpiEbI5lxcAXp7XWF6REhAjF9++5SIk8j875MrjOnWE4Gx4nz7Cyd5Ax80LGaJCr1v9uFDOx7ewiGSlF757+vKdPL+Vg3Xu/PyZ7hdfOASjblzssptS2TmdL4dz2dfWfEaHYTYHIwUgJV/K/6ayqudiN0QHQaOXXg03TdacueJGrqz3H5lslLySHx8nwc8DrpvFH1GkcHlZ7P53IMZmPIgTGf7djC8Z0/36eFC9z7FCmVx2A77a3+uy0ghuIUaJ2T/ej3+1VAXwH4hYWF6rmcweP6Ypxxn/HPbUmpf8ehsZ0Mvbwo4thoC4Bqm8wsGi6PLyJib2/vxJZhjOw4UBaI9FSq6sFdqfTeAXWCmJ8xpWmQuXCXjHZGrlxp2O4kuRHKQL2ch4hjYyIHgwu/6VgwgusGUvzlgluRRwWyOvrCLecpnQwBb221ywEwaWsylGXjtEKBesloq9WqAXoBU+0Brh2lRkU4M57p28eJ1uQMBoOYn5+Pfr8f3W73hHwTEGVAQtd536k/fWtjZgAyEEJyg8RyHWBljoU7FyKPkHtgg5El5ykdWddDzmsZGmZ8uTif9fKAyFkBoCaHbZJAVmbQRNQ1JUDB894+AmR9OzDnLnrK0ns03ceG2wEHEl4nD6J4tNP5wbqX2sexKTtXclCaHAxvi+qUyUkG5giI3NHI7pUtWVpaqnaVYgY1G/vjyGsTUPS2juuMTBoRNDe1pcSzJmCY6WPKWEkeRA6M+ZxxbVbT+PZrXW5LWWXyo4RfnNym0bbJDvjOmcKcLNPHir6zF7H6OktmvbWj5O7ubhV4VEZzaWmpNrYcB9HGua1q4nNmo0s2b9zxMraTsbi4WBlFORwrKyvRbrfj3Llzsba2Vi3mohMh4KEUNQFtq9WqCSivl4PCl7upUQ401TkzMzPVdAxF67P0UER5QZA6jYKaORbsPB4jDYfDOHfuXPzoj/5oBZAlZBRMCpwPOp3ndCHuqax77r333hPKWt/cUYUGSpkN7irl6T/2I/mfKQ61IXMaOVB92o3zjgNdoLvf79fWFUiGtC5nUqjX61V9o+iDnAxtFxxRf0me+pWLuyWHEXkkRsczQOQRDP0W4KVjrv6msmL2kc9zmdSzuMOYopTKZHKDBtZzlLHM5E/3CMhrgbzmq3o0h/XVs9xJkb7wTQVUTla3TBEPh/X0tt5Lo4+/u0C84wLo2yW1KQMGmb6620TAT3mSThdPXeYy8FNqs75VlvjNwMvi4mLNwDM41CQLGbhuAli6x8G+gxK3VwREBEwuz6Vx5fXLHDLVLSOOF//QgS4Bt4jjrac7nU61o5TsDevu46FU11G21+vfBL6fCeR92CSXfp+IWUGOqYwPGc8yneeZjIh8JynWdRynL3N+eI64ibKo324DeZ3WQFK2fNcp1p24hcFB2Wm+uyMD4JndFGkdJhd0k1RfBaw8AOP9KfzFjVq835v47dc4n9xRGofGdjK4SE5Tp7QX/z333BPnz5+P1dXVWF5erjqEgiClrugm3/jKKKKcDJ92oSkyYrwYKkaQyZ6+zRR5xlBOy+I9HBT+24+RhsNhLC4uxmd/9mdXQsi57u5w8KVQnk7j9AuBUc75lrC6YNCTZySWOxGR3xxQPtA8xZgZuMxx4ODl4l3yyfnHAcRIPOcuileT5GRo/QUzGewnEdvKPs4ikzQqfq/+Zwpc11GWpITUJ1pkLocz4ljhZs/yslk3393KF3Q6WMrGDdtLJ4PPzvhLQ5eV3dQO7q6iYx7VdvDe5GhwCqe/hM/rSCNwFo5AppfI20kl8SIDF6MMmsu/A3GXH9eJvo6Pzy2BU+93ty/+Tb3u0xtKTkQTr5xflCuvi5effXtdvb1ZO7Isho9ltklOHQNaTY5hSV5LALjUV+OMq9sdd3eSMtni/yY+8duBZtZnvK6kQ/ntjkrmVPD3aZy9cXR3SQZL+lm2w/ENx5QHmngNy2LQl8Ffz2hQnzhpKjUdn1JgXPzNdrPy67M+LvX3qL5wZ4Y6ZRybMraT0e12o9W6uaBbTsalS5diY2MjHnroobjnnntifX29ylCoE27cuFFFd8UkNwK+oJcghS97Y+dHRA1w6hxTUBFxIjJCx8eJxr6k7H1QuwJrEkY6QfwuDdYMzGVCxXOKDBEoyatl+wUIM1BIkOmDUDzlYMocGh73ssmfJgBB4dZ0or29vapNmt41SeDp+vXrVbukfOR4sJ37+/uVbFAeRD69InNunVxB6RoCcI0ZvZ9jZ2cnFhcXIyIq48++dBnMQAGjQAIRTCs7kI6I1MnkM9zJkAyIn9p5i2nk0jhguaUF6fwmf6lYmcFzI0fHQhmWwWAQ/X6/tkkGFxtyGtYoYHkaYuSKfJ0kIOX613WMT9ejo1oCHbyX3w7SqGM1ZbTValWLMn28NumXzLizvqy3T/fTh8EhD/KIV7w+c6QyAJiBfv84DynrzjvPXnBTAw/u8ZkMMCrTKd1Nh4tZpiYn4/818v6lbBHfNMlBxMkxl2XV/Bnj1Cu77jR2mfJcAuj+TNY/y65pvDG4y41AaJsYgHVsoudIJhkIpnPhTkY2XjkbxXWZbJPeFzMzM1PbZl6zh2RftWGCLzovBQgzx0Bll7AEv93ByPBziU618Fu70XQ6nZiZmYl77rknNjY24sKFC3Hu3LlYXV2tvejLlVAGVgSGOVgYUXdmcWDNzc2dcFAyhnjqTOTM5cDKFHDmmZfKzTxsDgpe42DI6+QetoM2B/jiDx07OQZqIwdYSamXlIQrlsyoOFB05yXjmStK9okGsQCAFmqeJTg7C9Ibs92RjKgbeU6N8/Sjg4AmWeN5ERWbgy/PMCpDpCyRphl6fSgnmfx5AED1IKDLZMMNlTsZBGUE8ZwqxRcBOq/IQxqTbK2HR5CydvC7FEUjEPNP1s5SxPx2qaSzJoFcZ5fqSRlgFiDrD11P2dc5lzPKpd4gr+CZwAINs4O8EggmsFB9ZOPUbnegOD2SzrcDniZQ5+0t8bIJvDuf2P6I+nbWpehxFiyTk5G9vDXjm8vtKBoFikeB5dNe93RT1q+ufzNZL/0v6V3ynTqpCfewjplt53hpIh8vPF7CaSUn2a/LdLXjQtZB11BHESPpnBwYB920L+LLzMxM9Pv9yubqozI5RVnPE5Y+PDyspjTr3VedTufEpkgR+ZvQMz6RXyVZyK7nM4TpRtHYTsbS0lLVKZrH+tBDD8Xa2lrcd999sb6+XmU7jo6OqgijFCjnJJeUpD70Kikg9Dq5sp8GnExXx/sagmyAuOCWBkZpkOnYKAXskessmsBO9sj/cHj8wjOfaibB5PU+X5J8YmbB+UNeZO3IHKWI+qJN7shAo5IpwYhjxeZesuRHwFJzEydpmpRoZ2en+k2ekd8EGeShaJRSaKLsfOYUREQtK6A3H9PJYOSDGzbomPe7gyLPLmQAg3xg+92Aakrg3t5e9TJQvQVduiFTeqqTZ9Iy58K/2Q9ZFLA0DggeOZ+W0+GY7TtLJyMDBE0A7G6RpgdEnOxvER0M/XcHw3UHnTeR9CAdBuk3Zd8iotptTYvyXTZZD2YcSBnQOTqqbz+r88x+SSa4tbLr8cy2OGXjiDQK8LkNy+yYr8Mo2QLaJC6y5zRK8oN9OC5ltlvPJj8yoOrlTNoYEWVOAnnnupd2ugQkM76UnA99+7hqqi8xl4P5Ev5jHfi7dKykN1hf8kS4S7JHfUAHQ9cJu6oN7rQwKx1Rf8cHZ1nw+HA4rHBMv9+v7I/eW6Vysg0pWq1WtXtrp9NJ+5m89H5jG9kXJVnI+ou6T7MVRtGpdpdSwZ1OJ5aWluLChQuxvLwcS0tLERE1x6Lf79fWCzBiQ/BCBcRpF24YFL0+PDys5o7L+9OLADXgPCLpAuqMU/kShNMqOX17h1Ng2Q5f4C2iMLEMH0zqWC56ZpaCA8wBBgd+KZsxKqLrbWXZLK80NcUNUjY4lLnQVBNFrGWUT2uMni4aDAYnjtHZEk8i6lPibsfIZcZBx/VNuWEEhmsHqFDdAWW/RuTbXapsT0sPh8NqfBPsqxyPGpPU5/1+P3Z2dqLf78fm5mblbOgeRaGZ/fSIS+ZkSAexbeQbiREuH+tZ0IDGiDzXGPXo9p2iSQRPmYFvcvKc3I64g0F+KiKp57oDLcd5YWEhDg8PK+PearVq/Uo9TqfZAY2oZE8IqikzAj56VuZklPQFdbJTSZ4dYLA81iOTdZepEpglKKG9yYCQt0N6jX3lPHQgmoHNTP5Pa+cnicQjd9JEJefC+7qkF0q2xLGBYwDahFL/CGf5czLHOcNqTfaSOtWxDe9lhkJZcE4PVECcNlHtYj31PDkEKysr1W9t0by0tFSNpcuXL8fm5mb1gl1uNiIZF8ZW4MOndHU6nWraoeohu+L8od0vZQ5LQZtsrPH78PAwtra2UvlxOtV0Ka2N0O4QnU4n2u12Ffk5PDysootyMhzQUMHPzMxUc8CprKlss8WynIdGsOwCUVLumYLUtyu7UhlZedmgbhrwWad6vTOPXUIpwRGgiqjPdRefswySK/zTGPem+tP4sp+oiLJynAcycL64t5T9mRTiXvsc5G5sVX9lZWZmZtJpf6OMZmZkXJ7d6WQmhTwVZVH+ErkyorJ2AM8sSBYBzurPRf+K/vB9Ig5QCSh9TJXGkhsjJ8ougyWjjKTudZCqazh2z0qGm8BTCVTcDaIeEFFem8iBKMnl3csnsKcM+AJwj1xy7rWeo6ioZ8O8PaxzCTB5u+h4ujPC+8nPDBhmv3lvE/ikXDdlLEp2zcdmpou87zLeZPXy+/Q8fjtl9zkvJp3Gadc4zmipnBKvs34r9UkTnvLzo3BRU/2bMEgmbyyDY4oLr6XffaMWlU+9JdumXVPX1taqNUdyBrrdbhVo1+6Y2rbZ20Z8QMxAR4HvMMv0IHUbeeHOYam/M91L54o6UcmDUXTq6VJzc3OVk6EFc1qQu7+/Hzs7O9XUFoIXRk25daayIp1Op2JKRFTAgh6evLyjo6PqPRxMweo57LRSVmMUqfM8u1DqqFEL4LzspvPZtaqDAyM5FeILrxOAyYwxBZpR5nGMPEnXMqvEqTUUfgLQksHXRwNzd3c3dnZ2Tizy9edPEnmfsa84XUAyUwJF+t8kv6NkKFMgDmY4TjV9hONLCo0LVB1s6EVEqq8iPLOzs9V2lQLnGrMMKDipbKWWt7a24vr167G7uxubm5tV9oVjXG3hphFqkyvkprHkfGUGgxEuX1BPB8fb4oaLyr/JwTktTeJ4yCjL5jKA4kCfuqKkX92YEhR7Nombheg+ZTL0NnDJtfpaWyWr/934a3xTnlS+ZJzAhWOOBjyb2lUCWlkgKQMY4k9WDp/ljkSJ75ke8nPsP+m9UhbDdRxtmZeZOXKZozHK7tMujosL7haV+m7UtQwo8bzKYHlNZes/y8nGr+tyPUu6UVO8dT9lyymTKdcbWWZB7fYMGusiXSC5ZJ0Y0Mx4q0+73Y7l5eW4dOlSLC8vx3333Rerq6uxuroa7Xa7qsNgMIjd3d3qPVh6PYPs08zMTIWDteZCGx3JnnnWPQtWZbx3PcS+yPq+RO5gSkePY2/GdjKUsVCqRqD26Oiomtayv78fvV6vciRo1AVS6GRoQQvnes/MzNSuk/BIGCQEvL/ksZYAsyufUpTH/zcp6cw79DrcjiLzge+gnINL1zJS6qlMvz8rK2t/03PdE28CTiV+iQTMtChZW725sjzLKPBZkxtTkmcKSjLoMjfuc7N7XFHoOQ7yOK1J18qJyKImrvTpPHD+q/pO0yMJ7J0HMgRahyEZaHoLuvOP4471VjszkEr+kTcZ4KLTzMXdJYDmeoLPXVhYiHvuuecET32slXRdRMTa2lrKB3/eJFAGWDOAmDkZohJvIvIMUgkwU09R/iW/DvhZHp0I2SfpPjkyPu2QetjJwQL7r6TnzsKulICb85791QRGI+pjms5BSedn7SvVr+Q4lY41tX+cY5NAmV5yfvvvceyI68om8uc62M3KKNW3JAdeX8pdZnMyfJLN1MieTx3OY75Jh9dNO0F1Op3Y2NiItbW1uHjxYqysrMTKykqFZ7UbJm2DdI5m8agsva9MwbkSPsv6Iasnj7ls3IpdYBm026NobCdDjOO2WVx/0e/3a5kMRmwISvhGXF+oqeyHplwphTUzc3NhjNZeKGrEFA6VWUk4smMcuCIfdCXlp+9M6DNjmNVhlEJsGoh0KHTeX/KWGW0+28FuFlV1Y0wlr/I5JYbpPl2fKQXxSfOPVa4GurY/lnz5ugEa8EmhJiDg8tqUaSNfRznBfLbLvisnGmfxXPcws6VPRFQZBY1Zl+cMCIgUNJBjMRgMamuwmNlR2cPhsNIh7H85G56xy3jEOhIk0jH23yVwqzKyaDiBJxfy+oJvGplMRrrdbrzkJS+pvVuDY5rbeHPaGb/ZdsrJJIImGnHqSuoV6qLMUXMwwfU45Lfv8EWdo/6jLHFOtF6iStlQP+/v71f11qYJenlsybHw6Q+esdGYdCr1tdrL65qc0pKuyRwod6jdsW+yTexLtpM633nvbSo5GJluy2x2qWznWYnXk0Il0O68H6evSeOAzZK8RByPydL1XlfXfTzntssxgo//LMjEhdbZO78oH7qXU/n5PLdhbkOVxdjY2Ij7778/zp07F8961rOqJQQefN/d3a22M1fwotPpVLZwZWWlmh0kfMv6ZGPZ+36cPhyXvDzHjRx3o+jU06UE9DWdyRfnCgRQ+Nj5EfUtsASKtdPNwcFBXL16tZp/LbCzuroaS0tL0e12q0yKA3ofXM6A0vnSf6fSYPffThmw13em6Gn8mlLULE/nsikbFIpMQZfO837WTfUl330nBb9uHEeKTqjSi3Je+WyCCgGvSaEsdemKkjtceLTFQYbznTTOMe9bB+ic2iZwpYjK3Nxc7e3aqi8BUsnhYLsF0qQ/6FzoeT69jnKgKVMC3sySCdB5ufrQ0ZCRE88zwEo++fhrcjKUYVHmhU4RXyJJchDkYzCTnxKAGMeQTJKzocwYycdOpl/ZBgIJZswEiDW1kv3EcajrCfI5barVasXe3l7l9Eq3ck0Owbey603ZVdVVQIKbQWRZjpLT4PzhtfpNclnLbBl5k03/9Uxcptsz54bjMntWyQ57/Qhu1Z6MJ3QwmhwNL39SieO+CWS7zY6IE3LPe9xp8G/nY3YNf7sTkcmCX0/dlfU/684Mg6+9yzCIz6jgc718lx/aCX8RNKcxLS0txfLycrUBkoLvwi4f//jH48qVK3H58uV44oknqqm+ERGLi4vVO2NWVlYqW8h3Q0VEihG8v4kTMn5m/eVlkDL9kNE4dudUC7/FeEXolHHg7j8U5pLxpJPB6KXAxObmZvR6vepFYUorSYFr6kxmgGSoMsfBB0wTwzIl7cTnNjkZLDMTlKwdoz5ZHUcdKzkQ416nwegCzQHelMYu8ceVjmRBDobv8kAng2/qnSRi+2kY9PFpQiVHaRwA2XQ+O+e8dEeDO71JoStq22q1qqlO+i7VX+3mYtn9/f3qXkV+Ne0xczIUCeK7Cxis8HVFdDJ0HfnPyHgTkHPeZ5Fd7rzDTS5UX9+woKTovQ5+zTgAaFxHY1KIuydFnBwvEc2GzmXX+6n0jib2QxaFlS7TdCntaJgdUxn67Zljyp1IcklHnlMH1S4fo9SxJXCRURMQ9TKyDIY7A032iOXT1nM8ej+x/pldY/kOZkc5D7cyJiZxHDmPmviu6/1YJovZM5p0TQmn+HlSk04bFRz2a13/imj/iQ9Kzg3rSVkSEV/Mzs5Wu5kOhzcXO1O2FZjj7JrDw8PY2dmJnZ2duHr1aly5ciWeeuqp2NraqnZEbLValZOyuLhYBc6Fs/U8x4yuMzNnchT2ymTHeXOrdiijsZ0MMVBv2u33+7G1tVUpcwecqqhAiQMRgRjNYz06Ooperxfb29vxxBNPVJFsMb7X68Xq6mrs7+9XaSalqDmHjQxyhtHRGEU+qFl3DY4mxavzbuTIIw40/faB7JGLpmdmBsEjuF4Ptpe8ykAjFyiKfDBTYEsLYZ0kAxrEg8Egrly5EtevX68Gprx/Ohd6QSTfaD5ppD7gdA3JvRSNsnICqh5piWh2gEc9P6IOvvRbUVttvKANHeTUR0QFlOlkRBxnJwnm2f+UV67PEskhYPSGkU6+3VuZUzkYAmUEL8xosKyjo6MqKKGyfQw4WJVMM8otYl+Sl8zqaoqXvtWGkpIuTdnyfhwHBIwLNu82cQpSNj3TszY+xU06lP0jWeNUNQKSEijjolR9K0MqUCFZkK6Sw9xqtWpbNnuWw+WE0VF3iLlo3MmDK/yOyGWo9HE++7SyzI7oerdBtIUiZhmpp7n4W+VR33mwyMENM6Jsi8uH4wDv8wyEZXIxKUQ7Sn0ekTtkPrOBOIA6wm216+gSH/15fmyU89fk6PC3Z9J0rz5sg8s3x1HmpOq/6xJl1+fn52N5ebnaNUr1uXLlSm0DFGUtdL/0/+XLl2Nrayv+4i/+Iq5duxZXrlyplhJERGV3V1ZWqqlXGtNZlsr/Z+NZbc5wZclxd6zMa5rs0GnGyanQmZSoL8blAmz3KqkUaBC4YFtGQVOkNHdN02SOjm6u05ibm4t2u12bnjU3N1d7Y2rEyReD+e9xDW7J+ys5Ff6blCn7Un0oIKMcjFJ9MgXgzy1RSblkCoRRgxLvMsrqJxDM7Ur39vZq/euRdxmxSaNs0HqbHeAqDUvn9ladC9bBQY/ki5EYgQCfC0qFPg5RdvjbAQuvabVaFRjTs+VkEMCJX+5QcA4ugUzJoSZg86hXFgFz3rMv3elgBoPrMbLMSYl3pX4cl06r5+4GuW5tMnZ+TQksZ6BZOoVluC3yelA+lL3g7n3UOzomIOjT8Fg/yYnkfX9//4SD7NM7+JETrOvkCJWcCXeanXduX+hg+Fgt6TM/505g9hI+bx913jh2JMtkeBmlscRxMcnjg5T1A8e4j3VmCUtYwM+V+rzJ5pTKFZX6siQ3vK4UTG0ix1YOsHW/B3OZRdQ4XFxcrIJu6+vr1X3MVHNx9+7ubkRE9Hq92N3djaeeeiq2t7fj+vXrsb29Xa0pVSZUNrfdble2l3Vv4vm4toPtbxoP+i49N5Mz2rJRdConQ4pRAFCLWCKOMxMO+NxwU3mrTHXStWvXYmtrK7a3t2uLPPnWw9nZ2dja2or5+fnY3t6uRWRPuwh4HKHVNdkuBBEn0746x48Mj8oUH1iu7vMoUjafOHuW35cpDX9+09zhLLrIYx4x4EDOPPES8TpFhHu9XmxtbdWyGBJyGVcO1EnOZETkSpVjQvxSlJTTw8YtP1PoGRBWdFfRmk6nU80plbKLqEfsKbslUONAhlEVj66ofG4FS9mik8F+F1Bpt9vVVCtumczoroIXrVar9lZwd+y4fiObjqL2lJQ4+UrdKP0oJ1l8zMZQkxE4DdEYMFAxqeRymzkb4hnBI42xR2q5VbA7qhHH+ioz6ny+bNTi4mKNr8puSEZnZmZOLNRn9kR9of6QLHpWT3XitKzhcHgiGzMzM1Ntc7m0tHRiuijHHqOzJafZ5c7B3aj+8wAEn6vxqekk0tlZIIN1Z59wzHj/+PgpfdyWEYT68UmkksOXAT9eOw4YpXPZxJOS/is5LwzyeN2y+9i3kglOSW3CNKpf5qhQtrIsCPWBvrUA+9y5c7GyshL33HNP1Z6lpaXo9XqxubkZ7XY7Wq1W5URoBs7Ozk489dRT0ev1qvXFg8Gg4ou2q11ZWYnl5eUKx7CN1HsZr5xnPMY2ysnwWUTenx4c8bGleoxygjIaG535w6h0BQL0YaNF7kXqs7e3Fzs7O7G1tRWbm5uVg0GlqjLlkGxvb8fs7Gw89dRT1YLQTqcTCwsLFVijEcmiN02MyhhZii75AGhS0j4I3DkofUrXZcqhqW0UtiYHQ+WU0vb6dr7ym+V45MDbTllgBoNTdHyxsL71exIp65NMJhhRZ6TPM1oEWqXys+OUIfFSC9bW19djdXU1VlZWqgXYispzXjuBOYF9BsjZLtVD7XNnm3VmPflcAr6FhYXqRUdyMD0bIaIDT7l3x8Lvz3QFlS8zTrqO6zEkx6fZcvc0xLr470x3ndVzz5LEP4LIDAD5tZkO5YfReGaXVJbrCrdrXh/OkZbsaucpOcd6BgNDvoaDGygoWOeAwB0mBV24W6Oc58XFxSrDommsbFNEvk22B5nohDTZhMxJyY4x06hAhsZttnW1+JX1p8sKn0VZ0HOpH6l/3Lkv6eJJJneMfCxEnMwM6b6sLJWR2Qre22TXs+NeV7d9WZk8LnnwneCacJUHOhkYy/CGxq1ex8D3QmltBB1z2jo5AwcHB7G4uBgzMzOxu7sbR0c3Z9vs7u5WQdK9vb1qx1Rm9bSJkaZKabyojdnYcgyQjXcnXS97lWU2RT5GVK7rx1F9n9Gp0Rkbq4FNB6MExnXMDfPe3l6VYtJaD3/ZEReHa8vcubm52NzcrG1FqGlbrJN3GJV6qaO8vjJwGQ/cufDB0AT6XfibnIzMAGXP8jZk7Runf72/Rjkk2f0Zv/xa8o3RYBnXiJO7kXkKfhKdjKYIk8udgwEaTJGUv8adjpGy/vdvPafdbken04mVlZXodrsVcJ+Zmak5GZI7j/4zxZw583oWx11TFISyQKCoMuRU6o2qAi8+L1/Pch6Lr77zSOZksM/8dylwwYxGtnXtaWiU8s7Oj2N8JglUZbLaFLAg0CTQ8r6mbvQXIEqOs+CJzmsjE9VH/Se9JAeSfUxHRiAmsxERUXMKMrlw+ecaE9qjiOM1cowau04gqOCH07S401UpeORlel34LE5h5HbY7tSrfNo1l+Fxx0JJP2Z6Kbu/STdNGpVAnttZ9lNErg+acJrjtex5/rvpGSUHg9QUSM0CNZm8cgwQN9Fp4bbpnC5MOXVwzXHDXS21AdLm5mZtLR53pFMGXkEyffj2b+dd5mQ470rOgV+X2WleJ0eklGl3fo/CtqSx0RkLpGJyR4DXZkIoARCI3Nraqt7orDUeAjGcGsEFYzs7O1XkSB7h6upqdDqduPfee6PT6VTeoiIozrAmsJN98353OBzwl7xvXktv3RfbcaFg5mQ0TaEi30uDUt8+MClkJaWR8cuVh2dfvN38jogT70RganFxcTEibgJWyZz6VHMaJ9HJIJX6nwNWQFrXE6Dy3oiTC+rHMZDcKWNhYSHuu+++WF9fj/vuuy/Onz8f3W63FqVRVF6GWtMePMqTEYFMxMmIma7RfwIqjonhcFhlq7rdblVHvrNHAIrjROUwE6Nn0lF1h4Oyz0i4L9rWPYz6KUrta8rYV5kBHsf5H2VsXI54bamcu00HBwcVHwlC2JcRkcp8pvdkH+QYyFkQQBcAFmU8PTo6it/+7d+Ot7zlLbW6Zjq8BM54j5cxOzsbb3jDG+Kee+45keFiGRwDzCxST2T2VrZDZTO7ojbTsdB41rQrOe0cCyTaDgdGzMQqwyjdzN13uKmE6s3p0OITn+N8dKeKuojjwAMHWXl+zzOZHBCXrtF35qSf5lml3+JnFgRrqpfjJ77Dwsdc5jxnbcv0uGS82+3G+fPnq7d0S/eoXDkK0h8RN9dceGZar17Y2dmpstfqA40t2TCt9VDATPUubbiQ6ZGsL0UegMyCDu5ksN1ZWf4M11mjaGx0xv3eVQFGB0sORuk3X1pFIKDyBAQEKBk1VR00tUqd3O/3Y3FxsXr5l+9840Sh985rckKyNpUEnFkTB9xNWQk/7r9LID4TzkzxuJF17zRTCBlAzO7zembHXQFQHrjbi4Ak5ywzCtcUmbwb1OTEkhdK2VI5ajw5+HKQzr4Z5WCwTM4H1VtK19bWqgVuymLwmRzjnGbENuk5rvi9fQ5KRFyvQOMSEScWyPnUC5I7+m5EnRfZFCu/3xfDZuSG0QMHlAvnWxNlAQGXL5efUYZ8Uoh88eBGFinzftEYUhmcDpeBC1+3IHJDvbu7Gx/96EfvSJulszqdTi3z4W2jDGlMuLPqmUSS2s71HARi4rf0p84TaGQAhs/XN3WET0XMpiRyKlppvLI/S3o0O6b6NGUyCLqeyU4Fx4jI7XPJFmVji+X6tbzHj2fPzvAD+6eJSljBx4pPj/P7fdokxxDX9mlXxW63G8Ph8RqoiKgFq/RsTX/i84SLNRXy6Oiolu1XgE4BPu6GmmG+pv7x395ftL2lazLKrikFxcbpR9LYTsbm5mbFyIioKQ5uQ8vdYNjhqpSYKI9P0T51TMTxvGkubqOCVJR1Z2enYsbq6mp0u93Y29uLjY2NmmLVPsecVlEaPGQoz5G5mfFjW/UhWNJ5987dg3XFO+q8A3YHRSUjwcHJssSnjLws8iOrl/rdeaLpB/ovJ1HTEfRmaQ5IRiolf01Rt0mgbDAS/EgZOKDneiLe5w4HgVP2bH2UBm6329Vitmc/+9mxtrYWFy5cqMaY1sFQbjQWBfCV3lWd3GgTTGROILOfqh+npIg3Kk/P1DQpKWuV7fIncOXrIdz5YR1LIC0LhLiSFw+41a8/m7y5VXKg5AEDBxhOk+RgRNTnTTMbldXfHQZuE+v9yGlr6geNrWyLWNfxd5q63W6srq6m9oML1d1OcJxRv6oMD0RIJsXnDGyzHPGu5NA6EHUHmFOklMnwTRno2Gf1FlH3qI8zx8brqd9srzs2rldZxqTakSanr8kZbCrLP03Xe/mlOuj37Ywjxw8Z/hF5fxFrlfBVRFRZhXPnzlWZjJWVlTg8PKxlI3q9Xm03KQZA+exs90uNAU3tZcZQ9p0YyYNTznfxZRS5zGdY1R35pnK8jFuhsZ2MJ554olpDwZX48tTcoWCHe3SUwDNT8lQG+iiy6wqKHurBwUGsrq7G7OxsrK2t1V4QmHlgTQMt6+RR32yXAxOe92hVyWnwAedA06N6JWckM6JZe9VnNF6ZcvG0mvdx5mR4lI7zpZWN0sv3FHlUv/t0PAK3SSMaQToOmVPnRjybMqC+cAUjw+7Or85xbnS73Y52ux3dbjcuXLgQq6urcfHixVheXq7GS0RUbzdmvbO51ao3I6B6Lo07s050DlU3KUPJB6dLEbz4TmLMkBDkU5b85aDMvBK0kP/uEPuYo1wz+8YtvemUZIrZQU7pvAOhUfc900jyr752I80xFBEndAYdbcpCRNSuoyxlxteN7Z0Gmm7XWBeNhdnZ2RpIcjtFBzizoWqnNkJRu2ZmZqoxxBkC2VRB6i+vP9sh/nN9nKZGjVr3pN+Z3VGdKQvuVJScDPY3+ebj3utxO0DqThL5QpmJqNsF4hxeQ3L8UAKQmd0f5VxE1AOP/LBfXL4cSLvOdRwVcRKD+P0ZHqJdkjyq/N3d3Tg8PKy9AFhrr7S5EINfdJrVDr5c06cMcro/25HVN3MMvA/cfmXjknaSz3N8wnI0TrLnen+WZMxpbCfj6tWrVbRR0UXN4dRuG85A/c8Y6PNRXUk2ORy85+joqNqF6PDwMHZ3d2NpaamKiHskx4mCmRGfo/+la0ogxds9HA4bjYgPDl7Hskrn+UyvZ6ZMdZw8cF5RsHid96fXyevjYEGRAu3KIydDyoAGS88iyCgpybtFrJf4VQK2ESfT966I9J9ZC5XFl1xyOgV5p21ql5aWYnV1tYrcbGxsVKliRkW9LlxozylKTQaHio5Ohjse+i/Z8GkiVJalffYZuRbw4pu2s3q5blFZWQQtU7TuZPgiYI9GjUtZvfx/k6PhbZ1kUl0JoHyzDl4rvovPEfWXT1EnMutxdHRyVxUCncwxfjrI7ZmOEby4HlcbNUec2SCWy2kaEfWsr2w2nXxmBfkcApFMHjme6WS48+IORgb0aWN13HVpyanIeOo4oXS93zeJNAqb8HfWX9k949pPv3YUj0rgmNTk0JVwkGeFXb/6+HdcJFvq0/aEaWUv5FhogyFNw5c+4ZhxGWfGn2uQCPgj6hmXLGCcYegMJ5PfOqbjwku8n/aQWcKsD4gHR/XlKBrbyfjYxz5WRQrFXC5qkZLRtl5kPtPbLkCqaKZcOc+NqdelpaVotVqxsrJSgVQBkk6nU0VuVRb3Js9Af6asCQJdATrj3RCo7lnKjufdaXDe6L4sqloahO5sNCkRP05vX9N5KESMBrOtXg8HaDzH+YtyLrTo319YkzkZWdsnycnwaFxE7iiXDIGDnfn5+apM8UBjYWlpqcYb3S+jr+lFmkq4vr4eFy5cqBa8CRAoUkNeOrj3+dVSUFJG7niqv92QZ0qaytcVKe+XI8LtP336HY2E88MBkMpkPR2gOumZMj7aEU+bV8gwsUzVYxxyx4t9cTsgqMmw3w1y8OIyXnIgMtDIfqTjp/5zx9b5yDF3pzMZynxxCg8pA8Ted008kSPha9k468AjnCWwRl2vevgYFk+5aJwBBM8gZlkjdzQyIDSOo11yGlmOt8fvnXQqAceS3iyVUcIFLgt+jORANwvmjnJiRBk2cx1PkJ8Bb9odzijRNdItehfXtWvXYjAYxPz8fGX/uFbK31ETEZWcc0qgMIrvUOWZU2Iqx2glnMl2kY/6z+AJxwkzLG7LaPM808s+db5munecvh3bydD8tMFgUFVIU6c4X1sAkW8vzYA0B4RHO3ROQhJRjwZz4aeEMOKmgtUiVs4dd7CfdSI7mJ5yxtySA8LjDvx9AGUDys+VBh2zAlk9s3JZd1cOriQ8k8R+ogBnoL/kDJUizooi+G4rbtAkR1RiDhAngcjzUgRwHCopj4jjNw5T0ZFfOqZ3x9DJ0Ja1csK9fHciOe4cKEhxZ21vAoZNbdb4d0NFuZfhoEPrWQSRBzyaskoR+cs1VTevj+SZWbhSBiVrqz+/5IC6zFNHlhwZ52GpHneLnOcc3wROpfY5r9TnnIKq65si6VlZd5Lc1ng93LZkY6mUaeMYjTheaM4sIKculuyX10nfmU4ujS/nd8Zj9XfGI9WJGRaed36xrm6/KB9Z23jdM4UyXVuy89m9XkbpPL8jTk5Ry2QmK5/jOSvX2+X4xwNZfi2D0x709PGmQFW/30+nJ4o88k/HmtOH5WTQuXCdzW/JYwmznZZG9ZOPu6y//XrytyRjfE4Tje1k7O7uVothxHyBHS3KbLfbsbKyUlvkQqXGSuq3Oufo6Ki2Op/MF5CZmZmppn10u91YW1uroidqsN7W2O12q4Xkg8EgIupbaSrSo3sFVNxRyCLlqpuDCREBNQWdwkQPW2VmoNxTf9k1JeeFdW9SJuNkAzKwy/uaHCZOL1HUnFOklMFwnrRarRPRRT6/xP+7SVl6ljQKzHh7dD/nJkuxaUs87bzEKVLczWJ5ebna6nltba06rv6Zm5uLw8PD2rfa4LvDSMmqboweUwY4114L+dV+3avnlxQhy6IDwXEleffph+IZI7kMfjQ9qzTdiU6QZHgwGESv14udnZ3qza4MVowCsCWHhuBqHAejJEslZ+puE3kUcRww8LFD3S/ZU7uoG9Rn2rZWwKPVap3IwjUZ4KeD3GB7lFHtcX1O+eeYcH5R7hV08Cy0nik+NcmUOw58jmctMicj0x1sa8nRIDgcBYJEDFJk9s4dG/6+01mssybHFNn5UfeWrsmAJaPjGVGOPHCQOQiluhDv+EfEayKO+53BH9oK2QjJKac/qX5u8zSuuNZIswP0jgs6Fj4tU/VU3UpT2r39ro987GZ9RT5Sp/E/+6+EsxhAzPpIdBp9ObaT4Quo9WCCSC2SccUlQ0EGq6JShq1Wq9q5SgtQVY6YLCUlJ2J9fb22GFXlCWhFHM+50xQd1anb7Va71rANmTfszKbSZzsiTg6QDPi746FyeX2WBcm89JITU/qwHapvk7ORCX4GdNgOd3qYvRAIYAaDU8tEaqP20ycozYDtpFEpWiqisvb6s03Ody9TjgVf9CMnQxk/nfNd2vitsjQ9KwMvruxcedFRJ0DwqYGS21IGhTxhf5fGhLdH5REIZQtRvT+ysUZiu9RWX/RNQ5gp4gzQZgbGpwS47s1kYRRNUqSWMs9+Vz/S4LHN7niIPCgTcexkjjMNahToOiuSPFJe+fyIky8kc33vY1blUtYd+IvoXGTAoelDO+zz0TOHLctu6FrqP/+vYyKOjZJjktk2dyp8zPvvSbQjJSoB1BKVnJDSfeSNZEZRfz9PQK0yPYgkgO/9XMINjpWy9krX0pFxe0GMIKdH77HwYJPbIMm4Nh3hegt/g723iXLH+g6H9QAz269vjjMfeyXyZ1GvZNfoOxvn3kduB7PnNtHYTgY7io1QZTl1YDgc1hikD8G3jslB0Jy24XBYKWF6WGK0ponohXuK5Kqx8k4VMTk8vLljwN7eXuzs7NSUrKaMqGMkkO5suPdHsEPD12q1UuDvg4bnxb8SyBnHyXCvWGVmx/g8F0YfyOzfkoBlxtvbysWxylb5NCnyg57/jRs3ak6GBumoufN3kxwIlgZiiccZv2kExQc63spmKJPI3WPkdLujFlFXIFzzwShUCShEHGczfNy4kyGnQvcQNKusbOoVy3aQ5Y4F5cejrdkL+DLFTFlsMsyqE6f8MRN6u4De6ybd69c4WNM9k+RQZJSBSoJs9muWffDfrlcpt3QynF/k4dMRsPDsOYNxLtOu4xmE8jYqmsppygT/GUjj2HeeuHPhmYxS1iIrh9cx4Ej++zHWSTSOXLu9oxwR+Hn5kz5eSKOciwzIl67Lrs8cLtocymx2jdfR7TP7WNee1sFw3MLfwqLCCLpH9k1OhmfbOCsm4jgg4E5GlhUv8TVri6b3Zzafsu+ZEdf/TbrKnYyM56U+cZ3o1592rIztZCwsLMTR0dEJ50EPFXDQW4I9RarOlUEm07igW8rSnRGmqtjJTG2pY/jMo6Oj2N3djZ2dnXjiiSeqhaF6CdnFixercrKXrxA4qE485qBL4E2ggIrUnQEaVT9XAm4ckA66fMD59SQftH6vK5oMyJeUEfl0eHhY7fSlyK8cD2Yv1Hde5729vYqHKpfZkEmbMsWd1gjES5EGEpUTy+C9GhMRN6cBKvug6VKZUuFUooODg1oEhk4Cx6vGcwYoqAOGw2FtzHLscgyJB3TMvY1UXoz6ZE50dg8jQARcXPTt70pwI+B159jRf67D0BQpl2Wn7FhJbslbH580itQrNI7jOLV3m0qGOaK+qFHXyuCpb+hcUDfQZjDirmeobI4VPv9O80hTiynTWYYuc9gzsEgAQmBCncE2Uu9kTqs7B27vCcaYzfAplXR8PMMScTy+3YapHk10WpBT0reug54J5FhhFI1yMCLKbc8clUzHeVCJx3iv7mE2xB0TjQMFcDglkHXgW7h5L+93mfKxwelS/OZ7pfSt2QBaf0EAXuKrOxm+7oM80fN9J0bHl5kzyHJYrttLzy7puswByezsrerGsZ2MUnYhEy73QFVxAh12KJkaEbG0tHQiup0xPANsVGzqTC3y2draqt4SrmMSosXFxRPARo4R6+5OBgGTD8JM4WeeYZb1yAxPBjpK5zLngZRdJ2oS6Kwc7wvxiU4bp0T54Key5yDweqoMOS3cQWZSiG+h9kHsvHLieee9K3U5WYq07O/vx+zsbDW9zKdGSSlSvn3qhp6v/nBAm4EQ3aN+4BostSVzrLP2uTOldjq/mBFxJe1gJwNE2ZSNpvHj52nI3AhmfGqiUYo7qwezen5t0/MmFUhRJhzsZ8AlcwgyHZZNY/Ax5vfdqiEdhySfWoMoWVJ/EoRovI4aO6Usj7dlHJ3uYzuT5XE+WZbDx53q559MBsblbZNOJbAq3T+p1CTnIncqS2OkVC7L0O8Sr7IxM0ofZWPNn8myiG0yyjACMZPshsum7MAo2WUGPMsO6rke1PXfbAfxj4hjYtSYc3416fts7PN/yTaV5KX03HHG6NhOhqIvN27cqG0rysgyO5eKVKRMh9ZtKJrELfc0HUoN4GJwdYIEaTAYVICW8+cYvTo6OorBYBDXr1+Pj33sY/HEE0/E9vZ2rK6uxurqauzu7sb6+nosLy9XDg+BkdZz+LaZrhwZmfGIMDvE02ulwez8zD5ZpEttpjBnxonH6RhlwswyKWB8jkcRNCWKzganNrEvudBYZZCv+mh70J2dnSrSMWm0vLwcEXWgTKWSKeRxBrYyCxHHsrG1tVVF1G/cuFFt7by0tBQ3btw4sciZSlZvzeZ6JtaLQF7jkpHIDIxojDISlUVoM6eBdaBC5la0Hin1SKqu0XG1nzrBN6Io9Q3HFCPOkmttWKBMhgIabohY9mmATGa0OJ4zUDHJQMnJwUfEyd2GBLzZB5RPd0wJKghydZ76i893wHInSVMvON6ySCenRjnP2CbqYtc5mby4g+q2IRvX2ZSobCw2HWtyMrK6+jfJnRHnTwagSpmgEtiaNHKelZwNv6fJUciOZbzI7AMz6llmhTYh4ngqLssoAedSeQxEsw0MnjnO4A5rejGeXrNAmWYgis5F9n4mtd/7ZNwp8NRB2YsrfZv1zCnIxkmp33gfgxoc59KB1A/jyNg4dOpMhn4TQKtz1YhW63htQiZ4FE6B0Ij6S4N0fUQeDfWOI+N0jxyanZ2d2N7ejuvXr8e1a9dia2urKm9zc7PqzG63e2KuNuvBdngdNA2I00GyAevGMVPkEVETTh9MJcdC3yWBdiHlN+vmbWYZ3gd0Atwp4GBnG70ODhRYd0WLmbngsyeNut1u1Y7MQWX03xV3RDm6REMtvu7t7dWAuLaUVvZNSpXGnnWT4i/Jqis4/7gsUx/49ChfA+IR6syQsf00BDQcnJqha3yKhvOA+sfb4OSyTlnkdrXeTz5WSmXzGZmuLMmF6vRMAUlOGXD0c+7g0cEo8TXTdaXyedwduTtJrKM7PZJJgrLs/sxRoLPkDlhm00qgMqtnNu6pk7J1IM7n7ONtIjWNnwxcZXX1ckbZjLMAVWdNGQbI+NJkR0qU2RuXC/Z7dm+pP3nvKF1YkjWdo5w5MYOhMSx7wKn1nDbrtoABK9c/xHV61wXb73jM5c3POebzrLs7Gc5P8lzPb+pP71fXN6Wym2ToNOPklqZL+da0YgYNn0dxXUGpopyfNj8/X3278iPwdICfATVlWLS95NbWVs3JUD02Nzcr4dN8ei0aV32p0DjYGG0VoFR7yANS5mRw0R49S7/X2+sKU8c4MLJn6lp9O8h0Be3E8n0KWea5q8zSoHGZYP8KzM3MzFSZEQ6QSTMKy8vLFR/ER065c8dK5H3t/eFOhhwF7ui2t7cXCwsLlSLUWPLtmiXH6isqV3cYWIdRgEOypKwLnQwCb4551ieTOT5nVIbCwU5pa0G2MQPqPk5c1t3JYBSIjjSNT4lKoMvb7/wadR/Ln0QnxIFyRK6LXJdRD/u9JRktgVnaK/6/0+12/c8+8kgiaZQ9UBuyMv1ed1BcRhwkUr5d1kvOhpODLT7L5TSTdfYT+zGre8nJKOGF7HtSiHZ+1Li/HUcjG1vs+2xslLIO/O36lc/N5MzHh54v8O3l+awPyqA2QNFaXs9+6xklJ4O23NtXcigyeSPv3FZlWRSvi5Mwovdx5mSUdI07JwyAehklWRrHtoztZKjArBOcqd4haowGi5gccbzWgvdz9b1Hw1luBpwVNT44OIirV6/G1tZWXL58Oa5fvx6Hh4fRbrcjImJtba36rK6uVi8pUyc72OViPdWJOyTprZGcGqTrGIF3r5v84PoUtY2DinUqdTDLJemYCyYFK4soZ9MVOF+e7eJz5DzpGI0T+6+U2WG5cuKWlpYqIN3v92N7e7vm2E0CnTt3rnJwCY4oS95vmRHVdex/OvZ07iQPBwcHlZMRcbM/uWNbxPFUCzqDGQj39DDr6cfYdww4zM7OVnKisaF3cWTbD/tY1jk6DbOzs7V3gvhLxkoR1Qx46JnuyFCemcHgS/cUVFD9NAUmy0ZmazYyvo7rNFM+PKo/iQ7FKCJvmO3zj+sI3UsalZniM/35WWDnrCnTAd5/JUDG+73O2XzvDJSXQKqDfN1P58F3sPJjvD7i5KL0zOnLiPKdRVpLv92msDxf4+UA61bA+dNFmayO4yS5nSd5P6hMD6pGlLcwbQKe3ve8h7aN1+v51PetVquaDu/yqP/CALqW78PgVrM+tdZ1v+RNup/v3PHsAvnpGQwfo6y3bIXGjurlx9yGOc9L2YtMNqRTs2u8HO87l5db0Y+n2sKWD2TFeNzTPyVwLAHLvDVdR8WbgYeMJGT9fj92d3djd3e3msuvd2wsLCxUDsbKykosLy9Hp9Op3qDsToY7B1wjQo9Tg4HOhoC6BJj7N6v8TPg9GstBT/DlfeL9REXtQIZGXbxjOSUng4YtU2hsg0htYDajJMwOtrW+oNW6OYfx8PCw9m4Vgb1JoKWlpQpAs9/cOGRGfRQRCEccRygln9oiWPNOFxYWotVqVYvRKa+UCdUlixJlwMSBn7eFhopOJc9HHAMmto/P1THVzadJ8UVITIET6DhA8Wc4WHFnRNdJr/iuJ2oP60meNGUzMqfN+9vrNuqeW5Gru0FNY6LJaEbUwbOT9yHlyK/nc0/j5N0OZe0pOVJZXf16Bzh+bXZ/U92aHA3adc9a8DoHbryHYM7rVup350lJxn3s0ua5zZrELHiJSnwZ5Wj4ebet2Tga5dA01S2irEO9bu4YujMqWfFxwecwQN1qtWo4gNNomSnw+jlPpOv1DOokd5Acc1GuMhzm06GYteAnw4Iqh9NzXc5LfZjpvqxPnDKeZ0HSUTS2k9Hr9WoRC87njqjvsT8/Px8rKysVoI+oR9A9neoCx+OMUOqlYwJZAvURx0BA6zA2NzfjypUrsbW1Fb1eL1qtVpw/f77ahuz++++PlZWVuOeee6o3Imcgi0LDDAYXNHPnJEWxtSD04OCgcnI47Yfv5NB0FypEpvtKA9EVOb+p0MWfjCjEXFfBrE0Gkjj4M+fBjQ8Bsg/wzPDoHOVmZWUlDg8PY319vTYVbpIWgK+urlb97tEDffvAzuQ+A0nilUA2x58cwl6vVyt/f38/Wq1WtdiNu0n5uDs8PKwpdzqgcpS9zyLqTgXLZERT0SBtCJHtNOa80r3uZGiaFB0L6QkfI6VydY7T2krKk+O01+vF7u5utW1tq9WqLQ7kG42lFxhta4oEZWOV9fKshdeRTu2kOxqjImKlaTXetyUjmfU9eeOBlyZn8E6SPzPrO9cd/snGUXZPxtMmos7WlBPpH89uUN8ziuzRWYFB2kFf1xRxcp4721Vqm/OM99OOeZR53ADm3aRxHMmm691RKwFPl62MSg6evt0+eH3VVx6EHA6HlbwcHh7WdKmXQ50tTCG7SF0omfX+9brJ9ql+0tfS3dTv7mCTb8xUCr/KedB4EIalk+GOh+MmlacZEhnvm2SE9XT+8Z6MV+QTA/DjjpNTvfFbDBZQVxRencqoIlOqAkMEHqy4/ycjXHHJQGS7Cx0d3dxJqt/vx+bmZuzs7MRgMKi9AVlZi0uXLlVvDdd+yJnhYgRExAHBQZVdJ75p69XZ2dnY39+vzvGt13rjORdSq40EcQ7wyHsOqkxImrzfkiIW+fNLzkPmZLgz5Nc63zOwRL5rv/lOpzNRTkbEMeAnsHRlT8oMW2kAk3fKUHDQHx0dVY7t7OxspayZMRMPvTwfeypPss31FRH5OhJX4m7E6XB4FFbPZrmZkyHAQseiZNBK/dN0nY8L6gCux/D35XDalvNwXOOdgQL2j4MFrzfHjpc9ScSstki/HfA39ZPz0wMrmR7J5C0DtHeCvD9Zp+zakmORjVUvZ5Rz0SRvnrnwiCuBlo/30n+2R0E6ORrCCPpwFgDb5e33vss+7Fce87pl4HgSKOvzcXSIyziDQSzby2vSVaOclFF6STx2W697M/nzfo6oOygu35lNKOlN3kOd1GqNlzXwMjO8w92q3LHIMvCZLDoPRgWsqPuacFxpJkGJZ/57nLFyKidDjFlcXKzeZSElIO+TXpvAACtFRyEDlRHHGQpezzniVFBiuAz/1tZW9U4MZQu0fdnGxkacO3cu1tbW4t57763eHM4IIMG2fvvCK49Qy9FiBkJg6OjoqJpCMxgMqncaaBcgzvP2lwASoDL6TFCuZ2nuobxk57sLhtrLbEWWtdC17A9lV7IBQifC+zBzPEoRD0agIurZr8XFxeq8tjieFBL/mnYgygavO99+nsouUwbsOz5T79JwJ4NOtXhLZcT/zGqxriUnw/uU/7lmKANBmcEg2PFIasYnfpeUYAl4leqT7SyVba/LLYHpVHEqYgYIndg3GuduBN2IPBOcCxHT7i4vGeh32S8ZT1LTecpJJnN3gjIAXgJzo+rI8xHH2UICdI7dUvtKAMmdCQKizMkotdefQXtN26c2KFLK9Yzebm8fr88cD69Tk26hnZkUKoH+kryW7KnrB/KQ15aemZWr4yUs5zKquujbcYrLHe0ewTXHTlafzLnNeEp9ome4nvHfXhYdA/8wC+jrQ4iffCw5ztM49hkmmTxk32wHbbu3p0mWXHeduZPR6XRiaWkpNjY24sKFC9HtdqPVasX+/n7s7OzE7u5upTBUcd8Tn/PBnQFstEATgerBwUHMzs7GYDCo5p33er2IuCmsylpcv369Aujdbjfa7XZcuHAhVldX47777ouNjY1YWVmJ9fX1qpPpUHBQOtjgeoyS0KoNAhzD4fAEQFLdNLVKL5dTVF7H9vf3o9frVVkOfz6nsFCAXVFSmTo44cBlm1RfLUhitoSLlLKshp7p2Q06iz5Pkjwk7zMhZl2WlpbGFeGnhTilptfrRb/frznimWOV0TiDlyDbnYLDw8Po9XrViy81vWd/f78KEriB5YYMkhGu/9BxOht6JsEwj3l7PWslYr/7QmkqYcox720CaR4U8A/HFQ2uyyPr5xtSqK4+Lqi73BkuybY/30FPibejAPckORyj6uLAxu2F/87ae5pnSd98+qd/evz4j/948bkl4MpyOHWW9ZudnY0HH3ywVl4mt9lzS9d5PXjdqMxMBhh8aofWKXL9U9PcdtmliKg2YeEY0lRSzThQQET6R8/3aU5NfCKPaXfYRuo4DwKojWrzpDkZGWX8cDBMXUzZJdh3J2OcQMUoXaIyS/fpuAdeWBfJmf5zkxM5Aww0OX50nKN7vO6ZI1JqG+UxA9yOfRSQ9d2tfJMEPo/t46Yx2WY7JQzNckptUR11rds9ykrJuRyXxnYy2u12dDqdWFlZqRZLy8nQw8UcVxA+4EcJqDNQ9zAyqGlHiopsbW1VTkZEVIu8tT5kfX09NjY2Yn19PbrdbgWyIo6nJ6nsDMBkA7Jk8FhfHedUCk0X0VSWubm5SiHrZYfz8/PVMX3rOZy+oWdRMF3gaTzUNvaRG0PV27fy9dQ5o7alQecKncpe5TmvXUE4r0ttmgRStFvTAKQUPNoRUU45OzUpfSoLN8r6vbe3F63W8fxQyTizbSrDs09SdB4gyD7sM9bT210iGh2W49myrKyMj8y0lBTyqLFd+rB8d+gz+S/VlQ5KRiwrM6S87plGbAN5MApAuW1warrfr/PP+fPn4/z586mTUcoK8Fpfq5ddlz173HZ4m7Kx1nR99p8BItfx2XsFSh8R7ROzFlozxv8Ei+Kx78iX6T/XLWxPlkH3beL5cSdj0sfSOHKR2RZ3IsaRwSbAXRpTpXoSpxAreuDJ+47lUadTJ/IY9SXbOYrcKeFzm+yAt49OhmcsPCib8c7tC3UPdZC3rYSdS20lv0r9Rmclw7jj0NhOxgMPPBCrq6vxwAMPxMbGRi3q3m63Y2FhIXZ2dipQPBgMqsqRyW7c2VA2kuDXO16K4PDw5lu/t7e3K+WljMC5c+fi/PnzcenSpfikT/qkWFtbi4sXL1brL1QXzudnlFIfTltygKW6loAXMw6qv4C7zukNsIeHh7G8vFwpZUV8dnZ2qoxGv9+Pvb292N3drebd0+MUoKw6FwuI5ESpXnw7JsEc34yp3/zmAsDMQaAA0rHQh1NdKBMsg4OJ8uCDjM7KpJD6SX0lB5FgkdGyWwEY7gh7mtUX8GtsKCOmtUner5pqJ/5qnFHR0BH3NLsbBba3BCidaIjUx1Tco8CaK0vywR2ETDlnY9nb49kDZgPlKDkobSJ3IJwfWfDDjcQomjTglEWLx3UumBEqAV1eTx3j57OPO36jgJjXRc/LnKbMhmTt1e9M/liOt9l5wv/+DH3LTnC+OLeJpq7O5MhBiPTe9vZ2DAaD2N3drYKAW1tb1XXaGGZ5ebmyi9x8gjKubwI4XkcbozpzXSi3CqXd4G9mcieNRjkNLrO6p+TEZ7rO73M5GQe8svyS/OrZtFW04XQMI46n4kfUg6Mu1+xP6v4sCMR2SX687a7niVldX7htF87JtqbNxiwDfz4djFlRx8ReFzphfIbbcOIPx1ncXct54oG1ccbL2E7GxYsXo9vtxurqanQ6ndquUYuLi9FutyvQ32q1alF2pijd2GdTIBj59X2tyWi+0VvXraysxNraWjzwwAPx4IMPxqVLl6odpFZWVmrAqeQUZB6jaJT3nhk8F2ovjx3FuXnKFOj9B+12u/ZWZ61NYFsohASzenb20jw6g1okry1QBUIXFxdru+iUDDr71HdO8PmWpUHsioN9TwNeGlR3k0pT6lxpjSIChqbzukb8EH/INykpTWXU2NTmDYrk0QnWM6R83dGmE0jlpfvGHROuKP18yeCdhrzerk/03SRLHoViVlX3q+/VFz4Nq2TQs988lhn1kkPCNk2aY0FycMRjGQDnuaZ2lcCYvp03bqwzGtfBIOAo6Uc/nz2/1I+j6uD1cZCenXdgxOxFSUerTNlpAiVOAe71epWTod/CB3ymbAyzDHy2f5fWAnL+uzsZvv01s+CcBkZ+Twq5zSPRXmbnvS0ZMG2yUyU5pu7PruO3P1+6lvozk3kPUMrZyKbQZeNK33yGbCTvG0evZFiRsk+7kG1L6wFZfXt9va4ZLs10RkmPuHNBon7geGYmMasz7x8Hf50qk7G4uBjr6+vVPDM1rN1uVxkB7pykCgksE/RQWUnBqCO49WPmDCgKL8W1s7NTKZDz58/HvffeGy960YviBS94QVy6dCnuv//+CjRLSLP5ouzQJuVPUOed5h8Kkqf3yAMJwXA4rMD+4eFhleXgIjktJNc7IphtYRaGzgCP6z+fPzt7c8cmLYaXI9npdCong1kD8s1TmDIimbLn+czYMl3uCoxRdt2jdSmTQpwi5aAjAyBOmfIYBar0TcXkZcr4awMHTcuT/GinKt/1iWsy1P/qH5XFqQ5NDnbJGJZAJR1kBzssm/eUwJvk1LMaJUDqZdLo0Yj4OOBOOT42s6k2lBHWwXVGidxQZYB0ksaHaBwjmfXNKJ2rY6P6taTjS8/P+FmSWXc++RxO5RGNyp419b8T9YDbGxIBOqcScSccOtYZv6SP9RxNFe33+5Vd5vuqZL9kExYWFmJpaSlWVlYqDCDeZBlvfbIpT3SOuHWuB7d4zJ2XSSXXAW4Dx6HMWWgC6u5wOeBtKr9kh1h/ZmfpCLAM1UFTeqlfmwJ5/iyOBwJvHlN9M2eJMl7ig+rL8eMySD56tlPnCPBpW3j+NPqgpNfcLrN+rnPGtVslGtvJOH/+fMW0iONXuUvZ6D0TAsYCMtz1hgvi1HFcea9diwiYFxYWqulDMtoqV2sy5ubmYn19PVZXV+PFL35x3H///fGSl7wkLl26FGtra9UidXUSd/3htKFsWgU7qKlzM2Cl30xxe/SX5M6X7j06Oqr4dHh4GEtLS9UiXkaPuDiKwirlr2uGw2HtBW1yGpeXlyvFr1S2dt+isqfQc1qLDIDWlEgO3ChkoLGkaJyfVArsm0khLghmtOw060eozLIo1qiokTutVJYahxo/kiM5HPrW2JNSnp2drRaRsyyXAZKer+M+rY1K1BU3QXY2Vkr/S5Esr7fPl/cy3eBKng8PD6usLbecVpmtVqv28k3yuRSB4/OaDIG3x/vc+TGuEbjb5I5Gk4NU6iN+Ss6Wlz3KqSnV05+fEeVtMBhUMuLTdrxvT0uZQ+IZxQxIMkos/exR/gywsQzqcQdFktH5+fkqYCWbtLCwEN1uNzY2NmJ5eTnW1tYqcKbyuU0169pq1WdGcNqGZ8nJX3dCyTvPakZEZR8ngRTMIGUR71F2oYnIx9PKZaY/vR5+zG1+1j+qkzbQ0b182bEHOPnx53kQwvVt9hFJptUXtMvMtPBDXpZ44DM3OH6yrHumg2jvvU+yvsjkhWVlfMjW7XINZRON7WQsLS3VQK8bOCmIdrtdOQraNYlvt2Y0PSJqik6KxZks5yXzsKSQlpeXY319Pe699964dOlSXLp0KTY2NmJpaamKzvp6i6ZpDOyM05B7eS6QJbDI+70cRv+VoZBXr3Yp86FjdOb29vaqwUngpG9NhZJjoYwGo0suxOKPvhlN0n2+VVtpQJD/FHRP9TUpgUkhOqqqNw3faZ2MDESQSsd4PAPxrmh84wP1Dx1/bpCg5/hcWeeFzmXgL3My2IYSb7zNDjz57UrcDZxkNwOolD3pODnR2oaauow6hk7GqOxJCUh7XfgcGmLPIJVA1SQ5HBnYz8Be6b6srU36VPeWnI5bdTT8GZnD40EtOdsM2o16RnY+qzNtTuaMujz7lA4HaZm9cjDHZ1LfMZOtMhQs0zuqut1uNY2ZQRi+c8udB17Hb6+T943zjAB9HL7fLXLb5/KW6ZVRcpodK42hrNxMrnysNembUfabY8gzVRH5yzwzvef2JjvndWrip9tWHcvGhPND1/oxPpu4jfbTr4/IA0v+jIxKsuTleL2cB25bS3Sq3aX0AEXlKAARNxvd6XRqkYbhcBi9Xq9asKx75VAI1ArYUmkdHR1VkdXZ2dlqlxzfLafdbsdDDz0Uly5dihe96EWVoyGlpG1Elflwz6w0cMjopv+lc5lAZsBR12gKGq/l9qfD4XEGQucEYhRl5bbBOzs71dxYef8qX06AFt4tLi5WC/CY7ssGKgGh+l+pdkWt+J6UklFwojOhsvVNw+m8niTjIMda9aWRzLI3pEzBkc8R+VSjDGSX7qECU/Rd79LQtKn9/f3Y39+vAgZyNFg3Obpy4JWZ5MJNnXcnW/WW4mK2U/UtGQF+81r9doBBA50pxWw8kncyasPhsNqRbjAYVO2bmTl+c/HR0VGVXXSnIkvve7v4fFf0dMQ4nVB9oTpzzJb4NwmUjeOMP02RwNM4TZnsZAY0u+e0xClRsn/b29vV2sFWq1VtCd/pdCq9q2khlEmO3SZHlUSg7kQnoMm5IH8ZkKLd9YyH7I+m88p20UGQXdDLVJUh9HGbATe3R1mbM3DnPCM/nwmOBqPnBHfSBa6bs/Z4IMXbmTnrbodKADzrE9rxJvLy3JYRX+qc5Ip4R/LpDmnWxlJ23LGN2yxe79vQljJAKo/TkVh2yS7rd8ZDjsXs2U2OYmls+Cwa4kthR9m7Uc9yGtvJIODTd7ZAxCMSAjKK5jB62JRiUsM59SQT5MXFxVhZWYlz587FhQsX4ty5c7GyshILCws1BrohKQEzp1Inj2uUSgogG+RZdJ8gyQWEg88Vj7IaWsuh94uoz2TUtFaFi7odDPMZ3k5dy73UvRw3AC6clAn1l35z3rs7Hxlf7jZlL+Bz8OtAp0RZnztlsug8Vt9R8asvOXVob2+vBsSHw+GJLW51PwMJrIcrouHw5FbIvDbLsug5Pk7ccLpDlcmX6pOd438CLD6DAEcR2aWlpVomUff51Es39iWHxvuW8k1nJgNQdEL5jHENwN2iUr+W9Gqmj/ze7HvUc0tjsWmMNjlv4jtBzsHBQfR6vdja2qre7dRut2NlZaVao6Cd3XwsOGAp2Y9MrrJvdzKy4Ie+/fpsnjnBjsazNiQRAOaz+K4AlpfJa8leNLU70w2lfnPeTJotEXFsSw979jKieQycFsdk8uUOsMrIfpd4yfszJ4+OEMvNZNfLy9bveHtZHp/TpKczXmW8J97Us7NMesYPBr/5O+OBtyH7+DOadJY/w9uiJQqOA0r62mlsJ0MNlFKgEmEFtQOAgI22zdSHzOLUGo98k+E0smyclPO5c+fi0qVL8cADD8S9995bORnKXHDunuqrSCwN9TiGqUSlTiNxGhjvyYCorqPhKT2v1arvRHXjxo3qpXBagCf+M5WtRd7cxtSjWVRmmYJheZwmlYHQpoGgY/48HeN1LuDj9M/TRcqaKdoSESccrpJic3JHjHxrMholQC3Q6sCF6wUkP3JSW61Wbe0P1/S4Eud/gQ5Ow9KY9XZxTHi7mxSZ2pPxgWNK0wzZB8yu6Dh1DHkmUsR1eXm5FlUdDAYREZUjr/4vGRS2kU6Bt52AlQ6H7os43sDBg0AsY5LGhyib7uBj2oFfdr50r6jJuGbAqYlX/uwMPKi/CAj0wtqrV6/GlStX4saNG7G4uBjnzp2Lc+fOxeLiYkQczz3PxkIGgjJDnzkWLuMEa1n0lc+RTZe9YJaboK603ozP8Shokw7LPiXAxrbSdvl1fs0zhVzWaBNdXkpyXJJr7/dsXJaek9lwr5/ren9WJgteV/aXQK7wBa/n2ogswKlv738+zx0fHz9ZX7h8qv3U1x6Qd9kWiPcPbYCPn1IWIxuHpT4rHVcbuKaQwQ9m+EfR2E6GdnDS1rUR9fnn+uhNnltbW1WKWFNIVHnPYDDFpSiHHBV1ohZ/93q9at9/ZTEuXrxYrcNYXV2tlLaIgICdmik0z3qoMxkJHjUgeY/+e+dnKblMeHSNyIWf7VJ0VdsGbm9vR7/fr6ZLKZWtBd16waIWaI8SUm8jp0nRABHIZpS157SOg4PBSSGBdO2O5sptFIgZ1e4MdGVKj/LqAJQ8prwrA6OPMl+Li4vVxgGK4nPbWyl+1lEBBilKLnz1jIGPNxq0LM3Mtqr8ksxlIMyjXHRG9HwZBc+otVqtatqU2s7pm9SJXIvGZ2VjzPskqx91JAMnNEiesSJPJ4nGdQRG3euUgZung0oypj7RtNXr16/HwcFBFRSan5+v3jVFm6DyPGt7GuK4d7tSci70WzJDmdMGIXK2+eH0EXeyXOb1TWDlfCw5GFl9+QyO7UwGmuRikuyIU+Y0NsnDadriIDsrizJRKp+2qMR79qnLRBNQZt9KH6u+mR30ezPZKdmUTAd7ebqv5BT4ovSS40xbSVvI8c/ND7hWiRnFzJnK8JT3o+PcVuv4tRF8sbBvlMJp0aNobCdDUwOoPDJvWXO8ueWqlIkqmCk8j67QOMvoy6tShkLz/7vdbiwvL0e3263AD4l1pjB43bNB2zQImgaS35tRJgCuIN3B4b0+cMQnCoc+aneWQaKgjtM+8sPT5zRgXlf+LhmTDBQ28XjSSN7/KMVHKsleptBLgMwVaGYYeJ3kSv3owQK1RRk/KjLuJFfqB8midIJkhXJMhZ7xyvniPB2XvyQ30pR1ZjKyaVaMolEntVqtWFxcjBs3btSCJlkbvK98nGSGmvUrga1s6sEkk/fjrd47KeR14m9GBAeDQbWGh1NYGel0mc++x6XT2i9/ru51Jzez202R5Ix8iqQ/P+OF2ztvG+s8CvT68VuVx6eTMmCeXTOKSvpW998KD5zfmf3hc6h/SyA4s2uuC0/bz14HP34a/eKOBnGmOyMlB0M2kv/ZVm93U7CAbS3Jc6lf/B7pLd9JdtTMnxNlDid5RE1pSlOa0pSmNKUpTWlKU3rG0TNrcuKUpjSlKU1pSlOa0pSmNKWJp6mTMaUpTWlKU5rSlKY0pSlN6Uxp6mRMaUpTmtKUpjSlKU1pSlM6U5o6GVOa0pSmNKUpTWlKU5rSlM6Upk7GlKY0pSlNaUpTmtKUpjSlM6WpkzGlKU1pSlOa0pSmNKUpTelMaepkTGlKU5rSlKY0pSlNaUpTOlOaOhlTmtKUpjSlKU1pSlOa0pTOlKZOxpSmNKUpTWlKU5rSlKY0pTOlqZMxpSlNaUpTmtKUpjSlKU3pTGnqZExpSlOa0pSmNKUpTWlKUzpTmjoZU5rSlKY0pSlNaSz6uq/7unjOc55zt6sxpSlN6RlAUydjDPrJn/zJaLVa8Rmf8Rl3uypTmtLE0M/+7M9Gq9WKP/zDP0zPf+7nfm689KUvfZprNaUp3V3SuGi32/EXf/EXJ87f6XHx2GOPxfd+7/fG//gf/+OOPWNKUzprmtqTT0yaOhlj0COPPBLPec5z4g/+4A/igx/84N2uzpSmNKUpTWnCaW9vL/7JP/knT/tzH3vssfi+7/u+qZMxpSlN6a7T1MkYQR/5yEfiv/yX/xJvfetb4+LFi/HII4/clXrcuHEj9vf378qzpzSlKU1pSqejl73sZfEzP/Mz8dhjj93tqjRSr9e721WY0pSm9AlKUydjBD3yyCOxsbERr3rVq+Irv/IrTzgZjz76aLRarfjn//yfx9vf/vZ4/vOfH4uLi/Fpn/Zp8b73ve9Eeb/4i78YL37xi6PdbsdLX/rSeO9733tijivLfNvb3laV+Qd/8AfR7Xbj277t206U+7GPfSxmZ2fjh3/4h8+cB1Oa0lnQO97xjvjrf/2vxz333BOLi4vx4he/OH7qp37qxHXPec5z4tWvfnX85m/+ZrzsZS+LdrsdL37xi+M973lP7Tql1//zf/7P8eY3vznOnz8fq6ur8fDDD8e1a9eq6772a782Lly4EAcHByee9YVf+IXxohe96OwbO6X/5+m7vuu74vDwcKxsxjvf+c54+ctfHktLS3Hu3Ln4W3/rb8Wf//mf1655znOeE1/3dV934t7P/dzPjc/93M+NiIjf+73fi0/7tE+LiIiv//qvj1arFa1WK372Z3+2uvalL31p/NEf/VF8zud8TnQ6nfiu7/quiIj45V/+5XjVq14V999/fywuLsbzn//8+Mf/+B/H4eHhrTNhSlO6QzS1J88MmjoZI+iRRx6J1772tbGwsBBf/dVfHR/4wAdS5+Fd73pX/MiP/Ei8+c1vjh/4gR+IRx99NF772tfWBPE//sf/GK9//etjfn4+fviHfzhe+9rXxjd8wzfEH/3RH6XPfsc73hE/9mM/Fm9605viLW95Szz72c+Or/iKr4hf+IVfOKH4/82/+TcxHA7ja77ma86WAVOa0gja3NyMp5566sTHlfBP/dRPxUMPPRTf9V3fFW95y1viWc96Vvzdv/t34yd+4idOlPmBD3wgXv/618eXfMmXxA//8A/H3NxcfNVXfVX81m/91olrv+VbviX+5E/+JL73e783Hn744XjkkUfiNa95TQyHw4iIeOMb3xhXrlyJ3/iN36jd9/GPfzx+53d+J97whjecITemNKWb9NznPjcefvjhkdmMH/zBH4yHH344XvjCF8Zb3/rW+Ht/7+/Fb//2b8fnfM7nxPXr10/1zL/8l/9yfP/3f39ERLzpTW+Kn//5n4+f//mfj8/5nM+prrly5Up8yZd8SbzsZS+Lt73tbfF5n/d5EXETZC0vL8e3f/u3x7/4F/8iXv7yl8f3fM/3xHd+53eevvFTmtIt0tSefILRcEpF+sM//MNhRAx/67d+azgcDodHR0fDBx98cPht3/Zt1TUf+chHhhExPH/+/PDq1avV8V/+5V8eRsTwV3/1V6tjn/zJnzx88MEHh9vb29Wx3/u93xtGxPChhx46Uebq6urwiSeeqNXpN37jN4YRMfz1X//12vFP+ZRPGb7yla88g1ZPaUrj0Tve8Y5hRDR+XvKSl1TX93q9E2V80Rd90fB5z3te7dhDDz00jIjhv//3/746trm5ObzvvvuGn/qpn3ri+S9/+cuH+/v71fF/9s/+2TAihr/8y788HA6Hw8PDw+GDDz44fP3rX197zlvf+tZhq9UafvjDH749RkxpSiDJ5fve977hhz70oeHc3NzwW7/1W6vzr3zlK6tx8eijjw5nZ2eHP/iDP1gr4/3vf/9wbm6udvyhhx4afu3Xfu2J573yla+s6f73ve99w4gYvuMd70ivjYjhT//0T584l43PN7/5zcNOpzMcDAbVsa/92q+t2aspTeksaGpPPjFpmslooEceeSTuvffeKtLTarXi9a9/fbz73e8+kUl4/etfHxsbG9X/V7ziFRER8eEPfzgibi7Ge//73x8PP/xwLC8vV9e98pWvjE/+5E9On/83/+bfjIsXL9aOfcEXfEHcf//9tWlb//t//+/4X//rf0096CndFfqJn/iJ+K3f+q0Tn0/5lE+pXbe0tFT9VrTqla98ZXz4wx+Ozc3N2rX3339/fMVXfEX1X2nr//7f/3t8/OMfr137pje9Kebn56v/3/zN3xxzc3Pxa7/2axERMTMzE1/zNV8Tv/IrvxLb29vVdY888kh81md9Vjz3uc+9fSZMaUoJPe95z4s3vvGN8fa3vz0ef/zxE+ff8573xNHRUbzuda+rRW0vXboUL3zhC+N3f/d3z7xOi4uL8fVf//UnjnN8bm9vx1NPPRWveMUrotfrxZ/+6Z+eeT2mNKWMpvbkE4umTkaBDg8P493vfnd83ud9XnzkIx+JD37wg/HBD34wPuMzPiMuX74cv/3bv127/tnPfnbtvxwOzeX76Ec/GhERL3jBC048KzsWEamwSsB/6Zd+qVqw98gjj0S73Y6v+qqvOmUrpzSl26dP//RPjy/4gi848aHTHRHx+7//+/EFX/AF0e12Y319PS5evFjNB3ej8IIXvCBarVbt2Cd90idFxM01S6QXvvCFtf/Ly8tx33331a57+OGHo9/vx3vf+96IiPizP/uz+KM/+qN44xvfeMvtntKUxqHv/u7vjhs3bqRrMz7wgQ/EcDiMF77whXHx4sXa50/+5E/iiSeeOPP6PPDAA7GwsHDi+B//8R/HV3zFV8Ta2lqsrq7GxYsXq8CVj88pTelO0dSefGLR3N2uwKTS7/zO78Tjjz8e7373u+Pd7373ifOPPPJIfOEXfmH1f3Z2Ni1n+P/P47sVoqdOevjhh+NHfuRH4pd+6Zfiq7/6q+Nd73pXvPrVr461tbVbftaUpnQn6UMf+lB8/ud/fvylv/SX4q1vfWs861nPioWFhfi1X/u1+NEf/dE4Ojq6o89/8YtfHC9/+cvjne98Zzz88MPxzne+MxYWFuJ1r3vdHX3ulKb0vOc9L97whjfE29/+9hPrG46OjqLVasWv//qvpzaEWW8HSaLDw8Oi/ckosyvXr1+PV77ylbG6uhrf//3fH89//vOj3W7Hf/tv/y3+wT/4B3d8fE5pSqehqT155tDUySjQI488Evfcc0+6iOg973lPvPe9742f/umfHru8hx56KCIifc/Gad+98dKXvjQ+9VM/NR555JF48MEH4//+3/8bP/ZjP3aqMqY0paeTfvVXfzX29vbiV37lV2pZv9J0kA9+8IMxHA5rwOr//J//ExFx4m3DH/jAB6opjREROzs78fjjj8eXfumX1q57+OGH49u//dvj8ccfj3e9613xqle96kR0bEpTuhP03d/93fHOd74z/uk//ae1489//vNjOBzGc5/73CqyWqKNjY10IfhHP/rReN7znlf9LzkjTfR7v/d7ceXKlXjPe95TWyT+kY985NRlTWlKd5qm9uSZQ9PpUgn1+/14z3veE69+9avjK7/yK098vuVbviW2t7fjV37lV8Yu8/7774+XvvSl8XM/93Oxs7NTHf9P/+k/xfvf//5T1/GNb3xj/OZv/ma87W1vi/Pnz8eXfMmXnLqMKU3p6SJFWpnZ29zcjHe84x3p9Y899liVio6I2Nraip/7uZ+Ll73sZXHp0qXatW9/+9trO4/81E/9VNy4cePEmPjqr/7qaLVa8W3f9m3x4Q9/eLqGaUpPGz3/+c+PN7zhDfEv/+W/rM0Bf+1rXxuzs7Pxfd/3fSey3sPhMK5cuVIr47/+1/9ae1/Sf/gP/+HEVrfdbjci4lQ7U2Xjc39/P37yJ39y7DKmNKWni6b25JlD00xGQlrQ8zf+xt9Iz3/mZ35m9WK+z/iMzxi73B/6oR+KL//yL4/P/uzPjq//+q+Pa9euxY//+I/HS1/60prjMQ797b/9t+M7vuM74r3vfW988zd/c22h0pSmNGn0hV/4hbGwsBBf9mVfFm9+85tjZ2cnfuZnfibuueeedEHsJ33SJ8U3fMM3xPve9764995741/9q38Vly9fTo3I/v5+fP7nf3687nWviz/7sz+Ln/zJn4y/9tf+2onxe/HixfjiL/7i+MVf/MVYX1+PV73qVXesvVOaktM/+kf/KH7+538+/uzP/ixe8pKXRMRNx+EHfuAH4h/+w38Yjz76aLzmNa+JlZWV+MhHPhLvfe97401velP8/b//9yMi4hu/8Rvj3/27fxdf/MVfHK973eviQx/6ULzzne+M5z///2PvTUJlXduz/rtqNVW1qla39z7d58lHiJEgZiAoCMGBA2OEICiIEBAlBGIIIgoZZCABHYnoQFEIGiTBgQaMEEnEoRHFgYJNJjHClyA5yXfO2c1qql1N1X+w/9ezfu+17uetWvvss3d9um4oqnubp7mb626e5/39jfv8/t//++Pk5CR+9md/Ng4PD2M4HMYf+2N/rHVB6g/8wA/E6elp/OW//Jfjr/21vxadTif++T//51+p3PeRHunrokd78p1Dj5mMhLSQ+gd/8AfT/7vdbvzwD/9w/Lt/9+8akaZ19Gf+zJ+Jf/Ev/kVcXV3FT//0T8e//tf/On7+538+vu/7vi/6/f6D2vjRRx+VNSGPi40eadvp+77v++Jf/at/FZ1OJ37qp34qfvZnfzZ+/Md/PH2wZMTrxXe/+Iu/GP/23/7b+Omf/um4vr6OX/zFX4wf+qEfunfsP/pH/yj+4B/8g/EzP/Mz8fM///PxIz/yI/HLv/zLadnIX/pLfykiIv7CX/gL0ev13m4nH+mRWuh7v/d702jnT//0T8cv/dIvRbfbjb/1t/5W/NRP/VT8m3/zb+JP/ak/1QA2P/RDPxR//+///fjN3/zN+Ot//a/Hf/7P/zl+5Vd+JT799NPG9fb29uIXfuEXYmdnJ37iJ34ifuRHfiR+7dd+rbVtT58+jV/5lV+JTz75JP7m3/yb8ff+3t+LH/zBH4y/+3f/7tvp/CM90lukR3vynUOd1WOo4r3TH/7Dfzg++OCD9MEwbfTn/tyfi1//9V9/8JqOR3qkbabv/u7vju///u+PX/mVX2k97ud//ufjR3/0R+O//Jf/En/0j/7Rja79y7/8y/Fn/+yfjf/wH/5D2Wb6kR7pkR7pkf7vpEd78n7pMZPxDun6+jpubm4av/37f//v43/8j/8Rf+JP/IkHXev3fu/34ld/9VcfsxiP9EgPoH/6T/9pfM/3fE/88T/+x993Ux7pkR7pkR7pO5ge7cl6elyT8Q7ps88+iz/5J/9k/MW/+BfjG9/4RvzGb/xG/OzP/mx8/PHH8RM/8RMbXeO3fuu34j/9p/8UP/dzPxd7e3vxV/7KX/maW/1Ij/SdT//yX/7L+J//83/Gr/7qr8Y/+Af/4I124HmkR3qkR3qkR3q0J5vTo5PxDun09DT+yB/5I/FzP/dz8eWXX8ZwOIwf/uEfjr/zd/5OPH36dKNr/Nqv/Vr86I/+aHzzm9+MX/iFX7i3M8IjPdIj3acf+ZEfidFoFD/2Yz8WP/mTP/m+m/NIj/RIj/RI36H0aE82p8c1GY/0SI/0SI/0SI/0SI/0SI/0VulxTcYjPdIjPdIjPdIjPdIjPdIjvVV6dDIe6ZEe6ZEe6ZEe6ZEe6ZEe6a3So5PxSI/0SI/0SI/0SI/0SI/0SG+VNl74/ZM/+ZOxWq0aL1K3241utxu7u7vR6XTK9263W77v7e3Fzs5O7OzsNI4T1Vbo6zjdd7lc3nuxPfqs/25vb8t52RIU3bfT6dy7Pu95c3MTNzc3cXV1FTc3N3F9fd24h7+rLW1tzsZS3/3dz+G5fh1+Zv9q4+sv0XK5vDcPfq1OpxO7u7vR7XZjZ2envOtamvu9vb04PDyMXq8Xh4eHsb+/H71er/DF3t5e7O7uxu7ubuzv7xc+Ud807ovFIm5vb8tYr1ar+Jmf+Zm0b++afumXfikiosH32bhyTvx/HlfjjYg7fnC+cJ68ubkp36+uruL6+jouLy9jPp/HeDyOxWJRjtE9bm5u4vb2NqbTaSwWi3KctmF2vnM57HQ6RdY1v+IRtT2THY6Pj59Icy951Pl66Te1hbpI1xOf7e7uxt7eXnS73QbPST/peldXV+U+6pt4emdnJ/r9fhwcHMSTJ0/i2bNncXR0FCcnJ0UefB47nU5p5/X1dXlXn/SbxuX29ja++OKLGI/H8Tu/8zsxm81iOp2WMe73+2WMdK7mabValTH8zd/8zYcx9NdENzc3ZX6dT6+vr++1O+MDEX/PdCJlxPV0Jj+8rnhG8+ik3/f29hrt1P29TSLeU3wwm81iMpnEeDyO8/PzWCwWMZlMSlt6vV7s7u6W9/39/djd3b1nT3V/jpnaubu722jDcrks8i/5vr6+LvwuXhI/LZfLuLq6SuWdc1HTfew3x1if9Z9sK3mBpPmbzWZxfX1d+kC+GgwG0ev1ot/vR7/fL2PFOaG+uLq6ivl8Hjc3N/G3//bfbmPfd0r/8B/+wwYPup3l7xx3H3/9JttMoqzVbJUfXyO3YxlmqckldVYmb47JlstlXF5exmw2i88//zzOz8/j+fPn8erVqyJP4gvaGxFtlMbQ28x+kVcpazrHbZDkSPao0+kUu9Hr9eLk5CRGo1F8+umn8fTp0/h9v+/3xTe/+c04PT2Njz/+OAaDQYxGoyLr+/v79+4pmz6dTuPs7CzOz8/jN37jN+Lzzz+P//7f/3uR/z/wB/5APHnyJL77u787nj59Gk+fPo2Tk5NybV1Pcv/ixYv4/PPP47d/+7fjv/23/xafffZZ/MZv/EZMJpO4vLws7fj2t79d5YWIt7y71KZryDUZ3W63GG0/3w0HHQUypn7LyAG9PpMoVO6cEHS1OVjvi7Jx8//aztuECJA2PW/dvanwXJFofAkSOTf67ryzLZQ5hpnylsLJlLt+q11bn52n3cFwQCXwKqMs5SQlTN7W7/P5PK6urhrHZg4sP/scuhPvfSM/0DEgOKLyz+Y9c+bb+NbHKiLKO/lN4EpgJyIagI6GUu2W4SKw8v5qfG5ublKgpD7KiYmI4oQzGOIgV/fLAhLbRnQkNF60C5voHTe4NSBTCwa1jZWAfXY/B+81cJbxuwAUwZTe5fT2+/0GWNTvOzs7xRne39+v6tCIuCcnmdMmfl2tVrG7u1vGQ23yPlG/ZQG+TL9nQUXJRM1B1DEKLFGG5HxcX18Xp2CxWJT2SE56vV4KSp1XGLyaTqdxfX1dY7f3QtR5dMRcF7pt0Wf9V3PS3WaRqAvXOR5+3ibORkRT72Z2PQP7nU6noT/H43EB2GdnZyU4RhyRtVGOJ/WntzXrr/R39ntENPSC7If4mDa10+nE9fV1DAaDiIg4ODgowH82m5Xgl65FPtD9HDvQ/kdECSgeHBzEbDaLfr8fEVH0TETcc668n8QTlKFN8NfGTkYGLLwxEVEUVO0aVC7eSAcYDiw4gN7Z2r1q2QXdl54pjX9meNxJoTJ1wciAccaQfr3sPQNWLvw+Fs6Ifo9sjjLF0PaZv3mkmNfz/z2awrGV8lAbXbnK4OoYN3Lvm6h42HdRm9LyiJ7zEM+nTKwDVFJuArD+yoCXopp0RmoKu8bbbKfmS/OegRWfS+el2ljU2pCRG2DyXSaLGh/NqwC9QB+PZbvZdg+G6LOA0nQ6vQeUdJ11oNlBo4DvarUq875N8uHkcygZyLI/2bk+xj5O1Oc1J8Mz3XTeNMZy9NS2TOdlPOh2LnM41VeBHYHj/f39kqGS3vOoawbSMyCn+97e3jYcEzoazBy7THB8sns6UMzsk+6jMcz4gOOlcVdmRfKhSKucDIFN539eW/rL8YYcmevr65IdvLq6auW7d003Nzf35prv1BdOmX7IMFf23e1+hgMyB4DH14C7xt5to/pDfvO+Sbdp/sfjcVxeXsZ4PC4BG8qteErX12/Msjseob6mnc3GrK3vLqvKbojvptNp3N7exqtXryIiYn9/P0ajUUREjEajWK1W5RpyijzoxvtRz0guJpNJnJ2dxWAwiPl8XhyLnZ2d6PV65QHRGgcG1ugcZWOwiW15cCbDjX0NNPF/eli8Tqas9NmZikZB0VRX2N4mP96j42wf+5aBHmd6b38NaD3UwLc5Eg6Q2pyI7DqZENRAo1/D//NxzJQZz6m9MsVDQfHUb0TT6/b+v2/yyBL7uQ4I+zy2ORj+eZ2jwWiERyZ4nisYZjoc2JLa5D8bk6z9WYSEnzehbMx5H/Kct9H1E4H67e1tAUhSxg5msnZERGMedG9Gt1h+ua7Pfr9M7gh+Hzp+75pcL0XcdzCyMa7pP/5fkwl+ZykD/6sBJLY1K0dhP0QZz/E4zpmAjyLyAsYCRZ61cv7mi/au5nxwvHd2dsq4iLf1Ll2c8ZNfk/ZbfXPd1gZ0eZzOvb29LVmLzMlQm9UH77eOIa7QcZLBxWJRgirbRJpHynTt1aabs3nje03nboIH/LfMyXBiBs95MsN2tBvCdYvFImazWcxms5jP5yUbrD4waOFBGZXFtmUD9Tnj8bZ+y2mhjvAA+2q1isViEavVKsbjcezu7sbBwUGcn59Hr9eLyWQSOzs7MRwOS0kTr8F2+FhTt6ns8uzsLFarVRwfH5cyrJOTk+h0OrG/v1/0CrGA2y2OR20cnN5auVQNNGTggsKQAU0qXBplRmWzyCfbQqPh50TUo1FUSD6Y/pun+HXdtoEn44tqAsV3fa4BsDaD69fhOLW1s9YW3tezE6z5pTDrP9aoU3lqHHkNKgSPOuie2xapFSggjzu/Z46W+k/+qCl950Mdk4EnOQ16V5rWy6WY6dD/LOFpSztHNPm+zehtIq8eYe52u406WsmnxojjRTDk99D13VjrWooYUj69jEwGRBFnOiHMDin6KkOicXanj/0kX3OdkgCV/lNt7s3NTSMtr3c5QzKgtWDMNtA6QOS8nwGi7Ls+Z45F5nxLH3mbMlBOov5b1zcdnwHyTucu6slSH88eOL/rOszkuH5gRFZtYmZOPONjx//EZ752i9d020897ryZjQ/7Sdu6t7dX5PDq6irOzs4a60N0nuSC8y2QlTmEmnuV1kwmk5hMJlvnZCwWi8a4MepOG0LKgn0izp+ukVGb4+zH+bU2cTLEY+IhzpkHfXR96VdlL87Pz+PFixf35m5vb6/ItK9NczyRyaS/yFMaQ16T457JjeRLtkz2Vvx5dnZWbMTe3l7MZrMYDAYxm80aGFlZdHemOfaSC710n5cvX5YSLNn41WoVT548idVqFQcHB3FwcNCYC2YOHQdsirveqFxq3U1qSjnzhNr+X5eiqTFGRJMJyLQ+KZzArJ/ZPZyp9E5Bo4D5736MR4gywVwH1DKF3UabXGOT/9kHN7YUaIKhiEgNlY8N71lzUDcpq3iXlDnW/JyBEad1ssHf2hwNfxH8Mkvh8uF87+NcA4AZ2HDD7pTJCmWfvFXrd82Zq42nGw86eNm4ZzrAx4qKWeMsJS6HjoCWL8/Sse6ehlCRN2ZS9CLJcLcBjW0h56GIdgejDRDV5jmThRqI2GSsnKddR9XO8T7UbImOd5tV423xUManGdXsJAG+eIpAj86wwEcb2KVs8TP5PRtXHwfXD3Tolf0jkNNxkkVeR/2Sk1ELvGwTaT0YbSiDpZku9M8RuVOxiRPB89vkz9uQ8YQ7JG086t9Xq1WxW8peTKfTksFgEInneJaXvJQF7LJMGD9nL2837Ynao1JElgyqDVdXVyW4dH5+Hnt7e3F2dhbdbjdGo1EcHBwUZ1t8nOFW12l8zefzWK1WcXFxEYPBIAaDQbx69Sq63W4cHx+X+6udHCMGwzjfm2CvB2Uyso6InKGpTDjwHFiP2PI+mRdLRqH36wPK71JKGSO5ssva4wzH/11g3GHIhCgDmW0GgedlUXufg02uR3DVppDWOTtidmYruKuU2q3dFJjmv76+vucsKGrF9rB9arPX9W7C6O+KskwG200lmIEVV0w6LiJXihmveyZDkYirq6uSVtYCR9Wv6joOgj1qugmI0f9sOxW881lWHuPR1wxgUd5Etci9gzEew+tSL/m5aouAC2VS5yyXyxJ51FwIxDBSTsDgu+5xB6G9vb0CgM7Pz+Pq6qpkMbi7FXWZrq9o3jZnMt4WkRdqBtIXL2aOR0Tcswu8R40XeYwo06HUDU4qh6Cu8Aiqn0f+c4Cheznokp5wx119j4jCV+J3XouZn2zMOfZqs9qTbQbh46K5VIkis9a6phb8SqYkCxlwUxaw0+mUBei6hq6jnYhms1mR722h2WzWaLfGSe8eAGI0Xb9lWG0Tx0LEe/p1atfO5rbG+5k9cex4e3tb7Nf5+XlcXFzE2dlZTCaTssg74v76DWZ6aVfkTGYYqA28u83lceR19kM4SNlA9U36SGuBrq+vY29vL+bzeYxGo5jP5wX4R0T0+/172E39cfxLm65yw/l8Xo6/ubkp6zSGw2GRt+FweK+vzAhpjDfBrRFvUC5VY4Yaw/L4DKjUPFsqSv3HrAEVGEspnAEyUFYzFs4YbjBqA0pBd2VfGxcCrsyb1j3biPfJ2tkGLlyp89zamPBc9ZngiLuI8MVMhtrFOZNBpYJ0xcBz2ubtfRMjDZ6ij7gTzpqDQZ5wJZ4pupoy8Jp/LTJTaQB3MtK1I5olbuTrLLrDjRRErnSdsnGQ3PhvvAfPpSObGQYen7XDx0zt4X0znabjNXZylDVeuo6OVXSNUTbJgjIVzFZwG2jV4A4GgwKgDg4OYrFYRL/fL/PsCxbZd25L+FBQ8XWT6/x1bVunf7O5Jg+xlE2/ua2g3vHxymzDJmOa9c1B1ybGepO54zg4AOHnTLb8OuJjZsk0ZnKGBF6y+7M/dGj0rt9cjzuQ1mcPHnqQwHdzk/PgpTEcl/l8XjZeEACTbG8TzWazAlAj7sbG6/71X0Q7JhM9VB+4fql9rmGGTXic/dE8c43gdDptOIQK3ki3MvBDmVb2LaJZWuj3dkzh8pl95+8RzUCVPqsNEXFvJ6uIu23HF4tFXF5eRkTE559/XoJJClppq3TZHNpn38yCG7twc4TxeFww13A4jPl8HoeHh6VcOOK13PvGMJTDms7N6I3XZGQMl4HyNkPf5pjo3RWRmEVMGNFUohngIblCW+dguNLMgIzeCZQyb5Pt8hIp9aE2aW2/Z07GOuOV9d2dulo/2V86GfqeORlugNxh0P3dmdC7/nN+2ibgFNE0nhFNg03HOHu5YnJqczKyiK0UFxc1cnFjNtYR0ZhHRsmoRFerVSOysY7varLoDlcWkXXg73zlY8r+tOkYyqk7dT7++l1GTxkrLgCngRSPS7mTFyQv3KWKDjpLo3q9XtEr/X4/er1e7O/vx9XVVSPr53OktjkPbgvRNqwzVjU91gasyEOcB67Pc0eTPM97ZDxWAyT6nn327zXd/ZAxzIi20sG63mtAi59ZgkQ+J2jiMa7jadPcZrttzGxupt+8zQxGuS2VLmaAi2PBXat8jdo2kdadKJBH2eb4PxQ7ONUcB17Hf6/huOw4/68WBPUouXSunmNCh5Bbi9NWOZ/RQWPWn21aJ9c1nMXrigTouWGI2sAd3Li+UO3ROoxXr15Fp9OJwWAQw+EwdnZ24smTJ9HpdBrPRVJ/3W5mjof+V5ueP38ey+UyPvzwwxLU6vf7ZdOJTFdm+raNHuRk0ChoYDmJ/jvBgVPGYG2RdyoJdpQD5w6BGzGC6GzBZNZfUSbEDsz0zkkUozlxXAguqYh536xffj1vZ5sB8/GkgWD/soV6BEICSnyQmR8rxUjjlgFEtpPgN3MwPOq4LXR9fd06Zoyc6z1TbPqcgSZXbAS+Urwynjc3NyUVO5lMymcZruVyme6EwbpMbx+VtCuibM2BK6raf24IOPfutPNYBxDuGHnU042HR1UpE15qEhGN7I+yDD6v5FOWQ+mhYCwhbHPCuW2nnI5+v18MbrZIkuCP79vmaIhqNkL/tTkY+uy6mtE8rkFS5JMOsnQYgyZecsJ7eRAha1Otb5kMcPOADFzXxsB1ftYm/+5OPGW2Bgypq/xFXZf1ze+j8dNvHtBQG7iDpJeCSD9xPlgqNZ/PGzaK92YARlldvTMyvk00mUwaD2FjRklj2O12Sx9dFzn5ov82Z4/0EGeCIN+pjUf4v2RWdksPm5vP53F5eVlKfeloZcBYRJn2djru4Visw4Ek6mLZB11LfK7feH8+o2Y+n8dyuYzPP/+82Ovb29sYj8fR7/fj9PS0OAQqq6W+8ICKY3aVnekes9kser1e2U53uVzGwcFBLJfLhhMn3hL/1XCz08ZOhgP2DCCqE36Mk0+w/+6/ZV6mOkkhi8h3uSFTEYjUBKqNidr+c0DpQMcZORtHb++6e7GfbF/27mPQ1q9aNJ1tVT9pcHwRapuB9Xl18Me2EPjVQOM2kNeFeoTNQSz76vxSU3AZSOcOUr7HdZb2JK9xLmtGJ3PysyiJAyX9p/t5FIk8mfFCRj4+VOrZNdZdK7um8zGPpQGjgedYE6gKBO3u7ka/30+zfz62eqeTke3y5QZaPKd33mfbnAzOfaabMr2W8SevkZ1PGeHT1UUeiXdZeChP1frJzy4LNScjK0n06/h/3s7MnmRy1hbky/qg62Q213WUf8/O8/u5g8F20zGhM8F+SD55vYi4t0U3MxheArYNpLJM1esrWNUWuBFtovt4XBuua7vGpvhJ/7fxht65jpCLvBUgYztrcp/JB0mykfF3zRbVMBaJOlulTgxq6zdfp8msq8r99IDB3d3dODs7i52dnbJQm3LkznhNN6h9vMerV69iMBjE4eFhHB0dxXK5bGQzamP61p0MDWim0B8K9FwgNgEXVCocPF2DwC0DYpkgedt9chz8Zukinp85Lw5OnKQ0aiC7bTxINcOzTtD8fO9rDXTys6/J8HvrxfHgeYxoeV9Eilzo3G3MZFxdXRXQ6AvhM6BCoEr+zfqWKWWBWu0hr4cRKZMhQOVlIiwh8MitAyyCZbVDAIjypfbQ8ZAy43d3NNRHZrwk4zUwRPBE8MwoKfXUuoAGeb0WxfZ+c57m83ns7OzEeDwu7VHWotfrxWAwiP39/ej1eqU9Lku8j5wLRZwUydI2jT72meMteeQTY7eRMkNInbWJ7qo5qJQTZvfm83kjG0tHj0DA372uf1Oi3tO8EVC4fHhGkH3hmGQ2JdPPbse8r7w//9M9ahFiHcety719XtPN33WsO0J0qlmeyMxgRDQeVMYSUckmdQodTYFXZjDWPSH6fZEyluQ/n3fXp+Rbdxxcd7pu2NSmOjbQb/zPj3GdlQWpZK/0pOqXL1+WbIZ27JN+0zX9Ptk9qOPJ9zVAzvHI3rN+8/7S4xHR0B90ipnJoJxcX1/HxcVF47ktk8kkRqNRTKfTsn360dFRw0HhWkyv8mElhWTh8vKytFHZw729vTg5OYnj4+OiLzlPWallGz24XMqVgRpfIzaGCiy7Bq9TY3IH9FzQ4+3TO5UnhTNrV63P7E+miL19DnZ8TNruQ2Z42wov60+tXTT2Do55LX6nQcv6kI2JOwzOGwTXVEhZf943LRaLYnC1u48rc41TNt5UBjyOLypkVyyM0InvaZx5vt/X55fz7g4gjYhey+WyRGg8db9cLkvEX3Pp8isjqeiOPus8J/XNHfSafHmfRW4YvY8kN0hSzJPJpPR/uVw2om0HBwfl6c37+/vFiGjMPCIlPhIQ0ny+evUqptNpjMfjEonP5sUNyzY645vMUfZ/9pm/qc/cS943nshAO8lLgtwRzJwZB/HeF8oI3wm6/LMfx+v4uXQy1VbWgmd9cB1Kp4L98jUt/oBOXScLANIWOBDWvTJc4A6YZHxnZ6c46hFRdC31jACc1jW5k6FSw2wtRi0Q+D4pi8iT1yOa/OVrDfju9BCw6Oe1XZPH+PWJu2jTuH6Qum9nZycGg0Hs7u6mgFcBNj0TgsEE6UllEry/Hnyq9SGinhXUf5le0c5mCmbIIaeu6HabO06xbdqw5fz8PCIifu/3fi9ub2/L08Cl32hbOa5eMsXgndq3XC7j7Oys2KjDw8NSdq2nqIunVNalkuHa+JHe+Infm3h1zoi1aCLT+/yPIEb3cnC6Wt09lbRmSDUBPui6zyaANQMx2Ti44cmiSLyft1OM4+P8VRWfC4pTTTFkyi1ru99rE1DD49YpLLaFRikD6++TBB4171SozGpE3JXH8F3/SRbcOZZClqDXSqS8NIqR2my8snEmn7JcKjNMBEkMGLD97KsDJHf0dQwdjgxo+bi9CUglT3l0y4918n5p3m9ubkq9rAxLr9cr6zcIoOgU6LMirGdnZ7FYLGI+n5fI1nQ6Lff3sSbA8AzUNpHPE/Vd9t+6z/xN/ZVB9ExdTYcRuHlAIHPUMv3lvOq/va2XR2e5WFnt4U5/dDxq+rZmq93J8J26eC7H38fIg07ZuOh7tt4r4jVPKzOnIMVq1XTadTy3d1af1O7MwXhohPZdUaaPyZd+HHViZrvX3YuUOaU8dt01a2OZ8bGyGNJ3ytgqYKBd9ehgqBxJuzBdX18Xvud6AgUcOIbe/kyGXTdnujTDxNLDcpIysE+ZoLPsgYj5fB7j8TgiXi/U7nQ6cXx8XNbB6hkatK06v61EOiIacqaM+/HxcWn/fD6/52Qwm7EJT73Rw/hqQMWPo/HWedlxIhppntNmTChwHoXwgdR9vV3e/rb+eft90njfTQB0TYhr13Rj00ZthmRT5UDwVTN2Gl/P3hAw00hkxn4Tp4SMrfFiFHsbaDqdlmj+/v5+eYCOohleGsXIgkel2S+NsZdU1FKkAhk14twwyrhcLu89O8OBQ5ahYsrWgQWdZ93Dt8Gk0+TnurL0qGgbiMv67bzG89neTAYdQOkcGRHNxWAwKHwwHA5jNBoVHvDSAMqadk754osvYjKZxIsXL0pNMkuktABcxoULmrnIXJ+Zzd0G2sSBc3J9kf3HcpJer3evdHG1WpWSRl2Hi+9ZZsJyG97HMwLeJ+c951m3QYxGZ5mp2thRZrO1G3wWkfeHfeRceHkR1y1oy1c9S4IlTF4my/mgjsmi8tQzrouYwej3+/fsSERzV8SIO8BGfavMLhd7q0yKsrNNtkS0zrnN5IE8xoBXGy+/Sbs2IedhBlmUfZDD2u12yw5HLid0SmSjWCLHp1yrrFTPg+K27SqLU7SeQTld0zGixs7xbJtOYltVSRBxx5eUReEn3l/vV1dXcXl5GVdXV7G7uxuTyaQ41treeDgcxuHhYRlr4gJigiwgr2tdXl6Wdl5cXJTs/PX1dSnZe5Og1RtvYVsDq648IuKeMs2Oo+LUsTVBIshcB9RJtbKczEP3dtWu2fZfmzLI7l3rR+23NicjUyqb3ofkkXYd41FoGhC/Fo3oJtFE79tDQOT7JikCKnbucU5jT3loGxcpHAJy/uYRGlcC7vDxN86lruVlTTo++1wj3o/3IC85T9V4nlkOZkYy3qnJruuOh4JbyhLLTzReMpIyYhGvtyLc399vREwZCZJBlKOhNTWz2SwuLy8LEFJUT/eVg3FwcFBKR/jcE/GYdqTpdPId7t4n+dxofGs6i8eu+89BlTtnPv/ZjlJZqVRNV7E/mW4iWPL/afDJo+QtBzy1sXT9y3ZSDlkB4Ndgv6RjBFYEyrReyK/l9tjnpKbTfZy8LdKXKvfk/KiNWn/ENtDusB9tG2JsI2Xj2WYrMpxQkyvKXXbfTcdkHTbhd8/eaq4IhNkvj86vVnfPaqHdki5VybJsMbMjzHjs7OwUJ0dgXI4zgzKZTcnmpPbdA4LEuOoLs64u7wpedTqdmEwmsbOzE69evYrj4+Po9XrluRq9Xu/emomaTDnv6B6z2axkTZhd0fhQ9jZ1Nt6oXCpzLDJmdMVYS9W61y0iICNwy3Z+UTrMGVht1jE+iTUAm/WNwpB5tLVBp6LcFByvA9OZ4cru+1UVJ8dJToK+cy65LzSNs7e55nBlxikTbrahbczfFymTIcWlHYUUIRCYkePBp/xmWQMCJHfqOP+SC0aARJQ7jzhG3I0vMwpePuD3j8iNmyLpy+WygAJuR+lZCwEEZi2YWtZxcnykqCPqz3XJAFnGd2p37di2azAStVqtSnRMi4pvb2/j/Pw8VqtVwxmQQzGbzeLi4qJEVuV0yLG4uLhorK2JuFvbcXh4GIPBoGxhSCdjsVg0QLFni7aF3GH1d/33UHKHerV67eQrqyhgoW0iZdh3dpoPSPTdwbLgVE2OXF9JtiivPgaMyvM3ypvLNR3HmiPDe0hHUBfVFrPrWuIprQXS2Om62jXN13/UgHFmE7K261hu07q/v9/oi+SJOsKxAWv0udhbGUOdnzk920TOixnVHIkaqa/So5yfTRz+tmvyM+/DORYfcmcw8rTmMrN7zNyprSwblj7kon7Nt9a06T99ZsZDazlq9/V5oM5R24WHlG3RAm5mzNR38bY7IdIbytycn583Hhg5n8/j4OAgTk5OotN5/aA9BQHYnmyONQeSPT076+XLl2Vs1E89VZ0Ov893jR68u5R/XgeGeQ6dCPfI3btyjylT9n48U03O7BocAX2Wa4gYkdd5vIbulaUYswiD+quJ5Gf3LHmP7L6ZcaqNd5tz4aBMx7ox4v393rUIAwUyGyue67/X2uu8JcOr+WZftoG0y5DGRNEAAWkZ5NVqVX4jv7sh9iyR8w0zJBH3eYNOuctaxk+aQ9+Nig5CBrJ4nuuEbMcpRo74ACxGRzVGrDePaO7zzrEQtYHVTLZ8PN2YrwNsur4cJl1HAO3y8jL6/X4sl3d7oMuRmEwmxSlh2ZvAr3ao2t3djeFwGL1eL0ajUfR6vfKgPjk519fXjUWxMk7MgmwLZdmsiPtlVBn4rc1txgP6TUZcn7lBgcaGD0VkKYPrMV7X+Sl7Zdle5z2X64w3nTKnme1wW0gbLBuomnfqBJ3r0X9m3nQ9AkS/f41c/2Rjw+Ci5oEOiDsm1HEsNyHw9AfvfSdkMSLuZ+j02yb20yk7TuPt+jyTszYdQjvCNmW2KJMRHbPJPbNAM/U3S5Y59ypllcMpPphMJsXZYFkgeYjlrT72jkcd3Ds/ip817sKjeqcDwMwsbcrLly9jZ2cnPv/887i+vi5Zc2VsiLcz/ZLpTjkbapP6pTHReZnc1+iNy6VIbU5GxjA+GQ5++Jv/nx1PJ0P35GedV8tkZNGfNsH11K+ozVkis2SGQce7oPr4ZsDQf8uum33PwL+oZgTZD3csMieDiqVtrNwY+r0JSjaZo/dF8/m8sT0d64MZOZXSoSBnvFHrpyuBTCHrc238/boOMui0r3MymKHwdtPJIIBmHbSUoUCfriGjQd7KZIxtoSNKyuSEY0AD5UY3G39FWnV/ORk6VnW/epiWvi+Xy5hOp8XJmE6npX8EFLu7u3F0dBQHBwflqa/7+/sxGo3KbiUCgyoBULQsIkrp1DbWmrs+ccpAvH53I992bMQd/9OZ6HQ6BTjoWDkXnsWoyab3RZ8dPHlGkMDEz8to3dzV9Ibu5YE0OvEM+rn8+yJv7lwnvc5MS21MSFmmg+3VZ11fGV+C04hoOIiaM5I7SXKO+M46fM7HtslKxH3cVOPFNnK9nX13Xvb7PwQn+PneD/Io5bqGZ2rOh+NJZsAkfyz3GwwGjezF9fV1ecCpgj5XV1dlPSXLXSPiHs5xR4P2jLbMM/I8RzysHbQYcKR+ZKbj7OwsOp1OfPnll3F7exuDwaCRuc7mkmPF+zOjoX7SBnKdpnTlppnxr+Rk1MB5G7lB5+IslnU4WMocjSxCmykrtYuRkYjXxkeDp3NcabYxdiZEZAimzHQttcmjs2wv++TpOgom7/tQB8N/qykXfte4qD+MLnlWQ4CLfdH4UAhrbaKx42fNOwVjm2g2mxW+Yg2+nlegaCmNp49JZkyocDLZ4TXaDJBn6WrG1aOLmZNBBepZQF6DkUXPXqi8SIvLCMoiohzHtvF5KSLyk5dNUC9l/VbfpR+43aD6lGXzFJFSKYecSt7v5ub1XuS3t7dxcXFR+EELE7ngsdfrxcHBQQyHwzg+Po5+vx8nJyeN0ih3gLQIlw6Z62L2YVuI+ovOFfW4vmfnZM5Fmy4kT8iZ4IJT2Qfql5ocZaDMx9r53uWpNh7Ob9SpvG7bXLpO5rWkQ29ubhrb/Dr443agXlJEXcVS5ixqynN8LNWnbOE1HUJGd9Uf2sfValXkNSJKIEPRa61zYsmM5n7bsxhO65xdjpGolqVw534Tp8Vl0H/zdmbXz2SdwV+Xn9r8ZLjEAb/bzP39/RgMBqU8VbwgvlD5quzR9fV1KRVSOascD52r7cp131owmQ4PA1TUO7I/7A9xjnhezw+ZzWZxcHBQ1lHIRqjttblw8sqS29vXTwVXu5lpypyfNnojJ8M9uDYno43RCLI46Dy2zdnw62f/Zwwnpo5oRnk3mYx1fWtrjwPGNmDvv68bYzpUbe30NmdKY117vB3rxsz7LYHK2sB7+D3b2rAtJGNMJe4pVgmsIu6Zg5ApSZcZ3wWnLVNGxyADR34OIxt6V3v9WuyTO+g0HHRUmMmIuHNYuTiOLz600fvkn9mfGh95vznWHMtsEZ36qZc7iQR0igwpha1IlrIXAkh7e3txcHAQR0dHcXh4GE+ePIl+vx9HR0fR7/cbO0nx/lzTozZkGcZtkxW2paa3nNz5aHMu/Hqud2gX3IC6Tcg+6xo1/ew878Df2+fXyuYuczyya9SOJZ9kckB59k0leByDPNRN2bj7/LGdGhtuxc170DH09Yw63/VmRHP3Il/sXevXNtO6dtZw2DpbTZuU4Skd8yZUwwQ158P5UHNb48+s320OI/Wz21PhTulXlVjt7++XnejkZGghuXhT6xg8E13rK/l+nVOU2XKNyXK5LBuMXF5exs7OTpyfnxc7wXUl6jNlZx1WdR0kXVNbV91Gb+xk1LIYbjyyDjDFKc9N0V11kMCmBuZdYDziKPIIC5lN7fGoE9NZb0ru2LD/Po7ZGPs4ewqMY+wRzGzss3voGDc6WaSMStzT7BlA5n3dkXRA5vfP+Klm0LeJuGWc5iziLrrGfb09ykLjzdpwjRufqr5pFjAiz0zV5NVlyvnwIaUR/J+KWOMgOVPURYudtUZBfCb5dCeD92ZJCPsjynSDK3WOsfiZhsMzeZ1Op8HPNIQ8T2CH/yu7tbe3F0+fPo3hcBgffvhhHB8fx9HRUTx58iT29/cbzwTQuawP9uyFIriKtumhY1xAvi3kRk9UA0J+Xk03Owh3Z54RRAevbfq+JhsZmKdDTX3gDnR2vez6Eff30K85ki5rDmjUF+kgBiuot3zDAPGv1rTwaem0064jXC50ffGp5J2gSGuRyPu6NuVL1+X/Ko1RBoN19iyT2jbbUaPMzpG/XO9nsuTOM2ld9ltt4DUdqLbhC57X5tTompR56mHHOG0y0IYf6Cjr2sow9/v9ol89m6cSq8ViEefn542dAH3XNR8rzVmn0yl6W3aBYyO5Ek9LVjgeuofKur744ouSdRgMBrG/vx/n5+clkNXtdktprRPHvxY0oA7jOV9LJqMGBDOlonca8rYdO3yXi03BsjNcBsR1Po0NHQ0CFU5u5jBlgJj/s63rHAgfR9a/twkP+yOiIWAbfOzI8DXHog2AZr9xfrMXgVttJ5O2736/bDy3hchDjIZH3GU5NPbuKHBOOaYy5gLBvs82lWZEO/jK3knkc73XZKImH7VruLPCaLxKoLTojFvmrVartCTDlbm3gcCGIETH07nwDIa3OwOi3g+Xe71rfgTQdC8t3n727FmMRqP48MMPYzQaxcHBQWPBN/snkMw5kdPGXXSY+ueDrbaFarzHsXYdRt7SNVwn1a7tv2eBjk0pAzMZX2cv6vhMPvw7f8uyE9nnDITxJeKahsye8HgBFWYWGPCotZtzp2uJX1mWoswDgwrSndkc67ocG66/oCz4sxhcjredGJjh1qur1aphAzzAkc1FRI4RSDVgnl3Dr8fzsnPWOTO8lgcHnN/Z5xomJb9nx3kfKQ8a352dnbKmjrtFKsO8u7tbdmDzUjxvc8TdMyzo7NL+e1DJMzhqq667WCxKJmOxWMTe3l5xhlhi7nPL+aD9chuYzW1tjjPa2MkgAOUk1cAoXx6t9ah39t8mil/HMOJCJ4OghN9pwDiBmghGUdmvGiPr2tkYsK3OdJsYBAcsJN6TzNDmaPBYzms2p7ymG339rvnigkl3LrT+wEHipmDAaZ0ye58kIKfIO8t/IprRSPEexy6i+bAerhHgdpHupGsMyCc1Z65NrjIDI6LMOGUGJVPkGb9pgd1q9frpphFRtunTdfjANMkD1zr5WGROsbcvc4hdZziI875Sdt3Qq32UET31ezAYxMHBQRwcHBTn4sMPP4xerxf7+/vpVsNsN8GXosDaXpS1xPptW50Ml18aPKfM0NWum51Doh1o43n/zf93Hc7FxLRJnlFoi7pm+t4DQPotsyE1m+ILQj1AQXDBdkREAVp0OjwwmNk3ghgew5r32WxW2udVDZQt7z+/63w6GXxx1zbyhQcmNsEd75rYN0XBlfXxZzK1vSLqZVGODTI+rzkNfr0MZ2S6mdfmcY7PyD/Z/Li+aJMr/9/1Ou2bAjzain25XDaeKk4nYz6fR7fbbexgxm3gKRusZtDvXJdBrCQcyv7TBqxWq1I2dX5+HvP5vNhTrl0UtnUc77bcx4A4xfnB565Gb5zJ8AkU0SOrOREeMWQHFVn0+zo4iWguLPUtxiLumIT3IrDjtTqdu/prdz50Xhat8r7XxotK3qNYmTHy61NwPepdU8Btgkfm9zF2RnRvl7/xs887o/B08NzIehvZBvbFldM2ksZI80gF6fPkoJbjpZcWi2tBF8Gwj8nz58/jH//jf1yA+tsgl+/9/f34q3/1r8ZHH33U+N2d8Oxc/kZZUZRIC9Z6vV5jIR4XzyvKKSWq67GszMfFZVft1VjymSUiB2Y6xw1BZjgp75KJ/f396Pf78eTJkxgMBnF8fByHh4dlkXev14vhcNjY4lgvZlwioug67Vw1mUzi7OyslIgocqvnGsjguUy9T2pzElz36jd9bnM2qLM4PxnVgKZf13/LnNcM7GfORpatdl3oejkidzIyhyMrBeL9ssW0tCMZT7u9oQ3KwKkiqNl4KcrLbWQXi0UZe+k9ZTWyNjtgk6MynU7LS7Kg+2SL5WmP2gIS75uUtSDwVMDC5YKR+Ij7peHrnMnMWdiEMtmhw0DKHJNM3og72oKTHjj2YA+v79ijhmndhknvq1RQOl3PQFosFtHv90tpnrIa4sXsYancSYpYVZ/lSGZ2lX1UMG46nZY1JOJ3yRYd0Qy/OjZxfvI54risowc5GZsIYg1wemfazud5VE4kB6uuRCPqT1Gm0swGmn1w4XHjIMrqHTNAXWPi2v8+ZhmoyfqYtSWifUew2v2zPj2U3CBl92m7f+ZkbKNR8D4wEkel50DKnXF3KDzC4XzQ6byusf7N3/zNUp/5dVCv1ysp+2wuMkWUEQ2dHHxufyulLmCWRewIpgiUOJa6nmRd53Ocsyyb3n2O/PqZrtN9+J+cGWUwRqNRjEajGA6HMRgM0tr27L7qt2qG5/N5dfcc1hLXykjfF7mRyoBJBlI3ue5DwFHNwdjE8WjTXa7312UYatdwvc12bAqSam0TEWBSFrJARjZ2Pja6fm07a2Yx9D3irgTLxyrrK502317XF3q705XNH2mb5CSiuZCdmQy+dzqdRmlllg3MsIPI5WYdnshkIjs+w1T83jYvrgv8v+yV2VX2sdYP/t8m57oHx1rlU77ujtkKz2rU1jxFNLOEq1X+IE+fQ92DmQ9iVI63xjLDlZRVtuerBKg2djLo9bNh3sgskyHKlB/P94wHDS73PWZtuyZKhtQX1jH16gwgYfQJZJuo6DxboomoZTCy7IWPQTYWPu618c7a6ozi9/L+thlHzmu2u4fe1U9GmTudu6cbUyBr/VR/GKXi7y4g2bnbQmqnwAMdC5+fiGg4FNzqluswMuPg8pYB1K+D2CbvMynTFR5Z0/WkHNV37fChPs9ms8ZTirM0r5Q/H6bGtpC3OGaeaXNdIP5XW7jwXpEt7vyk/qlPe3t70e/3y+5Rw+Gw8fwLzTPnmPdjH25vb8tiw1evXsUXX3xRPvvCVu1oxYzPtlEb0HNez0BAdn4WqX1Tuch0Lo0u5dnBAzPS7lywVMIdiJp+brMhpOy6HAvPngiQUpcwskoH3K+Vja+uo+2VaS8V0dU6DI2RIvOSX9p6B6RyVrRphOrh9VJ5YLZFLWU8A8rbKCessOh0OsXWCutoHKU39DTmiLhXFVJzGDf9v43cZvOavPab3IP4JrtuVg5EPMQqDc9ysG0Rzecs1WSQWfPlcllsgh701+/3y1oJbmjEndTkDMuxll2TPdrf329gVOdNro8i9oq44xn9r1dtvtjX2iLvGv5aRw964jeBYNv/FF4XYIJ/vVM5S4h0XJbVoEL3dConxMuffJGUBo+r99uUMrfAo9BzDNhPlnFl6Vqep0lk6q82obUx9e80bv5f23k+BpzXLDvkDCqjJAPhOyjwmj7ONSfH+/xVPOuvk7KIgBQWFZyOpWNNgJw52hH3gftXUdxftY+8J/nGZcl5JSJfT8SIvxw0ZjAy0n9ax8CyMmYmMuDF8aeTwfbRSOte2aYGdBKkU3SOSqUEotgu6QYP4vjYLpfLYpTG43FcXFzExcVFXF5elgdI+YLDtsjX+ya2y/Vc9r0NCLpM+H81ftykfU6Z3ou4X17HYJRHMH1+2vSxOyjZMVnbM4fE281r6zeXmXVjll3bHRNl1fjOkire0208n51BvSqQxid4+za13n+e73Paxl/bQgzg6aGbDKho7QB1c43PvM8R97MIGW2iRzJs5Nfwz21jns1ZNq/kP+clvXuAwPvF4FDG27qOy6I7eNLp0gF0tqUDuMOi252IaDgfanO2EYLjhJou4fHuZOse1AlZgLtN99boQU4GB8G9QL27ceBxGnh1xsGUwCiVlEf0qHC91tUHiYzHhTX0fH1ynGjgaUDY3wxwiYmYss0ipBzTTDB4H1cU2SJC3v9NMyiubGg4NHYZAGZGg2PMbT457pkxrAFBVyjip20jF3T1Rwrf+8VxyRYgZyCe98ocv3fRR597v3f2X+1dpOgQeZvgP1OWaosyIP1+P3UyKLs0tM7bahcXw+penjWiU6iok/SY1pgoQstFgoy66dhOp3MvA0M+v7m5KfW95+fncX5+Hq9evYqLi4sSvXXw6lmbbXMyMgejdpwHFWqgUMErv0fEmwMaP5ftdt2luXJQwWNcz617uS5XO2qBltp1suNqUdIsMJJlM5w8aCLwr00IlGnT8wVWq1X0er3GPLl9c/vKRdDKZPDhaG731o2R5rdtrN43aTyEkeRkUM/JyYiIxlgJc7nMOMbI7Iu/cx6yc9bJ81fRQW3z4raQ/fXsBfEEHQ7qSIJwHp+BcZH0usZF5VKaO21xK97P1uiyHSyXagsaZFjB32nzdHxtDbLLfptTuMl8PsjJyABy1gBOAAeIjMCnjWqxynw+L0aZgCsD7/QAPULkBtafiOt9EXMoTcXJodHw+jlGMj0CxPMYXdS5Ol6TyWgSGYqKXf2lc+XGit+ZLl5nPPk98/DZX+2Qowe/+OJuP9+jxRynLO1LoSNocEduG41BxH1gxKg2BVdjynUXNQeu5kRkY/N1EudT37Njau3J9IbPNeeYW7MKUFCexX8qO6KTwZJIljpKdmrtFOB3B85filxlmYyIO6dJ6zD6/X7ZwlZgQTK6s/N6W0qVyan/DFaMx+OYz+fx4sWLuLy8jPPz87K4W+PBRX/iNV1/m5yMiGbEc5O21YxnRB5pbCsPqF1/nY709lLnir8Yrdf8Ze3P+pXZWP7n9kE6xuUmorn+Lmt/JoM6J8v0Z7ZB5ABNvEfQd3V1FePxuOFYS4Z5/+XydamfZMz1oQCbNj5QuRQXedf0Ys0WbqstiWiW/rDunsFOgVqWTUmfUt9FREMXuBPOlwde3MHIaJ0cuwxugklqRF2r8VF/9VltJh4kvtD5rKhxHEXyALc7ByLZg4ODg9IfBYK0MYuXVjIIS7zK39kGHwtmPLJkgCjjf9p1ygj1iuPmTWljJ6Om/LLjHDC60NOrZOe0tZeigFlkzxlB5OlRDhA9Mypld3xY4+bH0XlhlJMKkExeexGc1RSgt8/H1xndvXZ3tGpRnU2VBhmdZT21bVXXvdRORlhq0YFsDDTONaP9PonKTt/XOXnZS//x3T9nY/MuKAMbbUCsdo3s+EzWFRXOdpRq40XWlYso1yTnJcl05jzof3cMacQjorRJz8OQIx7RDBgIIFxfXzeeRVBzMi4vL2M8HsdsNisZVpevTqfT0Lv8b5tonf6JuJ+1qDkZ+s0BjAOpzNnI9EnG15kMU75l9xiY8l1i/NreXuoQB3k8Jgsg1XSPE+XNxze7vtuu2vX0OctyL5fNioDMCZTM6zqytwRArGevbVNb67f3039bd977ILZHMs11jywR49pJfzGYWXMy/b6Z7WmzRxk5T9Z4rnY9ykImu3QkIu4/mJiOiLfDr8H/iSlFxHI1206Mq53SlGlXuWyG19bJqgdpa8fWKhsy/ebXICZzHP2meOONtrBVA/mZSlZRC6+PZHSD0VtXpKqvZv0ygWcWXRR5ZIfMI0Z0D51gRApOx9HQ02Br0ad7mazHZSaDTOGlFwQw7nm6U8EnS2ZOBu+zaRbDx9OPUX8ViT04OCjvvhiXwE816IPB4N58yhCrH1lfvC1uuNTfbSLnUyo5plojmkrbHdYsm7Et5ICizVEitRkhBybi88vLy7L+QGsPFJUTeNeah6zcTPdlVE/3cKfWdYb4vq2PHv2JuCth0BO7tc0hFwAqZe7BDDeMEXfbfipa++rVqwKs1B/qTK5vk3x9pzoYpCwI0XZ+Zq9qwMUNcFtbqatpX9Q28a7WyUhf89pca0S9mN1L73RWHIyxdHSdnJF3s74LxLptq+klyrt4N3MwyOseYBSvquyJmysw2KhjlNVUJmMymaSlUh6w2sT52Dabwrklv0muBWD1P8fUHTdeh+U9nA8RMdsmMtp2jGMwB/XZdcifbSCXGfAM+Ht0n/cRrzAoIJn1rJs7IfpMnvMsyd7eXuH9g4ODWK1WZUME7jzFLZsz2WLpecbj7oA5xhXVeFvX0La6NefJr7GJrDz4YXykDPB55JFOhq4j5ul0Ove8xU6nU8qnuIMN//f1FTUDSkWqifGnJTsgcaVPxlGbPYpJAMPoKxlX13Jj4oDNFb/uzbQagbkz9jojyftG5PtnZ23y5zZ4hFfOhoAVF+Fye85MiX1VIL1NRiFbJ8KsjYMNdzaz8c8o+304HMaf/tN/utTrtp2/jmr339vbi+Pj41bg7U5GppQyhaXvUrxXV1dl33HtGKMdp2Rc5WSwXI/X4WfeWy+PJBHwRNzVNNdkhrpN95JTo2srQ8s+U55pbLKMp/QInx0iHcASRjpFaicN81eVs7dJ1B3ZfyQ37JvIewbEH9q+Wnv0G22BvxzgUXdHNLep1HwT9GVrgsjTapMDoMxOe/9dv2TjpHH2rALv7dfxMXbZ4v3pQOhc34LT12Oqv3yiNxd9+5qrLCJb44NtdC5EnIMa4M/m1+e1DStsohsI5Gvk93Twm10jswkZXqmBcL8m55qORzZWxKha46MtwSeTSdHPNX0lGanhLwZetWOiygN9kw7q/qz/bINnrGpZKn6ujSu/q5Ko5vy9iT15sJORAQkOEPdoZxSfDRWz8NoOArjOIaIZIeHDsxyccYI8MkzAywg8o59MO1Jxs/9+LaaYyLB0tNQ3GhKOidrrkReOLZ0WV6g1IcoAqzOgR88JcNRmATqBOhoAzQmjtnI2XGB4bY3Xm0TsNzEc74PciVitVmWL1jaD6wDFFQCp9vvp6Wn8+I//eBUg+Xk1oJ8pqto1MucoU2ybGCYCG4GI6XRaHjinB81JPwwGgxgMBoXXeA0CJI+k+j09yio9wKAC+0VlTqPnSl+ZCzl90o8Mxtzc3MRsNit99shZxN1CV/23WCxKu5jJyWStDXi+T/IMrpPzWQYcazKyzsGogR2/b/aZ53mwiUEsd3a56FntZ+BGICTTyWwHnV/2bR3YyfpeA6McbwLciGjofc9quDxQ7jhnOk/BKh3LZz5k5dKygcpkKADhTob3w3Wy06aOyPsigVxmldoySrV5pQwJa9TszUP1eHacg9K2//xa/M8zhy77WZtq8+jzrCCAso/j8TguLy9jOp2m64eyrds9e+F2XLLd7/fj9va2sXsig0x0FDgHdK4cl7JPtYBYNj8Zf1A2M5zC6z2EHrQmI2MMdtC3qpPSYzSGAxdxl2rSZDugzwbcS62ojLlg0yebiu3g4KD0gdfURHLhqLeBaxN0ngMJgST1yUGJ0mM6R2PoY0GnwtPBNcrApDMWmSUDiu6cCcjRwfDtBTWuWuTa6/UiohktcIPp9exZX/y/LEK1bUTlw8i0iDzqdf1uuF1x6PcayOL/mxDvlV3b37PzvI18Z/BgHQii0lcmQ2BCAQst8B6NRqV0T+dqYbeuQ6C0ru8OTCKiEcXy86jH+Jscy273bqcplgu6XEtPCCi5oWGgQvpX61AkZ/1+v6FDfKOKbSPn8U1oEwDtx79J5I3HZnJHm8Yaa9/umNuN6jw++Vdyr7JSbngiPTsYDIqe0M5rsiO6vjsXDj7Yn1pGT8dTDrIsszve7K+unW2lrGNkExgk1HUXi0Xpa7/fb9yTgTs93VsZTuGNLMDjzmkW6PHfHsIn74Laqi4yR+9N2u888VVoU2dCRJ7z3xyT6PpuU2rt5m/Sh9S3si1nZ2cxnU7j7OyslOBJvmij6RSTz93JYLBBMi7MKWdDbVeASXrdAzDM6kmWuG6YFS1qA8ct421dP8NPxOa1sXwI5nrwmgz3jPQ7gbEbN4J377xHAjV5+u5MRg/cswuaBE6uZzb0WYbfBzAD5DymBgzZ/ixFrv7rsxsGdzJ4DY5pNrm1yfe+sE8ZOPJr1kAnjZBnoZThUdZD99IOOOSjDJTWyO+9zQ6GiEo2m5csc5GNOz9vOmYPHVd+poxnTkN2jYe0TVQLWJD/fV1TxN2CagHs/f39cqyu42t+HBhlRtV5iTxGQ1gDaX4PPoRMRk3XoTMkgOQP+dQ1PQtDg8fFhJ5NpWxuG3DKnO6IzYyX24VMf7WBlnW0jod1LcqJglvkO9VjZ2vRBCqUNVOttfSnzuNzWNyOEjQLMDiwqI1nFqXM+it7RR5kRJljSvl1e6W+KrtHwOylZLU2cLE3KwUyJ1zneTCqNi7bbEsIOrOAU0TuDNf49037ug571M6pyV6N79ociLZ+Z9iUn6kflbmQkzGZTErWXGWpGnPpWToZ0t9u3zMeE7/LbvkCcMd65GO1wbET3+lk+FjTbrWNvbeXL9cVbg/X0YOcjOzGjDpK8Amqu93XT0F0RSmlxciOoj8cOHWIDgGVq9pF4660ogNpH0y/HqOfvK57smQUV6zZegyffF6fi2xqmYzVqrkdrdq1jtrAYjYGFEh6sRQAgTuNg9quEo7JZFKcC+1/rvlmCYra16Y4t1Xpt5EAgqcu3VmgkfWsWJYKd/oqDkZNUdechZpj4e/Zb3rPAADBGh1P/c9o6Gq1KqBLT80+PT0tEd/pdNoos5I+8nMJ0NQ2PpuDip19opy7LPIc6Sn95+sx1B/uksWxoZ6hgfHsruRP/afhnE6nZRwiotGubaFNwD6Ppe5cF7nluDrgcADzJu3h8Sx/Xa3uSqCk+2azWQM4jMfje1krZuGZ3djb24vDw8Po9/uNJ8NzvYbuTwfA+crHJHOW24i8H3F/jQAdW2EAvXSssjQ6jzKhLT19nR+dEG18cHV1VYCg1mRw3SN1jeMEB3/+vq3kwdlMf7fZjXUOp47hsetA5JvaJv1fsxW8Z9Zm6kPXAa67I6KBy+Q8nJ+fx3w+j/F4XHbsu7i4iKurq5hOp0XHjEaj6PV6cXh4WORR1+RaQW6LnrVf7dnf34/lchmj0SiWy2Up9VutVqVU8ObmppEFycbSHTcG4B7Cy85LHFcG8f144blN6cGWh41yQEwALMOmEhqlgNVIls9ogHV9Rvv1m+/ywraQsQgOMhArxZz1wyN/UoZacU+gwtRd5onyXf1Rn9xTpYdNh4PXyRRF5kT593VAMwMw+t3HR+3X+GmxaafTicViEavVqmEg5Vw60QDUok21tmfgYpuMBPki40f/LQP0mTFpO55UU95O2XFsZ+242uesTZsaIpfXWlmAfh8Oh2Xtj5Rttq0lo7wilyG2I5urTE68DIS6gnrLI1AEY8q66HwZvyzr6zLB8WA2VdcV8FI0rtPpxNOnTxslou+b2oxnBpLYbx8LnycaYHc4ajqFDkntGjUZoKPc6dw9eVklPyrpub29jV6vV0CF+FMOp7Ib0q26jkqPFdzx9Uc+Fln7snf/v03f8n4O4DO5oGxw/SJlRcdpEWuWrWHQjrJNJ8Yz/PpM2+K0zvHYJsoi9KI2G5BRbSzI+5mOfNsOB++Z2XG/n8tmVonhZUbSt9xEZLFYxMXFRdkKXI6r5JGZw6Ojo+j3+3F0dFTWTTGAKFmUfDI7Lf6nHWGVhzYr4Rq9LPvn1+BvDM4R9Gdjx/HmtX3sJY+Z/uC1HkIbOxkePXJwrRejMhrM4XBYom5iAKU6d3Z2iuJgJoNrFqS4nbnYNh3nmQdGBSOisVhbg8qMgStHRTk1+Kyt1u+M3DB7QSVMsKB+ihxw67faS+3L5oXvJPf+eQ/el2UXzkxytLgmRp/l2c9mszK2w+GwGES/p5eTucPB49WnDFDU+vu+iMqO32sp7+yVXTP7vElbar9noGSTdmQ8lvHfOkMn+aHRoHxx5xmVWUiHnJyclCdoS+60GJQ7Ufm4O+jkPNAZ8Tnk8eRVdxQYoJDD7XpABolrPXZ3d2M8Hsf/+l//a/2kviFpDcu2kMuu84yPvf6vRdeya7uzsO7+/C071z+3tUHZJe7WslqtYjQaRbfbbTyoj5ukiFfkZCwWixgMBrFYLGI4HJb1N8xisA2ZjLqOF/lv4u82YMiAkx/vi1jVBtnc1WpV7Hin02mAMx3rte8cH8m1MhhypjOA9SbOQwawt4Ec82Tto23Rdx7vY8GXOxh+PvGL/qNMejv8cyZ7NbnPHJzaeTyG/SeGEf9MJpO4uLiI6XQaL168iNlsFpeXl40dCzudTlk70e/348mTJzEYDOLw8LDwsHix1+sVvCc+VDCBFT0cM2VCJM/7+/tlS3ZhKzoaDKjQXup6kn9fr8GxWocNmYl0ftiENpGVr5RDd2XOso/BYFCAAJ0MdYB1bwTtGiwNeGkoMhkRdcaloNWAeUYZgO10XkcYpSB57YhoMJT293alp2sx1ax2sn1y2NiW7BqZV+mgPAOKdHBoICLiXuqe88gtfwX8RqNReWaGGFTbvYkWi0XJZgyHw3Jt9VMGQxEGjSUFrAbGt80IkHwOqfiyPkVsViPbBsI2+S1zTvVek6lNaFPHgnOn4zzlLR7jJgN6cf2FSkciXuuR6XQa5+fnBfRL7+j5LOLT1WrVMATe7iwF7HLqoIUySScj4u55GZIRllq9a5Ie3hZax79t8vEQ+aez4OfXAJI7GDVHg21zOVNGl46pgLV2l5FjHBHls6L1k8kkdnZ2ipMh51k7+HGheCbjNV3pQNMpC+LVxpX94rV1Ha9e0LjwWD6AkvYp4q5kUnZCNkPj5Ds3ejvWORgu19vqZHAeN3Ga1jmJmb6nc6LjiMncGd80273OJqzrL38j6CZl2V85r+PxOKbTaVxcXJTF3XrOkEqjVqtV2UBkNBrF4eFhHBwcxNHRUSkP13U1fsKoy+WyrAnc29trPBySDjTbeXBwEIvFIvr9fqOcUs4GA69tpDFxmao5afyN/SF5RdI62dgEMzx44XcN5GkAFXHU9pIyblKKvI48Q0V8GB130JIBTndyagaA7aXwOGXXViReAIb/iyl8AVrNyXAjoPa4k0Ew6tfJjAaVK6NMbKszHmvT1ReWQukYGTI+7EvbhqqMTBFaOSsCgCcnJ2VRIyPJq9Wqsde5ogMUyAwAtCnPbSEqcc9eeAlORJ4irvUncx75exvVDEDtXPJVmzFYd51155NHmYVkNoNZDEV4lSWQg6/IMI8/PDwseodR1oi4l4XIxsjbXSvto3zVNr/Ifqvd++sg6t9tINfVojanVbKU6dcaubNQO4bX8WP5vQ24e78UjVf24ebmJvr9fiyXyxgMBuU47XazWq1KZJQBH/V3tXqd4Vgul8VR0ZocgXTvE9uXOcneZp3bNl6ZPeV1aD8yXUh7R7DG8zUeLHdpqxZYp1P5fZPXNpFjhYgc27S1288jDsrwgY6lzXZd5c4H3/3zur5l313mNrEjOk8AXzuRXV5elvKo6XRaeEk2R8ErORnD4TCGw2GjmoX8yQCS+NUdbo4d+yJbJgwl3KR54Wud3nKZqo1JbbyyeXPH8qvKxoMzGe4JdzrNbWMFQA8PD2MwGESv1yuTxacfSmDk/bGDrpCyAeTx/F//cc0HFZ0Aio7xxXZiOjFhRDRKuajcCJQZIc0ABkuynAFdWXqZB/vKdx8DdzLoSGgM+JwQliup7QJ2ErqnT59Gv9+Pw8PDIhR0srhDg8bi5uYmJpNJdLvd8uA2OZwyohcXF2V7Ui6cUrsZWXFBcLC3TaTsHGvls0yGU814ZMoiUxL8L3NmRF4+tI7WOSebOhc8142Wt091q8yCKfKjksvlclkemDSdTiPiNZg7PT2Np0+fxvHxcTx79qwslpVx+e3f/u2y+Jb3jKhHeT2YwOhpJnvSO9kaK4+6+fevi5+V9t8WWsfPGe9o3r10oI04T9SFmfNR4+M2gOP2x8GaAjQHBwfR6bxeuybQouxExGuH5OLiIpbLZeOp9rJFKseQsygZUQSWT7x3e8l2ZmPGvnlm049v0xkaVz3HSvd1zOAOf8T9nQplWyW3KsVVUIElh5yjTuf+QwPZjgwwbbODIXKcwFLMzPnIHDDn96y8JltDSdpU37f93wZ+M2fHz3V5Jc/KuVBp1Oeffx6Xl5fx8uXLUh6lfjND/uzZszg4OIjT09NSlqggAUu7uWOh80y329xgg5uAcC5k20ajUXmw6mw2i9XqbvtnYTQfK/K25ktzxsBZNu4Zb1OnUoc5j1GON8ENpK9ULkUwKwDlT4VmmRPTQayr5EOomCbi5HBw3WN0UCZyA6NzNTFKdSmSwnpQ9UugkXudq62+EI3ZjGxdhisEUa0erha1c2ejZggc/Ohe9HyzdslQSBgGg0FJ0Xc6ncYcapcP9l9O42Qyib29vWIc9/b2yv98siYNDp0Y9mcdMN8WckW+7tjsndQG6DMHY50iX9fWzJHw390BzJRY1rba/f04KWtlRMVr3PqP29p2OndO7OnpaTx79ixOT0/jgw8+KFk1GY3RaBS3t7dlNyrKhqed9VlOeBZBdd3kTkc2ruofs3sPVdz/L1ANHPF/n6u2a2VOxUPOyY7/r//1v8a3vvWtFKDqN0biBXQYTdVuSS9fvoyI13pfToYAhwJeOmd3d7eAbe1aI9vb1rc2J2Nd0IDHZOfKrkiOuPugSDLhmRpdhwE536mK5ciZHa2ROxFtDsY22RIR9Ulbu9v6Vruu5mPToJMoszMur37sumv5eRmm8++8v/hGJdh6iKucVOEsBZa1XlhBVGEdleW6w5Y5G/6/Z+TI3/pdQVwFC7hm2B1h11e0Mbwm5Y//Z+PZNpc8XwGLmn3fVF7eipNBj0rRRr3kjQmUy6nQA0+kYFVnme3QtFq1P1BLbXFmdwcl4q5OWot3pOgU4dfk01tVBkb1c3KKtFsB204lSEZUHzLlSMcq4v5kZk6DA1Mytfef6wS0m8HOzk5a4qVr9Pv9UpeokjddS1mLyWQSl5eXZRwI/G5ubuLy8jK63W6pL97Z2SlzrVpJruVQhG9dvSdpW41C9rl2bGYg2hwL53XPkGSy4OTRRRLlmv8zG8NjN+mr94H39+OUVRwMBnF8fNzIPkY0S5KktJXm/q7v+q74+OOP4+nTp/HBBx8UgHZ2dha9Xi9evXoVEa8dYF/0531ZrVZFrrMnNrtjznNdplkK6k6GyhS/TtpWAPWuqM35p0FuA9mZwf1n/+yfxc/93M+9tXZ+13d9V3zv935v4W2VdNDREEDf29uL6XQavV6v2DOtV8rqtGs80Nb3LMhQ00G6PoN0DnrlKEgGqAskN8p2M4gl+eMCeZ8T9tf7TJnNaJudDLf/+pwFMTNHo0ZuA8RX+u4629frtNmo7PMm/VQ7OK+1a/h9ucj7/Pw8xuNxnJ+fl0oLBZK1M+FwOIyjo6NiZyg/3W63ZD18hzPxZxZwcsdNAWzPElxfX5fAmAINnEdes22MKXselPa5p/5zudG55B2WYH4VudjYyagBAv3OtA2VRUQUL3I6nZbo9WQyKZkAf6BOtuNQJkx0cPjAIwql2uHCp9X9uk632y013OoLH4okcK4+CXgwGyMv150K/72m6Elqe6b0ycyaA3nFfFKqgL9qfBURpiPE55rwIXpyEsV8igrMZrM4OztrbCnoZWIs/ZBTNpvNIiIKDzAN7tHkDLhl41QDDe+T1HeCSNE6ZbnOqWhzNrJ7bAKWsntnLy//4rU2VUTZfNUAvkDUaDQqGVHx13g8LnKowMDh4WEcHx/HkydPSlSKZWPKjIi31Zbb29vGE5elCyQvKsVyHmcQIuLOQY64M96UeZHvgf4QI/xV6Pr6upTmbAO1yTj/z45vcxh0bBuYzn7n8R559KAP2/O29Y/sijLOygpT7+uZRLu7u3F1dVXW2uhJwtrwIHs2ioOMdTqWvzHYwM/8zjV9Xu6se3o5tPomGWOVg9vXdRmMzMmIeLPtbLeFHHSTpMMcXzxEL+sYd2YyvbyJDn8b41cD1LVjiLn4Eq7RYxR2dnbKcy8ODg5KJoPb7QvrKXisoKpKFiWjzoscG332oFzE3dO6r6+vo9/vx2KxSMvfeC3a4cwJy9bg1sZtnf7keOraCgTrHO9TGz34YXwZs7OTVCoCsEp1cuGNIth0ANQJMomXJTBDwCwEB1Rt9DQWJ5ALf1SXx+tqwpR+1n7IrLOjd8t1BeyH359t9DH0cdZ1smM0HmqrANRwOGyMgYARnaSsVlxGS6k8OVsRUc45Pz+PyWQSr169uhd9qikejbUeDKaoAqNTEkYKUI3/eO1tpGyR95u0t+2cNmWbUcZDmSPhbY64Aw0sifRrr4s8ZYp43Zjonnygo+RtNps17sXMh4wGd7LLFpSzbfpdzyGQo8uHHGmXOWb91pUvZOVSDq6/LrDq5DudvG9qA00R7aVQGfB/CFBcZ2DXtZuf3/a8eQZcUX/uwS9nUSD95uamlEx5sC2Ts3X6NfvO62S6w2WfWMCdb+karwPn2icvkcq2xnXK5iYD3Rltetz7INcZJI+iv6mDofd159Xklk5jdu2H0qZOhvOZ4xGW/KiyRk6GyqP4DBfiztlsVkob3cnwTWrUf45F9ltENCpp1CYG6NkH2krex21L9nuN1uEBl4FNnZcaPXh3Kb+xKxku2OJv3E5MQFMAl5mDiGiAd1dCAqyKmMsJ0AQqwkmm48p9XVv7Egs8dDqdODk5iW63W7bcVdkQ90eez+f3FrXRmckAPEFYTTlmwpgJrAuVnAPthvDs2bNiaMbjcSwWi3j58mVx7Lg/O+dSD03k+ovValWixtr6bTqdFqOmzE+3243z8/My74oaKx2u1KIyGEqDe/kJnTIZV6ZwvxOIi7Wyhd41uSG1GRVSZviz6/g1qQQ9Q1FzOHh9KjIvtcsi9OtKHTW/WXkRF7RKjzDixEAG12hIkdPR4I5Vyvh1Op0YjUYxGAzi9PS07AQkgzMej8se62dnZ+UhTvP5vGRjFXX2gAjHhHwgp53juW6MvipxrdS2kAMWfvfPfCdlzsgmYJKAyNvhTgvP9eu8bUBKg04wIydbTgaB+9XVVWP9oBwPRWe9bMn748DB5TfTA236QW1guW52nNqUrdNTOSOjyOsAVAY4180Tbfg2OhgRTZ52Xa3/PYiq33m+j4XLHq+l/wmO/TeWgNYAf80habNtlL8aXzrPenvkdJ+cnJRjVe3hO7IpW8HqFOHVxWLReGAfs9cM8Ha73bITJ6sYmLmmnRPfj0ajuLm5KfhJGRLndc65jw03EaEd8vK3mhPpTgOxsvpJLKvfNqU3WpPhE8+0qK++FwBQLT8dh3UAyb10LhyX4nJjlC0ez4RNg6iSH0XWmeFgFJdP+87AnfehZhg39f54HTJVdj2VlmgXE3nHWnTtiwbdQ6aTp1en0ynevLaCE9PqictPnz4tQqTSksVicU8BiifkcNRS35qXWibLnSwf622gmlKszbvzTBugWndPUtv5bihqZVD+rvOoaClrAvL6zMhNzYB72zMwI/nTvQik5MAKiKidDFpE3JVzsmxKRkBOxtHRUYlw6R58OFOv14vZbBZ7e3ulhlblVBwPfec2h6yxzzI/HNOvg6Q7t4UoyyI3oJmMr9OHbXrXz6vJZBsg5fu60p03IfG7eNkDWA6IvSRX9kw2YRPHQlSzx5kzUdNv2Xxmtp26nhuGZJuoZGUpGbWB66zPmzoi75vc/tXsSs252qSfunat2sKdy8x2ZE4Gr+/XaqM2/msbH/VDep7BJD6IWc6F5IlBZDm24/G4YB+uuY1oVixw100+cNqdH/6u9mkNsMqBNYbk+dpccJw4Bzy+NtfZeDu+Et7zoPo6/em0sZPBVGfEnTJU56TkCEoZaSTJ61NnyKwUJHaMToGAsiaWawC4xkOD5562+rNarUpUXREUAXP1SyCawF0MQ+DCEorMC1W/Mw+wTfBrEU4XdG05e3R0VJwAOU8qgZJSXywW5X4yRhJIlZpEvHZKtAuKomXD4TA++uijOD4+jk8//bSRonv16lVMJpN7c6f1GBpvGRQuSNfYcY6l9Dapp90mypzwmuEWUSlskvJcZ2hrAMKVHj9zHhgN8cwXy4jYVpUtSXnSALnSdEWptkj+9d23AVTWYLValazC1dVVHB8fl52jxNOj0agAe/Ev5URtOjk5aWzXLKUv8K9tmsfjccxms/j2t78dr169ir29vZIlVJaA4yaQx/FUho5jrl3Xvk7iuqhtoQz0ZTLB75vI+6YObXbeuu8up5vI6kNIMiRQwywAA3cun5JRlvSyNLCt7+sAXeZYeElobZz8NwIYBvhkf1lO67tJUYfVxr0NUDtvcQy30Y6Ian2pla5mZZwcP+8rgS1/y5wKX3NIPebXz+ahZpdq5LxZGxcGtjudTskq0NHWeHHxtoKwypyJB7Upke8oqOy4bBNtnu6jTLuwpzCi4yKVt2tthpfaO9V4We1ROS/lQ45CFgwQ9tbYZJkW347adfQmjsaDnAxPkRK8ayKkNFSao6wAy3FYM03B8NQonRQKjxhbEUYt8hSIFTjNykBYeycwot/EqCyhyjxCRle1OFyD38YcrrgzRUxnyO/vpTer1arhCXPnGi7ens1mjXUZAvoUFpWQaDxk4JSa73Rel5WMRqP49NNP4/j4OL7xjW+U6NNgMChOmgTLx5URAwJVB5lZ1I7kxm4bDUTNMBPIZ4ZX/XFA3UaZ8smUOuWARkPtYVRHipi7K9WMt66tnTsODg7Kb21pVRpKBjFcvsgbNJY+hmyHHOeIO6eIu1EdHx+XY09OTso2hh5IIP8qC3d0dBQvXrwomyRcXFzE+fl5AU2cFyry1WrVKH9hgObrLmVS6cm2ECNiEXf6jXpvHej3//h/m0He1NnIruny+rZpb2+vAA/pa190GXGXmeNDvSgjkl067Rk4aHMkasdkoMXbF3FfPpmVUf+4gxSrCbh2MOLOsajZRr27I5hRmyPifdoGynjOg281XvXreAkNiXaBDoS/M/iaOZscf2Z2s35l59WopvuFFcgztCO0ayqBVRmUqi+UtRAf6rM7Cro3S17F08Jh2lDInXHaE+Et4Vet+aXuW+f8UgaXy7tHMNR0E6/tNpPzr7ngddQPOuauU2q0sZPh3mimuDThVB7X19el/EYK9OjoKEajUaMmTttMdruv1xLIydAaAlewnCSlxDKvzZ0MXUdCQmGhglbE0b07B0Jqi4AMQRWFgpR5lZkh9Ovx3vrOhUNkZiqE4XBYokXaY11OBqMSTPvREHDujo+Py8POjo+PYzqdNjI9jHCwH1zUp/HNDBp5rSZktfO2gWpzmbUzM3aZ4XDZ4/m8T+03b4e/pJg1P0wZe+Yp61/EnUyK5+UgZMcSJNTaREdDvzFDWeMPGj6XRe5IpXVXvV4vTk5OisOgezJip/vrGnyCswISrOulInYjyo0umL39ujMZ27bwmw51xP10fcSbZynXAZo2nVEDai6HtQDIV6Xd3d0YDAYxnU6Lbcwy43Iw+DwqDxhIx7IEhjq5ZpuycXqIY+a/u35jaZccc3cuuNaLbXAeye7T1p6247fNlogyHqw5GevG3/m7zZF0HJF9J4h2cpvE7+vkMetH1i8GMLPt+Km7xWdaU3d5eVkeoSAng2svbm9fby3uu7UxYBtxF7zLyvvcpul4BcL4uAfZnGzeamOrd+lSx7rZ2OvdAz3ZHHg/RDVsm9Ebr8kgc3ljPOOhLcSePn0an3zySXz00UfxySeflN1cxuNxXF5exre+9a148eJFPH/+PBaLRVxeXpan8/Ip1KPRKPr9fjx58qQ8z4G1nXJs6HXTgVApg7IrR0dHcXh4WNpDo69+MavC60rYdZ5q6zjh9HiziXFjy0mV4YiIexEF1vUpaqsF96vVqmxtqH6enp6WJ6yznMwZm0pfjszh4WE8efKkbBG6u7sbl5eXcX5+XoT1+vq6ePPcEpSgK3MyfOGSe/4cJzeQbULyvqitPTUHQuNDZ5dlArVjI+q17Bonri3SZ82/Moja/U1RHWUi5fAzmkr+0z2VOfMF/cq06Ti+ZyBTbRaf65k1cnTEn1zbwzZF3JX56f+Li4vCo9IlKik8ODgo2+RSDsiLkjM5TUdHR3FyclKezfHixYsYDodxfn4eX375ZUm9S+7p8HDNmsb0XWQyfI3K+yY6iZR3l51NDVntOOe5TUlAxTPT60DdV6XBYBAffPBBrFarsuEA9UC32y2yJtunz26TCcAiojHGeq+BiAz8Zb8R9NccMv3GEimWKKs8RRFkH/O2AErmFLbNS033bjNxcxTxAfnTA6A1oOr9dQDMwCmDLQwc0lbrHmoL1xFlgSNRNnf6vW3eIpoPc9RLPMOAmPSsvmvr/el0Gi9evCjVNtxBivIi2yXspGdrMKvPzUaozxzIc6zYVwVn9Rwy2S3NtyoZeE6bLHAOufbWr+HzJvvJ65C3FHAntqU+WkcPymTUfs8Gj0ZNnhq3mXzy5EnZbvLy8jIGg0E8f/68RMYF9DWRGgCBV386o45hGZYULjMmjFDqicKqw+aiIJarRNxf5OeOFr97BJNlADo3G9taVIFgnMIu4MOnZKv2nO0QoNTYcWEh28BteMVgnEvdi3XqcjLm83nZsUtj6yVnvDYBWDam66IjPj7fCVQziH4MlVTtvNr/EXX+4fkCwVJs8/m8sXuSDL+UL68t/pKsUYkK/HuppEdzvJ165/xTQcvZphMso0IlLwAjPXJzc1PS43Iwut1uMRzSQUqrU4H6PKldg8GgGDfdZzKZRLfbLWuY2oyPR5pkLL9OkjHbFsp05EOiYzXKjO9D9EQbUOYxXxc4VUDu4OCgyJMCaHQyfAtO37KZfXWdkQVq9O5j5f/xt9r1/eWlLXr54m6XE90r05FOfv91/9ccoW20JQTWnINsUXxGtTHJ+lobF/+dQSr9zq2XxYPZ2o2sTRlvrbONLL/LeIobIcipZYlUtu6HOprZdN8QJ8vmEAv6uNHRZ98yfEU7lI1RjdTmWhva5ptVQK4rVYrljmUWFMroKz2Mj+BRnxXRVznC7e1t2RZV9WfD4TA+/vjjOD09jZOTkzg/P4+zs7OSwVAWQl7j7e1t+a3f75dyqmotzgABAABJREFUq5OTk+Jtq56Ne937QMlp6HQ6MRwOS4Rea0X4BFKPptSYkKCfzMeoka65CZBwpc6yI0aQ5TCw9lz1hvLc+URzMYoAEhW7visCIKC4XC6Lgyggtlqt4uLiomzxdnZ2ViLfyujI8eOiXRkYdxx1zYhoCHTG1D5GjNptC7mA1owu/9d5pMyR8N9qgu78QlArR/L8/LxkKi4uLmI6ncbnn38es9mszC/BjdfjKsvA50rc3t420r+DwSAimhm4rK8ONClXPh7icWUndLxKK8/PzyMiyvqD29vbkt2Tc7G/vx/Hx8eN9WER0UiT656K5KxWq5JNle5QLe3Tp09jb28vvvjii3INZYgkT95fRpK/LsBKOjo6imfPnn2t93gISQaySB114EOMrDtxPCcLWtSuV3MO+d/XNW+DwSCePXsWt7e3JTuhgI5kQo7xcDgsTobGqhZN1RjU2uuBMh/DzOngmETU15kRCHJjDz7Fm9F6gqIMLNVo0//b5m8bHQ0fV5EcjbfFh9LhurYHW9SWiDtdqXn0dXvCKOJPbqfM+2m8a/JZczScn6RnyV/aiGg2m5Wqi8lkEpeXlw3nVs6Qrqt7Cltx0x85ULJ5zCz62ijxP+2J+ii5kINxcHBQHhBNJ4nOiMaE88HfdByDzDqWWMHliplS18FqPzF1phfb6I2cDFfCvCnrQjVxAo2a7JcvX8Z4PI5+v19KeBSZkSMix0QMpKijHAJF5AWcuFCOk0LhpEMwHA6j1+vFaDQqDgy3wNQ12G+fBCpm9yI5DjpX7c0mp83L1P+eFqWTQKai0LNUg9dk2ktMzTIpzq0yFwKfer6IngKuEplut1vGkpFnbhXMyIGPB8GlxpJGise50tsWygwjU9ycqwwItF1Xx5J0ru+05g6aFLIcSO2KdHZ2VpyMV69elTQyZcCBoPMl0+t8GBiNAB1dts/7yIVrlAldSxkMrfmSPOg5MJPJpDi3Al80EqPRKHq9Xin5o1Fw8M/xk5wwmLC/vx+j0Si63W7MZrPY2dkp6e5utxsvX768t8mBg+tOp1MygNoNy+dRv3GOHYjJwEk2NV6SyWfPnsVwOGzlsXdJzu/Sz+Q76uJ1wQR3MFxvZ+9t13LnPnM0vg7dI2B2fHxcshOKxLqjrHevFaeu3MRmMYDg/2fjnzkYLi+Zg8HAFttIYhuzcc/uu6kD4sd7v7L7bANlC/8zhyPj/czGcHwd65AnpLepq3RfliYR3OtaCoBqQXSn02ms2VSb1jn+tfmhTSP+Y7mU7J1snvDpwcHBPb5UUJXOh9rJUl3dgw6THCkGV1nF4Zkox3IKXunFdciO+Wq6y+eOc+zzzhcdEdcZ+p2OrDsfm9CDnAxnXg0A6z69RIbGQ5HTXq8X4/E4RqNR+V8gQIsq9RJglnPBEikNEr3ZTHn4hLJMSnviR9zVPtJT9clYN8kRdwbS05t0BDQ2pEzo/FgKGJ0MV+5aT+FGw+dPx0rQfBzlJGjutOPCzc1NSTtyS2E+jE7ne8QhU5oaNwqJ5i7LImU8ua3EsWZfNjWQfi2RG4oMHIhXtK30eDyO+Xwez58/j/F4HC9evIjz8/PyACwtYJai5IOLnAR4BW79WTKcezkYEfejMrweAwHqr/rMyBmdYekWOR5qs7Iu0im9Xq88C2M4HDZ41CM5PnfqCxe/q153d3e3yIUcnZubm/IsDdbH0plxXXlwcFD+k7POjSm4MJ2RMALPXq9X1tjM5/Oi605PT0tmaRuIjndEXi61qYNBor7z6/j3ddd02XR59XKGt0E7O68fQKngV0QUIKe2C9RoN0DZG3dmXU/691rJR5bNIPn4ZbqMY5S9NtV72RzUjmu7RnYM9ee2ORYkAsGI+4EeUTZfmRNYG3vyiUqqKUvUgdyBSRlblceKN6WvFAQT0ZY4T7o943vGW9xAgBiD2Q191r0Hg0G5hrDPzs5O41oq545oLvQW7uLaFcmhHCs67Wq36zb9rvH1TAgdBDo8bbyqawnDeqBd5LpW98kync4rjss2oTda+O2glp3kOgwxjhhTdd/X19fxW7/1WyViKoCrrVYPDg7i+Pg4FotFKe/RQ7GkfDudTmMbPNWu+ouGXZ60siYq92B0xR0Mz1JwUrJaUk6UC846Rdjm1bsTwdSVfidzugfq19M80nuXILkjxFIUHwN9luJQpkOZIc27Z0io0GpKT33wyP82OxaZItE4sVzPI3uuTDIw4zzioJxKcblcFgWrlLHKEqfTaTx//rxkFrVIWvNBhakyQkbKdT85/SrdUGRfBkZzy4waZSxziiiruo/O0/UYbVK6WW1TGdNwOIzDw8MS8VWbVPanKBudII8ARzQzOZI3PnBS9/7GN75RntWxt7cXR0dHERExHo/j1atXDYec/afxZZ2zomUyQBpn9VM8QWdqtbp77o+cMc2JXttCviaL+otG0PndAYc+6/+sJO9N9UV2P5fHtw1ONZcqidrf379XOkEHVKTxpK7h+jjyMYM5vtC35mC0gXu3TfrsmxwwGKnxzTKafs+ak5A5NW3XctumNmy7o8G2Uxdt4hzSZkimxEss7XSbTNusc5fLZaNKgtkEXVOgW/fW87nkbChr621lO/mfEzELKyQ8o8LSb+EOPvxO19LaQ+FJja3kiZl12i45FrSV0s/6nTJH/OI8KMdMGFcBBeI4LzlmJYrazAoQPrdD1+DmJh54cP4i7ykQrf+FcV2ea/RGTkZbZIBKXh1W2l6TqLrq/f39eP78eWEabbEqEKDI23K5bHh6ureYm4t9pNg8baxrejmOrpUpKp8IPzaLzPDch4xhZkzX3VuKW4DePWBnRAepFFgenzk8WXo7U0q6HoWLSsh5Q+3ybIWPUzYfXtqyDcSx8881g1zLbLTxZWZMJPiSAzkPciTOz88L4NWaDMmclLCyF8oWupPBzIUygXpn/aqXCzJS4lGZDNSwj6vVquHcSJELhGmdhGrU6fxoPZH64865ByPYrhpQpWKX0pVhvb6+jmfPnsXNzU2cnZ0VkMioG2XMAQKJxl+gktlCZjq0IYP0nvScyk7V/20h6r8MTLaBvuzciPYMZ+b813Q0z9+kHV8HiU+15z51Y1YSqXc5m3Jg9XI97Q4GHfps/Nb13XVVTceJ2mxbjSf8fZ1zsYke1fs2Oxrefo2dA/VNeJw2goFZ9duBv+MNlmLyPxHbRPssHODOi8sa71sbA+ct2jyuZ/Bgs9rEKhg6R7JRzCYQL8r2CEvSydAaRdon76v3i591fQWtlEmqYdJ1mJXz0KYva9fydqr6xHHbJvTgNRnyhj0drRfrhtUgebME+RcXF3F1dRWTyaQ0WFHWiCh109rCkopQHnVENFJjrMdj5Fzgh1FMtd89eUZ4atkL3cvrATOvrk0RZr+1RSQ0/vrutYRqv2ea3AlypsqYmfOq+2ZRKI6V5kPzw+trfOQksn8cV2aWyFeMvm2SOnyfRINFwxDR3BqTLylHRu01LjqPINsNtMZX9afz+TzOz89jOp2W9RfcCWw8HjdAi9YnKZpCgE6lKidETgYXeXPRPiNA3C5Z88e6Vq8J17GK8Ehha9ed4+Pjcm05FN/85jfj+Pg4Pv7447K9rCJLLPnSeap7db4WZREfOvA6h4vgNU6dTieePXsWg8EgXrx4Ef/n//yf+Oyzz+L58+eNCKD0JWXbZZX6icEXOg8ad2WDBR7k/BwfH5eszrYQdZGMu2Q+Ii+faHNMsnK+NqoBaYI46ha17V3oGwIwRV1Xqztn3DPN4g1mx+RwSIa8r54B5PkZ+Pe26XOWwRDPMniVyVl2Lz8+s59tjkM2lmwn+5CB8G22KZITt4eaPx5LHvLfFfkfj8eN8uWIuJdZ9XnwYCH5h3aBQSfpXd5HDggxCx0THZPhL7ebrGjJSrPVfgJ5AvBOp1PWPJE3mCWmQ6E+Mnuu69ZKpdiObI68woZl645PGbjj79QR1AEuT+6YZrrYsafwhdazeB/a6I22sHVPlMLq3h+ZXLsd6RyV0aix+q5B0u4ajBwKtGqQCfbpXMiYr1arwgTa+o/b/bmAeV05BzNTfPSGOT6ZcGfRHBKVB5VJBm6cSQRauN7BX2x7TXF4e2qRBb+H2sW1IH5/z3K54aDykGGsRdzID20p9/dFcgoi8owPx+1//+//HV9++eW9TBv5oAbGRT/wAz8QT58+LQvxtcf+bDaLV69elTUXSh9H3G1pLGeB6xX49FJmL7rdbiNyI8Oyv7/faBcjSJQx9UEKmeUcNHBuBLQDx9HRUXzyyScxGo2K09Hv9+Mb3/hGeZaL1m8xmEA+52cCW1H23WWR11R/CeoF+rXAXOPFCKLOo1Fl8EPXZz2+QKcicipLYwpf5yqrJIOYger3RRqviOauYhH3t7cVZc5G9nvtHNqo7N2vmQE1HfN1AdFMT3vbqO/YDvEPo7MssRDJvlIGM72iMSOoqLWRL2bu3GkgMMrsaFtW9yHghm10x92P2ya5yCizHx7gc57gS3Ool54NwYeHevCODm3GgxF3jqr4SHaBD4lkVltzoUoHAl6+c5dP6m/nFfIVec2di4yPfBxlv2izaatYai9sSgdPx2VzQWxGHqYMaC59DaTjRrbb9QOJ+IFyoHN1Lb1zbPi/O3nUQbV7O32lcqk2Y8yoCCdS5yjjMJvN7imDiLvoqjpTYyg6Gr6NmSaSnqJeZF4eQzCVCW4NqPu1MsPkDoJT5mDQ2aGS1vHZ9f2+maNBkFVTwJkRrhnmWrZEx2YZGj8+i+R6tEbfySdfl8F/E8oiYeucjG9961vx67/+61/pnp988kns7u6WRdyXl5fleRcqjZrP5w0jr92WFPU/OTkpi07pbDOFLCfDHZCsVpQljCJdb7m8231OCt15itEuORk3Nzfx0UcfxeHhYXE0+v1+fPjhh8UJoeHTtTyKlDn8mUzqN+dbXcczTdJxKp+Sk6H/9VDA8XgcEXcPsNI9CPQ0hgqYRER5Do52IaJO0W+61mAwKNdTVHJbyNvi0cyIvBxXJPnxAEPmeNQcFuqyzFFxh8P1u8Y8yxBtqpP8OIIH18uZ3SUgEF94xFLX5G8CgAyoZc4W+8//Mn1N8CfZcAek5kDUXrxfNh7rfnebuckcbBvR+Y6or8eIyMdEn4WR5vN5Y3e+2jVlWx1viFfkZDCD4c4PgxvEKBmP0g6swwe+zoe8xwwMKZMrtZG2jLJNR0oYUgEdDwhmZYweIGdbaOPYDtlakTsmdB5qMss20SYzuJvZM+cHBq2d/2q40emNn/hd8/4zQJWVRTDiQubQgO/t7cVyuWyUgcjgsqZQDgV3O1DnFaF9+vRpDIfD+OCDD8qCOg2SvMyIuJc+rvWRBsdBL71k/Z9FSwla3NiRkcT0nNQMHNVA/iZg3oUx67euxe8R0fDOnWn1m8Ae++Pt8murzzKGcg75wBpFRLYJPFGhev9qZXhvw8h98cUX0ev14uzsrGQttN5CMhERZRciAfSTk5M4Pj5uAHQpUvGVGyAqX5Erf8qqnIzV6i66ykiXFqVxswh3tLUYVo6JHBhdh44RQXrbPNUCAtlxte/qt/pIR+zZs2cNZ+jDDz+MbrcbL168iM8++6wYe+6SxSigdJz0oErMVOpwfn7e2JJ3MBgUh5EZjW63W3hhWyjTV5SLdXMicr20jrJ5z4IoWTRP8sDff+InfiL+/J//8wXYEOBkEXweJ1mRE7lcLuPw8LBxT3eOpTcJZqhjSbQxIs8kZgBV92V/9X9bvxzk+VhkdfJ0RrJ5ymye2uLEtuu6b0u/vk9iyUtbICSiGTnXf/pNpbTail7lydwOWTpWOqjmjDvvyS5ENHlWZdxsp8sWryHc54A2cyb8O8vmRSyNyoI4Ea9lgtt7Z3bOMw2+zknn8bvjIGJDtZ1OBoPx/X4/ZrNZY06ZddRYexWK41IG2lhSz1eGD9knYiyNrewwqxRq9KA1GT5om57n3+UlqvGsC9TgU8lwUXPE/fo8psd0D9YGcncVPUBL18mirOtAoDsCrqj5f23M3MlwQcwcDhEVsp+fRYsc/Lsg+Nx6O7J59OM5Z1l/s7a2gTf9RgeVWaaszdtANQfNj8kU0VehyWQS5+fncXFxUZ5uKvBCpaPF0ScnJ3FwcBCnp6dxdHRUnkPjC0V9wRejNx7potPqwIL/eaTaFS2NEO8vHlBdKI2TAgfuvGZO7Drezqhm3HU/gi79znIt7Uj17W9/OzqdTlxeXhZjIyeQoE3nCWBQx+l4ja3WvHF3OOk4jZsAxraQGzXqyofIRG3u6HxQB9bOr12HYJ78Kvr000/jk08+aSyIdbBNQMSd/NwZJw9xbNrGRO3LwGD2u3QpF6Yye0InpnZP2hYC+swByUChO5huB91O1MjBlfNUzabx3G20IU4+l21td9sv3csHIIoHhZO0pk7r8ZidcOzBNpFnHDy740idnjkZDDLoxbKqzNn0310H874McNEhd+eD9o1rmig3vAblxfvjfXT5zOaYzs3Ozs49PMd++XWyezqWjbiP1TJs59fwc3d2dhoOZBs9KJPRppAJ/MVsXq6g/wgKRqNREQDt08/yADJldi93MJTaEoAajUbx4YcfxnA4LA/+Y2TAH76SORiZQvRILlNLOlft9nUS7Fd2T3cixNQ1oMTfmRqj4mdGxaNUmdOSKRa1L/uuuWW60/uYEY9jlJ8Cp9pzlemw7RyLbSEXfJ9T0tswcqvVKr744ou4vX39hFNFczSm2kDh4OAgnjx5EsPhMD7++OM4ODgoEXDf2s8BQcSdYquV8GUGwEGGrqOovCJXisx4lEi/MfKjrVhrijYzSJlSf9Ox5j3F1+qntuvtdO6yEoeHhzEcDuOjjz6K6+vr+Pzzz6Pb7cbnn38eL168KKUL3LpQz9/Y2dkp65yU8ZjNZjGfz+Py8rKM19HRUdm6dzQalaikAIOA7LYQwbP4RHzFaJyOEblRd8qcizchAh99d52p8XRgzra53FPHSS8z2EaQJmAk+anp1ezluli/Z3Xj7E8mO5ynLJAgB9dl3Xf68d8o0wJVBNAaI7ZR/+k9C6p5dLdGmSOi+dwm0jwSHLPf+sx3jZvGWfpF2Erl6Aq+np6eNh5OLL2hueHcMsChNbDMJOg+rExhFp/vbvuF6ZSJlX6LuF8O5DiNbRTfcz0cnSbxoq7tWQuCfZ7nzsVD7DcxmBPHgdviEp+yX3RAMizE9nrwLdMlxKVZm3QfjRnnax290RO/CXDdq9ZgONhkJ7MIAxmGiskjRA5qOJARUcCSBGc4HMbJyUkxwMyguNLz/rkyJdii8FFZsYTHnTKOF8csI1cabdEq3kP3lpJmlFCfaRx0DD3lzCP3tundwVbmuetYj3xk/OQRBXr1erkgbRvVHLE2w/1VSQ/a05xwkwMthj48PIzT09M4ODiIDz74oDgeHGOfW46vR5oi7qKjdF51vowMN2rIjKJ4Uopdv+nl4+dAMhvrTYDCm4JR779fS0pc/ZbRHgwG8cEHH0Sn04nxeFzG9/LyMlarVXlukDIRNG4aF+obyq3W28jI7+3tlQcTahvdt8Fnb4scfGd8ldkJ8YbzAHmDPLBubjcFmR4McZDB3xhUYhsYgPNrUjfXXmyLOxT8rraw1JZ85PY4y5y06X4Hs/5Oh4I2VmPjgQu2m/MoHMF5ypwKf62bz7bja/3eBqIuzgC2O4ERd0Egbukv3aLgh0o6ZQ9YOZABVOEyleKqFFPP51EJKIPKzAZwNyrPGrBPtA0OhjUGlAF37GWbHEt4ACGi+ewZbxPHgefU+GQTu+44iTLAkn3Kkeu2DA/6PejgZRUFbr/4mf9rLh0nboK/NnYy/GKZ4EbcTTDrvzKqKTAxMrcm03e9qHQ7nU7D+1RN8tHRUcPJ0K45FBrPhjALkClfRmKZzlJEigZQbcsm0cer9h/H0xlM7SAwp5C5UnZAR1BYY+BN543n1PrL/riAZQKXlUkxqqFrbZuTUcuwcA703X/7KjSbzUrkXDtGKUvx4YcfFgfj+Pi4lEspWqX2qP21cc10gH7LgJ9AA/nSjR95kA4ylT0VG0nn1oBFm1zpexuvu+L1Y93ou/zRSZKhevbsWezu7jZ2jPryyy8bIODm5iYGg8E946Nre8BFkUoZ+slkUu7BDNU2EevGI5pRPgKAbA4I3vk54n55q/OHy6RTjZ/UHsoGI8sEL7o2o4iyh7IVDi6om92ZdODo59IGMGJMJ9UdEM2B+IljV7MD3hbPZnjWwsvGMqdJbV4u77KZHEeWZGaO5SZOhpODcp/7Nqf0fRD1iWjdOHBuOAcRUZ4bpIeHMvspvRPRBJm6lzCYynEV3FosFnF5eVmcDNoRORTcWEebVKiyhNiJzqjmn4Fk6m3Kgo+Jxs6dGx1H+aWTQYfcg9icExL5yHmq5gj477onNy5hwIKBYX85ZViKuNd5KXPgeG3qJj9vHb3Rwu8aSWH5jTmxGizVB+scptnEwEq5UZER6PPhJyr5OD4+LgDr8PCw7Jbjdahss2dN+CRMvWjYqeBdEDOlnJF7hu7F81pigGzNCA2eGy1ezw0D0/BZtEz397bUiKAgc9D0ORMQbzuVAhfCSkmoPw5it4FoPEVtBvFtOBgRURS5nolwenoaz549i+FwWDY+UEmNFJmDYka7NS/rQI4rGkXNZDgkS/zPgYmOE9DgnEs2CNjYhsy5fRv8QH6uGbS2Nsgga27Ufi2ul/46PDyM8/Pz2NvbK7uAXV9fx3Q6jevr62L03Wg44I6Ihh5T+znX2yYnHC+XGw++sP8RzS2OXY7c8dik3zwnO96Bt9u4DBT7eXSkadhZGqVzav3ieHgUtwaOXFYJ5CjzBB/u4Og3dy64gxwBrf/mGQ93MqRf1Eb9z8wHg4DUHaR1TmRtPLPzt4VqfaRezqo8VqtV4wnd4g2tTT09PY1+v1+2Y9XxurauKSw2n8/LA17H43EJaGhr9Ol0Wtog/c0d8BRYkS2/vr5uPGuJQVvV/AuncD0mx0F9ur29LeVFEXf8q0ckUF9yrQVlxuVEL86B20KfJ+cv1wWZYxvRDFxLZ+tBnNqwQ3NC/Z/pG/WXmZG9vb0y/my7Z2ayICmDXMTjjn1r9EZrMlyB+m+ujHwQ1MiIaGQpqKSUyfDsgjrd6dxtOav6Y5VJ9fv9ssBVtW01cE4Drnuwnx6tIWD2Mdhk/Gj8MgDn1yaA4H9sd+aBCpzxHg6CdKwYhuk0Z57M4Gf/63pZP0lqH8/ziJtnNPSfjCGVwLbQQwHO23IylME4PDyMo6OjODk5iSdPnsRoNCpb0w6Hw1JnK8oMU8afXk7IyCn7qTmTwyClLuWYyTMdDTcIruhr4L7m7LtstI13dr7fo/ZbltWgrtNv2gZxNBrF8fFxXF1dxcnJScxms7KgXcGViGg8pdzl1u/pgJAP2dzUILwrynQDdY/rIALk7Fhel+e3AbSM2s7x7xkfuAPB72yf38vtzjq94HzPdzoZGZ8SsNNOuF6v6QLydS17kb1qmED9cf3OqC3nLANr2TyRsr60je02UdbWtrHIsFjE3e6OrPkXuHaeUEBIWQuVRcnJuLi4iMViUZyMq6urAmIj7tvziPuO6/X1dcPOq43eB+pd7yP5mziB5XmyUwxmEqS7rPDl98t4Nxv3dfPZxsNZf6jf3Q7WxkbjmQXDHZ/4e4Ypeb7rtTZ6a2sy2HhOrjoqxbdarYqXqsZ6ORRfDm4YmZO3p/UW/tRiCZJnUlzpqq1iTAIE7gbiERpflOPppLZxdKbNgHtENJSznAG9tGhWzOj3cSfDDa/OVRu8FI1CUANU2dzX+CIz1l4WxUVnWlPAyDaVgaf9toXY9yziweM2ARSb0OnpaXzyySfx6aefxvHxcTx9+jSePXtW5IClZpJPOvuuQFi6I4MjIv9xPYeDLjk0jEqL18hzBDrcTUlbFSsL6Zk8yoIrTZHzYg1AuCKtGZ3MueH5/MyadI27rq2NKXZ2duJ7vud7ot/vx8uXL+Pb3/52Y2tbZnaoX9yxcvn0/98Gj71NyhwD8UlmeBnddl3H6xHY81x9rrXB28Lj14FT5wlmJNzuuAPEkpAMpGQOjffN3xkA8HMykMKAX9Y/dx5kC2kTubW8+J5b80rOawENB381oNcG8ryfmR3z47dNLmrk8tKWvdAxxDoKbmjHTdkE6XbuWKf5UkXJq1evYj6fl+yFMhlXV1fF6VAbtKunMrVHR0dFb6ukk8/rUFvdqRRfMsu1Wq0aO/ZF3GHC1WpV1p5ptz06ThonZYfpYGX2i2O9zinw4zaZS58z6nZWcTBYx/tE3K8ecXKHhdve6lqZbmA7Xaep4uDm5qY85HUdvdETv9UB/06FQUHgHvIaMNYYe7bAlY/OpfIUiNEez9obnrVnbAPb6Yq7jUF4Dc+0ZOtENnE0sntkINzbmzkMrFmsXSMjN74ydjVQUlP87MO6+/l13DC6oyFngw/DYaRjWzMZpLaxqo3lm5A2Onj69GnZMYQ7akTc35EkM/iZ0+9lFeITr7FlRIp95LoayX/WBo/60/io/XQ0HIy1ORD+OQNynunMdEUN7Pn9yN8EPKKdndcPdLq9vY3T09OYz+dxfHwcl5eX5YGKUuZtUShvL7OAcvK2TUYi7kpzMnBEcpCeGUJ/z4wn/9tEP7sz4OevA7rk0bY2Z32qXTPjR/KpRy0zB9gdG88aZG2krLbZQC+XykqkKMvrnIZa/zM7xN8IwlzuNgWB20TOQ7LXnJcMexArCfQLJ2lsfD5YRXJ5eRmLxaI4GSqLogOi78Igni3RlriyAdpJT+1zbEP9r9/ZB+IczrPjB2ZxdR0Gk9V/x1McO7arhksfOncklwldl/1R372ChsdnNo3tpF6oXSvTAX6PzIHfZBzeyMnwC2dGT0ygyAcZgwu8XEjoaFBRMmLKx9grk6GFRQJABCxsZxb9qxk5V65cjK6XOxmbGjG/V/adbZdg0DDQYFD4svnxa3ta0seJc6D/a05Grb8OwjIj4eBIHry/6GSoP1ka8H0TFUYWcc3oq7a/0+nE0dFRI3uhhysR9GeZKrWZAEI1uL6IT+dIxug86F4sTdTccJta7pKU8RyJqe7lctnI3NGhiYgGX7QpytqYO0+6nqg5Fm2ODWUsczJ6vV50Op148uRJXF1dxenpaZydnUW/34/5fF7mgu2q9YtGibu3uGHZFqKRkr4WuT3xeSDfuh7LDKXry4zoVJBqTkzN2XA+Yrt4zcyJ4TWcMqfXI/8OJvxa3laNS02PEmDVgmy0gbSRtOUePHTQloHomkNFG1dzMjSm4gUf+7bx3jYHQ+TAjtjEx5VyoWg9NwThomLOr4Iach7Oz89jOp3Gy5cvywNemaXSXGvMuNZB91KJrgJee3t7jbnxsc+CTCxz4loA8gsdjF6v16iU4fiJR3Utt20ZvvHxF2V8sykvZTKg812fM9OZORSZDuF/HB/hAN7XgxHUda5jamPRRg9yMmoGNVOy+l2Mo8nkrjFSAKz9Y4kUO+iLgZX+YxkFhU/OjRsiV8gEKmonKXMwst1dsixMbaz8mLZzOMEUzE7n/j7rXCxVMxzOpM5Yrrjb5r1GGSBy4+iKIuJu8TKf3+BKKuJunrzt20BuCN4VqURK4yWFQp4WD9HhYPkDnxAuJ0ML50gad25LqPQ7S6hU1iiFHnGXzYy4c5zdoaU80ckQj8uRoSyRvwg0a0Yj60/NmXB9RvKITuYI1IyY+qJF+R9++GFcXFzExcVFTCaTYsx1Duuna/ekQWF26U0yrF8n0VBxXNyWUD9Tt3NOfK44LuK/NqNYOz8D6P7KdD5tDO1P1ncvlcruzet5v5xn2xwGyQajlm02nbZPDq9AKLcw5X9ZZj8DU7Xx9LEQ79JWZw4p++z38M/Z3H8nEGVYc+dZJAZwPaupoKywA22ArqFMw3Q6jbOzs5jNZnF+fl5sQcQd+NTciLg5C7MaeoK19LfaKhvC0iVdn9flmlE5Ruyn+EILpdUf2jt3NrLgdi0oWLN/GVby49wpdn3kGSjHpnQO2BcPFOpemR5i9RDP4xocBiNrTrnaRly/SZb8wZmMTYWSgy6FxrpMlnB4RESdzFLB9O58QaQrfw0i70UD78o2MxgZU2ZeaOY8ZGO4iZORAXv9pv54X9V+9ZOCXouA1n5bZ3xcma+7Lq+ZATkaCiklRUI8i/GQtr4PyiKppJoB/KqkWls68WyPeEd8y53UfEcj1s5qLYZHRvWdiqbbvXvI3u7ubokYaZ0FATllV3qB19d3XzNC/qd+cL1SI5+bDMxlQI9t4rvzoTsSLqNZ22WEtZ2k9qrX2DCg4U6G663MyGR9ed/k/F/TUQwQZeMv4vjyHnxvy2K0OS01gFwbd7+2z5c+837Oh3yPuG8L3cnIHA6OA3lzE33DPjKTUSuTqj3PKrOTfo+2OfFMSw2stfXB71k7lmO0TeS6pAaUyZM6jxUCsgu6Bp0TBpq0wHsymZT1YZpTL0dndimbK5L+43MnGJSKuO9AZn3OZCrL5PJZE45b2mS4xgMZ5sj0BttfczQegpM0bpvizOx6GhtleDTWNZtRkxnKnMZvHb3Rwu+sEz7p/jujprweFZcyD/qfqTJ6yJmwuFOh7+556dr0tD0Twr55tJeLw7OIkQa/Nm7OJBRYnusMSmH2qGSnc7ejE2vfVcJCofZ2ObNmBs7bso6xagaTAuMCH/F6hySlWI+Ojsr+3e7Nb2P5h8jBZKbANgEnDyXtIsXdo8hjzsdauCejoi0IuQgw4s4wsBxRcqlnbERESZuzP75VIAMDSptLfiWfVFxuNAnWfU0XAabLZgZQHgIk6Lx7+0Rt/M1j3Eh2u904ODiIm5ub+OSTT+Ls7CxevXoV/X6/RA8VPdbx3jZd17NE1KFvi8/eFnGdXsT9YAENqxtyjiGDKK53MiPvlOm7DED4uzsu5NOvIt9t7XHngrxGnnPdzTZnzlIG5rLyYAUjFITwTAZteSYnPv5tIIf947pDtz+UJb37Yl/afh63bty3hdSmLOrt2wR7uTkBt8ZODqEyUnp8wPX1dYzH45hMJjEej2M8Hpf/lXXt9XrR7XbL/HP+mMnQvOghoXwsAJ0B3+FKWK7mUPF3AujMpij7wSCWxtHXDGmTkSxYEZE/CLFtriLu7BUzmsR71NUcx8xh8q15KfOOW709ssPqo4J+tL01+8j/GDD0TU3a6MFb2NYUeQYmXfhd6VChuXC0vURUZJxEn1QxjwZEDCnmZtudqbNIDD12vTyCvc64ZAbLBUht0n/Z2Os/gQq/htpPh82vswno8rnk+Rk5P2SfRa50+KJz6Wts1rXhfVLNgGevTz75pJT/iZ9krKXoVT6zXC7L7iBPnjyJwWAQo9EoPvroo3vPvmBbZFS0O8jFxUXZHYRPbJUjwjS79jtXup1rosRfWgAo0KH0s5Sc5lNlVb6egmA542M3Op1Op8EPDDA4cGU2h8C1DdBp3DKgSeeHBt+BXya7GRgU7/d6vTKfBwcHZb40n64bHOxyHFmetunaoHdJ1Fc+Hm44nQ/0m8u96/Ga7uGxfl3+51RzNhxQZzzS9nLyceH9vT8ONmrtbuNfOs/+8gyGr0kkYOXxmfOQ2TDvG2Uos7X6jXoi45V1Y/ydRL7Y2V8ZVhGRP3Qss096aR0eMxnz+byUHfHZDeQ3lrXSVke8ngs5IsR36lNWadHGw3QCSOQZ4ojVatUoG/YxY5syfspsRY0yvBZxZ9sYGFV7mWXJ+J0BPWLZiPw5Qj5e/j+3kuecUH6oezMbSb1DvddGD8pk1Ixy1gBXIC4Q/t3LKXg9j0TqmoxSuPEm43JBq47z3ag40JmipYDQ0+RCpTbArTZ5ZJbj45+z6/h3z2qwv6vVqrSRdXlZVsOFwK+Ztc/73WbQsznU52xHKb48AuC0TUbEhZttk7IR74pHv/d7vze+//u/P46Pj8sYaKHd7/7u78b5+Xn87u/+bjH0H3zwQZyensYf+kN/KD766KP45JNPSomN7ulOBp/OOpvN4uzsrGQvFJmkIub2wf1+P46OjsouboPBoGQy1Kbz8/OYz+flWoq8R9wtcmY5Fx9+RGXnAQf2gQqWpEiP+ETjQF5z/SCFnsluJmc1o+6RRTcKTixl47s/P+Po6Kjs8EIjyfZoXGgkJcccEzfk20B0EF0neITOx9/PcScks0N+r011rJPLc5vzsImT4bxcsyXrbEsN5Hjba3ws/vKSJ4FRgVBuCsEH5tLJ8ExDbQ54nGdf9V16kuCVa7lcFrLAoAc3M3K9vU0kwOxjUnMIXSc5ZpLO5jwq+KTnXqhUarlcFhvMtZEsN9f9fJv51WpVMiQM/CgDzsy22qdjqK94D9pQ5y2B5+VyWcZM7+JrXo9lfe7E1HQTyZ05vru+YruZhafN5nHZsgD9X8O5Wfs4TsxkUOYZ3Pc+kxwntmFV0ld64rcrc5+QtklzoO0ggMDcSxBEPokRzRpuDR6feqlJ0+CK4d14EKjrekoZ6jt3StC9fbLYH2YT2pyKbLzYdwcMEiJeT+1XuYpSmXKs+BTgtnv5GLuh17uXNrjw+/UZxdD6C63B4PqLjOHbIjfbQD4ObtAJmjIeX61WxQjMZrMC3CNep6QPDg5KKZme1qr7ehRxtVqVLMXl5WVZzHd2dtYofRDoE29oh6qPP/44RqNRPHnypDgZw+GwzJ8WCu7u7pYnvqof4knnO4+IiVcjooAajzBxbD0Yob56vTADCJlyXucwU1eRhykPNFjO25k8SSbpZKltcuj0bBM+BZe84/1iP9QOGlXdZ5tAVBYBcxlQn0UOBKlz2pyMmuOxjpy/snfXjRnIrelQ/4/3rPEPjyUPe5/Ip041B4glN1nWQhtCKMItJ4MlKd4X6jfnQwZcMofDA4+endvEoduUtkk2nHq9XkREGeuac8HxYlRfrywgmQFV6Rg+f0IZbD4c1B1D35BHdtxf3CTE9ZjawLZkwD3jMy4el64UX7LU3e2xY7zMHjuuabMd/N+DP+RTXy9CjChngNjNHcjMPvL+euf4aD7lbLrD4OOd6RXH8OvoQU5GDUTWFKKTT1jWeO9IpqjYHr5H3DkZ+sx6UZWBSBBY68ZrUGmxj2SAiGh4mh4tySJUEfkDVPyzv2cGMnt3wLFarRqKgIaYiiJzHLIx4bi4Yfe2+DzX5pRZDF8f48yeGZFMcb5PqvG3/nMlybGg8NLQSxkw4p05ZBwP8qO2JFQaXC9FsaS8mGXQHufHx8dxeHgYT58+jcFgUECwQPd0Oo2dnZ3iYCi7wUi15pYKMytVZJuzVK6PI49nOtl5zM+tzVObzOkefCcYZnBD/9UysGqDR7EoD9wdKuMb6kK2idejbvtOcDJE7HPNodRcO9Dh/HNManq0pjvId9m7/ya587IMn7d1UXbXmS7bzg8iBwi1a5JqulT9cKej9lwMdxJo6wjcXB5rQI39ZH/5G+e+1h8fo01pm+QkIgrA3N3dLbvNOUh2vopo4hbPgrjjxxd3B1ytVvf0kY7R9USyR/7wXAJ3Oj5tZZw1WfU5dV0vbCNAzRIh8U3G77yWj1mGuzxoVXMyvN0MKrl98Hlwh8fxaiY7mV6gPeJ8ZJjK54Cf/X6bytfGToYvmnbg7YLpjECFrzSRT4JHO7KBzxwNKnameZkO9JSe9txXfxgdpPHn4hyVHumdBqLTuasRJ5DX/4xEutBzwpxxswgQ+85oULfbbXi7ura8ViorzYGXi7UBukyRqa0EP2oX2+zCxKh2r9crL25PyghxRKRPXWe2aVvIhZzRpQw4u1LjXuXqc6fTKc+EOTk5idPT0/LAvYgomQ4qfY2RFvG9evUqXr16FdPpNC4vLxvgOOKulEdPo3769Gl885vfjJOTk/jGN77RcBBWq1UxeBERBwcHsVqtSpZD2wmq3Xpxv3TxA2VJkX6Wb3AMfUyp7LOojPrVRq5MsznhfbvdbmPBnNot+XCZpSzoRWeC99bxHDNtI+y8IzmKiDInJG4lWlvP9L4oC+4oS8w5dfnOHFM6fQ5W+e5zsIneyICCOxhqswOXWnSd//kxtEECc9SZGYAgz3GOqUfX9dGj4gpwKFOpXYa4WJgLahlFptwRLNWcbWZBGFzQOdJ/4mEe3+ZAvUkAaptkRDQYDIrOkUxfX1+XsaDT57qB6x3JL1wvJ9shTCQ9rYyybLWyGMR93MZc+kwZWZ6jNpCnJZs1mXJ+En+QF4hfqG/F89zWVr9xYwLPlrFP1P3r8K23k/2RbNHJ0X+SaeowOmMaQ82F3nnNrF3uhIgnNP66tj9PpBaM8mv5PdpoYydDgp55eNkg8//MU2SnnPFrzob/RoVNUKKshUCaFh8ROHD/fyr0brdbFuCydny1WjUitBJQCaEDADpSPkZkJp8wN5TstxsYvreRA3ZmYnznqTYnI3MwdAyVhsgNuffH07k1UKfPNIC12v33TTUQUHuJMn5mXyOisThYmQw6sg4oJAdczKedpHwXDyr8iGg8sVXbqmqO1D4BEQEP8ZcMmuZajgV3qMrKjxiJ4liqfT5mlDlXkuRFlzVSBjYz+eP91Cauy2KbPJtCw8w2ejTJ750ZNjob1MOuKyOitM13V9kGyjK9bYDcbUw2RpnuzPQv3yPadWhmtLN3tnWdw6H+e+CGfdB1OZ9ZgI19z/Qn7+fX97ZnzoaX4rCd5F9em3aV7XI7RrtPGXY7SlCr4/m7bEM2BxkY5NiSMt7YBmItPdc8RNznI7e/tLURzXLqiGagQvpC95GNkE7nGlbqHpbC6jgGk9zhcfCeZST5v8jlKuunSDzi9+UxmQxyvDZxMmr6xG1Xm57KdJrshrffHZkaHtP1HBf4tRnEIzZtkwHXUetoYydDi3dqWYWawNYaRwNAkEGj7BFIvycFhhFu7XLD/f673butNLvdbvlvsViU3xRJFzCiYpPQcRzkvHhUlcBHzokzGT1YF5raGGcCljGZMy3PY3TPvXYqezc8NYDsBoaC6YqDBofRDZZL0XDQeCyXzaeMaq63zclgxIL9UB/8Nyf1WQ4CMxlaKzEajWI0GqVOBl/i7/F4HJeXl3F+fh6TyaQ4Bd4Glv3t7u5Gv9+Pw8PDODw8jNFoVOZzNpvF7e1to/xKzouuo2i8shpeIpUpXo9KcSxroEz87OuhsmtmDoXGjuR8muks3ZvZQAc4OseNq1+HbaD+ywwbs09sp4Ik3DVPMsJM7raQL/yOiHt6lJ9rzgJthDsYfg8HBqR1jobrO/7O/zJe5Xee579H3Ol+HZe1PyPyq8ijphkYydrCnaRqZVEO2ESyLQRszqe19mXOIdssvue4ZsE3l0HvcwaiNnU63wcpW93r9UrgNHMyfCFzRKQglSVE0hHCN8ps8NkYEfcDNcxesEyKzoaXyTG4RPtO+dZ/TuRTgme2zR1yYgyuS9H5NQdautTxZ9Y+10euD6iz9Z1B9szhyDCSV53w+jV+rcm+8wSzIjrWMaSu47L5Vp0MAR03mM58bAAVhogdcXLDXos+6lwBMe54IcWo3RK46wwZn2DVB7vf778enP9fcKQ4df3pdBqdTqcIYhaJiWguRvf9hAl63GOuKWUqWR/r7NquSN3QyRAL3KtcwZ2SNibOjIQ7Jj7HLJVidMYdKs2vrlerBd42o0DlEtFMRWagxI29SqXEXxHRWBTc7/dLpIiAhNe7vb2N+Xwes9ksLi8v4/LyMsbjcclisK3+nJl+v1+chgxg6InUX3zxRWNfdR0nxejPaSG5M0CHQL+5g+GlVORljrWOJfjnizzK+0fcgVYH+a7HOHar1V1ZJe9DI+YlI2y7nAI62g6o3VHSGFC38Ros89Q6mW2SkzZQ58CXtiBzFMRzBBuZoXTHblNqczIy+SUPOuglnzpIYHaPjmMWjXVQkgV5aBvouLk8MBiWrblgGY7fT9fk+keWEkrfs1TGbRvlQW2VvDngimgG4R4yn286/++bVPKj8knpdgLYdRkn2lgdF3FXnkp85AG8zDHjug13KjRfHnDMMAmdgogmbzqO8v8pT+or+6x+L5fL0kYGWWVrV6u7Xai0nkS4KAPbpBrop9xRT2ey486LO2XubBAz+hhkOp7OTUTzkQFeiuuOmvdP7wxIrqMHrcmgAndlnxmN7D+Rgwx1nmDDnRd/saRETgb361f9mrITVNR84rEmVMBNDK4orNqhSXbnhApTipCeMycrA90cB3cyOME+jpsYzprXK+dL352hak5CRpxvB3L8L/PSmUVhfxlV03eC3cxIbxNl/OoAxY+jsZdDq98YNWK0OruXxkrOCmuqBR6opJgB7HQ6jeO5j7rmdDqdxng8jrOzs5LJ0AP8JLt0HrNosz47f9QAJcFMJkcO8jxj5EAxA1/erqxtUtbqKxW2xtKNI5W8+lf7njkYHDv2V/Kgc6T4KWe8x6ZG4V1R5jDodwf12XwLLJBvMlDE6NubgsysPZRZz1q4w9HmZHAMfO4yByNzNDLg4uAh648+e1vdwcicDLWD5zNLKp5U8Ir63T/7vOteLh9uT73fbbbgO9HBiLhbKyFAf3193dhtKMtiZHPm0XCWeVL/ZNdxfcRMBqshOGc1/e5znAFv3ovntNlUEttBHS3bJ54VvtDjDWQHBeZrfOb3qbWtpsu9j65f2Ha+U/YzG6Zr1O7p+oXnZEHbTKdktrqNHpTJUOcYvfdJ3mQg2XgHnrWGk+kF8pWtmM/npQxEDxQTM3W73RL51aLUTudu8Zh2nCJTENANh8NSZiXQJuGcTCaN6BP7w516MoeB5Erbmbk26escjIzoZGgcFAnkepPsuuvAfAbivO0Cn1zY6koqIooC0FgLfG/jOgwnByARd0rZjTtB/mKxiOVyWUC+topcrVZlPYa2reX+31QOvNZ0Oi1ZBj0Pg+1RG/l8Cz1gTwu5nzx5EhcXF429zj///PO4vLyMzz77rMwJH9DHRfxuIEQ1PcHoJoGkPisSl405o1SM1jGC5euSdC/qNR0rRyIiDwZoHLklr3hYOort0HV4P26DzQWYviicIIBg2iOYapOuLX3mxn3biKBYJMCTgRM/V+AzAyxt0cOIurPD/0i0RZ61oH7KnIzMXqrd0oVcMCu+8ixfGwhxO1NzNDKHIstiMJMREfdAm0onJ5NJXF5elp3m9DwdAlHphX6/3whCcMwy4JUBPs5R2xj73NZs67ZSv98vOkWlj7PZrLE5iMqd3Ea6s+FOm8ZOQRLpI1KG1TLHJQsE6PyI5s6aEdHQ1x5YanMiXLb4PCCeL91HB019jLirMBF/K6p/c3MTg8Gg4BXhvwyws1+0G1mWfFP8JNL4avMPZVekZ3if2pyxnfpN9lC4wq+nfnh2OJuDTWhjJyPz0tZ5kmQyZzhnWirSmpKRQuTDZCRofFCQOi8G4dabujZBNr1yrhHQLgtiMrXFF19FxD0lVxuf2ng5EMuErRb98jGukRvrzBMmU21idDOFv4lTmdUb0kOnkOpa7ly08d/7JrWXgLBmBMnbdK4cOHKBvM8jjTSze9wRhmCdAIMPZFJd7qtXr2J/fz+eP38ey+WykdG7uLiI6XRaHCACpMFg0HAcI+6X97U5xuIPj85kyrRmgFz2MifHjVFE0wjKGeH6B/JiZrhl0OTAcd0LnQLKmhwZ8jwBYzY+NYXPudT9atfZBqIjSXIA35aFcTnIwKh+o7F8aBAl0zu1TIVnNzL+Uxtk9AUmtGiW9e0OoETrshm8RzbG7EvWn3VRcbWJWVMFMzRv3OpU86joca/XawAdtyM+htnL/+f3Giis/battkTlUr4VOANwmgfaEQ9AuT1yqjnh5CFitE2Dotl7RDOIkGWzMh6t8a3ft8azdGqJNZjFVx9VmhYR9zAK+5c5xtlYPPS72p1tBUy95vPpY+zkWVJvf3Y9x47kpXX04IfxeRTHU9HsuA+WOkGjzkhMBtzZKRlRRV2n02l5YNlsNiv/SRj29/fLXv+DwSAODw8bbeJC1Z2dnRgMBnFwcHDvXRFBTS7LVWjgGc3yCKNeGfmYtSlXtp/vbaS54XyxLfrM/zODXFNMbd/5O5nbF3yzhpPRCZ2bjcE2UyaMWTrSHQP13beI9MXxmk9dg4ZGQFNyoYwfAa54UyWGWruxs7MTV1dXZQHg8fFxXF5elkyGFLHaKsfn8PCwZAsJbFeru3ULNTApotJiujriPg9kfLDOGPk9XQ7ofHmJhtpXU+rUXTpPhkvzQrnWHLCfes8iZ5nhcDDrW4r6mphtdDYycEJw0AYaeQ39zww2wY/bKb931p6sXZRrvlzPZ3LudlG6ULI9HA5LYItOhojzrbYySMcIM9tdCxrRjq8rvSEYpL7WMaomOD8/L05Et9tc5xcRxS5Lf2hRswOZzOGpOXWZjd3ELn6nkDIZcuQU9KGeyrJRnpGifnJ8QTlx20+noubMOlFm/FqiGhiuYR86BuQRXzPkepYOkvRixN1W8cvlsthH2lE5Ghpvbl6iNmdO1FdxLNhuBelWq1VxeJSldhtQG+usXZLh1eouc+XBUGIv2g7p2HXBH9IbP/HbQZMr1BoY9Aly5aj/CaAkOIy4Xl1dlQeK+fMEdnd3i3MxGo3Kg8RGo1Fpr8CUBLjT6cRoNGo4GIPBoKzTkMFT5sPbmgm1FsH5Iion9ZVMzgn3c3TvrPyGk85SLp1XA2CMwLpA+9z597bfndGpsJjJ8KiYGL/maHi/t4UyI+dREzeI+l38o1KbiLt1Su6Iaaz0Wa9sf3s+0I8OJ7OBemnMx+Nx7O/vxxdffFHWY3AL2m63W55MrTIulUFQUbuid4eV4I8RFY4dlWebk7GJ8fPr0sjSyWCWhsCdMu+yQb6OiEYGVMqZgKjT6TQA2Wq1KmtgBDBVvsZnA4g4du5A6thaAOd9UwZ46SxofHwtIJ1rEgEQ+6570XjW+CQDCGqb3l1nepmBgxsRAQN/E+iWc6EXHUSRg3/1O3vp+AysZSBNeoc7SlFHEQQyIsx9+7PyQOkBZlK1ruD29rZsky0+9TJD2lTuIJkF8ThPGa9Rj/jcbjOpdIfl4AKdcuJ8RzCO1c7O/Ye40THJdHTmaJDWAefab7XruRND2WL5l4Nh8RptW+3awjcC1gx+McB3dXUVEVH4UccqGOBBjEyntNmnGlG/OzbWMy2oyymTjgd4z2w+FABQlkwZjQynegBAxzv+rNHGTkY2iDXQlw2ad5iDmEWe/D70zms7SsmIaPvN4XAYR0dHcXR0VL5TcaqWUSSnIlsvENEsY/CxyOpZ6WDUPM7MoWAbqbB1jsCOR6xq89b2uc0h9LklU9ccjOxefjyF08eSioPpdgft22ocCJb4Wza/NWMvnom4X57gToY7X3TIM9BAJe0ZN2WP6MyPx+Podrul5FDP6ZCC6vf75T9Femi8yOsZ/8mg+HE8NpM3p8yh9Xs6yGjTWy5/5FmemwEajTGDEz7/vC7nVXPV6dxF3rIMivqhaJLLEIG2ImDbmMlgfzLZcZC7iZPpEbaMN7JU/zonzB3TmjxnTkbGu8zsslzXN03w67gjtS7CzDbVHI0sI+AOk+YgK+fza/I3D8LxuVXSSVzj4W1wPUXnooZDsjnQ722AeR0QfB/Ehd96MBt5JNPlPk4MQkTc2Q/X0aI2fuI13mSssutmAdCsnRn/6pqeyeO96GTQSeb4SVcrWM3NTNQW8S0xmHjYs8/sx5sQ7UhWMuV6nzqU/c/0pa7hi+G93ZlNzrKmbbSxk6FB9bKAtgi9kwPMdUwccQc65VRoW06Vg/Bhe51Opzw87OnTp/HJJ5/E6elpfPzxxyViIsFT9mM2mxVQx7Q1HQ4yohwPPslSzKl2CrDps9qnMcsMFD13V9Qi957pgGwKvMkoNOo14aAQv6lS0fk0JllkXvt/E1RLkMjMvgXrttG68eR8aw2E5t6jUZI5AXzxoo5zZ5EOgrbB5baSvA8Xm8uR6Ha7he+1QEzHceGc5ElyIn7S9egoR+Sg35WjR6PYN3c0dJ7rE/JOVkNL5clMn39X21mCRFBXAzc6n4aI86PvdDI0j5qfiLv1ZFn2iiVBmWHzseN520I140fif67r9D/7qTlk5tB1R6ZX2Sa+e1sow+5c8Bq6HzMpeqe9rNm+miPlfaFceGbdgWcNrHsEXPZU5/C+HGO1XXwqu8h5VX373t5e0UGz2Sy63W7RT/1+P66urortpXwwq7tcLhvPR2rbztzHrWa3NsUt75tYLqXynn6/H8vl6zIe7RqoMleuUVVWlE/vFrkTqXl2nsocZJ3D9+z/Gg+77hZ/aX6Jg5htkWzTVnB+KXudzl2Gl7LHEj5leVi2yoCP2qyskdYmKvhDDEi5yGxO5kRxXJxH1Q6VeKkNrsc5dry2X496UWOu0jE5rz7u1GHuaJCX2mhjJ8NXmvsg1jomco8oe2XkgMwVjZSMjPH+/n4pjRqNRuVBYorA6njVnMvISxg5cDUBpBfshj4DH5mweSowU5JuvNyoEsS58Wqbi3X/ZfevKeoMSGZjkI2l90WRdAcRHpl0x2ebaBPHLeJ+TXctKip+E+CsAVcHk5SNbC54TMRr+ZYTo1JBPVWc62Y80kpFr/ZnoHudnEfUdwHKQLRfl4axBr5r7akdW+Njz0quMxxZ/122am1sixrXzs2oJr/vkzL9kgFEGUf+xv7zvGw8HNQTpDy0rW0OgN5piGuAQ5QFHVR3zWu7Y+vj4FFNdzLcztR+y+xQJi/qG+vcGWn3UhwGTpgRiYgCnKTvfFxqWZZaNsOpJtv6L+O5bSIFoeSI+fOl6Fxm+p/Z0TZerOnpbPxq/296TZ7nNoT98WAVyY/ntajTqUvlWEg+XG8QgKtNLp90ZDLMlen6ml7KxpW/qx2ZzfVzMvxVu5e+E88y21XDsa4HanNDenAmgx1XY1jeok7XiAywiaEX+JQjwN1yWI4kBXd4eBjHx8fx9OnT+OCDD+LJkyfx9OnTUvPKTIY8fz14TAzmSliM6QuWfftVNyrsm/oipqUirmUhMqHkbw5OM+bcxJBSwDMwsg6A1Y5l1IFM7aBJY8Ct6BRdzzIZus8m/PY+qOZoOFB1Pou4M8bqtww4a7U1t4xMRERDEXoZob8UWaSDzkze6elpHB4exunpaVmnxAcB8mGAVNhUOuvKOESZkRARbGXKziNvzGBkOoXgiGuCIqKMlWcUXX7Z5lo0O2sfdWZbhpDn0rjoHJ/3Nidl22QjoxpQ1m86pq0vngXLMrXUGTU95/Pk7XS9R10vyiLB7hC4zEdEyQLqGA9o+ZiwH+yj+JF1+QzOed0+dYUHJ9Qvght3fDud1xUEi8UihsNh2eZda7mUXdW9Op27LeSVrZWjweu6jmTWxZ9GTsCYUTbXNUdj22RGGWTp3Zubm/KuTIZ0MMeH6+wYpY64D/BdV7os+GcnB7m1a2VZDF4joqmHGQiTTEfcX/tInvR1C9S3xBSSMWE6BjT4Evjm2NFu6l386xkN2vsa1suI/dECdNorEu/F8XRdobHTsbIrKslj1Q3LqNoCDutoYydDKSZX4jTGajQ7zs5lTFtj2Cy966ldMo7qww8PD+Pw8DCOjo7KwlQptZubuyeBq9RqMpk0dt8R2FIpyGw2i16vF/1+v8H0briywXcGr/VLY5hdx42XruPjvqmSzJyCDAz7tXzu2iJHNWPs96CzxTHTuHk5C9uUefTbQN7OjLLxdkVGgCnnQg5tBoKctzJllkUrO51OcVzE80dHR2XThOPj47KwW6VRLCOsGeiaXKwbOx5HBzrrU5baX3dPncMdnDQeKp3UTlq8JsdZ7zQePgY02lkgoOYYyKj4E3Q5tusyNXSOqFc2NW7vkjxrl80Z9U3GbzpX13Od5ga/BpgIYjJa51xk+p/31b09i0DAo0AayzGoC7yNmQ0iSPDyIjoT2Xe3SZnNplwoyzoYDGKxWMRoNCrPyciqDrjRgfqmjT6k16lXaCf5AF0fQ6d1+qYtOLZtRJ3AAOf19XX5zvHlulVVaMiZ8wg/yW1S9n8Nrzk2yM7LdDXv6xkDOUkMPtbuTd7hLlCUPUXrdU7GNzW+0DVYQsTr8P5yQBwne9bNScfTgWJ/PINFXOmyWps/7yPvoXHOMpxc5O34dh09KJNRazDBvlMGutqMY0Qz7Udl4mlA3VeKTiVRirrqGRdiDm2zN5vNys5U2gZXTkbEa4dqNptFv9+Pm5ub6Pf7MRqNSjt578wp8Ekgo2dA0JmEBqMmWGqHM2wW3afg15SAA9Z1Cih73wTIZHzDbAWVSQYU1EeO0zaBpwx0iDLlQr4gCKJR8ZIlnsvPnq0gX4k8BS3Avbu7G6PRKA4ODuLk5KQ46cPhsDjZdDC4INn73/byMWI/OK8cD+8bQaXLSzbu3j4ZbZH0ioINV1dXjfF33efjXXPwndezgECtbSzHdIDMcapdizzFbMy2EHUHHV795vPn2RuS83fGb7XvvBfHqwameL9M1jM9Jn7OHE0FFwhU6KDQyeBOh9l9aS/Ic3QiapuTuK2t9dXfxa/SESqx5JO/WXHAkgy2T9fUOjAG6BwLZPYz44Xse402Pe59kEfos+3fBW7bnEcB001q6TexqW06ttaHmj1wmWAfyDMO+vVbTXdSHrrdbrnuanX3UGeNSZtu5j09u8p3Xov62WWffeF48RzqAM+8Z9inhjeo63zsGIjSSzg4wxJ+r03kZmMnQ/tZc7BcGbPhWUajjTgA3BmHC5gkMFRgUr5HR0cl8np0dFT267+5uYnnz5/HZDKJzz//PL744os4Pz+P8XjcSCOzL91utwCqJ0+exGAwiCdPnhQlqigNladPqBsyKnuCah5XW/dCR8THP6MM6NScC372FOSm88XfeB3yg75z5wYaZBpUKUOmIDkufCppBkjeJxHM+Rzq3ZWN846AhCKEWmS9v7+fXk9j7qCXSpf8TaXCe5yenjZKpbS2SeucuOtaFlmqAR79x/fsN1/jEXFXLkkdoP8ZJeJYulxQdqSXGC27vLyM+Xwer169KnpHTpXuL53g2UTvS2YstZ2wdI3a4efLoVT6mtslUicQWIi07znn30tetklOIprBJI2neLYW9Mj4R9dy3uFx7pS57uVx6wyon5t9r+nwTqdzD0Apkn9xcVHO4TwqiKbnaGiDhiwYRcdf98zAp5dIEYy6k+HBhEzG5GQoMLFarRoPxtU8i2/J32ojqwkoZzqXJVfubPh8t9EmAHobSc6mymdVNqWsxnQ6jdXq9YJ7BYL03DDaW+INURaUELh3p8THN7MDbvt57ywQKkylbde1uQ8d0ExeeW0PDMm+6Rxdz58Zpf6vczCoY7z/nc5dCRVLqTLZqekW/cZNlrio3J1LlVm6HakFYtzp4e8qV1TZFMufPQPp11xHD1r4HdF8cJsamxn6DPyt83yoFD3K4qUejMRK6AQMXHnNZrMYj8fx8uXLeP78ebx8+TIuLi7K9XVvgnwJ72q1Kk8KPzg4KCAnK+GoGXN3DjIP3J0M/e/jyus51YSQ/9Pr9jmq/e73z9pTu34GAGUoHEARBPq11B5PP67jqXdNDlj4G8ej9pn8sFqtCqj3zEE2rnQyMsDj2TWPQPrzYSRL2W5gmeJkv9uyHG3j5cAs0wVqg2c7aoqbIERRGgUwFotFXF5exmw2i/Pz8wK89Ayd4XBYUsnUKz4HJAd3cpAIusjHGUD1LQspBxmQZeR3XcZkG4gy7JmMN8m61IwriUGUmhOz7h41Z8JBfuZk8J0bj1AnuiwLsOjZEnJ8GdXM7q/7MltQywZ4dt11iPrO8fL3DAh5ACkiGgvFqU8kL/rszrq3ry2LmLW1bU63ndw2EFBTR4h32jJXGjfPgrqt5X+0s67/a5gjczKyY3Uc+ZQ7nGU6j7bF8UvbK7NJaqsHRv2aGc/zfAVIskBtra3qCwOAtb7W9L7zB9vEefW2aMypN8RXzhtZxQ3buo4etCaDTFxzKjJg6J3LiEbHawq9hlS/KfLH52H4Oozb29s4OzuLly9fxu/+7u/G7/zO7xRHg6BFzgqV4P7+fsxms1JvqvUeur484ixFrz61KXBnJGceHxd+d+XqglQbbwpMDfBtAk5qwqZ3Z2YqEfXHF04pVU6h1TuNka/V2CZD0damzNn08omI5iI2ZRBYKuE8QD7zCKj4mf8zi3FwcFCyFicnJzEYDMp3LvDOjJnmpga+srHhu4+XO1GKbnGzB8krAUo2xg7gqVAVWJhOpzGdTuPLL7+M8Xgcz58/LzqBz//odrsxHA4bD9drMzaSd2UwtO5L+9szWu+yov8YNPGHAGqssm2gfZ7pjG8TEUx7xiUz1K6z/J0Op/eV57p98kgrz8lAkfO4l7TVdLA+K9LJwJk2HlH0Vturi4ckw5LLJ0+elNJg33HGnR6Nja9roI11Oyuwz7azL8qMOjDb2dkpcqNFyRF3C0gjoqwroyzJJpBveT+uN2DQQXzjbXXK7Nm2yUMbETOwhPb6+rrxJOqIKGXhzGR0u91GCSgxgNtWvosU9c+yEhHRkIGManpftFrdbcnOrdelp8kz0p81oM1r0kbKBviL/FRzWDNHibZPusfL18nLmY4QltG11G7XLY6RMp3vY8r/vN1qG8ePAQKNe21thtv7dbSxk0GPK1O+3jkOGK/hk5UNChmEjODpUZVKDYfDEoVlOQSv2+12S2SSoEXRpE6nUww6y0IUzRUzKQJPpmLNHFP9WX/UZ2c+jpuPoTMSGSYDeNmc8B5ktoxq8+LkQJf3YLtZcsInvzIty8gu50ztYSRM16oJ1/skjyhG5EbOI85UhnS+as9L8HnMrqHAwGKxKO3Rb+Lz4XBYFnUfHh6WrIZnMWprMERtACs7jt8Z7fRgA7MATHPLqHJDCo6DnFiXC+kFOgEybMo0eCbAAbHG3UEWeV1t1z1YCuIgkN81b5oHgjGWnog/KBfSRdTVHu3dNuJ4EzRmvEbjXjOWTjXb5NFD/sd71RwXv3bNprl+1rVUnqBgGcs3CLq045TGR07HYDCI1Wp173lNLoPkXdkvlR75i6XDbUGCbMwkk1oTuVqtilwxeMRSS5chBuw8w+GAMLNHWdtcL9T64/O/TZRF9L1On4uByTvaQVOLxGU7I6IxBwS+EffLejhWDojZJpIHBmpEnMeSPl2/9jA6kXhBZYcRUewV9YMcl+xBtXQQ3BFgH7KxciyX2UDZI4477Tf/8xdlOxvf2uca7xN3OU+Rj3xthsaTuvmtOhltF6wNQAaEebwrKjeImZNBj1NAiU8j1oR4NEZRltFo1AAAi8WitElPLeZTv2nopfBYMhXRrH0ng2Vp3TYHzSMJDnR8HtyAZeAlm6tNHI1sHrP/2tpND7/bfb0+RmBI46M2Z4xLIXYHbRujsxGRzoMTHYvMyRDg9pS4y4zzDseLTobWEnAexd9yMuSA07HOlDvvnwUNMtnOwFg2XlTklHc3ClR2GWjnPbO5WK1WDceFACuTs2zO9JveCQQ9SqwtPakH3BBxHOhkMFLNe2gMyDecD4K3NkD2PonjyVIZUQ2wb6K/arrBgxg0/hkIrTkYbfep/caXHAtGoskPGe8LGKhkSutw/HyXU/KnQJWvzfAdG2vt9rERCQwqw7JarUqpoWzAarVq1MgrYqp28t4eqWWGzoMAWXt53YfStjkbGX4gKGR0mw6qz61emhPiF41zm91ittBxnYNr15E8j+Q6lFhP59GhIvgmb0in814MREZEI2DVtgWy6+UMwGdjwLY5D9awsNpOXOTXy/A1r51hCP7HdnOs2abMyRDW9nGuXbdGGzsZWQrVQQZvykkgtUVDs0aL8SQsBKZSaNoBR0pXiy3lzdJ5ePLkSUwmk3jx4kUsFouYTCZFeekag8Gg8eAbepNqk947nbtnGZCpuUDVvdVavzeZQAld21xsSg9xNHgOf6ODGHF/zURElFpjCbIiW2RuB8HubYvxVW6wjQ5GRN0oczxqgivyBWy1SAZ/07jzqbmdTqfx5G4CczkSKm/Y39+Pg4ODwsu6L7d6zZSpK9YMjKwbJ9aVU7a4FkOpdEWrFJ1TEIAgSy/Jv/QCeZCGZnd3N/r9fpyenpbjVXr57NmzsuuW7uHgSAZOekoRxIuLi7KIMQMGaidlQb8peHJ8fBzT6bQsTlc5BCN04iHXrdQT2yovdMzkPHGHIZJHMH2+M4eydk+Oe+1cOtIRzeyH7q926bsHQAh2KBvcvEKlRcvlsrH+SgEwGv7FYlEW+Eo/+tOynQ+YOdY4iy8VaOPuig5kfWwcsNBx1i51KpWaz+fR7/eL7VZ7GCllhUKGG9zJaHMwvH3ZfzUAWDv3fZMDSOoQDwYpS6UF39PpNCIihsPhvWoL4hPyuutyB9w+/pktcAzAcc8AL68lG6Q2ZVn8LKslzKcAmniXvH9zc1MeX8BNe8gTWeCqjdTnWsWBOyQeUJBNoaOXORfU9c4fTpktztqktop/xEvC0by+2pfxQBtt7GR4aYAmIXMkssH1Aagdz9/YMSoY3ZsCRpAqhiKIIbP2+/3odF6nz7RN7XK5LNcjcOH2lVR2mXKNiMZ+wwQOTK851bzNjGpj6e9t19ZxrmD9/IcwEs9xT5pRSpaTUdlF3Dc+FLqsH7U+v0+qORn6T+Qy4obElXbtXvwsHpezofHmfFAGpJDF7wI4/oDJdQ5F1ud1ct92fm0+XRfoOlSYBEj6z8fPs4sCaHTujo+Py045/X7/nsGqtcvLpFRfL8OiOaID4AECGSJty60tjHV/lo8wW0hg7kbTf3vfRJ7XfOh3zp3zFOedRD7w37J+O8jSb/6/l++wHZnD4Y6L61dv887OTgFUskua406nU8p5SZ7l4PWye3OMub4h21GKY+Y2zMfG51FtEEjRjpQMDjFq7GOT6UKd7wCnRm3/ZfPFc7bRwYi4b/OoRzK97LpImwZwvsV7ziMaF9eZbXzsbcuckqxP2XwLS2mXI+c/8gF3B42Ihh7ROOgcOiQZlmT/allm/1zre+Zk0HngXCl4sIlt9bHL5mYd1uY1smuJrzLcVdOV62hjJ4PROzYoUwia4MzJyMAIO0HjL0ZyZhITeomU2imjq9+0QG5vby8ODw/j9vY2jo+PY7FYxHg8biwopfPCFCRLK5xJZSgUgVM7JChZHaH33aPcNcZxpvkqAMKVQda2tpIMb0d2DToOirxpvBiBjoiGN88ImsaYtej8b5vAUxtY9u9SfhoTHucKJ1MsfOfzYHZ3d0uEk1Fulj7JkeBn7gjT5mRw/NuiLlnfXWHXsiCURWYUBbxWq1WpsVWJl7eRpTCUZaaCd3Z2YjgcljEUsNeTzo+OjgrPy0hxW0XNi4y4FvDO5/M4OzsrDofWjDHqKB6gcZPsy/nTejM5OhF3IFMBDdebPoc+7ttANFrKANEhpA6gDDgIJrDie5scsg0Rdwtbed2I+/pR18pKDRywZO3OgJsy7OrrYrEojqXWX3BROPlX25Jq16lMJ3KM6WQwg8Gorst1JtvdbjPj6E67+qLs387OTrmPZNYrIzJ7479lUdyH0jbJwKaU8TQDInpRx8k5VRZ1Op029H1EM9OZOY60ve6UO+D0eXH75E6ivjOLJb0nuRCPUI/JQeUjDrhAXGWI0h+0seQjgehadQnl3cltVGb7MhmUXDCToeA0ZVvXqOkSl7kMe7mdzWwzHUuNNQPmyj5mQd+H0IPKpTi4GWDyqASdkGwS9NmjQmRIzx50Onf7yfMJyFKgntHQPWh05QwIuHAr24jm7j68lkCuE3/LaukJ9rLxosLN0ovqQ41coHW+z082/rV7ZdFatY9MTQclu787UmRskS+I0pxLwVG5qW01AX/f1CaA7AeBChXGJpEC9TmTQ12TafGIuxIslhAxqq7fNOY0MHyvAbhNeLVNEfsYqr29Xq8BkuSoSh8wa8nzMoPozjIdl273bttqPpeEhop1vLoOo2pZlFgvGgTqBPI6eUc6TlsKa7cvlUOIRzw4498FCGmot4EykEKwIaIzxghhRDR0lOabx/BzTTdmYIKgTtdmEIp2wW0cdRJtk+bB28HzWNZHXifIY9RWwbeag+O6l04GedkDSe5o+PU45iJm96nf2C86J9wliI5ixhcuv04ETVnb1tkH54dtI2YeROQxvtRX6Qk5qtpxan9/v+Akn6saWNZnvouyOcpwjvMGeZE8SBtEzCciHpRudf7Xcbo/gXLEnXPAChh3CJyXajwo3a/26NqyHV5unPG89LNjK92beJS60mWW7Xfyec1wGXlKGELHZHO5KfZ6ULkUlY0zXSaotQlrY2aeR4biQNCD14DwOIJVKTdnwtVqVc7nw330n08cgVemwGTQKPCKNGYG3kEBKVPmzhi1sXwTyhyFzKjw/m3z7uf6767UVAoiZeqpe86nPlNYt4lqYMa/M/LKFx2D2nXagL7Od/6XwnPjToVX+54BmOz+bO+mzkfWBzoMqu2WYu12uyV6pVIR8Y1HlOnI1RQ3AwJ8qrnKyejUMGrGeVTbuDCVpSH8nQ4Oa15dP8nJ4HNM9AAuX+9F0E35opxkfPQ+yW2Exozzr3c/x52AiDu+yf7L+u26NOJ+IM2J2THqZOmlrN1uM2uywgii+kgeFqiQwyqQJiDg45aNMQGR8ybbV5P1bCw5BrTZOo79UkAvs6fZfLkeqzkRbmsy29VmIzNe2Caig0tbqt8YKHLwqq1rfRtwzlfEHb87GM/GPMNqNSeDx+ndnQQCZgbB6LhSzxLr0XEn7zpPsk3U/QyitfEb71/jTw8WSYfrXj5vDCLUnHnKpAdhMyeDzpXPFY91++Hy75n/bK43xZ0P2l2K9JCb6Hi91xSaBt0NDyNcim6qjlzModQOAZWI9a0ij5bz94yRuPuMKzVOPOvFJSyqueV48XgZEe6cRZDgTJFRTUm3HbeOCNw8ZeYAgFFFj9hxnOhI6KU543WlWAmUNA6sb39If94VUTAj8rnReDL75lEcKtI2RyPifh0piTKRldBkAKkmn/6b94u/1RzAmqNC/hYw0ZoIvRaLRQwGg7IQnPIm4qJIzyxmBonRJ5U9Rrzm49lsdm+BYW2uNXfc9pfPAJBT4UZHL4JXZS1ULqXn/wg0ZCVrkqHMOErmtoXI1+J1Oo0RTQBOwJ0B36zsIdNTrhtrwNVBdafTaUQqXSYIXNRWOr909hxIkO9pMxj51zGKTmuc5Piybe5UuiPlOqXGSx4ccxDpsuTX9mirnGvNjeRBW0cT1NKuasMHn4+MHopLdI4A4TaSdhaLiHvj6Rlq8ZbAuza24Xq7g4ODoit0LcqK2++avha5I1zjbWKAWmaYmWhmq/WKuHN+vMRXZYcswSZ21PjweWjM6LN97sgQLxIjykaoFFB0enpaSmTpaFNXuANO/e/jx/5rzNUO8YbGJRtz/k/dphedLelS2sGv4mhs7GRkzOX/qxFt/zkT+nX9WDeamhiCBgJfV+C6lpQaB5/M49/pzercDNDUHCJXBuxrRD5xDriycamNcW0OMiO66bXIRBzXmhNTuxb/pyDz2RkEFLw+lauUhNdQbxORH0QZb0c0t2olMHE+9JdTpvz57gCIwKFmPHxca7+zPzymTVfU2uzXECihM6lSR+7/7jIn58J3zGhzMlxOM/3AYzmH7iAoS+H70ruxcH4n0GOtNbO2jHrx3UsOfV7Wzce7pizLwygqZSIiL9PI+urH6N2NK38XZXoxG0POtYN65y/XxW12MuMDr71fre626iQg0nnk8VrfeTz5XmPqjlStnT4ufk8f36xvXoaZXcN54+ugLDC2LcQSOZHzH/WCjhWQ73a79x66KNlzO9omTxk/+Dxl5PyQ2TS3PZn8UO9m5b6eNaiNlT/cjzIjZ5cOMvvF9miMNbaTyaTcS9vB026wLdTfNRucjR9/I0bNzndnw+/f6TQXx2fj5Zg0c2LW0YMexueUgTwywjrlUwMlVCw8llEebcHJSLsbfPfsfS9wZ3ou7PTMhAMOkX7TtZmS1Lhxb3AyMxVbp9MpZRD67mPI900AfRvQ1TFtc6oxlOCx7+uUit/X/2O0MuLuSbgyqstlc/E3vfAsQrkt5HwT0TSs+i6e5YIvjQH7pQgLzyWgzLI5BEM0QB6ZdGVCcj7gewacnGfaIqptStWBlgyBZH65XJZMhkoAWJtOZ1T6gSVirDPN+swIq485s6OMVK9WzUi62jubzRp8vVqtyhN4VY7FEhkaQLVNZVLq/2KxaETvdA0tmOT8MniSzfH7JEVYNX/S0ZILgh/P+vAzQYEbRh1XC4bUjHdE3LMRvCedda5ncrlU+zkHvEdGtAu6Pjd1UF+53iciiuPBeWb/vJyG46pj1UYvv8mchZoDQftG2+pgyLMm3m63s++KttGmKHvp80f+8IXfzAwul8uYTCZFjwyHw+h0OiVzU9PBNWcy4y+fZ5If46VSnsUS8Td91jt1scbEt4bVOIg0PrIpLB9W27krqapjuK5OmJTOhbYqv7i4KLpgNBqV9YQ+fo4F+BsD55nD4eMp25LhS7elPpf6rOM9W6RsF3GpOxib2JQHZTI2+c8VtjsUfkwbuYLXBGZCRSUeke91zMlp86yz39pKV2oZkBpDyTh6elFK3xfR6dxMgDmemXJYN/a1ucgUTHbMpsAlM+YEdQ6kHSRkRup9GKF15PxCxRhxv86VYFVA2aPiBDZ0orOIDceQv9fmMCIvQWg73u9JcJeVsmVghCCD4Itz7MpWcqN0twyGnHx33OlcZQaS/a+NURal5mf1kw881DhoRxcGNrhTnoCp6zj9Rl3nBtTHnhtNOFCi47UtpFI3fxCc63I62Rl/ZzpD3zO+zhyM7Dd3Mngtr+lWG3UOSw44R7WgDCkDbbqO7qmF1FkWiP2mLVKbuQubAxmCWMqm2lPjnza9QjBEwEb96PP0PviU47tNchJxt7MnI/6Zs5YFnSRj2lKbT2FXNkP8FLFZRUpGnEfn88zJyOafx/M8/l/j28zJ8LZobvnsM46X+JMBY70zaKi+qGR3MpmUseXzOXws2+xw5sT5GLh+ynRT1n8Gir09HGtdM9MHGX7jexu9FScjo9rgvImDoft7vbOYigOpY93r98HkJJH5s8nkf+sEiNcm2HIG4GcdL2Ol6CfvkY2J/1cbv7YxzwBg7Tz+x/PXKZ+s7WRcjS0Bgz77nDj43DZyRap+OdDVWHCxKbfx1EsGhueL7xkFJy9Rqayb+wyAZjyaUWbssrpSBw/6n+USbE8tA6c514PLuAbBI008n4rS+75Jv7Ix02f1QVvMSi/1er2Yz+exs7NT6ugFqLk9I50sj+4qQ0Fdp/uybx6dc93XZtzeF8nJyECnwJQcrYgoi5wdYEj/6zeCYefrTBe5HcgMuPMkSzWYjcrWhYjP2cY2qjkZ6o/4TfLN3aJqtkuywlpr8hPfM97Rf368y5n3rc3JoFPp4/U+iPpo27IZ3JafIJtAmQ4v9Z30jECwtkJWKSd3NPN53cTW89w2RzTDSK6reb3s+q6TaUf47jZD5JkzdzDokOldGQu1VeO1XL4u2Z3NZjEej4vzJkfe7bwowwCZrGVjksl22/X93Lb5IV7gOHO8XX9uiuXfeOG3OuTkRtgFI2tYW+PVSZYF8ImOHHAOCoWOkR+1g4t7sn4xbcW+OkD0l0ef9F4DWoxcygiIGdx73mRSa8dl41o7f5PrtZEbHPbBFQXnhVuRRsQ9hcr5zQDgtpArVI1fJrQEyB7tlAOgbAYjpTqe/M3II6/FFCiv7crIo5gca3ca3LnQfeg0iTLA6wqf7aRhcWeb/Ki+R8Q9Gdf1/JxMBtgmPh8n4u7ZLa7TOKe7u7tly9ter1eciZ2dnRiPx7G7uxvn5+cxmUwKb6jsKSuZ0jW73W552rjKoQgc6HhRlyjLKwdF231vo7xkoEJRQkVZ6XRk0bW2bIY7GeQNvYtPfKFpBox4T5Zc6BkoKuPlxgP+cEu1je+1caFtId/LcXBAyd16WO5BJ0PPYKFjlvGRO0h0trKx9v5w/NQ2RoclJz6274PUV8ndNtFisYjVatWQYc4TsZGXW2pcZ7NZ0QfKsGpdGzGaiMB03bxkADa7lvhYoJ16jIDfAbWOoe0k72tcmPUXecm930sYS4u3p9NpeZYLg7+1TVkUQFLZ887OTmNHQPET7UeGC50c33jWl7gos62UV81NFgSpOXQR0bDP3od1TgtpYyfDjfMmF6dC90b6MRkTOxjxFw1NDQS556h2sG2Zd8nrqA0eMctemUB6f7Ox0304Vt5WXqvN2103rg8hZ6zaMTXjvq4dnAcZI48w1IzZ+zJIm5IrS58jHkOHV4qMNdc0+vqND4UjkW9q99W9a3Ljx7X1j46UH+sOuzstrnCzV+26bKfAENsVcd/RyOSbSlW/67gsg+kZUxkhPchPn/lALIGrxWLRyHQtl8vGcz3UHgUe+NBK13m1MaezwYeW0pl53+S6PeJu/DmPclr1Lt1LfclrbqKH/JVlq7OoK+uxNUeam4i7TQnoHHGHFjnCmZxlzlAmX5mDTjDCNnP/fl1LGxFwPHVtByyZrGayWxt/9ofjmH3OZJPz9i6IY7tNpDnzYGrEfR3kjicBvpw7rhutBUYj6vaLxzn+ymwb7ZuvceVY1+7t/+k7+84sjoNpAm22UeNCAM8no+sezFw6VswCD9yl0DP1NdlpI46fb/nLschspr/aZLTNPrquaMODTm/N6mQ39UgqGStT8nypk6wXVKSQ20w6eTSWAsl6cSnabAL4mwNeea8ydgIOfDoilbxPWqYAeH/3GjW2NLwZOWP5sd4OB5gZPYShXNE8RJhoAHkfZjQi8prUbSUqJVJNTjqdTuOpu/ydUXrxrBa+aetFKVgqRAdtBBbkxQy00DiJeJ5TBsYZaaJB6HZfL3zWMZnRJOCnkRBvZfzoY+3gsSYDrph5POWa46O+8FkW+qxrabtI7nL1xRdfxHL5eltObVNLfUQHodPpxGAwiOFwGEdHR+WBfBxvN9rkPTkYo9EoRqPRVm3RqZ1XVLYhfcksxu3tbcxms0ZZLLfq9PeI9Y5yzcnwdx9X1mpzdx6Wx+3t7cVgMCjOnT4zu8EdcAiIKPPeBgdbBFGyUdysgPyrtosEnli/rmtQh3hE33VHm15jQM7/90Xrki/2T3Pq+ufrJI3rNmYyZrNZrFarki1zrMBn6ggfeR9ubm5K+eZkMomdnZ2yMYX41Yl8GHHHo5xf3UfHOg5xGZKj4+Dc75vZSec/ORbMGLJNtEVum6jfb25uYjqdljUWapsCM5JjBf+0voX4RNnBo6OjODk5iaOjoxgOh6VNb0LEiRw7BazUn6zMj/NAx7QNl3G+yF8s79U7Mfo6epCT4Qa+LdpAJiFAcBDcBl7FSLqvhCFLrel4erbZoGaZDAflFBa9K1IqJelRLhr5zIDpWg7GPdKq41yZZ46BK/Ha+NfAVZvDUjPKtfv59druUZt3jbvAFo/1iKX3f5uIQJ1GPON/Ep0BBw36X9fiWAl8seyOyptjSPCud70YBHDgRdK5dCwy/pXBFkChbHI8HPA4v7IfDnAyXZIByUw+OKYcB4I0L41ixNBLkaSXWJbCB6bR4fESSwfL6ruMpwyeG3WWfUpHZXO2baQdk8hvfOcam06n+Yyj2nqCNn2QjYfbBD+OvKs5I9/607O1pbJ4QrXvckAZEPAtidUe5ztvT0TzKegaJ8l8jV8Z3NK4ZpkLf7lsbDK2fk5NHh2I1oDluyA6NrQ120DaXUr8Rj3BgAdLp2gPqOu01oA783k2I6IJymlreF8dl+Emn1tG4TOnMsOSHngin7oNUN9oy1arZpDIdb7O4eLuiLuqAQUHVPakEjMv8dN/ep6RnEFi15qMZPauhuWYcVF5FsfQg9PZNYgLOFYcR8qveIo7//m8r6MHORm16FB2Uzf6rkh8kDNAQIMtwaGTkXXSo7K16IvOZSSJ9+X/aofXlWYpQI4V+622qd+itiyOOxnexjawlYEud1hqc1sDZOs+166fKZDME86cDBrUWnu3ieiURtzfaYO/cS75O4HNanXnNJA/uO2nnsmgKJfeszY43/C7R0Apsw4CPOLsYEVR/p2dnbJXu6Iikk2dy90+NC7OP3SsnFdroMWNGcec/eD/nAu2g+3XQ58EGplJIliTkZMi11wRoNLJyAIjvmW3j5EHOTJd5PpgG4hOhvhVEU7ufMN1BZx3ja8bzFoU2vlJ8uWGXtekQWYUj+cws6j5Z+ZCMqkHKWoeyUMeEHP+Y3/Zdh2nsixFojX/+uyyTsCi/tHJ9yAdZS4DhG22oiZzjgfaHGMHlF8XUcdsk5xEvF6TIT3KbbkjmptF+G50AocirYfQLkiqwPCKjojcVkc0bbvGS58zXmAWgwFanVNzGhz3MIiTORjSqdlvjj3ZJvWf4yTdrgzGYDBo2CzyyWq1Kpmj0WhUHp7KxysocJJh3xrVbBrXgHBcGLjbxEnOggaS9SyTIQzi1SabyMrXUqTryoceMWtsBYhE7rHyO4WIhoQgIovEZIxJg67vNDqM+CoKxJS0Mz5ritlvKuraOC2Xy/jss8/i1atXqZDX3tUOHwef9J2dnTg6Orp3zFdNCbcxVwYGvb3Z73TMXMDWOUbbSDRcEfcfwCjyzBwFndkALdRThFRbEbIGVFEXRdEF5hSR0NzTadZ9uV5Ac8BIuT5n0SEBE0VxuFhd71xAR6AjIJ7JJEscvUzElV0tIpo5JW3RU82V+iXgqAXY2kmKEenMKbu+vo7ZbBZnZ2fx4sWLeP78eVxeXhYwymNdHjNgR4eDDh6f+KyIJ+f3+vq6bLO4LeS6UsaaWRnxrQBBRDMbxJd0Mcl1fvZ5HZHn9/b2ilOs6DIXfVI2+GyD6XRa5k3yITn1ReGaQw88SD40Vho/OiqSMcoeI84cP2bYeH3azGws+e56y6n2G+Uvq9N/H0CfztcmIO1d0mQyiYgopZfSH9SLtAPKnFHXyg5dXV2Vhd/aEUm6RDIn8iyr5oXBUsqdZ8l9TOmU61w+q0LnEIs58ZrMbkbc3ymOxxNXuHMbcWe/WHImPa++S59Pp9OyUDwiGmVVcjgUFMl0EzGr67GszdJ/KpVSNoVBxOzcrO+cJ81xp9NptFf6h8EHYgeO8ya69K1uYVvzzmpeGQc5i5TwO1PLdAp478wxya6pd0/5ZdFzOhlibr8Gj6eCItjOHC/9Np1O4+LiYsOZeBixhtOZm+PRxjA+1psYgE2OoTKpRckyZ5XnbxvV+p0pEhJBF4EF+TJz0gV8GBGWYxFx9+RkblUoQOLyqG1FWQalazPVzZpaDwDQ+KmtjOS4YfKIO8eDwMp1Ao+nEs34JpsHdzL8eCpkAnyBReojB1sce9X5TqfTmEwmxTFcZ2gymfDgCY0ly6/4YvbkqwYW3iaxTxmw4Li4k67fGJRgpJDXXweWs9/5n0drWVLhgExEgCNZJaChnHKtD0te6Gh4u9hn5xPnEYJCl5csC+T9r9nOGgD0z9l75lBkr3dNDjy3hbjlbK3ciM4Gy6V0DKPcCjzwCeAOVEkMJrmToOPb5Lem35xXI/LMv+5Bucr4JvvNZcZ5S+1QOaPWvem72iRdrqCCggmyDb6OiU60qBYs5Zi7DLl+Jw84tqzhIb92Zls4RsTnEfftjo/rOnpjJ8MvXhs8Hi+QHnGnlKnYWEvu3rFvC+gAlVEgAgDWvHJw6FDQeHhU0TMnjMgyZUkwpslStJKlVbVo9rsizYNHHd4UsGfMTaauGaTauWyL+EXfqYAyR3MbKFN8WeQ1OyeiqZxFnU6nZDFUF6pyJAF7lezoN26QoPQtIzMRURax+XaSDgiURXHQp7IPbsRA5UWlJZlhlMiVmtfhUy9kwDwiGgq4zXnQb9nzNNp4VPfXk3L7/X4MBoOiW3yedC/N2Xw+j/F4XLIZV1dXZUEgF1zSCLbxlI8xo1w0Nre3t6XsaJ0cvg9i+zWfcn71P+dOx7qjEXF/TYWDZr8v7+9OnP+u8VOWZblcxnA4jJubmxiNRiUSPJ1O762zoc3TccogzOfzhtyKx7iQPAusqY81B4M86Y5YjbeYPVkHHjInxI8nwNIc0eF1kMsa92wtyrvQ8dINXg6yDXR5eRmr1aps3qASOUacV6tVyXAqou6ZDGaOF4tFTKfTGAwGJaPR6dxt0uE2mPxMbJbhCP/s4F68SnCeOSWZU6E+cG0AdblI3xlw1m+UN9mj0WhUbKT6JR6dTCYle3F+fl6eN8IAHh+YKl6iTmLQQFlnBTBcn4mk27XQXLsUSo9w3EWbBABqTgbHWi+1U3ZKz+PJxrxGD3YyNhH+WidpLNzbrL2coWuGgw6Fe8dZu9yDi4jGKnr9TydD7dXj4lVrrvtrUgiaZKgioqF4uZDmXSlRn7t1oIPHZOOV/U4+2dQJoPJpa3emqLw975uoIKk8sj7wHDq3VKARTdlzYEXjzVKZq6urYmi0GFUPC5IMKjrDBYC8n2i5XJbUsEC3oj/aHlXlH77IlP33fhMIqryHIC0i7jk+HAeOb+ZceATcgwBqA4MU+o06getIGMQgoCO/Ow8w4tXpdBrb0nr0izqR4M/75EaCETO1S5mpTWT9XZNH2fm7SOPmx0TkEb8M6Og7P2cv3Tv7nYBFc8A1glr0zRpvyQyBM/mP4J81z+IBz+D5uGROQ+ZwqP0Zb2U208dqE2fD9ZPzPstl6GhkpVKUn2yuvy7ytm8TLRaL2N/fL+BSY0bswcAnA0+OaYRPvPyGW6MSAEc0S+001x7wo61y2XG7Tf5z3nG+cF3qmRSBfBLb48FnAWaVRsl+DYfDciwz9nqi93g8Lg/e45pctsP74/2vOVD+O8/lXDEgqAwox9THoOZEZHqD/7ss+hh60GcdvdFzMrKGssEONkVqnBroSsyVHgfKozq8HyeZYIBANDM6mUJ1sKEaO97n6uqqMKPqyb2OPat1Y7rLd6h6F0RBrxnlmgMhpbOpc+LvbeeQL1w5uaKj8qDS2xbyiIsDgrYoA/nAFbM7sOI/lldIgYr/uchU2Q3dnwvefDEeazEJhsT/Asl64JBeDlh0Xi3ToOvrfpIntomy5kGDzHng2OlFufMMBvUF13/oGNW4c4z1mTXtbhAjomEsd3Z2yra9ijQy+sX+0Ij6AkLyCMeDazQi7qJlel6Hj937JvUpA3X6r+ZgRNwHnpl8ORBe9/KMQcSdw0bQxXaKXweDQYk6itcU7WT0kaUpXBtBJ9udLxr4iPtbM7PftF/MTmS85Vn/DPy1kY9V5ly4Y8FMBp0NBzbvmjQf79Ieb0rT6TR2d3djPp83HA3Nr3hUDga3s+XWtAxiMUKuLBvLbKn7HfSKP0mUs0xPu851LMegl16Zg6EIvvrJyha3Wbqfb55BuyhdfHBwEKvVqqxZmc1mZf3F+fl5XF5exnQ6jfF4XPiW/aF9IGVOhNvyNgdXwQplMjRfCmy4/HE+HEdn+jYbM7aTesWxueZkHb2xk9FGjMzxePfWHDi6l6u0YDZgPH61ulvY6tHUrF2uHBlVE2DR/7oWB1gr+1WiwNIvOipcBCivmLulZODybZPaR8fCQX9mLGrkjuGmx9RAduZg8DjnO8551pdtIM5rLeJYA06u2PW7O1x0PJhR4xqi2WzWiNxQLjy61el0Gg6KlxtKHnd3d2M4HBbFzO1cvV+cFylLLZhTyRfLuBSRciDmykxyzP8zB8PXk3j0SffkE7LVd+oiRQY1FjUgtFqtGkDq7OwsxuNxrFarODg4KI5Sv9+Pw8PDYuA0t9IJbpQ09oy00XmhoV6tVsVAR0Rq0LeBfBy93zrGM71uEHm9GrldcRuSORd+ftYGjb344/b2Nnq9XuE3RZ8nk0m5Nh0J8YPO1ThwHhUY8DUaXqPN9jl4y3QK5ZnORtsYeP/9WA8qcLtNflYkmI7x+3IuvO3vsw01WiwWjQXHe3t7JfIuJ0K6VNnlwWDQ0C/ciEC6eDqdRr/fL5tCqLxb1yPPilxea8QAAYGqnCG1V9eSozMej0vEnnyt+0lvcw2FNlNgRsMDNbJXGh8dI1lRtuDy8rLo7S+//LJRIqVsAnUrg06Zw613B/GOEZjx4xjSbqpsSxu00KHzYF4WMMicB8ox5VfzruvrXZj8IUGrN95dqhY50n81Y+COhRsWXcczCjUHg5+ljH1w3cvNAC0nnecxuunRn6yPvDa9bylVptB9TL5O4nivMxhZe3y82+6xrh2ZcYq4bxCzTAWjKATl20ibGM7aWNSuJyXkisGdr263W6LZygY4kBB/+w43jMzI8eCaKK0pODg4aERA2WfqALaT/C+jwG2pKWse3fFgRET7zhoeUfWImsuzOx3ujKiNGX9SQctIqoZ2tVoVg6idhbglLdegsB+UzWxRYea88nzuq7+tToYMFueZ//MYUaZDaro9+6/tpeuTskAH26l7MLLMxfaKPMppYpBN19M5vC6zi27/5KTU+LoWqOB4eCaD96AuabOjTu5o0P55RrGWvajNw9dNGRbZBsqcNc47QTx1GMtlReRBv64vAPdgMSmbL/KF+Im2nW1gwIY4ScFYyYzfm+vYBPD7/f69BwpSrpTJoJMhx4ulUYvFIi4vL+Pi4iLG43FcXFw01kIwMOx4MJPPLHCSvXsW3GU8W6if4W9eh/PQhrV9DjP7ybnNdNE6emMno3YD3TwDiCQqIr9epvRoJN1rlBGuKct1g+PpNpIGWwzPCeeCHBoERXHm83n5X9EI91Y1Fu+K1hmJ2jl8b4vmvinVhDGjDFRvE7U5bGwvx5Pfa06rX9MdjE7n7oFJNeMtQM+Hg/n2mkxFawEqF5kL8MpJqAUJvHQxIgrgkAG4urqKiCht0HV0DqOiAigESeQDnUvDoXIVjZXazq0KmSVgna5nNFSuorawDQL1MlSKgC0Wi4iIsq2kDJ0WGrKu1jeZiIiS6dFe7Z1Op1F2w3Ue7iRF3Nez20LkeRrGmlPJ4IK++/VcVjL972W0Oi4jAiQaXL1zAaeus7+/f6+URSBvtbp7OBiDAbwmwZace8qSt50gxfutcXEHQ7/Tsa7ZznW2ifLHkhfZRy0yZiTY12VsA6jPQPO2ENcGaDtkZSYIprU5gfSFshPSf85vWvy9t7cX4/E4ut1uHB4eltJO6qbM1jg2o54UT2VyI/3EDJ6wlfqq3fh8/Yk23zg8PIyIKG1Vnz1Y4SW8Gs+rq6sYj8dlx7+Li4tYLBYxmUxKZufy8rJhc+SsuH3zclrqNOLCDAtkjrjGXAErlW4JRzJT7Vgu0we8H4M2xCGOvSTLwrMaP2W7OL/r6K09J8MF0ztAcm+JA+WeIq+XOR76z5nd25D97/95jWNElO06pSw12VKajCpE3AnLJhECb+fXST4WNSCcgfw3aV82794ON3xt4Dwjj+pvA3m/a/yv94c4Sm3HZMpfxAyRO/+UC8kXyw75ZGICavF51g6/ngMXHwuCNY/s6BiWPWm86BzwOAI1gR53XrinPNeg+C52HlH3yI7aoH6wpphGQ1E2Pv3Zgxte1sTf5WwoA6LxkLOjtsh5cidt20pBCHZ9TCPuZ60ync5ruS2o6fgMqGckHqPDk0UCs4CWfpdN0TNrVEctXoloPvdD7dLcdjqdsmYjc9pdX1KPMJpJOVK/PYvnslqbL94rGxc6tb72oraod908vCvaJvkgaUyzhdrM8vmcspSV80pHg4uKuQMaAzIR94NjmZNBnqduppO+Wq0aPKcxp73h9ruUhU6nU0rV5/N59Hq9xliwzMezPLqH7sldo+RQqCxJjrDGinLBIIXeWXKYZTT0nn32seHvvkbFbQrxZA0buPw7j2e6y2Wa4+jZm3V6NOINt7BtAzvrorA8jmVDVIg0riJOdmYoavWkbgTanBfWrquNmmjVxE0mk7i8vCxRAKav1HdlMXw3APYpE/qvi9xI15hKlBmsGtWckZrB8+Nqjta6ewoAbJODEZHzf2ags3GrKYDst0zJO5DKIpwRcQ/UuYEQqFVGg9eUTGQgkG2JaCok/0/ndrvdxk5rtfmkQZRhVckVnR8utF0sFsX40InodruNumXqDt8SWPfhjiKMTml8IqKRvVQQQlEgrmfx1D5Bgo8TnYfRaBSHh4fR7/eLsdHGEzpOfeKCcQG+bQJRapvrCAFhAQXyFb+L3MHQe3aMgwCXS6cMSGeAgPJD+yJd3+/3y3nK3FGGHBQRGNCxEEjy7AbbWBsDjgXHI3M02P82/eVlHixPpMNNO5htwLAttIm9ex9EDJI5A+QV7i4lPaYHt8kmyNFdrVaN5/hocbkyyuRr6r2I+4Fb8pPaIF6S/tWc0+kR3/V6vYiIe1s9c5G17nt7e1seaqqtxaVj6ZDpfsSZ6jN1tTIYridZLuxORETzWU7sC4/JnHB3JGqbH8ih1LxThqjzeM82uWIbMhyRHecBFc2vXpvIylt94jcNBSn7jYqJBocM6wa9zYjovBqIc0PAkg/3Phk1ePHiRUyn03jx4kUjlSamFSOqT6zzo4AIKNDr1Rh8/vnnb3MaGrRcLuP8/LwxXjs7O3F8fJwaoXXgvhbRa6PMgag5HWozAQePyfhom8jrIhmtqQEZ9dedTedhghr+rnd3wOlUuOx4WQZT2Wq/jJiDMwdUBDvsk97ZllppouTFnZeIOxDGCKmPq/rErf7kZKgPOzuvd9z67LPP4p/8k39yrz0cRzoernAdXB4dHcXf+Bt/o5QoyCGJuKsb5uJxN0A6TobKS2NkSE9PT2M6ncbBwUHM5/OSYZXhVIZD56nkQfqp5sC9D2JbNJeU+8yx4G+6hvNSZjwpF/wtaw9tWBZsoZNNg67re3ZNc6oFuHKM6fx5OQn5gsBF11Y5lmfD2H72y3lb724DHRy53XbwwXeWfOjFyLs76Zvo7Qw3vAvaJjkRSR9zlyGtt3BnkWWwnhnodF5ncSOioTtUWqXF4Nx0IJMZx2qZ0yre1P299InX07Oc1D49r0LPGWKmYrV6/QBjXkflVeJFOSt8fpDI8RkDGnIqvF/qs+t+dy6y8Wlz1GnTGGyQblf5mOZcY+D23Z0OlzE6NrQRrivdAfLyfuqit+5kZI5D9nvtOD/Go0Q81pnawZZfv20S/RgxDesC2RdGDWazWVxcXMRkMomzs7OSXlP6zrcG1WRwdyoBZQEclWfIyVAK/esiOT4k34VBY7TuOj6uNRDcdg03YpkDojEj4MgEpvb9fVLNya054H5eRpucn80fgb0fQ5CjmnHxpPiDDj6vwTS8fmuTc5dFXc/7UnNM6LgR3FBRqj9M/fPJ5OTZy8vL+I//8T+m5V5vQs+ePYsf+7EfK/X33MUqovmsjdpY0cGg06bx1l7uo9Go7BojY5ItqI2IAm61C5gD6/dNmS7IAhB0NniePtccDHe4M4dkkzY6iCewzgIKBFi6BsFfxN1iXoE8t4d0PBh0I78zA5Y5CNm4MKvo2Z0syFGz1ZnDUVvonZVJOQ/4fdv+/3+NqN+8FNsdXY80c7dNHSe9zfUQ3PnLsyTkLW+Xy1sWgCI/MqvsLx4rZ1rywsyYvivKrywEHxQnJ2M+n9+TB8/A8X8BaGYO1S7KZUQzy+ggPZO9iDxQm5VMEYv6gm/KPq+ZYWMeo/cssO+ORmZv2R/O8Tr6WtBtNtD6nZ110KQOEARrYH2ieDwHk0ZXipllV1L2WuSqxVJKwc1ms/jyyy/j7Owszs/P4+XLl42HsFxdXRXH4vj4OI6Pj+Pk5KSk6l68eBFnZ2dFoDSZWqx0dHRUHA0J97e+9a2vYxqqJAaOqJdqObPx3AwQZ0xeu3fbcbouy8soVJmDs01UA64EUBH318HQSdXxmVPB36hcBMI0bpkCIYkHGBFfLpeNh4sR8LJsSrt5HBwclDlim9l2T7PXMhlqk46n3KutUnY0jjpPBkiZRq+r7XQ6jRKlt0mr1evIGrcvjYgSwPB0u87xMXFQoP+Gw2GsVqv46KOPIiLiu77ru0opwcXFRZnHbveulObm5qboqYODgzg6OiolCdtEBOfMRNMJJQ+Rv9uuSUPo+8nzGH12ch3HzDpBNQFCRHPnHH/GkrIZ+l0LoiOibBpAJ5E2RHImviCPsY/U57x3FnXlK5NFByYEQV4SxW3aJX9y9GsLvTNdWJvL/5dJc6tnOHS73bJQW08B5xO+B4NBY2MLZTMiosF/DGQItE8mk1JKquAp16yRMsBJmSJfSkdTVmijlEHXblGHh4dxeHjY0OnCYXQ2FotFnJ2d3asOYeme2uYbbaxWq6KjuYuiZ2JkX1l2FRH3jnFw3hagiLi/fS31ye3tbdm2WLhUm4hQx+g6LDWuYQfXoRoXx2TEYMTSmTO2Ef9udJTd/KFCnykwvvux6gQNUK0dDkDdO6SXz7IFphAlYNq67Pnz53FxcRGXl5dloZGeDaABl5NxcnIST58+LTslaCKkeOVM9Pv9GI1GcXR0VCKRAnfbaPwzyubLHUCRGxCfs015iCUUft9tdDRqPK33WpvbxrbtWAcDEc3ntVCGsmtRcVL5CEhIEbHkSPKm9QBusBzsZNEb5xs6SmqXg5wswhJxJ7+sW1b2jnLPdRZvkzRW7rirfw7svN8ZGNR/EVH0zWg0ivl8HqenpyW7OpvNGqBXYxERMZ/Py04021YDXwtE6TPn2Mcr0wUcc71nGQzXVTXdRaCfRf1EdIpF5DGfcxlrORyr1ereehk65RwD9VPARmVTDhAyWVyX1cnmxwFbBuCYrfBF3m0ZDJ9r3veRmkTwrDUurNFnxiEiGguouT6DDrych4gmqOT1+YC+TG74nhHnknzLYAKvQd2nY1UVwuoPtVHnqv+SQbZXDpVndDSe7oBw90Q6JL7IPtPXlJG2carJFvV4lhX0rIs7N1mWsIYfvJ1+XQZ4WE6mMWGmah09yMl404iCA059rgFTpsczJ0PESRcJGGmSGMHRNpny/HW8nuT4e7/3e3F+fh6/8zu/U3Yd0ELLk5OTAibkAX/00Ufx9OnT+PDDD0s99GAwiOFwWIRCi8N7vV4cHh7GkydP4uDgoGy3dnV1FYPB4I3G9X2Qz8VDecLnPeON7H6Zt/2dYpBqvN7W/qzfLg98p1LwCAVlydsgRa4shkiyExEl6sqIGFOuOiYDy1SCOo/H+3oPV27sn0dSlRZfrVbF6KqcUan2nZ2dODg4KDKndVFvmxiB9syFAztRG/DjnGvbxKdPn0a3241PP/00bm5u4vLystQra0xYTiADwBrnbaEs0MR+ExBFNHehqtmRmuPmjm8bWKINchDErCrbyVIN/a9sEgGO+IH7/KtWvdPplIdsESxIBmTDvNbdM5ci73/m5GZZDHfi6VBkzgUzGNyqVg4Hn+vA8jKSg07Sm2KO/5tIPKI1GRFRtp7lA341n9n25P1+v4w/dS/B5nK5LBkDPfRNmQXXSRllgSSR+NX5y48hcFUgttfrxWw2K7vmqQyKW3nTXnQ6naLnDw4OGqVP6iezHDqeZfTuvNfWJogoI20YiXLl2QsGiqRTvOyQOsl1JYN0tflhWzMMwut6myKi4Si+9UyGg8FNow+1SAWZkIznivL/Y+/NY2XLrvLwdeoONd7hDd393A3uthsbg/OHEzB2wNgkhBgEGQjQMQnQNgESCYxQyADEYOwEYkxQQJBA4A+QjJSJQIgCZkgwshSDBGEIsWVMPOOe3njvreHWHer8/ni/b9/vfHetfU7dd/u9Ml1LKlXVGfbZw9prfWvY+zQBkphg2inoEJTLi6HgFbh165Zdu3bNbty4YR/+8Idtd3fXnnrqqeQFuP/+++2+++6zF73oRamuu7u7VpalDQYD29rasosXL1bCfb1eL713YDgc2nA4rKRpdbtd29zcNLPbzHsvIhmexxS/deKb+espmHIGQBMwnSP2Osx7770ij+894Ytz0X8dI503ZlXPJ4wK/s+Cw4swqFDR52hUAcqJlRTay6F1TaPC/aoQGAjheRC+nGerHlPecx+pJpzfjm1fNzY2rN/vp7UJz4ZR7wE5Fsh8nY6Lgl/wOoPbVuv2AvNWq2UPPvhgemMv3gA8Ho8TGEF5WAiJZ4zH43Nv91nJ8/ZxP7DijIw0j1Su5YwI7159Pt8DpQpgo1EpTVtQIwMfrgsAEIx8lMveS76WARBvict96bXZ4zuQp4c5QsOeVcwxzEFe2M0bLuhi75wBEclxnIezQM+hT9DHXpoLyw0Fgvzx5uiiEHiGI7eTycTW19eTDEBaJPqEjYvDw8OUhcHGCFIA2UmBnaY6nU6SKShXI9Zmp3kH8gbzgIG88p168EE6R4GdUFcsdvciZqgn1st6bwMHWOcoKUcydF5D12lEktuhzj9uD/cPn+c5pXNPI4I8h9R5wuXnDD2uC56BueLNUb6OjTTwAaeO5WguIwOAxDM06u7h/7g3B7iaKhW+T61EXoDNAqnVaiVreGdnx65du2ZXr161J5980vb29uzatWsptWlzc9Puv/9+e/TRRxMjXb16Na3NGAwGKZUKhOuQJsX5bAhdwjuANJS7Sdy3uf7V8fOMC70e14HqeKRO+Xjgmv8vmkLwDDcz37jW43qsjjwvhPZZro4qjNSLCmKgw8Ic6VJmlrztnGLljQ8bLgqwcY/mwgIYaBiZUwb4hXt4PtZcweDv9/vJ2fBs8A3aoBGMOkDbZB62Wq0U/bx48aLt7e3Z5cuX7erVq5UIBis4pBQg3eq8FrqfB2H81aDifvDAMVM0/5v0pz4reiaeAyDKiz1V0aNdzOPspVfdht8a9eJ7MGZs+GgKUk6Gan8qRY4Q9q5G6VFs9HPkQlM8tJ5q4NTpF/SPto/TXAAqdftUGELskGBgHfXfIhH4AW0qy7LywkMYdMfHx5VUH06VYgNZDQazEweTRqYgN1Cm8rtnrCrfMO5TmZ/jYb6eN05g4wPzhvUSjCxOkdXUMMUPOge1bWz4qJHBxhvGKdLn3vyK5p03z+v0hRozyuNq6KAsb25iLDFOjAO0D3J0prwBDxjlFECdQucO1vBtHWDSMngFPu49PDy01dXVJGiKorC9vT3b2dmxj370o/aJT3zCnn76afvoRz+atgpbWVlJRsbly5ftoYceSozKYUqE2TC5B4NBRVFgj3SEkgGOptNpGqR7IeSa9qt3PTOlnmeKlF/u2QyUPYZfdNJ6R/07j6HBCkbL5r7i67x6cf24fChcNhr0Oo4+sJGBcwjTwysLzyxHE7WtHg/BOMA9vHAUaReTySSlRnEqBuqAeuDFd4hebGxspDn5bJE6M5S81CgvuuQRjKMHHnggjftoNLJ2u51kG4fM+T0hx8fHz9rC97OSGpxm1YiQ2elotse/EUVglsvR61SJa5oWG6lQ/pgLytuYJwzSeNGtggf2MKNfGKgDLB4eHlbuPytpegV0MPSoGhaYawDuSK2J3krMC71zINIzvjyZyARQiD6BkQFgWZZl2vLTA3NaB+6DRSR44zmagbeAj0YjW1tbs62trSQD2+12widIe2KMZVbldXZMjEYjK4rCer1ecpR2u91TcgvkGZAcqUbfeyl7fL+OjxoqmD+Qr9AL/H4MdjAxlmQ96YFjjqJzO/g87mWZrbo5MjRQNvhdjQn+z1tAcyoc0iO5Dvzh8aiTDWxg6Hiykxzf6Ft2DmpKWURzb2EbWYJKkYERKQhPAHiGS65sCHacg0GBdwGMx+P0/Js3b9ru7q7duHHDbt68aTs7OzYejyvbXppZWkw6HA5P7ffsWaR4tjehILyLoki7wRRF0Tjs9GxRTgFExkPOko7IK0+v1wlaZ5Dw9yJQztjyBKme9+7Db/BQNEdUaGj/5Oqm3ietq3o9PEHJuZv8PETycnzj1QvzmbdtPD4+ruR84/kAHWxYQPCy97UpQL0Tyskwb4y8PvGAT1EU6YV+m5ubdvHiRbtw4YLt7+9bv99PXkjcg7aizxbJSFeAa+YbHQpAvXs8I6Sp3GoyT9Qg1IgGR884CoFnMtDmcpjHcY3HFxEI88By1Havn3ku8JyO5nZuobdGMKK0JO1nb+y8euo16HuAb/bas4ziNtX1nz53UYgBLvPSbFbdehaAG9dy/yC9CH3jyUGWFfqCPgB8byvsCBuygcAYh53J3pyLeIYNBJVlXKYHgD1DFsTzRvUU8xt/c/958kPll+py7SM95q3v8CKnnqzw+lLHy8MSOg58PcsDNarq6Ey7S+lEbQIcwCAcduGy0BCz06kEORCs1ipbhTg2Go2StwWh3evXr9vu7q59/OMft6tXr9rNmzdtPB4njxEbI+vr6/bHf/zHCcAgNYNTQvi/ek/MTrxSvFAL7UNaw90kbyyZPObJAf66MiOAEAGfJsoS9VwkIyOinFHhnfOujeaaB4IiQ8MrE/8Z0APQmp1eq6EApCiKivEMjwvmArww7EHyeIhBF8rmFxLBQwoPPYwMM0veu83NzeTdxPnRaFTZylHfG3MepH3kGRqqpDxQGCn/sixT/XnHlKtXr1qr1Uo74+3t7VX6BWXDC70oxB4xT6mbVfk0AqBMkRzwwKoH6HNyhBUqjGZ4UPHb7MSDq0CJwZYCGi8lArqSn6uAuUnbvb5QHvPADc9fTYlCVJ4Xe/OubnAGRClJnhyL/jMoxn8Gz5jX2FYbkR51fKjhE3l6F8kQB3HqJ+8mhbUZ4/HY1tfXkzGAPtIX8vHiYc/Ihxcd3+12246Pj63f71ci06hTBKRZrysPcGSby1DvOf9Ww5LvR994jl6e055hw9cxsUHDOlWxxjwyCNcrHlTnnvIsY+Ioy0cjGZ4MUr7meqhe4vJZRkHPR1HmiBobGaq0uDKeZZsDQ5r6gU7IVVqtWv3GeaRwFEVRSZPCtRCEu7u7KbyLEBQWhMJiPzo6sieeeCIZKXjPxWAwSO8JgOXPRga8CmASTAR+M/hkMkm/73autBqJdQrLMy6aMNc89eFnefyj4885lItkZKgn08z3zNQZeR5pGToHVTBG9/NvjdqZWVImEbjhnSYQQoViAsCAMoOCK4oiGe+RUEMZMCQYxGC3E5xnAwflQRFj/qLe2Fv+6Ogo7TT1d//u301pV+xFBoDhXN6cIsJGD71erzKuyhO4JzIAeY4xCPQUBeq3sbFh999/v5Xl7XVikFmTyaSyqI8974tCGDsGO7mUQM+IYzmh0U9PJujc0TL42d6z9H7lPb7P7CRXm8cuAvc8DzVlkHmdDfbIOPJ4kNuqMgjPZtDDGy/o+gs2JmBc6GLvJmseIr3jHee5w2svYFxwrr6uG2EDw4tqNOm/e0kcrYGhambpN0cesPsS8Ihu3cr3eg4P9NfBwYGtr6/b8fGxbWxsmJmlPoax4Bka+A1+V2PO43FPDnplsV6DYdFqtVxe88rysIIXUVFdyhuYcL3UWG9KakhhvnmbE3BbovnO17BRhnpG8oC/uRz9rQYQj0cT7DVXupR2qoJ9D/zwPRhAD+x4AilSFExoKHs+0QlQtHgmFntDOHJ6Ae86wy+0un79enoZzMWLF+3y5ct25coV6/f71u1203O5vrrdGAMXDBS/mOZeeBgjJjsv0nFXxveuw7nIwNDyFtHIqPN0MEUCIJpnWi73FQvHXJ94xg1+s7eCgQyEIfM35hx/zE485nwvthPMCU0GU/Ca6ku+eI0Bp0mxp0lfaHd8fJycDGz4vOpVr7LxeJzWdUBxArD0er0KeFGAjn6GQRMtJvfa6imMOgXGytbM0s4pFy5csKOjI9ve3rbDw0Pb3d1NhtMiGxnMTxG45GOefgDI8LzSnkJWno8MDS6/Tj9x+hTfg9/et5avUQwYr+zdZR2jGwto+3Jt1n5SoKO/GaSzoaG7SnGkw0uV4rFkMIT/HimOQNuhTzlFit8DoeldCkJ1LnkgeJGIxxt8gfnDzp3pdJqiHWxkcOoQxiUyylmej0YjM7OUKo4twFutVtoRk8vRflS9geP8LE+u5vQ5Gxqs65pgRz2mOpOf7xkZEWZqwj+eLGd+5AhiFJXhvqrTNfrcSLZG+APfnixjHmpCc6dLcSM8BqkDTZHhgMp7AoiZCNeqkIUQHI1GSRAyAyJVSbcfxP75ZpYEJL739/dtd3fXVlZW7Pr16/bQQw9Zq9Wy5z3veenleqg/Cy60AztOAewA8BweHtrOzk4SzIuk/BWk5iZrNKHqLPwciPbKZsbGpMfbjHknkUUgNnpz/eCF5ZXnvXK9ez0jZB7DC/yLCAXWMJnZqRQnNpB5XjLQQl1xLYfYGZSpJ40VJhsXSAkAeEZd8L2ysmLT6dRarVbarhFAhNcjcMQRwpx3o1EPaQTMMUd0a1JvlyBWEJ4ym4cYLCE97MqVK7a+vm5PPfWUzWYz293dTXIORiNvTLEoxDv/mcVeTHyzYtZvgPKczMF14Fv+jfPeGHF6idaDDTiWQwxQOGKjwMLTdbwlq5mlRcxsZHjb4XImAAMDNlRYHqk+VU8lO8NgXLCDDnMSDji8n4bfF+IZOHWGhUccwcBOUpwmhb5Qo4c3jVDD55OJctuHInJZlidb62O3S5ZJZnYq64JTWNmRgnHHy4ix0Q36cWNjo2LkmVUjgxzd5nnCwBQ6zNsko4lsRJlwNEWAPNKN7CDwdK13L+7XecOfyCHB97P84ihGFHHjdvHuYZ78VGOEn+eRGiHcb2ogmlWjhE0dV2eKZHgWE1c0Osb3e8KuiTWK496z2QsK0MFGBl7cxaCIdytAB2KHKQhWPA/RD7OTcB8zC4gVD+rLntfpdGrj8di19O82RWD2LHXKGR9cZh0IVktc+UK91osEnjzgkLuO/0f3ROOhAg/XQvhqGV5ZbMSjTBaauhMH8yyEInvWGEzAaIHCRyRPjRFtj+cFjdrAIEujKip0YUgxv2Cu8sJGVs6eocj3eIaFZ1w0mVf8HH0m9y3Lr06nY71ezwaDQXo/D+qtY7JIxGOEb0+mM2BWfo/6Kzdf+PnKR8xLHkDW5/KYepEMPsZl65goAOe6Ym0Gz0MvVVR1qB7X9vK16kXV1A01ODTKGEUwuB25NvK48Tcf5znH6UOYq2ooRaAtokWbH0yRbkCfwlGJd+Zg50pOqcP1LB/BE548hqwsits72GEHL7zcjrfHVn3izTOus84Fr13afk8PKCbFOZXBUX961zQB49yPHn6NjNlIx+YwsNY5+ug13jPr2uX1ZU5HcxQrR2eOZJwVGOcMDQ4BqleJvTSeMuJ8UeRx43nK1FDOa2trKe0Jb5c8ODiwW7du2a1bt1I5EFTIC4eSR4jWAy54ri7uQRnIE+c23ktqCoTmLfNOrmOAwUqSw+UAVYtCLAABvsG78GoqCNB78dsDQAqsMG/Agxzl4zI50pB7lpmdEoBquMCjziAHnldWOgAqw+HQyrKsLFput9sVQY92aIoD6g2D3ktNUcAEkIF6YStGvgfPZUcDohfs/eO+Qj/Bo6prNxgI8dzOKT1PCXhGDY8JDLuiKKzb7drx8bHdd999NplM7OrVq3br1q0kt5gPz2tenwexZ77OwIiMT9YH6uiJ+pnLw/h4IMW7R+eFmblyn8cbRjV71NVY1PZ69VfjWUFk1F+RDOH+5EXeCtI5PQq6FWmGw+EwOd44/ZfHQXmZdbsSG2/8jbbyxgftdju9bM7Mkl7VN45zn/9ZIO4byH3glna7bbPZzDY2Nk6tJ1P5OpvNKutXQVjXVZZligiZWerPVqtlBwcHaT0qyz7VIWZV8Iqx1/O65oF52TMw9Bw/N3L24Hqd5wqgNVKO3xo9ZTmgstnjN2/u8VyrMzK4HM9xxYaT6pQmvK/yI7qGZUNTfXJH78loei5XGQaSnsCss9i8ycPPLYqi8i4L9joyUOh2u9ZqtSoeHE6/AsjB/vyj0SgZCuq5ZOaFoEMbIRi4rp/92Z9tDz/8cDJYxuOxvf/977cnnnhinmGZm1S550KMTShnhWs5dZPJezb610tTWRRiHvUEIHsyc0aFfisYYlIApopcPQ58LnpW5IFnQQilAzCl90DY8g5RMC5wL5fngRSMN0CF2YlBw95XXvCtigjXm50YQdxGlgssV3hsIC9arVbFsNA0KTUwdI4pz9cJduYVBaRlWab1IxcvXrTd3V3b2NhIb+vF8xmMLArlPJxen/Ac8GSHZ4TwOOp9GBeeK2qQebzp1YnnGZ/TOqjOyil2TwbrvPDAOj9T28vP4fboWgwGErw+CkYGPrwOg9PKdDyVtC0qB7mvWG+zkYF0KQbZHFHJpUcpXyg1BU93i9BXrANQR8YUo9HIWq2W7ezspBQiNubRF7zehnWn6laM8Wg0Sn2KPh8MBimCwu8oUaBrdjL3uP74r+d1vvA3rvV+63U4z3OTMVpUrsp+Bf9qmKvR4OkwTwdoeUyegRTxsdfmpnjNu8+btypP0P6muGtuI0MFZ3SN0jyGBgt5s9NbdGnn6sDyRCyKIgmlXq+XrO6Dg4MkxLDAE1u28UKqbrdbySvHezNgZPAWcczA7A31LF0Wgi95yUvspS99qc1mM9vf30/v7njmmWfCPq37n6NIqOu5ujLVIOR7vGc0LTcHuBjwac7polHOmNBzqlz1erMqiNE+Ut73wBP6jqMrXv0iTwnuZZDAERRv3GCMcHrFysrKKRAQATmMNecYc5oiQAa/2TYyMti44P5gTxwLdTW8+PmQG9EaDDXOvDHjY3Uy0wMWZVkmxb65uWkbGxvW7/fTVtsAGgwsFoUg41nhRwBC+8ED56oEI6OFo3NsaEAXqIHuGS9MuI7TmnANy3++1jNivDI9w4AplxLCz2GDTucadBJ4JDIydA6rgcGgi8fJq5tn/ETyxkuR4jSpJm8a96gOwywScRTW06XoezgW9vb2KjtBedcXRVGRwYpbeB0HG26dTsfKsrTt7W0zs+T4QRk6dxQv4rnR/PT4Ra+bl5ifmoD3SE5HBoc6+LxopzdP9X7UNRf51j5p0u7ceZVB0RhoPzDeqKO5jQxmGA9QRg9tUnlUnBePwfPIQEEVAA8qg30Iqa2tLev1enbp0qV0HvvJY5ErnrG6umpbW1tWFEWy0LF1ZrvdtoODA3vqqafS1n3dbjd9IARRLyw844Vow+HQ9vf3bTgcVjwKAGpY6Prpn/7p9rznPS+1syzLyj7lul0owtUAXaw8PCDJaS1NGLaOcsL8PMpVL4vmmy4qRUYDH9f/uYmr93hCEgRlwgaFWTX1UAG9Rok45A4lx1tz4gOwC6DFABJ12d/ft06nY0VxO80HxgODeF5QxnMYkQw4BNB28DovmFV5pPJAx8DjJW4Dp2vwIl8v75kJfRNFoSJQzePMv1EOokbHx8dJ5mxubtrly5ftUz/1U21nZ8eKoqiAwhzguhfUxKjyviPCed7VTxdGewYDGxxRmoXep3Xh8QFhrHjsOX2Nty33xl55OHpuFM3AeQUEanSqDmXjAusYEYUcDofpjdDQU7wF9J2CQJ2TnGnAO75BhnAEA/XUN43/WSBti66hwLjt7e0lhyjwQqfTObXWBu9BQj+BID/X1tZsNjtJp8LOfvxS41arZVtbWzYej+3ChQvW6/XswoULKYXZk8GcioR5AdkN414dNZEhjvbzvPB0qBq0rJdU/noGMvqXI5xclmd4aMoU6x5vbNkJoVF3doZFRpyXBcR9mHMCetg9h+EZa6Nf6ujc06Wi69k4yZXHAJmFqAIx3KedyooFAwvGxzoMCHks4taQIQSamaWIBr9kbDQapYmChZe85SUbGdjRAYIbuaM4hvYCNODc6uqqDQaDSht5NyoYJryLlnootM+bKnEP/ETMWHctP68p3yh4Rnm60HaeMu8W1QlFfEeGB5fDvyNgkyvbGwf1hip/eB8VbPjGPIUQA9+xYOTnMIhhYcXAghd0omw80zMkeP5zxFOVTy7a4KU3sWJgg6LOw6T9eqc8Gj2HgW9RFElmIaIxGo0SWFhE0MU6IcevOTmlvM6AmuUqP5MVM1/P4+8Zjp6uieRp7sORRO4HJT3P0cfoebhe+5nlkaZ7sPHEYJR3keHd3ryF3k0ATBPSflKnB0cxFDizt73O4OE5qb8XkZhHPdDMeMPMbDQaVXbd0nFS/a06gA08NlDhKDIz29nZsbIsE55ClIMdPpGcjCKqs9ms4tRSGe+RNwdBagDUUVSWp1tZrkQRJp5zKuu8ZzeVIVH7lC8wjxR/R1gO356M9Qyypv3a2MjwHlR3PZPXQGUiLZM7FczM9zCzFsXJNoZInwA46HQ6yROKPfvNLIF+EJgB+0FvbGxYt9u1/f39tBD88PDQnnnmGVtZWbGnn37a1tfXk6GBlCvUj9/OiTrCQzQejysLVIuiSAIdC+pwLe5nLxOu5TCxWpnRuOQUtzdmPEaeV+ys4CUn4FXwsZeF12Hk2nqviUEJ/nugUwUy84wKKgXvZr5QUtJ5o3NH78FzvF1suJ687S34W40MBjacdsFKDAY7xhZG/GQySXMD9axTYmijepbVm6TRDS4XKVSQIxoFAXHaTzTOHjD0xqbpf45owBDDOzMODg7smWeesaOjI3v66afNbPHe9g1i2eGNp/YXp1Z54N3sxDPIAFojeQyoeS4owI3mBfMh10/PczQjmr+R4veAgP7W5+k1LLMVZKqBAcDOugXrA7FlLV5Ky9vEe2l40byMSMEbGxdwDmLdJANnfTGgpks1eW4O+C0KIfKg6cHgwaK4bYRirQzkAhyjPFbsgGSHLspE3wO/mFnCPcfHxykToyxL29vbs9FoZKPRyDY3N60oCuv3+2ZmSU+z4a6GLviOo9deRMMsH+n1jvOz0C5+pl4XyWYF3+AZlR3oQ8ZHLH9YXuA8l8nn2EHCDi70Ed/P48nPgbGmhqXXf6qnoj5G27ltTWjuLWzrztWBRe5YPm5WzT2EUmSPtVcHFeiYIGVZVixyDhmVZVl5Q6jmlGKiwWDArg0QtgBJk8kk1Q8ACe/GMDsJc7IHFgOElCeAtLI8yV3HDhlaLxYKzOSeEqmjJpPKG2d8q4Gh49zk2RHfeMzOXm5O9Vq0NBBQboLmgBRT1Kee9wG8rJ56796ov9RIZWXthW1RHgM7PE/BFI8X534j+saCFMZKWZbW6XRSCoCmb9WFvUGqsDyAygaV/mblws9Tj7T3bFUmHiD1KHccdYH8YIOo2+3a5uamjUYjGwwGKfKK+i4KeX3ifecMDI/XcS2Dei5DnSTeAmEP5PDzPL5g8OGRVxdPFkR61rue+4p/q3xWo8v7PZudvN0b4B26CKlRvJNUtLj6TgA7jytkPVKl4CCEbNCX/2l9tFzuu5xcXUSDA0ZGWZZJ/7FRwPIY2GI4HJqZ2c2bNysOCY42K58w1kIGCJ4JeQOjgBeDm1na1GMymdjx8XFy1GLTHe5zfg7PITbKI0PDc7Dpf08Gs0HAc8mTLyrn+Zg3b1RueDqDy9P7Ir3g6SKUA4cd1jeqzIQe1Qi2p/s9nIA2qGNCsUET59VckYzcf++cN9iRkcDXsmcJHZgDR2xkcPm63z2Dcd5RBt4QBgTsMYd3AM+AkIVHB7nREI7aJoR58bZMsxPvIq8/0TUXbGR4zM3Ko4mBkQO4HiM2Be9nBfmegvWuwUTj9RjqnVw08oQojuu3ClKP9P7cGHkgTIWkV7bHXzwXvfoqD4JYKHK9OMVBvTC8kHo6ndpsNktzRqMqkRD3AE8E8FkpqNcoArBoswcYWX6oPIuUYwR4ov8KaCEfsTC+2+2mdKnBYJDSG3IAeJFIgT3zsh7zIgkANDoGfB/3vTptQDr+yiOR4ejxoPdsnIsAsR7TduaIn696IjIyOMrIKVJsYOzv758C9iqDvfni1c9rD/czdKYaGXD26cJzdsB5eiGSr3x8EQ0MM0vRYYBLBeyekQGDutfrJRwV4Qlv/Dhdam1trbIODO8SgzFalqXt7+9bt9tN/5EFYnayGyDLbNZPZlVDwJP3Wj/+r6SGAmM/Lcf7qD7kYxoRwacoTta4RDJM5yQbPUw52QPC/XimykfIRt78o6kOUJmbw59NyjvTmgwd2DsFetEAoxMx0IgEeMIJhgQzMBQvvjFJURbug9WOwWImx0KzdrudBO6tW7dsPB7btWvXbDQa2XA4tPF4XAFkPOjY6YVTvjxrOMpVx7U4DwOFF36rh65uXDzF5Qnns4xtpETq6qIK0MzcNTUaWlwkQ4MFgaZFsBDFsUgp50CoKkYdcwVALBijcvk4by9rZqd4N5qrZXnyHgt8VMAh7clboMllY23TxsZGAj/sScZzWWlqW9gI8AQ3vjVqweT1pzcOTFA63jH1mEUAkvskB4AgH1H/brdr29vbaS97bDkJD/SiUB0Y5fHJAYJc+crjHMngewFO2eED4lQ6jkijLI9vNNLsGb7nJbOi8nhOajRcgQLSevlt2cPh0A4ODmxvb69iZICXckA+R+oUAGEeQlcjRarX6yWvuG6lq2lSHuDxZNUnG/G4qSwElllfX09z/ODgIC3ON7NkrLFhhtQez7g2swregiwuyzJtIsGpdWVZppcL9/t929nZse3tbRsMBnb58uWUTo55w/gKbWDHDc6zzFS5y3POk50K6rl9msbFaUh8PWMqkIfdzKziNEPfqAxCmfwOGq89uBf1w/hx5ALlmFmaj/yuKm4r153rHM0J1ousf3A/ZApvXpGjM0cyQHfqAdBGaJnsaYkUvQIPMKnn+VYQz14pTdEyq75dFWDX7PbERW4i56Zy5AV101Qsbrf34XZpv+AZ/MkZFh5I1b736LyFsVc/BQo8PjzJFLjinkUzMMxOR2d0nL3zqgj5vIKTSLAyRc/j+5TP9F72DJpVQ8wev3qeIq2ngpso+ob5zC+70/UQamB4oFMNCv14IXnuA+4nJa//uc8VTOUUYd1Y1s1TnjMAaHCMwDhkQ2wRyOt3kI6RBzDw2ywvq9BuLxKSkz88DwB4WH6zAubjWo56jJUv6uRvU/2q8zLXHgYK7OFmkMov3/N2bfLmbJ3h5xlbfD+nNyOSwemxANjROkQtL+rTTzbienNKGM8R9B3GB/0zGo1Sarimt0V8ybKR9S6nabGxCpC7t7eXHLXAPd1u12azkx2kFNR781uNT8Z0nqz3sKPKb55HmNPcTnX8efLZew5jSG+tID+fdaWm9qlzkvuet05nRwlHIFutVmXdooeP0W5PN82j71iWnGu6VEQ5BdjkXv72PK48EBCK6nlkAAKGBECBoAJhEvKuFdgST0ELBgXXmN3u4O3tbZtMJtbtdu3mzZvW7Xbtxo0byePjgRiz6vaK3GbtE08Boz68KC/yKHmCA2VEiiAHcM+LvHp6BhSEEQw7hMt561qdKItC3L9eeNPjec+AQBs1n5XP8xzBcRYk7LHQMVehpmUChKBM9iopOJnNZskYiHJAeXwZtOEcz3uMuwIn1A3P53VLXJ4CUo58eQBWx4kFsReV8OaP3hcBYC+iEY0R92FUHhQL5ka73bbBYGDT6dQ2NzdtZ2fHOp1O2jJ7UYidBcr3CnI8WeiRGrxsVLEyZg+fGhGQsfgPryIre9yjkW+etxyFzxkcnvGHsj3gp233ZKhGxnl+oE7spEJ6LrZlR04/NiFh4yMXLWhiDHG91Zus29WCl9Eu1A31hLEROSs8ejb02rNN3DZeB2F2EnEws7QeFGtpYJBhLYtuN5yLtqHcoihSuey153tZDrfbbRsOhzYcDm0wGFir1bJ+v2/Hx8cpSoV1Gpweq/NeQTzLAzZQ9FroKxC3jyOPuIZlDPrX4xFPV/DchVyAnMkZGjAAOZLB16Jvut1uwqW8nTCO4eMZEPxiRDbUWEaiXapjGTeoDFJ80ITOLZKhwk4ViHePlh8pWh5MXuTCipoFMDNjJPy8iAYAnYbX1OoFUEAqB79kjBlUByXneVdLkicGKwpd4OaBqzoDw1NUHkVgvk5Ie8/xrGctUy17XYfh8Yxa5veaPEDE46GTFseUb/ANXlNBpdcp8fW5ueXV3fPGqMGhCwl5wSjGDPOT00dQPgtkLOxmQKk7cXBdAPy8hacsLHP9w23Va3L8lJsDOaCTMz4iQyNXD51jLLOQdrKxsZF2vTOzhTIy1LhWw1Dlbh3vsoJkWeIpSr4eOxWpQa/3qlxW76VnNGpdcoaG8rg+X3k5kvn8DIBBTgNjcMhpGwCm2K4dm49wOpLHjzqPvHHh+um9DB557QWnxmqEhdeERCDZqwPXd5F0Rh1h3rIu4bbCaMYCbehL8DV20dR0yRwPsgzG2gyeK6p3wU+4F6lWu7u7yQl1dHSUUq9QP85UUBzGY6XGAJOCaO4nnntcV8UdDLa96Bhfo7IK9WW5BaND5TM7P7gtjGu5D5E9gxdFo//YYMS4sv705CtjV3X0KU9wf3nzSq/J0bm8J0MBTQ70cGW58jp4OpE8ryx+e9GAujxrFrbM3GYn0Q5uD66B16DValXyxWFkcNlM6jWI+sZTSgrqNE1KFaEHrjzwqHXIKXJ9RiTUI0PGqx8f037JGRlNQPa9IuZFrZdnEJqd7ksWrmpgRICZie/zDIwc6FaQ5z2beVONDGxNy0YDRwhRLoMb3j3Ki1KiXxWosBcTipiNshw4rTNCIsCv/epdx2MWPd+TY/yciLy5xu1Hn2EL7n6/n1I8F8nI0EXb3C7mP8+DaBYbefj2QL4CM9SDUzkYGLAiRRngQ4+nvXmowIXBuspv7Qc9F/Ea10+NDET8vPrwHER6FNZesCecveeRblGZz3X3dDfLGo5itNvttAYDqX7wlueMjCakdeb7FkmHKLFn3OMX8B4v1OaUsrIsT60ZNfONWZz3jAysW1VAj7KwtgdzYjab2e7urpVlmRbts+efjQzeOIfLwDhFGzrg2Yod+ZzyiGIrBty6MB7kOTOVh1VusQ7l57Es8ZzneB4MtaOjo4qRgf7gNbpq5PA2/8orZqd3GlTDLKc3Vb7W0R2lSzVRiNE1HmCKrlfmAiOwMcGCjicIAwH2NrGQ5cXfbJnyczGBWLAhjWowGNjh4WHKfYTgZoZSj4syNZhJDQoIed75o+ngoq0MHCMwU8dUfI8KJX2Wp3C8MeWy8B915F1F9L0YqqgWSUGoADerhpdzgEKPc9u8vq8D0ArUIyHN5fOzI35R45wF12QySb8VAGEeYZ7x23o7nY5tbGwkzw12d+O3bHM5LKDNTu/WZmYplKyAlj1fXrg96ts6/ufrcvej/HlkYETcxxgPvFNgc3PTtra2bHt723q9XhqbRSBvDntyPHKMqIHGAIoBGcts3WSAAa4HYljWMs8DHJXlyTbpdVFz5h0G7Sr/tAxuF57hgUO0TVOj0G6tF4BIURSVtYXT6TS9MFZ3gOO+r5srXrv5fszp1dXVFG3r9XrW7/et2+1av9+3sixTCjLvbuWlSeaMNe9/NPcWTZ+YnQBQBuAAx2YnbUOfApCa3U6v0WgWy/VoXnAfIELCfIvyVF6hPLwdfDgcWqt1O2WKDQnMKZ43rdbJDoM8p9hphbnHKXZNo9FoP/QCR+e5/rhWdTnLAP5odAJtRHn4cNRGU449XkZZkOdmt99ZgvuLokhzgfUe+hUOWjN/+26vn9jI0DmuWPDcIxleZSKgGgHZpmV75XOZ7F1iZc3Myvd49VOwzx2G+7kOOkCs1LFuYDa7HRbEc+CBUCtahSIzMBs/3ndTo41/qwKsGx9V4Hyd9zsS1nXP8PoefcqCBZPTU8aLphCYH3mcIwPD61/m3yagV5/vffieHJD1jI3omZhrzHsc1QAxoMK4YzcSEFKgMI/Qb7wLHOoNJQXPGpevxrwaI6xA1ZmQ80hzX3jz15sz3M8RyIkMkiYU8QQrp06nU/EMLwo1NTL0eq8cjDOPpQJ19SIy74LHAAA0mhYZlzzmvHW5dx7E+iQCx56u8+SE6i/lfY3Iq1zBc9hJoC+0i2RWJJsiXc5lcEqJvg8D6yjZWaeLvb0IhjcXtd58rcdPXLdFIoBGxQ7arxyRw0v42JMezQ+vPJTJkUTPW+/pEo2SeZsGKI7CfdAPMCZQPo/38fFxMnyK4uQ1BzldqW1lrKXzO5L/2n9qZLCsV8zFc5C/cT23XcdD5wrazw7osjxZ6wEjRLMqIlmm46fH+V7VgU3ozOlSTR9QV04dQ3jE4Saz0y938eoZCUQIVrZsPSYDQ3K5qAO2uTWztEc1KxN+4R4Ykr3bmIDsjeVjPCGiKEYkWKPviHLAJxJwXhk6gXJgC8LDUzq8u4inSBbZ0GC+UU+rCgBPoUeCMzfRtVwVZp5wYV5VYMT1YP7ViB8UELxYGrUDYa6Nx+PkoUFKz9bWlrXbbev3+7axsWGdTsdms5l1Op1Kvim/GRzHxuOxmVnFIOf6o028oYB6w3CMtzhUwQpCHzAA4D6O5pE3D6K54f3XseQxVWXc7XZtMBjYxYsXbWNjY6EiGUwM7sBX3rzOyTBPLrG81DVE7K3DeMNBhA8MZZbDHrjnxeA5h47yg7dIVO/hbSK9eayAm8thB4Du0sbPxw5SvJhaZZYC79xY1BlQiLZhm9p+v2+dTsc2Nzet2+3a+vp6WhOCN0ojmsFZAvoMDxx55M1N5YVFInaqqjFpdhr/MHhmsM/4RUlBP/Mky3mch4xXJw7KAl/v7++n7XNxHc91baMH1Nnwx29gA6xROD4+eVcZO4n5t+oxfq8FiPWz6g6up85jlim8QQQTyuWXHGJcIG84XYvnIBbM9/v9StlFUVQWknOKsspRTxflDAyWy3x/0wgG6EyRDP19JyAvUsTRRGBi6487HYLfK88zRNjyBhDxrmFGYyZlgaf1VLDJYTLvGBsbqhQ9A4PBt5mdYoh5KRLYdUal9lcdYMJ1LFTYyOCXISrQVQNjkYyMqJ341rp74NQrM9dGT1A07RMGqviv/MztYsDB3rVIKGvdGRyB15Ezvre3l4DO8fFxxXCHEuHULy5P+4rlAoMR8BMbSqwUECVB+9RI4+dwJNUbi7oxqDMumswhr0yMEVJQBoNBet/AIhGPFSs0Pe6BAPwGMYAxO+05ZHDBjh+zk7Q6HjvwGY+xpqoqIOO54EVBIopSrVCWykntQ/aORtE4NpxRd+gW7NrEUYPcGgx+9rzEhj0v9EakDfMqt4WuzulIVjUl7rtFNzI8+czzBzKO+9nMKuDV7LT8jPoS5XP6DQAyG9haLvgL/MRvikeZ/JI+L0uDy8RcwzgxNjKzynbnamiwgcH6KUojZP0WjYXqQ/42O1lzws/zDDlvW1pORcP90FXodxhZ/E4NpUh21hnnIL7Ok8kRTlea28hoqvg8Rs2V3UQhK1gBw7Jg9UKLuB7nuAyOEmDxNnt8mEk0ouAJPp4YzFRQbLzjhxoZHMnQPD0WLMx4kSUe9V8TpvCMpEgAMWl/8UT0GNisqqghyHjrYVXWOaW3CKTGgtdv6h3gPmDiMdO0JOVrfrZSbszUyGF+9YSsgkKQtzaK26vPVEMDIG51ddUmk4kdHByk3OJut2sHBwfJ84nUFLMTZYa6oW953uA5DDx5LRYv/mUQqXLAkx2szFCHJuTJPFUsOq/1Wh0X9EdR3DbY8RKsra0tGwwGtre316hud4vUCPB+4zrlK1V2aiQAbLEBjOPsUAJQgiz1eIINFJ7P4DuuT8QHnqHA/Mqgi5+FOujc9wAEDEs11rT9DGSOj4/TS2YZ0IO8KDKe10SXaP9otBo7ScHQgByAkYFF6DCC1HHAfav9EtXPk7Xof2/B7L0mxRI5Q6AsT7bnh2PGrLqZjVeuls1RbeYhGIJIa9WoEogdt1jrA97COLHO8NK6OPLCv1ut1ql3pSA6wE4jxYs8RyNvPMA82u2Ng5bn6QiNGuIe1q3gOeZd7oMIG5VlaZ1OJ0X7PMeCZxAo39dhOm6rGl4q/3J0x1vY5q6fB9ie9XkMJPi5PFmQoqGADvXil+lhMNXY4OeAwXkhGiYRW9dRW7huuu5CoxbRZECZUKR6PAc25zE2mhgW+FYGzv3W6BNCoFA88EroxOHJsuiGBn6jnuxpxGT1wtNm9RGknOHG/xXMRspKFQRAmIJrPFtBHXtaACI8UIR5yGPdbrcT8IfwGo/HKSS/trZmOzs7ycBgMMaeMuYtridHPLnNaCeUHZTm+vp6Apy8GQSH7LnfVCHrPGvKp55R4R3TsYpAJyIZW1tbdv/99zeqw90iTyFG10XnVYlyX7Osh0xeWVlJaRzgM3yKoqhspQwPI/b0N4u9v5wqAd7gdAXUR+U0Pqx3MH9YDygw4f5Dmbgfc4n5nfl+NBrZ4eGh7e3t2d7eno1GI7t+/boNh0Pb3d1NutCLhigY8viOr9Wx4jbCAMaaIcwz6NHxeHxqK10GtNFz+FjdvGMdytGVRTMymDzZrWC3LMvKttWYA8qvXvo1Yw6W+3gGvw8JOgCg39vsZn9/31ZXV200GqVx3tjYyGIs3M+L1dnwYP2E+bu6upo2FcEcUmceyuAoJRPLDPSFGulqeCH9ie9howfr4NTphX7j9F3mV6Qx4lrUWdPMdPwjI5nnqRoyOWIni86npjhyrjUZTRWmJ2Ci8zlDpCgKGw6H7uvLGbSwUsCOT1tbW0kwc0cpaWdrmI2fhWthEPCOT97bUHP9oBNewR/f4xkR0XnuUyVVEBFxW5uQZwjoc/W3AlQeR97KVO/jybLIxobWU497QsvjD48XFGDUgdncOHoKhg0fBuxR3fGbUw447UCNDHjZsSYDufDT6bQihI+Pj5OgxW8G+awoFeQpnzEY5f7lvoQHl40olMntVb705Jn+9vpLqa6PvbGLxhb1Xltbs16vZxsbGzadTsOy7jbNY3yZ5ftODQv2Jqoy9+YZy352fqhhqQqe79UIejS++FYDCccBOLh8NSQVOKGuamQA9OkONvAsTyYTG41GNh6PU/SQ5b7KmTpwj+OevlJdDTCIqDV73Dm9hrMFWL/mZF0OT+h9rHs0xWhRyNNzqh+8fuZonPK+gvemdcBvTtvhOYCy8c1RKd2CmEE8A3+dV4qL+Jujkuz44nmvfafzCMf43sjQ4t/sMPSMDzwfBhkc4axTQTxmiG4wdo34QOtTh4nmkbk5vNhEP4HmSpfKFXhWoJfrjLIs7d3vfrd94hOfaFx+URT2GZ/xGfblX/7llegEmNSzBEH8enYoFXiyWAFB+CFnFB8vZ9SzltVLxBa6XoN+0BBa1HeeQdVEOXD9mgods+oaEK2PPtdrB4AQvFsIncOy11xN3DMPk99r4r7h8LDZiTCEx0lBMPOPgpLoGTnylAu+MSacSsKAG0IQz2MehWHIC/JgaLAiRBlYJ7C5uZnKhBcVYEfnm65jAmguihMPG0fAVMGoEOZ+0NA8e77h4TSzCtgEqEXfefMa9Yt4gY95RoaWpf9zjoz19XUbDAZ23333pTfwLgpFfeJdp3Ndj2mfsqFqZqdAOwC4zjXMQcwB6AIGJTxveW4yKKkz/sxODCAuA5EUM7PBYJBSXrR/NMXEzNL84/QLpBjhRWyIEIxGI7t165bduHHDdnZ27ObNm8nARx21rfPoEI8g5/EeDKwRwmc2m6W6TSaTtI0uIhm8cFjroLzjOUZ0DLiNkFVweiyakWHme6IjbMGGEvhXdyJiOafGihqXfJzXrHE0AuvqONqESEZR3HYWd7tdW1lZsfF4bK1WK/1HWarfeB2JRl/Y8Yy28LMxb1he4zf0Ejse0EaUFxkR2s+qC3huYhwQ1eS+9vrWzNLuUYzz+JrIwPDkod7jyc86YhnpzaMmsuDc06Wiya8D6ClNvR6WsL6pso7AbCgDDKCWttaZvVEAGVAGrBSU4TmywSF4Pu9Z4vitzOcxPdfP69Nc3+NcjiE8wZK7ru6Y18c6wTjFhoGppklFz8tNvHtFkSIEaX0VHDHP4rwnlLTMXNl15BmD+M0eJwXHDNpZ2LJXRuvDIV0V0lw2GxSoExv6KogZPAIgep5rXmwYySc2OnAdQvLRHI6UR0RNeViBcDRO6B/ml6K47XHEOzMWaZ6A6trtXR8pUZ03ChTAl5Dt+Pb6EjyEsuAIiBwnPHeVF3LGEZfLu8RAJyDKp3NEeYYjLuz1R928l+55Kb4RP0bGbBN+5+gmZD1SYrHVKtJD2OPNaczR3MrxtAecud8ZdHpRlUWmOj7jqHJZlqmf4TjRMqI5peXig3mDSAY7yjhSAVnNb2znyAZvuqHZC/itqUa4Fm3gOvE9PLcULDMvsdxsKrNZ16nuUD5l+cN14Hvq8Br3fRSxqJuzUXvqKGdoNKEzzaa6B9UBogh8NS2/jsCQDBCY4bh89QbgOl5IpEwaGRhsaHBUg1M61KDgCcR10bC891vbzL8jAMXnldlzFI0J+jgy3CIwhnvhQUJ+PoR8k/p4XoZ7TbwYigVIEyNBeU15U8uqUwbes3LkPY+3xfOUjYK4OiMDYIPTqdRYwT0c3eF+gddMIwGYa15fcP3Qz16b0G5VTpx2wOOg4NSbU/os7o+IF7yyuUx9Jo8fGx1ra2vW7/ft0qVLC7W7VE5hRXKpzsDgezHmAFgYU3YaRTKZ9YdurKH9z8YFGxvaHhA7E/i3gjFENXTr2ZzBwrJYdQ7KxToHrHngbTN57jYdPwW4SgziYVxgHQaMDERc+G3j0Xa6TPPKfQWJ6FcYF4ikL5qRoYDTMzDMqg4rNTKwzkw9/kwKnrV8fga/WwZyHbJX11LAgMR2tpPJxFZWVmw6nVaMDAXuzOM6V72XEusc0Cgzy2/MJw/4a3nRby/al6tTlEETjTfK4vs9x5x3r6cvvHFsWpdI5zWhc0uX4uv0d06RzlN2U4KQZYbljlLm1Xpg4R2H3HixqeddgbcIniEVkOqB1ciKMqamS3Hb1Fuuxor2s1IOgOYYJzdGXM8mBsLKykpa9Is3vmJnlLq6eMBxUYj7wPPAMTABqfBhAxn/vdC4/o9Al9bPUxye8ABQ5efhGPc/5/9y6Jgjb6o4MF8mk0nahk+9rpwqws/E1rbgI1aK3gugOOUFb5DX92SoEsA41QGuyCBURY3ycoqG5ZYHKrxx5XnvyQuz24Bga2vLer1eti33iuqMBlyjRhyTAi9P4YNXy7JM6ZgMzLzdi3j81SHEC6R1TvOYecd1TFVnYadDXOOldXjGDOYPR9Ohl7CLFMA8vMlolzoFPCDrjZ1XFwVGAPHdbtc6nU5KYYMMmE6naX0I6sVRHa/sJhQBQ9QJ61j4xZWL9NJKMzvF08yfiiVwvVn1re58H0e6QJ5OZXyi8xLlm1mSqZhXOIcxLMsyGZGrq6s2Ho9tZWUlLQqHoWdmFWPaW0+hc9AzPrUf+LeC9pwRwX2j/cT9wfOX+xnXcwQV12mddN2fjiPrN+4XnPMchCqjUJZm5+RklfcfstjTNR7dcbqU1yl3Qjx4ZwWPrNBZsbMiUADgGSFFcZKfzsSMrpNdIxtqVHjAE+1WJlegwm1QBZVTBh7Q9RSUJ0hQH+949Czc413PAuROwtSeoFgUajomIB53BvZm1RQ+vT76z3XI1Y2f6Z1nzyzXg+/VcfCErye8IWw5tZEXpuI4gwLcByGrW05yHTmKiMgH7ucUAvS3gqWovyNey8mS3FhEY5AbM/72nAt8DfoOc2xRyOOj3DV1So15lv9H/Mrpr+AfXpip5eG4yu87kcOok845NhAiWRz1lwfCoJM4ZUVTkXQcvPbNK2cZYHG6FOYs5imn0eTeiXEecj6qky5EXzTy+MvjPRC308wqb4vmRfYe5lDKYTzMpVbr9vpVM0vGBUeW2diNFvazfon0Cq7xoo9Rn+RwiLbbOx5dq2OjBgaXF+lH1e1R3zM2qKuX1z+qqzmKGj2/zsDQayI68+5SZ53wXqO8MptaSVE9edta/gZxmEsFGQtmgBoGwLyISr1GPHl4kRI/B8/F83i7NRX4Okl4DOr6pwnz5I41odx9Wk+0FVEM9mxBUPGEzYEEDh0ukpHBILcpqZBgYAMgnAOrSuqBipSEzjcVUnimesvZWOcoBhsCLHDZI4tz/E4YHIfCwY5SAIDskSuKIqXVgY+wd/hsNqu8JwDb2vJcnE6ntrKykryp8KBhC03Pu6X85vGcAkUYTSx3WLCrhzwaG09R8phw7rNei/4DgGqSBnOvyOtP5jXlO5XrzKsKtFl+sBebFTaDIfxXoKJzyaszn/MACXsdmbfwDNYhyKNH2hs/Q3WxGhZsYGMh9Wg0st3dXRuNRmlBtfIotyWSFdqeaCzRzxwl6PV6qS1Yg4GXcA6Hw7SBynQ6DcHzPKT9BMOCt0rv9XqVBemLaGSYnU4ZYmK5Y3bSTzDqdGMARLZwjFN/mLz+1mdjHvV6vcqaN05JPD6+/T6WsizT+3r6/X6qV6fTSXM8ivYqn3qGBT8P2EvrqlF3liF8TlPCUAeWzexE5jQ0ljU6Np4O1/kLg0KvUX3EY6rrYGDocdu8zATWVblx5vazrqujudOlFOTqMa2Q952jnBCfp65oPAN3r0NUkWjHepEMXdytC72Z0dXKxTOZWbitKlBzSo7vy/VVTlg3MeZ0Mmv9PIrOYWJE+1lrfSMjQz+LQixYlZoYZPitbdPIG0h/MzjDPSoYI/L43xsLjw/4egZRPK5cD6QwAXSxkQHwA8HZap0sKlTAifsYaKmR780/3KMhYwa1Ck7r+C6aY5FSUVnq9SnPPf3tRVT5w57wpvnAd4t0XkfXgHhc+B7mH71Xow4M6Nkg9hQteMzzCLJuASnPeO1jXanGp+pQD1A2mcP8bC9Vil+KFsmpuvK5LnoPt4NBEINdM3N3Z+QUqUjWeM/O1V2NUo5gIEVX38+0aEaGZ0TWzR2c4zmDdabtdjvxu+c4qZPv+MYHkWX0bbvdTusyIMs1ssyLv/Hmash5lck5uevJPzYydO5zW1WeaOqvrttQUlzE10G+6KL2Ot5lzKiyznNOqLHE8x79ietYZvLHG3M9pkZWNDc9uqP3ZHgGhirnpgZGpLjPAiDL8uTtwVE9PXCG3wBo7Lnl6znX24tmMJOr0cFt5bAVg0JPqXF9cgadts8DpJ7xF4HL6H+uT7V8vg+CSN/qzc9gYeGR9t8iGRlra2uVRWlNJ6JHDIIx/prPyb9VoDIQj8apru94LKIUQ74OQhJCViN0uJbb4RkZLLhVOKJ83p1EX9Cn6YpcP/QLPMQKJhmMoh5NFtyZVXeAYy+SkvK2zi0dL+1nDwDrOXjx8L1IC1rVY+nJCuZTzAGPn5UUeLD8joxejkC2Wq1T72ZAncF7EfjVcWADldsJ8IHfWjcFSk3lPrcfQH48HttwOLThcJiiGLwldB1F/e05hlAnNi4A3iHzj46ObDwep8XneEEgp0o1aWeuvvobc1cjGYiwfLJGMlgPKkWGLFKmwMuc4+/pklxdMC/NquspML95RzPMLyz4Ho/HaWOD6XRqRVGkVwboJijcHk82snGhDibwo64d9PoKDlCvX7RvdBzQp2i7Orhz48QyG3X3IuBqYLBeMrNKynFRFGkNB57DchbP5GPcRg8nqjHaZF6ey5qMnKFxJ3RW8Kgg1VNOufqpsgYT4FwTBR+d94woMAl7b7kuTQgMHXn1zjIeOcXP5+ctEwpIJ7sHCj7ZiBfameXBpB7XORRNfi5bwT6IhZKCfK6HzomId9jA4ZQSFTpQOrgeih1zwhPcKmABMtRJgfYi7M5eH5SrPBTxE/Mhe1h5zDzDzJvHTYStyiQtE9+aAsSkURkFGlx3vgdRIw+83SsCf/B7HTzw4HnvmH+47ShXZS5I7/eMDE2h4EiJGp5MqpA12qH19NqDNmHM1FBWQ8P7j2djDQbSkEajUTIwkJKUc+Lk5LyXxsGRScwnvHATxsXKykoyKPACQOw6FC3y5ufXReO88VZQBuOi1+ulNClsPAJjY5GMcSVtI/MPX+MRwCbvoIU5xFvH67xjkKoyG7qAx63VaqU0VKT9gYqiqOx0xjtNwSjRSAK3W7EIeI+NC36nihqXyJzgdmKO69xXXaWRP89JgnohkoA6IkLD0VLVKZoVg2foYnhEizqdjh0fH1u73bayLCubOEDW8wYX/FZxlMW4Vsc9mot1ERClc9ldqqmH5W5SBL7muZ8nFVukkQHhfZoQC1H2PjclT9HkFOFZSUFRrjw9h/5UBe5d98lqYJhVwYp6CczyBnidAafKhO/LjbeOl45jjiK+1iidB4IYPCqQBvH9ABncb1wWGxqIeGjeKZMXFtf+8cLG/GmivLl+TfqT265KE/WO7o3qx55KNioxVvOsEbobxJExjzy5y4A9Bzw9GaxOJgYAPGfVcNF+RFlMKn91npidADy+juvkGd7eLob8PE/uo68AWjBP9G3LWm5Ob3ht9eY5iD3CvB6g1WpV1ixGdcr1cST/cvVV4KiLvfk/ry1bdOI+4fHL4TQAbjOrRHEjL7snB/k48zjLbTwHKVpwNOF63QWQjUwPXym/KfDHfNHoIzttGHN4/Mu8xw4A7W/tU688TpfiaEPk8Na2eHgJMoqdtPzOKS6PI7L8QkDPycIOauUjnVt6X5NIaFF+MiO6JS1pSUta0pKWtKQlLWlJC0eLtRpwSUta0pKWtKQlLWlJS1rSJz0tjYwlLWlJS1rSkpa0pCUtaUnnSksjY0lLWtKSlrSkJS1pSUta0rnS0shY0pKWtKQlLWlJS1rSkpZ0rrQ0Mpa0pCUtaUlLWtKSlrSkJZ0rLY2MJS1pSUta0pKWtKQlLWlJ50pLI2NJS1rSkpa0pCUtaUlLWtK50tLIWNKSlrSkJS1pSUta0pKWdK60NDKWtKQlLWlJS1rSkpa0pCWdKy2NjCUtaUlLWtKSlrSkJS1pSedKSyNjSUta0pKWtKQlLWlJS1rSudLSyFjSkpb0Z4I+8pGPWFEU9jM/8zP3uipLWtKSlrSk5zC9/vWvt0ceeeReV+Oe09LIOAP9zM/8jBVF4X6+4zu+415Xb0lLOjf6oz/6I/vKr/xKe/jhh63T6dhDDz1kX/RFX2Q/+qM/eq+rtqQl/ZmhpU5Z0nONwPOdTsc+8YlPnDr/BV/wBfbn/tyfe9ae/8QTT9j3fu/32h/8wR88a89Yktnqva7AJzO99a1vtRe84AWVY8/mpFjSku4mvec977G/9Jf+kj3/+c+3b/zGb7QrV67Yxz/+cfvt3/5t+5Ef+RF74xvfeK+rWKGHH37YJpOJra2t3euqLGlJZ6KlTlnSc42m06m97W1vu+uOqyeeeMLe8pa32COPPGIve9nL7uqzn0u0NDLugL7kS77EPvuzP/uePHs0Glm/378nz17Sc4O+7/u+z7a2tux3fud3bHt7u3LumWeeOZdnnAcfHx0d2Ww2s/X1det0OudSryUt6V7QUqcs6blGL3vZy+ynfuqn7Du/8zvtwQcfvNfVCWk8Hluv17vX1fiko2W61LNE73znO+3zP//zrd/v28bGhn3pl36pvfe9761c83/+z/+x17/+9fbCF77QOp2OXblyxb7+67/erl+/Xrnue7/3e60oCnvf+95nf+fv/B27cOGCvepVr7qbzVnSc5A++MEP2ktf+tJTBoaZ2f33329m+XUQRVHY937v96b/OT5+/etfb4PBwD70oQ/Za1/7Wuv3+/bggw/aW9/6VivLMpWB5/2rf/Wv7Id/+Ift0UcftXa7be973/vcujz11FP2hje8wT7lUz7F2u22Pe95z7O/8Tf+hn3kIx+p1LXJfF3Sku4lLXXKkv4s0nd913fZ8fGxve1tb6u99md/9mftsz7rs6zb7drFixftda97nX384x+vXPPII4/Y61//+lP3fsEXfIF9wRd8gZmZ/eZv/qa9/OUvNzOzN7zhDSk1EboDqVr/+3//b3v1q19tvV7Pvuu7vsvMzH7xF3/RvvRLv9QefPBBa7fb9uijj9o//+f/3I6Pj8/eCX+GaRnJuAPa2dmxa9euVY5dvnzZ3vGOd9jjjz9ur33ta+0HfuAHbDwe24//+I/bq171Kvv93//9tBjo13/91+1DH/qQveENb7ArV67Ye9/7XvvJn/xJe+9732u//du/bUVRVMr+qq/6KnvRi15k3//9318BXkta0rNBDz/8sP3Wb/2W/d//+3/PNWUj4uPj42P74i/+YnvlK19pb3/72+1XfuVX7M1vfrMdHR3ZW9/61koZP/3TP237+/v2Td/0TdZut+3ixYs2m81OPesrvuIr7L3vfa+98Y1vtEceecSeeeYZ+/Vf/3X72Mc+luZh0/m6pCU927TUKUt6rtELXvAC+7qv+zr7qZ/6KfuO7/iOMJrxfd/3ffbd3/3d9thjj9k3fMM32NWrV+1Hf/RH7dWvfrX9/u//vusMi+gzPuMz7K1vfat9z/d8j33TN32Tff7nf76ZmX3u535uuub69ev2JV/yJfa6173OvuZrvsYeeOABM7u9lmQwGNg//If/0AaDgf3Gb/yGfc/3fI/t7u7aD/7gD569I/6sUrmkuemnf/qnSzNzP3t7e+X29nb5jd/4jZV7nnrqqXJra6tyfDwenyr73//7f1+aWfnud787HXvzm99cmln51V/91c9eo5a0JKFf+7VfK1dWVsqVlZXyL/7Fv1j+k3/yT8pf/dVfLQ8ODtI1H/7wh0szK3/6p3/61P1mVr75zW9O/3N8/Pjjj5dmVr7xjW9Mx2azWfmlX/ql5fr6enn16tXK8zY3N8tnnnmmUobW5ebNm6WZlT/4gz8YtnGe+bqkJT1btNQpS3quEXj+d37nd8oPfvCD5erqavmt3/qt6fxrXvOa8qUvfWlZlmX5kY98pFxZWSm/7/u+r1LGH/3RH5Wrq6uV4w8//HD5+OOPn3rea17zmvI1r3lN+v87v/M7oe56zWteU5pZ+RM/8ROnznlz7O///b9f9nq9cn9/Px17/PHHy4cffjhq/nOGlulSd0D/5t/8G/v1X//1U59bt27ZV3/1V9u1a9fSZ2VlxV7xilfYu971rnR/t9tNv/f39+3atWv2yle+0szMfu/3fu/U8/7BP/gHz36jlrSk/5++6Iu+yH7rt37L/vpf/+v2h3/4h/b2t7/dXvva19pDDz1k/+2//bczl5vj42/5lm9Jv4uisG/5lm+xg4MD+x//439UrvuKr/gKu++++7LP6Xa7tr6+br/5m79pN2/edK+ZZ74uaUnPNi11ypKei/TCF77QvvZrv9Z+8id/0p588slT53/+53/eZrOZPfbYY5U5cOXKFXvRi170rMjpdrttb3jDG04d5zm2t7dn165ds8///M+38Xhs73//+8+9Hp/stEyXugP6nM/5nFOL9N7+9rebmdlf/st/2b1nc3Mz/b5x44a95S1vsf/wH/7DqYW0Ozs7p+7VXUeWtKRnm17+8pfbz//8z9vBwYH94R/+of3CL/yC/et//a/tK7/yK+0P/uAPzrQQLuLjVqtlL3zhCyvHXvziF5uZnVpD0WQutNtt+4Ef+AH79m//dnvggQfsla98pX3Zl32Zfd3XfZ1duXLFzMz+5E/+xMyazdclLenZpqVOWdJzld70pjfZO97xDnvb295mP/IjP1I59yd/8idWlqW96EUvcu99NnYUfOihh2x9ff3U8fe+9732pje9yX7jN37Ddnd3K+e8OfZcp6WRcc6EvPB3vOMdCcgwra6edPljjz1m73nPe+wf/+N/bC972ctsMBjYbDazL/7iL3bzy9mCXtKS7iatr6/by1/+cnv5y19uL37xi+0Nb3iD/ef//J/dBXZmll0Edx583LSMb/u2b7O/9tf+mv3X//pf7Vd/9Vftu7/7u+1f/st/ab/xG79hf/7P//m55uuSlnQvaKlTlvRcoBe+8IX2NV/zNfaTP/mTp94NM5vNrCgKe+c732krKyun7h0MBum3rjsCHR8fu/dG5M2NW7du2Wte8xrb3Ny0t771rfboo49ap9Ox3/u937N/+k//qTvHnuu01KDnTI8++qiZ3d5956/8lb8SXnfz5k37n//zf9pb3vIW+57v+Z50HJ7VJS1pUQme1ieffNIuXLhgZreFL9NHP/rRucudzWb2oQ99KEUvzMw+8IEPmJnd0eLrRx991L7927/dvv3bv93+5E/+xF72spfZD/3QD9nP/uzPNp6vS1rSvaKlTlnSc4Xe9KY32c/+7M/aD/zAD1SOP/roo1aWpb3gBS+o6AePLly4cEofmd3WSRwpj4yRHP3mb/6mXb9+3X7+53/eXv3qV6fjH/7wh+cu67lCyzUZ50yvfe1rbXNz077/+7/fDg8PT52/evWqmVmyqEvZ0eOHf/iHn/U6LmlJTehd73qXu+PML//yL5uZ2ad/+qfb5uamXb582d797ndXrvm3//bfnumZP/ZjP5Z+l2VpP/ZjP2Zra2v2hV/4hXOXNR6PbX9/v3Ls0UcftY2NDZtOp2bWfL4uaUn3ipY6ZUnPFXr00Ufta77ma+zf/bt/Z0899VQ6/rf+1t+ylZUVe8tb3nKKv8uyrGzR/Oijj9pv//Zv28HBQTr23//7fz+11S3eCeMZJBF5c+zg4ODM+u65QMtIxjnT5uam/fiP/7h97dd+rf2Fv/AX7HWve53dd9999rGPfcx+6Zd+yT7v8z7PfuzHfsw2Nzft1a9+tb397W+3w8NDe+ihh+zXfu3XlhbxkhaG3vjGN9p4PLYv//Ivt5e85CV2cHBg73nPe+w//sf/aI888khaFPcN3/AN9ra3vc2+4Ru+wT77sz/b3v3ud6cIxDzU6XTsV37lV+zxxx+3V7ziFfbOd77TfumXfsm+67u+q3aRt0cf+MAH7Au/8Avtscces8/8zM+01dVV+4Vf+AV7+umn7XWve52ZNZ+vS1rSvaKlTlnSc4n+2T/7Z/aOd7zD/viP/9he+tKXmtltw+Ff/It/Yd/5nd9pH/nIR+xv/s2/aRsbG/bhD3/YfuEXfsG+6Zu+yf7RP/pHZnZbH/3cz/2cffEXf7E99thj9sEPfrAStQY9+uijtr29bT/xEz9hGxsb1u/37RWveEV2ndLnfu7n2oULF+zxxx+3b/3Wb7WiKOwd73jHcvvnHN2rba0+mYm3XovoXe96V/na17623NraKjudTvnoo4+Wr3/968vf/d3fTdf86Z/+afnlX/7l5fb2drm1tVV+1Vd9VfnEE0+EW39iG88lLelu0Dvf+c7y67/+68uXvOQl5WAwKNfX18tP+7RPK9/4xjeWTz/9dLpuPB6Xf+/v/b1ya2ur3NjYKB977LHymWeemYuPH3/88bLf75cf/OAHy7/6V/9q2ev1ygceeKB885vfXB4fH6frsE2tty2tbmF77dq18pu/+ZvLl7zkJWW/3y+3trbKV7ziFeV/+k//6dS9Tebrkpb0bNFSpyzpuUY5nseW5tjCFvRf/st/KV/1qleV/X6/7Pf75Ute8pLym7/5m8s//uM/rlz3Qz/0Q+VDDz1Uttvt8vM+7/PK3/3d3z21hW1ZluUv/uIvlp/5mZ9Zrq6uVnQHb5+r9L/+1/8qX/nKV5bdbrd88MEH09buZla+613vqrRhuYVtWRZluTTBlrSkJd1bev3rX28/93M/Z8Ph8F5XZUlLWtKSlrSkJZ0DLddkLGlJS1rSkpa0pCUtaUlLOldaGhlLWtKSlrSkJS1pSUta0pLOlZZGxpKWtKQlLWlJS1rSkpa0pHOl5ZqMJS1pSUta0pKWtKQlLWlJ50rLSMaSlrSkJS1pSUta0pKWtKRzpaWRsaQlLWlJS1rSkpa0pCUt6VxpaWQsaUlLWtKSlrSkJS1pSUs6V2r8xu83vOENNpvNrCzL9DGzU99KRVGc+i6KwlqtVvqtn1arZSsrK7aysmKtVstarZatrq6m4/ybv/Eb5ej51dXVVC6O4Vozs9ls5tYdv/EM/vD9uAb9UZalzWaz1G/41v7C/bjn+Pg4Xau/j4+P7ejoKJWH87jm6Ogo/cc5PcZ10TajXjh/eHiY7kM5KOP4+PhU33Af8PP5ua1Wy/r9vm1vb9vFixfthS98oV26dMk+7dM+zba3t+3ChQtpHI+Ojmxvb89u3LhhH/nIR+zatWv2//7f/7Nbt27Z1atXbTKZ2NHRkf3iL/5iQ05+dukLv/AL7ejoyKbTaepztP/o6KjCi+Cd1dVVW11dte3tbev3+/bAAw/YxsaGbWxs2ObmprXbbev3+9btdq3b7dpgMLC1tTXrdDrpXm8+gbw55h2PyojmusoCHPPqwKR1i455v6OPd21uDoLv9Rj4+/DwMH0fHBzYdDq14XBok8nEnnrqKbt165Y9/fTT9swzz9je3p7dvHkzjTHLE5TBc1D7EbzearXSnPH6DLyztrZ2Soax3MHzUdbh4WGax3/0R3/kjsndpscee8zMrNLvaLfKE8ga9ON0Ok1tw7Vra2un+h3yictUWY0+xH0s18qyrO1zHOt2u7a+vp7maafTsW63a2tra9Zut5PuabfbtrKyYmtra2nusv7SunpzlfklN888XZPTPzny9Lt3H8sM1hM8t46Ojuzg4MD29vZsMpnY008/bcPh0J555hnb3d218Xhse3t7dnh4mMb6+Pj4lF4viiLJ1/F4bAcHB3ZwcJBkK9/TbrdtbW3Nut1u6n/wG4///v6+HR4e2h/+4R/W9sndoh//8R+3g4MDG4/HSY6YnfD5aDSy/f1929/ft/X1dbtw4ULiV7MT2bG+vm7tdjvpD/AiY6r19fX0n3lVMRnrHOZb5VfQPDxaRzl+1nKaXKvfLKO1LA//5vRipGdULzG2wnzBb9ZHmA/T6TTJdfDs/v6+TafTCq/w/IEc6nQ6tr6+buvr60lGdbtdW11dTTwCflldXU2yyszs4ODAjo6Okl48Pj62b/u2b8uOV2MjowkpI827pjwSmApk5iUecBbWZVlWFE8keOvqFAEzfi5fy0DAK/es7WYmB2N5ZWg7c/894jZ4gFL7hgEQgwczqygeMO7BwYGtr69bURTp/8HBQQWs4fkrKyt3xBvnTZ7RCYHMQhl9YnbSXx7g98png1p/4xouW3kyMjJwTuvHz8Y1ysM83lqHOyFvrjCfaz/yb+bDyEGiHwa8bKjzefArBDoAPCuUqGwlHutWq+UablomDHUzOzWfuE9U9iwScV9wH4NUXrKMgBxX0I+y1ADh+cdlY95ovVg3eE4qLg+KuN/v29ramvV6vaTEodTZQMnpONZPzKN6PcZfx1XnufcM77zKhOi+iHJzPZpfPJ6RQYgPno9+X1tbS+XBuACY4utarZYdHR3Z0dGRmd3mDYwFQBP6G8Y46rRolDMmcd7MXBnBMptlgvIB6x51OEUOVs8YNjsx3PhYRFy/86QmBsY8Zc1rYPAxNii8/02eqePX5P6mdTs+PrZWq5V+M7+wbPLKqqNzNTLOk7gRnhHgXafXe9exclNQxkAP5Anf6BlaH/Vcapl17fA+EeFcHTN7ZXhgMSqf74k8F1pnVvBgYNRVrXUoDJTJBgZfy14oBQr3klZXVyueJh5/BUNmp4Fy1KdqELBniQGMAin8Vp6rcwgwyDsLMWDSOni8VMeXXC82cvAcr+6eQsnNLRXaWn/w52g0stFoZOPxOHmUcD2Dolzk18xOKWrmY+YP3AOnAT+D79d6e46PRSFvTDgyykAfx8Dznl7QCBUbF3BYIFKk9+f4R/kDhDpCOQPAwku/vr5uh4eHKeIIYAujRMtl4KbOMAZufA2O8Zzw+lfbpnpAnQe5sVLiexWYePqGx5qNeeVdlm9oLxsIMFJgFBweHqb74HnnCAXG/fDw0FZWVmw2m1W88TwWbPAsAql+ZmcGzueMQ8/4bMIrXtkeX3rk6ZwcbzWRTVGddb7m7qkrw3tmrvwmdW5SJ+85Z/2A6hwHqp9yx6CbztIfjY2MJsyggr+urHmeGf1Wwab10Os4JA/SQYisc69uTRSUUhNQlJsQUV3mYcB5Jss8TAyFwNeyUNK6qtdY04qQasSRGS6fgfUikCo3BSYgL4waCW3P0NCoSF3qRGRk1PFBrl454TkPsM09w7vOm99RPSKB6AlVPu7NUQDI6XSa0hMQPsY9zP9eHUDROKpwj9rhzS3uo6ZgYFFIZbPnOPAcG3y/jh1HIbi/vZQ1LZfPR6mlZlbx+sFjjhSeoijSMTgfFJTrPPEMC20rOxKi+VV3XM9786oJNdH53tzTiKH2iabisNEII8HsxIAAEMJ5XIs+9yKT7KDycMSiUo53cTzS9/OCxHmwmiczmxi/TbBl3fWRDoiumRcLNe2ruuvq+t7DWtExr1wlb0w8Pdjk45XRpO8aGxl1oRmuQJPz8ABFXuhcR6uw52s8hY36m51WIDlDIiIVhEq5vooMlohBtd2569QrVMewdVTHkF6f8LVQwJzWo8CJ28YpU/BgcRTDCzEumpGxvr5eUYCa3gE6ODgws9v1R+gehPax11WBkgcgc8awzhnle9Qvx9dNhA+Xyedy88trQ2TA4ttzDKCdqti8NnD9vLZwP5TlbQ/ocDi0nZ0du3Hjht28edN2d3dtMplUIhkrKyvJE8qpfWp4KJDiFA6+BjyQqycb8HxO0xs8kLyo5PGYB0rRh4gO8DWIiIKvlbhv+JlcBwalnJ7FVBSFHR4eWqvVsv39fWu327a+vm7T6dTW19dTZGN9fT1FPAB44Z1nEK0GD/OItruO31FGxEN8LuegaAKcQHV6imW+Ny/wwXoAHMdaC34O5geu5zQ1NjAgb9lhhX5k/mqqG+82qUyNdGCu/k3ORfMOz+H+9vSQN5b47T173r5uWkYdz54n1fG56hu9zuO7JjhtHizH16uBrx/MDcVbnsHShOaKZDRptHrUchWKQIpZ1bPAZepHQ8ssdL37c+2JhCzKUMGvQCjXllyfKSPmGI494HWAKcfk8wob7170S27iN6mLPhvMrYyufTnvJLsbxFEF1I1TxEA5Xoz4IeJ/Nqg9QMHPy4F2/Xj1i3jCoxxo8Z7v3adlePOOj3H6SATA5gFlMH4PDg5sMpnYeDy28XicFtnBkPBymJWiMdD7NNUM93qGl55TmReN6aKRJ1/5HH+bVXlSc8RxHrIS0QQum+dnlHLnKdeyLCvebxxjwIo5D4OT5RjGl/kDZeI65SXl7Zwszekws2oEFX3gzTG915szdfM/kvXzyBMeVxjhmi6EOvMc0jQ7lYtee6P5da8pJxsZm3h96GGTOlL9Uqd7ojrPyy91dar7Pe+xeamp4TJPnaK5UVe+8vI8OKhufPWanMxp8swzGxkRaGoqeMxOvI4qBHCdpwi4Hrx7hCobz3PLAAS/Wajrsz1SEOEZUk0H3Bvs6Dxfx95R/e/1M/438dToczjlx2NC7QMmHQMv0oL7MYbsaUK6FBsdCqa8fruXxLvFmJ142/Ab9UffqCctEurcL0gnYwDjjYGOdQQ8ddG49rOWF/EQl69zKgcamywSZGXqtUHvj4QhywAFWQxQcQ4LvBHFuHnzpt26dct2d3dtNBpVUi+4P7UPov7SVDc2NOpIjSFNwePrIsPnXpHO/aI4iUbocZbtKysrKT2N5T/vgIP+hOzA9TxOXsRADRWzk3mKeYxnqFHB/IUdjo6Pj9PajE6nY+1222azWYpkILqBdRrQRcoPMGq4Lqgzf3vH0H+R7G8CqHmeRLLWkxN8PKfLlHf5G2ssEOUpyzJFJZhXOFrO81l5XuvJbfSuXxRSWacGRlEUFWeWXltHirPU0cd8ZFbVZSo31aA7q9F2lntzxuRZiWV4U0PjLJTDZtH88TDZvGVolgg7QxRb1mEAj+Y2Mvi/Aj59qAJxr1J8b85w8TrHAwUsgBUI47oo91nBlQIvry8i4cr3ef0TMYsHxPW4Z2ToMY/5cmMVPUv7KCLtZx0DzlFmxYl7wexYAI60Iyzu44nA9+nOJPeaItDI4BP9YHYyN9iA0DQbDmPydrhaRmRs4BqvTh5wN6t6Ppnn+JyWzb+jlCu+J/c/uj4S9F556khQecCGoBL6G1sDjsdjGw6HNhwO05aRWGyqskbr4PVrrp2eAwP/FXyrLMz13SKRx3s8DjxXuE84EsAbQDDQxP3gFVWi2r8K0iO5aXYS2dJrUTfwGWQStnk8ODiwdrttR0dHaYF4u922drudtqJeX18/leLGu+fxPNe+jPrU053evRHNC6ia8LcnizyZCd6GPNS+YIMSAFu3seUdCfX5KteQDocUrUUhlSHsKOHzOr6egaV4S3ENvjnyhv/abzp/uA56LCJ9vs5Frb93fx3P1d3n1UGNq2ebPN2qOiOaw94cj+oc4U69z8N+kf6vo7kXfuO3J4wj4adlePd6HafPUqXqgXbUQbfEU+GlZbGi5mORIZUb7Kjv+Bx7BHTQI6tRGcMDonX18BSn14dNmTZqKxPXixdK8j1sZHAkQ3eUiu5bFIqUqIIgHQduv+eVVmND957nZzepi36YvHkdGZkKilUhNqVI4EcEHqozODwgqfd796LNWCOEhd6TySTtKAU5kZNznmGAa5oqX68sLkPLyimYRSF14Gg0y+NVnOM8fZUB/P4ZfQba70UCGFR44+nJbj6GuiIaw+tyyrKsOA/W19fNzCpGEu5j4wJefNSRwaSna7Xf6nRsHUXgLDqH801AXZ1MAkHm87bEnnGCa8ry9vop9KVuaRwZGZAFMDQWiSKZrse4PXpfU/L0a4RD1HHD9WHZXCejcU1dfZu0J8ezep03z7Vfo/pHzz6LjK27J4eP53m2p3u8sY3O6Zg1beuZt7CNBBgzuE7spmVqY9iiZCbHtTAImCHwgcDQ1AVWQF4Ymr1JXt2bMh7KVQGgSouFpLZTgSWu816850VB+Hk5UMJ1VOGida5TxCz4uJ7wSGk/AtDB88QKAx9eBAtCvvwiEeoIkACvLLebjQ2c5218+QVq4A3vw+QBKzwrB564vjneQLlcfp3BEpWjx/E7Av36bNSXU2aiMvT5Or+8+Qa+gmExGo2SgeGBFr6XhTLLkSbKgtvqAS58e7IKxxh41YHCe0W8JSI7jHIAiVNhcQ9HOtnjzV5ueMBZT+AZqhfUkeEBXt5OG32MNEnUjXlzOp2mF+/hpXCTycQ6nY51Oh3r9XrpHMrBS9Hwzg3UH3IiSjHUeXAn4656eN77PDDMKWn8oi99lxAbDqw3cJ+ZVV6qhzFGeiNSSjFWMNz4JXWsZ0C6+cKiUA4/4ZznfNX5Pw9YZpnIuAr/VQbhdySD56Wm5TQxbJuc07qrvJi37tF9HlaKdIPqR+9/7hM9m/UV8CNSsL2F355jpSnd8YxqIsjulOGaGikeAPKeHxkN0f3RtTkwk6tfdG0OEGj9MBk8BZOjuvHSZ5wHNQWi3rmm9y0KeYaWesZYkHHb1KD0DEfcj4nP4NUT8JHCjwRQdF7nUt241BkruWdyeVEaELdVy46e4QlXNQw0OuhF0nju1c3piLh/ckqB26rX8j1efRbVwFDKKWNPDoEnOK2FjUMm9Ann2/MY6vN0XHTO8Hk2+pgf+V0e+kz8xw56q6urdnR0VMmBVqCoNI/M5/7z+vIsgLCubp4MUrmoaWEqT7ivddtZPg/jAWtgcD3PZzNL1/ACex5HfvYiRjLmwTQqE+ookj854Op9e/NJ+S+HK1T+53goR03b7MlHPXYWHHTe8rbO2PCeXdcHdfofNA9Wi+jMRoYCAY4k8PHcwistz1OSHvhnbwjOebmsnneEz+sxfp73n8PYEXj02ghG5RC3BxRZ+OEe7j8PVLA3mwWn7mikk53ryf3LAlc94B7Y8UAsgzGzk1xXKABtE54Fjxa8W0VRpGO8vSPTonmeuN3gFz4Hb+va2tqpfkb/cCQDL49iIa/AWJ9r1tyww7089rjfA7CRktP2e4oJ56P7lBiw8BzxFICnAPm31offuaKAg9fH8JvmeVzr+tRTYDp/m5AHONkAQht0DUNUn0Uh5WevjbhO28RyHiAdfYE1ELrGgeVlLv0vqhOXwdFxlIO1ZmV5stUtA1o2IIqiqKwz43LVuw9g7L3vQ3VgNN8V3N0JCMoBEZUdnH7M51RHqwGg8xR9hT5nHQL53+120ztsYGjyupz19XVbW1tLPAGDlPUtLx5fJNJxVf3JFM0n5gnm8Vx5uIb7XvEKrssZGHyuCf80pSYGQNNrorrdDcrpxDp9mrt/nv708IKHA3ns63QgqDFC8xhKBZlOTr3OA6W5dKS6xkcdwkKZlYwHmr3zamBwPbRO+B8NvCoqPsb9wqkOCkZwjAGHCgjveJS3q2Oh16hywLHc2gevn7jd3ljpM1WxFsVpI0PTBBbN66TpGOANCGuE782qxhfuxXW64D3yPDQxLrw+99ItdEyYIoESgfiofk3Lxn9vzioPe0DeM26a1IdlAoDq+vp62h0IOwHh3Rja91HKmTdGXr0U5HoGFZcLpa/RGAZrXLdFIS811CxW+B7I4rkD8Mj3oU8gI3Su4TkeEFKe4P9e+iuvoWAjA8dgPPR6PVtfX7fBYGDdbtd6vZ4NBgNbX1+3brd7St7xzkreJ9JLWmeeK8qLTDmglQOImi7D9WFdhGMwLNio0vZwH2vaqAIfrHOZzW6/E0N16traWtqBrCzLU+moKIfTqRaFPKwUgTv0Ud18iuQTy5DIQazXetdE9WsCSr3rI7xS9ww1hviaSA+ch7FxHmVE+DbCU4phNULX5BlN64J6NGnnXEZGJJyiSnpgMhJUEeD1nsGN1HMacVAjwruev70JHfWH980UgUMGn8wMII0MseXIBgeIDRBVOp7CjOqL45612mSCRwqLx4GP6zM9A1H/e4BwXsH1bBKPG48zhD8MB/WGos8jI8PMVwwRaM6NnXfO44u6fvWUDvN8TgDlQJzW0aufVzevPnwu6iueI+Ap3mkGuwDxdqPqdY3apvXz5ggbBRqlygFCvt8zVJQWaZ7wts4eeW33IkiYN/Boc6TC87rqf49U5vIxNQJBzC/85mmsr8Cn3++nbxgZ/X7f1tbWrNvtnjJQ9L+no3K6WL8jo+4sVDcnVc4wmG9iZIBYfqpOgXGJ3QjX1tYqxgM7DPAMyFd2+DTV+/eSPHnu9VcUyQBFRoInOzy5ojKTy2vad3wv48JIxnn1ryvXe45XptYhV3YTUB3phaiuOZ3L2EjXwOj8yhkfTbAsfueun6dc0NyRjNz5yGr0yvHCvWoE8G/1XEBQecf0fDQgkVDL/WcPSU7INmVG7gv1QHh1Rtk8sRmo1oGyunHkssxOFmiyVaxtiMrkMtjyRZ1V8alCKIqTBZUMwvm57J1cBNKx0vQb3qYX80U9Z5yqo1vaKtDhD57v9YcnxJsqVS1P0/70P5dvZlm+rDs2D6Ht4BV+aVqkPL3Us6IoUjrbYDCw2ez2pgR7e3tWlqXt7OxYURRpjPT+qG45MFCn2HPllGVZ2VaV1wowKFskamJERWBK9QzGBwv1MacAKs1O5qGmyKiyZO+cB0rKsqykM7EcguyCUYCF3N1uNy3yHgwG1m63bTAYpOgYIhjtdruSZhXpNS+SEc0dbx6xjPCMqYjqQFYT4w1t4kXb7Xa78lb06XTqtg9jrVt3w1BBNAMyE8YnGzCQvRzJYL0KI2RRScda5YauM1M8pnJPvdGe7Ml9vHrkAGp0rCkIbkp1vDpv+bnyPMyrskrnhh6L8F6EB/lYFOVkPO3V2SsrJ0eiutbRHRsZngL0hE0ETqPG6u/oHu3oJuVFnzqKjCgV1NreOkUa9WHUbj2ea6cyeTQ+Xluifst5Hby6Re3W4zphiqJwPXhR3y0S6fgriNXjajx4i42963JC3zvOpECDj9X9VqUVtb1ujmk/efXQ6/R8E6WmvKLpiVpf8CAiGdgFaDqdWr/ft+PjY9vf30+gR+utykHrEBk8/N/jGa8/ozH2FNSiUI4XPLnhtZkNB10czDIE/aOph548i8aLidOvcC3vIAdDA8C30+kkQ6Pb7VbS77DbFKeJMkCIDIqc/qqbZ6DIwKjTDblz3ryNdAlHaqL1J54jkJ0aWHvIkWF2jLHRprLVk2PeDoaLQjo+0Xh4To9IHzUxGvgeJb53njldZ5BG9Wh6LnfPsyUHVQfU6TIPE9X1YR3ei+RCUywWlat1nEenNDYy1JPsDXCdcOZKNklHij6aAsUfFvzcCR54jTqqjhHRNm/hlNbdm6y5Qfb6wesPrgef9yIPXhSAowoR1TG9J5S4vtwv7F312sYhdF74jd+RscHtWkRiY6AoTvbRZ/5Q40JfuMcREFyDiBM+2LKRvResbDz+4fHRMY1StDzy5pv33yvHA91e+R4QqhPS3rzGN/pHUxXxG/Oo0+mkPtzf37e1tTXb39+3drudAO10Oq28hVjTFXheeu1XYMOAOCIGomanI406txctDYS3sPXkkAeqQRg3RC+wOH82m51a12VmlfnD66EUeLFeUvmCscZYsi7h+80s5f9jrQXWX3S73Uq6FK7DdrVYMxAZFaqzWP9FVGes6/E6nXwW0Mf9yYAfu4O12+3KW9ER1cD6CkSrdU1NWZZpS2mWcZ1OJ401dEpZlpUUKUQ60K+8Zm6R5sk8hHmkabY6bjkjg+ci62zVVZ6BFlEkh736z9P3dfzYpC5Nrj3rc3LzgfGSGuiq7yLsq/hX5VKkf7VcbauWG+lZddBFNPeajKYdfpaB0fs9QOGBGO+jZZlV38bMCsOrr8cEXplevfEshCM1/FrHfNqWusmX6wcFlXUCoUn5amRx3bkP0FbP84Qx4InBYW+kqxwfH1cW7Snz8+4Xi0YqNKDM+Jj2FXvU9OPl63tGB5POFwVGOoZad/7fREA3MUqa3Ks8y8fqZIBHuSgBP18NEY5mDAYDK8vStre3rSiKlCoFPlSDAd8YdwWv/Fw1dtTjjr5QheO1l1OEdM4uCuUWYZv5ypX7FbuwwcDAeGFNBNZosJHAslUVqKcTzKyyyDhS5iBcg/U7vV7P2u229Xo963a7lciFfnQdBtfT7HR6sQcSvPnr8Ud0Ljd/vHs8XvaIx48dc9yfkPu87im34J3lJH5z38FJhf5CmhynN6pjsolxf68okn0g1R2eLtDr5v3k0kKbypc6HDMP5YwV7390PFf+WeSmh5WbyOBo/nmycGVl5ZRsivRgJAM8WRvVg2UR5g4fy9Gztv/neSi1Jp3F1zUB4gpSvU7SyatAv8lEwUCwFwDH6+roDXrdc7126jPPUziw0sb/qJ66kwx7272QuUYyNJrBXkg1YhaVWBAw2PGIjQc1MLyPKgI8j3lPeYKNvYjftP7ROa/+3u+ozIgvc33lCd4IaHnOEU+JenUGXwIsmpltbW2ZmaW3gAPwwjuqAhzyRqN4Oi91e+dceyNlosCKjy8SRWOF3xFfgscRvcPHrPouBChhbzy4j1QWqTLlZ/O6C44gcD1XV1eTR56NDBgYWKfBBgbKg8zLGRl1nxx5RryOCX83vV7L9+YzrtW+Rbt5Jzf0C0dneR7xlt7MC2tra1aWZVoMzu3hdW6oB39wDMbIIlHkZInkZvROH+9aHjOdK02PcXnz8qCHIeqwVlPgntND8xgcd2poNCnD03Xeb8Wx+M0OJe9+bksTnew9k+dwU5ljds5Gxp0aFjqZ8PtOlaQOCANVTTmI6pXrfK67TiL2KkYLZHGtfnvl58gT5Hi2N7mjttYRMyraxBEhtBugS0ExezE5RWp9fT3lv6MNnU7HDg8PKwqIwTqDjEUjL6WCU3QUUOh1ukiR34gOxckRjGhcPWHheUByADdHqoD4WK4sb17rPFAgp9fUCTz0JYMSNcpU8PI44Hir1bJOp2NmZtvb2ylCeXR0lN7VsL+/XzE0uI4MjrzxgozRiIaWoW0G/yBqit2MUHYdUFwk4oiGpqJyv8GgQ4oUwD1HMHRdE67RPtTIgdaF5wZkDy/4xgfPx9qdTqdjGxsbKaLBnnpeFM5pUt5GJR7/My9EvO+NNQOZnCHQhHQ+evPe03EMpHQM2PjitDek//B1KAORCVzDfYkIor7vRqMo7LRa5Mi4WTNZjHbm8Iw3NhFIVYPN47kcRvOMB++4yvc6ymGapo4u737FNnod171p+XXPxoeNbzUcOIrH/z18q2OWe270OzpWlidRwybU2MhoCj61EfNQZLHXCdOmQrbJPTlw5N2jVnUO5PE9uQni1aPOAtV7tc88Ro7qHXlIPGrqvWAjA6AIVJeCwJNHoxjw3CwSqWBQAdZUKHG/5bxK+uyoLtFnntAnypzHM5OrHz/Tm/fzfCtpn9V5cOqUHQCmLuadTqfJ88qpHHx/5G1CPaM64btu7PAMBk0AWU3m6N0mBvEgb4z4P+YCL9xFH/B6JDUgc32n3myum6fMvbxnGCBra2tpFynwBlLtFDxzVFZlm/fhvmqiF8+TIv5hOdyEnz3KyXoFTHweQIfrwLzB/O8t+PeMTRjqdwoany2Kxpj7RR2KZy1Tz5+FxxQb1ekE75qzOEObGLx1xyIdW6dDctfoee3THC71ZEHTTx15ZeaeP2/5Z35PxnmRGhb8PBY48zSwiRDW587TNrV02br0lKcHKuYxyM5qlatQ9uqi46qTqwko9oCvB4gZHLAw5HQp9CG/ZRTX8GJOlMFvg10UiniXFaHZSV669p161/m357WIlDODTQWlnhKPKJqjUbujc9Ex/W76LL1O52UTw0KjfiiPAQrOgwc7nU7yqI9GIyvL0vb29szsdgqVOgy0bjlAxqkbuF/HWvPVcQ3qh3QReDN596tFoYODg9QWbz2LmaXzaB8ie7wWhvsEc4w3SDCzU7sWmVXHAffiuBfF0JROPrayspJ2jer3+ymS0e/3E7+occHrMDSSUTcvdP56/OTdi/OeEaw6YJ65qBRhBQ/8cZu4bd4bzzkKwfMRvFGWZYpa4Dx4hiPuOhZoH57b1Nlyt6gO84B3sJCeKWe0c/nRM5sej6ipocH1qCt/Ht46y7HI2ZF7RhNSXMr9AAMR59nxAeOXz3lyoG7hd50ujPCBzk12vjTpi7nSpbRjmGn4PFcav/mYx0RcrjaqzrPRhCmZQXQRpndtJGQ9Yay51tp+vs9Lz9A+zQFPrat+NzEKdJyisiIPurZTKVIiPJHUw8RGiO5zroue2aP5bBi+d0LMm2Y+iORJmht3kMfnyv/e3Ml9mKL5oHWPwu96X1Nl4V3bVIGx7KmbF1E9+TiX5YEeGB0KLjnN7/DwMOWFs+HL842jC1pH7gOVo1wPBl469qxsYMTO27d3gzyvcZM8co066Nix3FJAz8aEvthNy1P9w8AU5SF9c2VlJb3JGwYG0j6xnkcNHf4d6TWPmsxnXMff0fk7oTrAqjrOuyfqb6+P9B5cY2Zp3nl6tiyrC1W5XJWpdQ6Xe0FNACPLqJwjQ+Wc9wxPnnv6x6tnk2NMnsERObWaGEx1VFfGnRgQkUGlx/A/6q/ch6N4dQ54/US6pg5beIYGz6c6mntNhlpcCpC9RniNishrvAofbbjnlfEYlMEUT0S9Vy1HPqe/vYmHb92mkUGylqd11U/k3Y4Mizpjwxuz6HmeQeT1sddPeBaPuxoU3C/ItcaOMWYnW1DyNbwd5SKRGhlmJ/3BBoaZz3femDYVIt7cUa+HjoMuDuf6av0jnvdAYW6ee/yk53IKlZ+b40O9PiKNRDL4xW8Yu9FuaLz1pvYXpzFo/jfO87dX96IoKt509nzjGjWAeDezqB/vFfHYefKRPdbMvznZzGWYWTIMAPLZyOC3QvP9ZtVx0AgGjAtEKLDOApEMLPJG6hSez2ODsYz0Wp3ijua99onXR/iPvm1qoHN5Tc/p/0iOaD94fBzJF51Pkd6CLuYy0edcn6Z55neTIn3B51H3edOl6p7JpPqjjv8iDMht8PiziTyf1zhooifu1MCoa58ea7VOdh7N6XTIvQgPRxEHD3fp+LBRHc0x74MoYRM6t4XfeLiXLnTe5HWcJxxZ8XD9WNnnDBIzqyg7Lh8DpPfx89mQYQGI/3qPZ0AAhEc7DDUxCpoKHs9wie7TtkfjzYCAF3yjbQcHBzaZTGwymdh0OrV2u30qaoHde/g6GCHszVoEikCCB571nDdWuXnkCR0PeHnP8uqUq1t0TEFLJNBy5XnPzv2P5i2fj855hj7XmcEXywxsLgDPOL/jgCMZ4F8zq+zuxOkZs9ks7dev6wa0vQqUkA6l8pbHGt51BVGLRLpDk5lVFBcbTZ7nDGPCMoKNCyzCZpDPY4sPb1mKcWADTqMWeIP32tpaMihgXMDw4PUZHPnIeR7RZlX8qBdTBCLqKKfv5qG650W62asHR4l0PpVlmd55gfREzRrAOzB4UwU+5/Wtmb8WbJHJ4xc+B56tA36q15vqlzrDYt4+zDmO9LfWcxHlmZInv1XP8lzEGLIuYJ5lIxl6KjLMeZMEz+nJ9fEMFk4J9XgtMkoimnvhdw6keBVpek8TihrFwswD6grioonD5XGZkbfXYxp+llem562O6ozr9cNbM0bl1RkJOcoB0whE5hiOjQBW9ABb2O+eIxZ8DW8/qNd5xt69pJwy0HmQE6rn8SzP4NRnar34eJN6RXJhXkBTZzTUyY2mvKhz1qun8jj+Y66xV5tzx/k4Fp+CwPcAr15qEM8N8DRfw4pA+477xwPnZ5UFzxZ5UWnIidls5nqcQbiOx44/+pI77DjFhPLYgaQKHwYlb68KowWL/xHN0NQogGaNYHjeYHxH8zkCXNHcj0jnZW4uen01L+WepSCK+wl9h92idA2Slm1WBV84z1GOXFvOInvvJuXkPNM8jqYIwM9br6a/9btJmfhfZ5DMU1fvPg+rRXXyMGBkREf3ergz0peeXPDmTpSxUMc7ubL1fHRPHc0VyWBPgXasKj4Nx6oh4IW8PcspVxe+FoYAv6AE1+nzPEHFSp3v04iH1g/CEdd7e7Mz8ZoEvc4zGFAeL5r2nhEZK9G5XL+q8cJtjdqWE27oX12HcXh4aPv7+zYcDq3dbttoNKp4rtBWLLDd29uzvb09m0wmaXFfk/SCu0kKjJhn0B7Om8X1TN6EjwxIngfKn2ykqYJWYuHkXRPxFii3XoPHRxfVetfjOd5vvU4FK5/zwDgrgCbGE+oM4Lu6upp47+DgIG2xjHQpAFz2tHM/cEoDyyacx5ixMYL68MJlHOPIF8pgrzA7SBaJvJQvLO4tiiKBdURtuD+VB4uiSFEDfqEbRz34nTM6Z3jtCvchoiHYIYqNCyzy5tQojlqgLlE6A5MHEJR3vcXoTZX8PNSUT+Z9rnc92sj8ypsqwFgHj08mEyvLsrLZB48l9x3GjtNyVXeiXhh/PbcopPLNLJ9yptfo/3nB+TxANALQ/B2RGsG5++ZtQ+56T7dEhg3rYq6rV3++j+UwOzbMTq+J5DmuTnEeZ41u8HbP0DOek4afwfPFWyOmH5Wb52pkeODCU/7RvdGx8xKSHihSBmAwj+PI8fXycxkEMONHdWalr+lRSl7aRu7Dz0B7vf7PCZKmE80rIwJ5oDojQ8tF//AajOl0mj5QIrPZLB3Ddbz//TyG6d0gTPScocFGBgN/FmKg6F41HCOK+ChSBjmDBfymwDVSZiyQmaLxUsGcO5+7z1N6XK/IUNI2eDIKwhWAkr3m/PZmdVpo3dg5oUqFwYJXjjf2WkdVDosGnhTkqeLk9CSV3TwH0HcA+91uN3m+WcboLkPaN2ZWWZSNcURqFL+t2zvGURMuh5VxpDtyAA59FQG6SP5H/Z3jgxsMov4AAPsCSURBVJzcr5ubno7yyvCMXo5e8BonM6u882EymZjZSRqimf8OKOUlllssOzmChmPsGFgUqpNnIE8XqhxrIvv4ufp871x0fXSs7nlcdw/wN8WcuesiIyLqFzUkomc1MT48A5GfE83x6JymTKlRoMZnVE7uuR7ubDKmZnMYGRrB8IBFTvgwSMkN5lnIGyyPPKvQYxhuK4PByBulApY9Z+rhZe8aPrhPBUAkuNF/HgBRK7kJeeMRCaKo3/i4ZxjpubIsk4cJKVN4gzI8VigXx6fTaSVd6m6s/5mXdBeZnKHhGRg4z+3X+9jYiCIIuJ77PDLKvPkQGY3gO1bcdc9noz7iHe+/N67cF149Vfh68xTfmtLkkeaAo9wojxwpNRq9UUcFr0/S8qM+wFhyNFTvZ55jsMtjsAjEvMi7NiHqxm/C1jVaDCzZa91ut63f76d2T6fTJCsgZ5jQX/iNPsOYrq6uVtZaILqC6AYiGmpkoFxd3O3pGn52xLda5xx/ezJb+f4sBmc0J+ueqUCFAT2IDTusxcAWx7zBB4wMjKNmBbCs5Qixru/Tuuk2yjmZdi+o1WpVZBXra8+JoeRhh8jYyAF6D3xqRC2SYTmZnjNKo3siamoE5O71jGz+r7qPj2k5TeqioD364Fna75hTLO95bUZUBssmNkjq+Eh5oo7mTpfCt8e40TW5VIrcMa+TGfjX3c/1iAS61l2NDNzjhbQRluJ0F2/thNd+rpf3vFwbcm2OIjJ6bWTM5Cia9JHC47qwVxGeKezYAyNjMpnY3t7eqfSh4XCYUqTg2QJwWLRIBr+UTSczcsNRXwZTuksKBI8KAe5X7vec58Ls9Hhz/Twhh3qq0ap9zYYuPt4c1rqcRYF4pAabnuPfDFJ5QwVP6fIcZpB6fHycjF2EowE4Dw8PrdPp2P7+vh0eHlb6DgDGk0faV9yPOl/LsuptVYPCzCrKBcAXz18U0tRJs6rBiPag3txm7OBVFCcGCiIYRVGkscUb2KfTaSWCURQnC7o58gDDEQYjRy04ssLrLziapWsvNPUp4nWdd961Cn5y5AFHlfXq3NJjXK8c5dqUqx/LLx5XgGmsx2B+ODg4SJFi9AenEDNPQQZj3rLBiXZhPGHY8GYMi0aqW1XWqgzQa5rwRESes8xLo4l0CL5zvDIvFonK0G8tv8l1TXieHUdcd53DXntU9nu60OtP7XtvETgMZpZtilGjNKhojLXuXr/m6Ey7S3nK27smB4z13qiD9Zze7zGNlp0D2Wps1KU5ecypz2Vhp95m7TuzqmHgtVVBUNS36vHLXRv1jScMcv9ViHj943nfta5sbOzv71f6E6lSDEq4XxfJyPB2dPCEA0fIPAWi93ltzAmiHGDBc/Q/CxTlD72+SZ9HxklO+UXCP1fvOkBjdsKDDEL0/Suc5+2l2uC3t/kALwLnSJYCN011i8a1ri347ykInRuaFrQIxHIJ9QX/Mb/rGMGwQLt4AT76G46Mg4ODUzt4Yf7xOMFAYNDJ0QoYHnqdN94542JeOcX35UAizudkPc9j9Dn+e9dEc1Nlizf/6nS+6k4eE7zvot1uW1EUFeMe6zXa7XZKSVW9y32BOYs0W+Yzlq1YQ8WAbdEpp7/1uhwwrMNoWnbTj9anyRxoAvDr7o2woNcv0XVNdEqTZ2k5KvO9cppSru89I4Jl6jxjyPWN6lFH57KFbWRkNPEI6EBwJ0UAS5UtK1ANYXGagqZ5eIOt3k2QKm18a0jKA9KekeH1mcfgDEo0QuJ5RvV6/sZzcwopqhP/xzczozIx14c9wRzJ4BfvHR4e2mQyqaRQmN3Ovx2PxzYejyvgDvctWiRjfX3dDg8PK/nAzH9om7bT7LQn0ez0jiF6TgULh0yVlA+Z15j3eH4oYMK1KMPj2RyA1ud7hk0TQa9l4T6VGZgn4Jf9/f30n9/TAnCqc42BCr9BG+cBZBko8cesCpS5vk3bpH3GbVWwbXYy53DdIhoZ6BtsRX10dFTZQQhjgf49PDy0orhtzCFtCaC/KE7SarDFNaKe4DFcz7s/sZHBkQnsGoWohS7oZmNDd8HKeQZBPPd4zinxcU9uazl1st7MXJ0QPVcBS25tiQLX6JvrwXqCDTLwBlLQOJUO37iXt7Vl3QgZpi935XECT3Q6HSvLk4Wzi6RPzGIHrPYvH2d+YPLwAcpQPY8xZ8eZFzHXaAbX2TuWo5zcz8kvvYf7xwPwEbj3dKI+X+cyR4/wzb/nNSC4jBxWU/3MDkxENNQJgvpGRognb7hOObkR0dxb2KJxues84JK73mNw77znuQaIYNLJxqAD3i5PwGuH5gSnTmYuQ42LnLDV9ujzGKB4IWHuFx18T9nof60b14n7yiMVINqPuQiGtoeVAYwHM6sc4x1iFjWSoR5OL3ytgskDjpEyBykQ8IQ+ExRsVI5ey9/eGPNx79pIIHOb5zEicopCy+f/iDzAmwkjA55N5iVOyeFjkZHBUQ0+j7rxDh8MfHTMc+3OySDvWpUr8yr5u0VI4eIoEgNNbYsa1GZV2c/RC02L4UX5bKAw0OSX6/H6C15rASOIoye6yDsyMHJ9H80vj9BnMKy0vzy5Xud44no0qa/WO6pn7h5ONcEHfWpmaVcxdgR0u10ry9vvzphOp2ndDM9JnmMwMrmtDMZ4XRXqhqjGIlKEi1ieesaHJxdzWGRenePxTc7IiPSNGgZ6vo4Uh80j77zr5y1P+97Dld5z8R2Nm3e/9q+OhToHvHHK6XOtYx2GzdHckQytmCeovP8RkK4bPBaOGETusJyRod6lqA2Rp5iJwQMvwvI8zexJ1HbwbxV83nkGQ/ggfBwtgPYYiY0RrY9H8wATVvzoHx439iip0cQgjiMdnF/tnfe2o1wE0hxtBUQKlDgVxAtpKqnQVsOCeb4JeXzP85KNTK2f3pczQCLhlBPudfzpKQGeOwAfvGsZdi7j9AkGulpPnmu4h6MgSOWDIaMRBHiRmniQtX/Q/3wu6iNvPmPx3yLNDxDAoVlVxpudBqBFcZIixfzPa94Q8YBnG/MJkQ+ss2i325UoBAwJLPLmBd16HXvA+VsVeM6zC1L+bTJGytseH+WMDPb06/1e3dUh5wFAvh/P8+qj93mGES+cB9+yM2k6nZqZ2Xg8TtEqrM9RgwLHUAfGBGxYYr0NeGx/f78xeLqXFI0hn+dvvdeTw0ye/vEAbAReuT56jP9r5omnX/jcWcYm0hMeP3rX5crzdJdG6aI6eXhPnVDeWHGd+beHBfSDukeRSS8zJDIy+DtHZ0qXUgATWf5ccVBTCwhKHwPGDO4ZOlomTwDP8+QpgTpBr89k8O4JzZxhpROcQ8AMzhnQ6AJU9up7fcRMpIwSLQL1+rFJf3j/1ZBgA4H7gdvBCokZng0t7p9FUwisuHgLTgAgtAe5x9wmjX6Ynd6yExQZlGaxYtf79Lw+wwPuAG/87EgQ1gmkHGjR+RP9957NqUxHR0c2mUwqBqrWh8PIXlvBewDGWESqaRqaZpnzZnMdvOPeOSYeP20/g+OiKFLbF2muQD6xjOJoAOrKaYfoZzYUvcXjvHh7dXW1sngbBgUbD7prFK+/0HQDVuY5DyHaGIE1D6goH7CBz/rQS+fFNfzN/KmGtKezFbSgrVrHSB978oABDcaGx5jbgfSOoiiSMQhqtVopwo35jBRbM0vn2GGnuqsoThZ7s5zGG+Fns1llZ8NFohzw42t0vDwe8WRmNL46zl60vIkxoToDpLvseTLPc456ID7SeyprPWMid53Xz1rneUjvjTAhz9uzGhuQXZBjmBeRoehhADYEPTxQR2eOZOggRQ/T6zW1J5o8zFgqwDwmVAbjzubyyvIkbUQVmg7WPOR1fA4k6L3adk6J0kgAHwMjcps9UKfPyDFIDvwxReBQ/2t6lCo/BdE54OxNvEUindxeJMPsRLhyn6jAxX3cZ2a+oeDNIyZvvkb38DjkBK1XnxzwaVKGPts75z0L/cPzZDKZVNZh8FzxojJcZ/5gbFqtViXawcAG5dQBzVwf8f8IJET9x8fYQw9553mo7iVhHCKnj+fIwryH8bi/v39qTAEY2ViA8cBbzXKkgo0MnNMF5erhV4Dt8QDI46+I9/i8pxdU/vE9+ttLk4oADf9WOeABUnx0Ny3WP7iWjd4cOOV7MZ+xBqMsy7T7FCJTGF9EvrV9ihvMqi9LZQCGZ/NaqkWhnD6OxsU7j2u8MebyI0Mjx9t6zJOBueubtBXnPR2h7as71pQiPenpU0/HRRilyfXKz95xbqP2sye3yrKaCeSNaVRXTyY16dczzSYWqvivQMjMKgKIKedFB/DSymuH8T0MYLlOEB7Iv4Uw4rAse6pwX9M+wDf/5rzQ3H2ou9lpj5MuRtWoBhQG6o/+4WfUgRsPvHqeHyY9701Aj3lRd47CALB5UQwO5WG8eZwZSC6ioYF6s8eU189wnT3AYHYyPhz9YY+CB8KKoqi8qIrro/eoQafX83UQTBoGzimbSDg2pZxBgvbydZy+hHeqDIfDSn5+q9U65cnOAXBtA8YAKVKTycTa7XYCu9hmE+e1f1i4z2s88LlIiQMg93o96/V6Ke2Hoy6LQsPh0FZWTt6ozeATxP2OXeem06mNx+O0LSnu63Q6lTnXbret1+vZ+vp65eV5GH98I5KBtCqNeGuaFn88I8PMTp1XUpCNtvJv1pHKf5rWp+QZJx4owTU4z9Fm3q4Zc0vvR/+A7zQFA//Z0EO0gt/Irt+YH/zNW3Nii+jDw0MbDoepnqw/iqJIaVBFUZx6ESPmC29JXBSFjUajEJ8sInljgjFgcMjXesZqBFrVAeDJzKZg1cNMes47xo66pqA86qdcGcp3qIMe4/K8cuoMCP144+GNDR+PiHkA84XXH81mJy979YwNHlePf7QPzt3I8AQtAAgDEbOTiczKAxXOKXQNjeG5XAfvGFtqHsNrR6Gz+dsrU+sS9QWI65BrAzMOgLgynQJBzwhQD6AH/LXdGoYHRQaHJxwihRWRTiY8T49xm1RJ6/URQL+XVAdGOG3BrJqTCoqElddW7Z9IwCmf6nOj+uIcR1q8Ra454nkWCd/ov8fXKnDZGIORgQ8AmUYvdYchbYfX9+C51dXVtIMYnBgHBwdmZum5cGhEckX7wpu3ntLXseI+5ggGQLaZpXd3LBJ4Gg6HqR91MTbrC055w7ty8N4LjCtvMcspUZyLzCkyamRwCo23W5Qn6715DsoBJv6vvK2GM357YISvawKqlJ9ZfrJBAfAO4wJ9zWuNGGxCLphVnUMKdsxO3t8CWcCRXp1/HrBst9s2m83SwnweQ5VfHNWCvmVDievHTof19fW09mNRKALuCgL1+hx/aBnRc7VfvXN30hbFc9Hc8TCV1v8sRkZ0bU4Wc528sqNPk2ualKH1yckkNihUlvE9+lv7N4cr66ixkcHeBo0osLLnyvK1XOGIMVkYMRXFycI/vZ87jRusXiZmUFb8RXGyS4cKPA+Uab148rGy0EnjtVv7zbNmtS+5jawQtUxPqSAKwHVH3fjb62cFlFzvJqRKkuvjRTKUz3A/3wOv/SIZGSAdN063USNSF2B5oMJro4ZB8eFx5jEFMUDHOGOOAYDzvMW97N1lL6aW79XTLF67xaTCVOvN9ecID4PR8XicwD6eqdth8o5DmlsfCXUeF3h7sdMNjA/scDSbzWw0GiVAxfIA48VgUeVXRBGYxXjgHQ/dbtc2NjaS53fRFrTevHmzsiZCX3yHvh4Oh7a/v297e3u2v7+fjDlEQbDmot/vp52h2HBQA4NTqPQ6GDm6YYgqYibvXGR86D0eb0dGBMuBJs4VPaf3sWGOyAAvqEaqIRZUl2VZmf+YOygbfK2bW7RarTRPEXXHOzDwzYYLz0EuB+lQrVbL9vf3k9HZbrfTiy95rMAXqDNvoIIxwFhz6lW73U48tihUZ8DqWEeef9b3HkaIcFU0F86rbU0MDSbPYMgZVHo96yHGrCrvm8pkfYaHwbzIkedYrrvOM1hQfzUiGHtADiqmrDMsoj7NHVdqbGREVhImPgtJs9NAUTuDBakHWHMWGUCOelT1XpAXjuWO4kH2woBoY9Qv+puBMT/HuxfP5PpBMCoIxD1oNytDVVIAmwzO1aMO0rQj/vasX66/x4g81h64haDnXXl4C1CNZuEeXMdv/j5PgXcepPzK/KnGLkgFFH7z2Edgm42KsixPbQrggQ1PcEExc+qDKhb2ECK9hMFHpDA8sO4ZHHVCC+fRNhgW/OI1fJudvBm61WpVQAQbGLxAWpVwrg4AaUVxezHpdDq1oigSbxZFYfv7+9ZqtSovhYPsQ5/XtV2vi/oL8oDBdLfbtdns9taf7XZ7oSIZ4/E4zWsYARsbG9Zut63f7yceuXXrlk0mE9vd3U28jVSwTqdj/X7fBoOBDQaDyiJe8DGPM28vzZELXdytHzN/A4wIlOmcbcLX6AvPgPAAC5er5XsyV18qiYjfwcGBDYdDOzw8tNFoVJGtLBd4i1+koWEuob+j/uE6sJGIecdbyILU8cKYodvtWq/Xs8lkYp1Op/ImcCY2iFhHMn9gxzF8er3eQs0TUAQEo6wElvFKkZGhWEN1mOIsLg91VHDuybi666I26/HIwMjhLr2XHT5cL+/eqO88B8A8BoWOkzc2Wge+x2tjZGQAByqua2LY1RkdEc1lZHAD9D9bSNrQSBh7Fhlf5zG5hsDZ2PBATtQpnvLmenhtiQyFJkDXuwZ9Bkbn31pv7gNv60SP6XFc83vNqru2eALJ6x+vrTlA5rWdn8dg2PPw4/pc9CMy/u4VMc/ngIdHTUCDdy0LNs6h1ggR38fRM4wJrx9RHlPQxVEMraMaGCwL2JPIBg4fi9rK7QUP8MvyOIKjxpGCTS8lBuXXKTxu1/r6upndTkk6Ojqybrdr3W43RTnQl7xGIydPVOmqDNBruQ9haKj3ntu9KIRxgyEGXkI/YZyHw6FNJhMbDoeJV7vdbup7RG54ZyiMqa678SKk3lxVnvB0Cv7rnFZjW8EUk+o/jWzzdR4gbCJ7eb5o1AIRv+FwaAcHBzYajdJcQvsQAYShDsMO/Q45Eelz1j/47cl6nhM8DtzXWNOByAMiYF6aHYNIj+/Bc2yU82eRqI4PPX0RGRmKFbwy5tFbCso9A0LPcT0U2M9Dnp6pMxL4Pq5XVO+IPAMiimBEBkk0p3N15+d735EsY2e05ziOsJ2H3ealO1qTwZOaPT4qqPEBKPQYIWJyAALO2+WdQSBE+J7cQHOH8bNwjOuodfGYAPeyQGzCLOgz7jvcx0JRBSaABNcZwlvbyqFANsSQW8/jw4pA788B+aaTUtvDyo8jFOxJa7ValRxhPqfpPotCCvI09cgj7gvuc+ZrL6pgduJRR99gsbO3VTDKxTc/F/ygu+vwM9EWzMXj4+OKtxjATsGbpwCi1KncWKqhyREwpHWYWUVGoB8xLnxcFbHnIeb5r/MO442Un9lsZpubmwkoTyYTK4oirdHwFtBymz35pHLGE/Qsc9kJg914kMPubQpwrwj9xe+1mM1m1m63Kznxe3t76f0m4LONjQ3b2NiwS5cuWb/ft16vZ91u99S6Co1UqKwH8ZxSYzIiVc45ha3jpXwWeTQjigCMPhtlcirUzs6O7e/v261bt5KRMZlMEm/ifkQtNjY2rNfr2WAwsO3tbet0Ora5uVl55wh0O4Mo1JPnq9nJfMF5jrYqpsD8gwGKcWV5NxgM7OjoyDqdTmqrvqSWU625DmykIjrS6/UWap4o5cA+R0jRt5qdwXLF4zkvIp2TT57+V5mvcw1j7F3XxPhoMi+1bjxPWPYz1tO26THuY3bgeUZGk3M6Hl5bPODvGSU8XmxQqCzUa+qwSY6aYr+506XUE6Tno49Zfj967znewj0Nc0ehWs/I0Hriv3aYl7fG9yrz58rKMbBXjtbPE95sEHipUTpuLLhxjBfxqlJoQlxvnahem73JwcrVe7N3WVZ3PGHg7BmOi0BexI0XOHp8z6kAWgZ7CbWPOfUMShfvcPDWq6AcFkJcJxCXy3NhNjtZ5InfrKg4jQ/t4DmjFAHpnCLFsz3liLaB51k+6IfnF/dvxE/cBh0PlovqFeXICcu9HP9GytWTKRoFVUMU/bBoW3P2+31rtVppxygGuSxzkUsPo6nT6dhgMEiGBiJHnLbjzTuQzr+cPI54gUESyNN5DJa4PH3+vLLMq7+ne2B8I1oxmUwq6WdIl8Jc5+gXohWbm5vW6/Ws3++ndDZeO4OxUjAFUgOKxygHXrV/zU62/ebtiHmeeYv1FUMAWHr4YlEjGWZ5YM3k8ZiejwCuh2OiZ3jg15OR+puf55UXzR1QdCwivT5XL65bND/1f+4c//eiFxFG1DZp+6JznnHIH9YVuTJzfRk9L0dzaR2enFq4F8mIAL1ZfiG1LtjTXUEgUOA1BTFw5ZAsP8sDGriXGUOFtrZDJybXn0kFrh7z2s/WJW9bqO/JYEDO4BtlcD+pxcqGGU8CVhjcLww2uR84WuJNIgbDuvUiznFePUc0EMnQCIdO2KYC+G4Qh+D5gxfxlWVZiViYWVosiWPM++BTTzChH46Ojmw8HtvBwYGNx+PU115aCPM/ytH6KFhA/6IMTk/Cwsujo6OUW4321xkL+j8SWqqgFMhAZuA3RzC0zerV8wCeCmolD1DhefCOHh4eprQppHVgm00vjY3bF8kHnjMg9k6x7PCMHqTBLALdd999aWE8AC/LNzYyiuL2ImGsvbjvvvtsc3PTLl++nDzqZlU+VY+s2WnvLfrZMzRVB6hhUccjWp/Is+nxgQcAIkDi1QPyFgv+d3d37datWzYcDu369evJ6MCzwSODwSB587e2tqzT6aRvGHOI2qlzL5pD3nmeM5B76mjx9C4IxibqNJ1OUwQMcoCNCKzFAm8prsB5pN0t2sJvUE6eav97YBZlMI97Tkmz6ppakOfxZv2rv6PrFEt4hkDO0NFzaqRExDzF9fLaxFiN5ynjLDWgc0ZIZGR4WMszFLw21Bljqg80vdmTkbm+m0f2Mc29JiOqGDfKs6K0cVwmCB2hQkANA9zHL6VjMK6TBwMBIHB8fFzZSYSvM6saAzyAPOk8Rvfa5AlbZkz1YHP/gKmxUA/ADt/ewld4sIuiSGkv8DxxWouOGz9X28Pjqm2OhIq2Gd86wdA2fr/BdDpNL8bCf/5wRKPu2XebeELzwsKjo6NTHnRPOAIU65aebDyjLLzt1swSSEOZALxQsqxwMQ9Auv++ps4p4RrOn0c5bKRy/T2hqhQZ6Z4QxfVsiHH/ox894J0j5fcIrEb1QZ14vnFEg2UXtw/35/qBZYYKfW0j1xu8sEhGxvOe9zwbDoepfsPh0Pb29mw2myWDHLy0trZmvV7Ptre3bXt72+677z7b2Niwixcvpn7l+aF8xrvRISoC/mR5xLK9iT5TveZ9lFe0nhG44vI9wKb3MV9DH+zt7dlwOLSrV68mI2NnZyfJT/Dm9va2dbtdu3TpUjLktra20iJ8XtOjUVDUJwIh2k/c3yoLI7CofaprcWDE8/bFrVarch7bOSPtDrJQDQ04BhaJtG+bgDsFyjoGnqOG5UgOw3nP8nhVcUKkS/g7Gn/tB++4PkOv1X7g49wvnmHAujEyMuqMCzVc+LdnbGg9vfZ64xJdx3q4jn+8MiN9WEdn2l2KG6IV9gQ1X8/lKWmaiOeBBFOwZQkvN+c8q9Jg4chh9DoAAcbwgHmur/Q36uN5zVRIcz3QJuSf82JX9vADfCOfuSzLlDt/dHSUBCjAl1q1HjNG53nCqgDxFKJ+88RC+3SXKQBdjXKgDxY9XQr8C+U3nU5PGRlmvnCN0qzU0OCxRr9wHaBwYbBpzjqeqSCMd/mKhB8bicwzvI7E83RyGXVzSHmMz+mcjiKo3jHud31mdI/yuAf0uO81zdNLEYnmvqccVXGpsOf+wDmUzXVZFNre3rbV1dW01mo2m1V2nNK+73Q61uv1bGNjIwHhXq+XACXSqtTphD7AmMDIMDst2znyFSnVSJ8pecBIwYk3/hFgyz2H+ROyAC+j3N3dtZs3b9qtW7dsNBrZaDRKbYYDBP158eJF29zctMFgYJubm2mHMtUXrJuiNnt9UBTV90GpbvA83Hw/j5MXLcZx6HheL4Y1QLPZ7NS6HS4LBswiUcRrCqpBnqz1znvlsRzJ8XidMcF1845pGZFxwPWK5CSnAek5T5Y2aZfiFM+giIwMz9jwxiQ3Rl47cng6d3/Uf1H7I93G5QHL1jntzM5gZHgPVUGZE8gKZDUcBy+rAi1vAAGyJ5NJ8uRyupC+rIcnD4AX75/PxIqKjRz9ZkWhzKKGEQtlBXCqaAAaR6NRyqtVixflYNcQ7BDC27tia0gs3uNFe3iWAj9PwKvCZbDjGRYqQLyJCYNwMpkkzzx2P+FtbhHl4BdyYWyaTJy7Tcx/Zma9Xs9ms9s75QBUcR+hXz3lybn8bJDB44t+ZTAGzzUiWDjmLYA1qy4QxTMwl/AMs9PRLTaCOIoCHmWwjXp6pArNUzIsY9gJoWVw27znqbD3QA+XEYFMlKXz2Ky6GPzg4CB5U5HOgX5lQI1nRcrd836Dz3SRPl+PPlg0I+Py5cvW7XbNzJJxOh6PbTKZVBbxg5f7/b5tbm6m9B1EpCEnIP+RNogoLxsSrVYrgdFer5c89YPBwDqdjplZ8oozAK0DyDx+ZnbqvxrmXO+I15lUfnqABQ6YyWRiN2/etOFwaH/6p39qe3t79swzzyS5CsCNqNDm5qZduXLF+v2+Xbx4MS2i54X0zFPevOF6MkEuoS88Wc1yQXW0hyPA74hk9Pt9Ozg4sF6vl1JrzU7eo4IF7OA1pEtBB3LaFXTkoukTzaDIGaFsAEZRYx1DLjfCak2AeRMAy5jJK8Nrl8c3HnCOHExN68bGLvqQ+9L78HVe1MKTGUrRvOCy4HhlORQZDx4OZT2sThy+j+cs/2bdq4ZGHc31Mj4PDLCQ9YCC982VVCNDO44nDToCQhqAk4EnyuEdJZjZ8B+gSKMd6FydOAyotY486Nx+bQeer4zKfcPtY69+ZAF7wgL1hULjvG0oZ7RdBZY3TpGwiRSi95uPKeBUz6NXJitnvp7HbRGI+xETmxcUMiDEGOF69YKrUcf9oDzFz+LUAW/LVh5z7mvUgT29Gskw83eQ03KZtyPF4ik13O8pU+ZDnW+qTCK+RHs4WqObJniKlxeV8rO87Ti1L3XTCl5z4Bnj2jad7/qcSGaqXFikeWJmyRAH2EPePKcB8o6CAP8Yv/F4nNqJdFK86wFGhrYf8wFbDHPEFF5wdiChnp4zJSIeP0/ue/OAv7kcvtcbf/DfwcFBemnhjRs3bHd3165du2aj0SitvzCzFBHa3t62Cxcu2NbWlm1tbaW1GDCyWBeC1IvryXruN9ZtOKfzmtsTzWfFGBolhsEAHoE81HnHazs9GbmIaYVmzbzYnrwwO52Wy9ec9Vnzkscbei6HIyJ86eEwNS7YsGlaV55vkWHhzQXVlZHM5jao3tL5gzbpnGpiXGi50X06xt61yhNeORGdycjwCldhkCPuXCgNFh6qMCFIkTYEbxcUClKFyvJk5wl4pmAc6AJJ9nKlzvj/PX3KOCsrK2lLVS6Dlban0L3JysAGv9G37FGG0uTUIZAyPxQjQCb6jNOPEA2Act3c3ExC1fOUoP6c4qGKkyNMfLxucrEhhVQHBgSa9oF+47QxbveiEdoBRQgw0+v1bDQaVdaWsKHkpdcw4AHfIJ+fPfoABxsbG5VoSN2CZwUMPPYsoNV4ioQP9wE7BphywIPPqzxR5eGVh3ORoYr5hP5nfvI2i2Bwii07MWcASllGsSxTMANAw7KE66rGjdY9dy2PMRvkzIuLFMlAJAc7Gc1mM9vY2DCz21EJ1B1pnngBHNZpHR4e2u7u7qnxZCMDZbBMw3yAl3swGNh4PE7RRuTkHxwcpLmLMfcMtRxwZm+mRiGi+0Fajs5T/Ab/Inpx7do1e+qpp+zWrVv21FNPpTRTRCguXbpk29vb9imf8il24cIF29zctO3t7cSfXuQ0MnIiXe+1sa6vvHtZFnE5GI/ZbGaDwcCOj49tMBgkLAC9wqlSSJfCBhV4S3y/33cjHotEOXDIAJT7U9cOMHn6WR1GujHOeVAklyNDQ0n5IALCmKPsGKhri/YJeEXnH/erOpgiw8JrF2McxTuqU6Av8Gz896IIkWzJ6WtvXqMfwQuK/+dxvDTWOryIkpmbv7nhnnDANWiQDnxu7QUECG+/hxxeGALwjHnCDOXnUgsUhHnediyY47Z4QFe9/sykuhUrnlkUxak1JhzmYoMBe59DybBXEOkueMkSUqlwLTyG8GoBPGGMo5xk7i+uO+qvkzRSSjz+amCytwkgnRcdehOjCaPfLfIMJQabUHiTyaQiMDQ9kAWlp2wx3ugfTo3S9RweuGG+0/5TLxC3i+sSGdLe2gMQj7lHnrGh5yPDMgfGMXc5rRBglDdN4HnOcmNlZeVU+hlAGQN7fgki9ycbfli4z0YB9w17gCMeV6UaRYG5/poSei9pd3e3InfBwxyhhowCAIS8hZGtEVCzE8Oe+xX3MeifTCYp9RC7E43H42TUYKyxlWu/309b5bbb7VN8yPymXn7lJ7O8ZzGSZ8oTcLRNJhO7evWq7ezs2NNPP21Xr1613d1d29vbMzNL77vY3t62hx56yLa3t+3BBx9MabS9Xq+iZ9BH6GuuP8tulUte/T25pXMzAsEKurRcbGqC92XwO3NarVbaehfnOA0OqVbdbreSItdutxdKn5hZWksUOXl5rptVjdrj4+PKzntKntGi8vws5BkTXD8+Pk9/o05eVgnrOzW+mrSFsQsbDyxjvBQqz6hQ3vbkNQxh8DLOswPBiway/uVnqFEVGQ6KdVW3Mw5TZ6+HWetorkiGdhY/yGMUZViuEBsbOK/54mwxAixjhwzk56NjOMyr3l/2euubb5Wx+LmqmNTDyd+scHKgnC1gfjauRQQC1yjz8d7no9EoXQdw2e12K2E2gCreAhY7bJRlWcnT57Ur3qTg8dYx5fHPGQARn0SefPXqL2LkQkn7DvXXHVA4L1uNDA+EqLBBecgr5siUGrgMukDRWHAb1FvBddGIhl7j8TfOR3JDhWRUN71HBbwegwGAHcywPgYfTk/UFEXwXa/XSzsdod/Z0FCFhLp6vK0Gmld3lmFqqHu84ZWpvLUohJQo1Bl58oeHh8lLbWaVCJAqVTXkiqKovCgSVBRFJQWVI1pwvGCLYfZ8IzKI9KLNzc20eQavVQCpQo9AS25eexSByqOjo/Q2dCzuvnbtWopqYA3Q2tpaepne5cuXbXt72y5evJgANhxz6FOOhEHf8NbhXCdPZ+M8nI6cRaAUOT/4v96HsnnL6F6vl+Yydr3TbW7BP7ymA/zC+mbR3pPhOZpAnvxUZ0sdKPRwmsqliKLyFA9E33qsjhgL4TksFzRCrG2O2qV18iL9UUSjKdbhOQOdwNkGihdZn2Au8TfrJ7P6yA3ujeSN4hVPv2v/NKG5jAwVjAxeIkND79XBUMMDDTW73dkAxzs7OzYajdKe39hZB0IGHicoAbOTxXDHx8cVYQqF5YER/uZOhXeEvT2RYcECtizLBGL0XQ9KbICgTFZm8MTevHnTxuOx7ezsVPqw0+lU8pf7/b7t7+9bq9Wyvb291G9HR0fW7Xat1WolQYv2qEDjCBa3lScwtxd9xoqKvXjs3cd9nE6ioIKPcd4tT7Y6JX23iSermZ2KZGCcENZH/dnDwcTHkSoATxwAEfau96IXkZEQgXYlrY/yeROjSI2KyNDwQFdOmHkGPAtBAEkYFzdv3rTJZGI7OzvJ+Ma9vCU2POlYhFyWZVII/X7f1tfXk6cUcgd9wXNYwRAv6ueoB8seyNNIpmJeRjtXMf/hGJwKi0JcHyhdvLV5MBhYq9VK7xrhjQtWV1dT/+viZFWEoNlslgAoouB7e3vJcTWZTGw0GtnNmzcrcmplZcUGg4H1+327dOmSXbx4MW2dC2DLm4uoRxJ18QwMdtqBIlCC+uAaGEqTycRu3LhhN27csI997GNpHQZkPNKBrly5Ys9//vPtgQcesIceeigdL4qispEEy2usaWEnFa5D3cCDLOt47qNfILfxW/VJBDTVIGOAhGd2Oh0ry9K2t7eTExHRYbwNHs4BrN/EdVtbW4mXMG5scC0KqbNNMzHMqtkBnPbN/NfEmNXIU2QE1xnHCuy9uvLHi7bXGTd1OkXxgdYjB6C9j+oZdUR7+tR7HhuzwDJcZ5TPG7EojlIZgrbytWZWWf/H4+t9NGqBdilOQd0w9+vozEYGjvGgep3rNYaFSsSoGHD23ENRYMIgdQHChMEn5/mvra3ZbDarLPJCSD0n5Pk4C2GNaHigHAPPHjUvGqLtZ+bhfoIyQJoYPgzUzW7nM6NvADyRt4qdjSKQGTGf1okt4ghUcr9Fnl02ODwPLz9bIxtc1iJFNzAn1AjiNkQT3SMPOKIPWPGYnU4X8rwr3KeoZ84DoyBHr/O8RXxegbL+5zp6oDqndNSYUH7DfEWa5Xg8Tm8+Ho1GKWqhygVzXOc7e8qgAAD6zCwZDx6gZF73UuPYQI/aqmOo/K/HVVYv0jzZ2NioGHaQz9huGylR6nzAlqtYV8YLwqN5hOjtZDJJqYorKyu2v7+fttEFoOZoh5mlF1xinQZSULvdbnrjOBwHvH0qAxceW0+P4hy+eaxZ7mJ+gGdhDLAHvyzLJE83NzeTUbS9vZ3e2I01hgAwMKg5bRBGBu/WBd2LeaDrkxSowKhGWi6v/+MUnpxzj8Eiywl8c/oT5iTSQXq9XmVDAYAirjuDPAaBi0TefGfQp7Ie9WdHJssuLtf77f2vq5/Wk//rb9RTATyfqyNP59SVERkZfL+nMyPjg/WP9oX+1meyPMac5sihzkden+EZaV75HPmI6gLSQADjVMgUnAMeh8yro7nXZOigqNeNBz9SeGgUgwOv4YhkjMdj293draRIdTqdtOXe5uZmMhqQa81vkYXnl4UQ7llbW0vP07xTZSIMOG8Py6kw8JCAcB0MDvVocWSE+wBePgAdLGhESPzGjRs2mUxsb28vlYO1FgcHB7a9vW1mt/ei7/V6yUu4traW1rEgv5gFr3ql9TiPO9qEuuM8FBgmhOaoQwAyYEbaCYMF5gcoJd52EGUvEnAys8SH3kJ23sVEvc9MKiyh+LzdVDDJPeEDioS/jmnufk15wPhzLjdfp4AA/cBgCf9Z6XjKSPuGP2wQqJEBYLi3t2e7u7u2u7trN27cSIBT+wd1YDnG7QHwhRdnPB4nYYtoKTzEDIB0P38AZvU6sVDPKVsuPzdneYxRl0WhF7zgBTadTm1vb6+y69bKykrqD44kbGxsJND8vOc9zwaDgT3wwANpLrAcUx4CCIfnfzQa2fXr15MMHQ6Htr+/n+QqNhc5ODiwmzdv2srKij355JMpderixYvW7/ftwoULduHChfSOiW63a4PBIMkxpQhgRIQx5jlXlmXaVhrKHht6lGVZkQ1Xrlyxra0te/DBB+3y5ctJ5x0fH6fMAOhWePkR/UfUHUYGNg4Bv2Leo+9hvLBs422Ct7e3rd/vW1mWyfBg/oyAHQwG9qayUc1bHEPGQo5Ar/CGC9PpNJWBKCQ7ahbNwDA7vUhY571iC8gcsxM5jbnlRZyYv0CeIWzm6ybUUZ0aKqNUVzOAZsO+Tv5FxNgzcnx5bfRkhmdMcKRPU97R5siJwOc5RR1YCRvCQO6w8a9p1ShDHWzqsMN4w9hgZxb3AfOU2cmLYtUBhPOQm5ubm2mDpRzNvSZDhUITi9cDNerNjzx37F00s0rO7OXLl1MkAwzLOapIU2q327a/v18BH1g01ul0EmPoThpmloQ3MxnArQfEWEhB2HkGCxsnCpg47IVw/s7Ojt26dSu9uRVhbPTf4eGhraysJKVQlmXy5AwGg1QnACIWvjnvugp2ZWQdW7aa1TPshdr5w8/gvgPfob8gQM8iiJ5tQvSIJ6j2o+eJ8iIQ3M+sYNB3UCBmJ0YG5gmErM47T8iCvJA1X6f1Z488eEgjXHy/tifyHDEPsVJjmYC2aqSBj2OODIdDG41GCSSZWUUJo2x+oRsADIx0tA2OD/yGzMGubrqrV5MPyxI2wrh+Oh4R8PCUJSuSRaGHHnrIptOp7ezsWLfbtdFoZOvr6zYejytphtgB6YEHHrCtra30GylM6G/PkYW+4zTFVquVXuQHpb63t2f7+/u2vb1to9EoydrxeJwiXgcHB7azs2PD4dDG47F1u13b3d214XBoW1tbVpZlSvPitTognf88rt58xz3qYVQQAf138eLFZCDAe//AAw+ktRhY57Kzs2OHh4fpRX2sKxGl4S2AESGB4YG5hbrBm8mpunB+IOKEdzxBRyHFyduEhceP9a72B67lqATPfzOrbCDCnljcx89nnlk0x1XOwDCrgmIzq8gVAEZ14EQyGr9BOUNDr9GyuL46zmV5su06+AkZKDqOOi8izJnDol77orZ5jizGfhyBZT0b9RnaDb0AzId5iI0bEGnH3GN9BF7ml2Ti+fzeLa0H6zmsVeI6suML7ee1u3gGUlOL4vY6352dnYpDPUdzvYyPv6MO9c55lh0LUrWOQWpRolMGg4F1u13b3t6u7NYDYIG1GwADWEwI7+lsNktbuKpxgGfit4IYBTQMghWMczs9IwPgmsuAd9jMUt3h8cMHL9xjpkHKxmg0Sh6d+++/Py1+A2FRpKYfcaRKJyQLh2hc2QhVI4M/XAYEveZVe0YZjxOscwjQRTI2eJ92z6usx5g/PAMDxEKbFSM87BylAylP4nr+ZtKUHe/5GDMeO06hYFDr8QTzTK6tfEznpBr96nFClAveV0QcptNpEsScLsnl4DfaBm8stsA8Pj6u7NrGKVkAXTxGPMc8w4yNM7SdKeJtj58UfGBM0OZFMjIeeOABm0wmSXnizdLD4TApTjOzra2ttGAZBsfly5et1+vZ1tbWKe+s2WnZCyWN9QDY0pVToKbTqfX7fRsOhyn1djgcWlEUybuIKDB2oUKkfDqdJqXPa3N0jnt6MHIqsFxVGYFrANixMB0gCM4lvPAQXv7j42Pb29uzyWSSHFZ7e3spqrO7u5tSajWFir3NiC4UxcnLPzltDAYH1tRgPs1ms7TuptVqpbWAnm5RoxvzlP9zH8F7D3loZqfmndlJpFmNDDVAFolYjuu8N4uxBQA8znuO0QiXKTEPRliAr2OjKKoz9zfG1+zk3S98Xa5uSp7x7oFwr236UfyiaUvAa2gX2qP9DEMYegWyB7vA/emf/mna1AhGBo8d5peZJVmJOsGIR79j/NWxxFFiNjLgbEa7MP/xHiL0G6IZwNiDwaCRTpkrfg4mwUPZ41hHyox1jINrITx6vV4arAsXLqScWFheOzs76e2m8NLwgB8eHqYt/Q4ODpKCAiDkELcyKS/W5i1j2QLnxdxgDNzHTIN+5Pd5oA84Lw9l8k5S+CBCwwRlwIp7OBymVDF4m2A4eaDVE95qYDQZWyYIfX4nAfpclWqkUNWDw33MwnURCCCDw79qaETeKAbPXuSHvd7gL4wneIJT9FhZolzmMRW80RzFNVBczE8aWWGlol4sDwgzoPAAdk7we0YGgBGnTAIcYrF2q3V7DRP64datWykigf6BAN3a2kreYDgEEBnhXXwQVeTdptAPmuaGSCKehbnAqaNqZIFUYWs6FpQL5HNkyN1runTpkh0dHdmFCxdSlAmg98knn7T19XW7efOmPf/5z7dLly7ZI488ksYC74KB4ygyzjF/oKeQwjObzVLqzmw2S2sy7r///gS2sbkG9Mn169dTyu54PDYzs+FwaK1Wyw4ODpLRAXkOUKHGhs55rqeCIOYJ/Oa5jnQy6EeMN8AM6oK0qP39fbt27VoyMsDHt27dsv39/WRk8Dt8uE4eeEN0gtM7cA0yBpB+VhSF7e7uJoeYAk0F99w/DKB1DkB/e4AQxJFldn7wXDWbby3C3aKccyIyQLlt3rjhP1/vGcUgvUb7DXOJMRd41qy6ABmEMsyqBiHkIuqusjBnMOB4JO+84558ZD0D/AKHAvQG9w36hI0I3L+ycjutcGtrqxJR3N3dtY997GP29NNP2/ve9z7b2dmx69evV7Ai6rG9vW2DwcDKsqxg19lsZnt7e0lOwGDY2NhIEQ9OWze7vW4XcwbZPJ1OJ0UuoDPhZIGsxdgyhuB+iOjMkYx5lJbeGzGylskeB6ShQHgi9A3hhk6BQMXLlJhRERVYWVlJOacMZD2Qw9YfewwU7HAKFc7x4HprTyIhp+kiUQRF+w7nGNDzdrjc92pUaL9HRsO813l9hXu1PyLPivcMBuSLBKBUEbDXTwW5jl8ElrRv1BiBl5EXPXL5OM5pEBpiVa8TnsuKCALUzFKKCkeW2PCG8Y05weXz8ZzCiBRkTvGwcc7OASgA3pEI0QjcAwXC8wzKAw4BBvbMz7oOiT3sChJ0XY5ncHp9obzggQ+VYwo+FoWwKJgNVxhk2AXq+Pg4vZEaC5fhpWe+Y9mnHlAAHXVIoC/wzFarld4XgfGAY6vf7yejAelcHDXE/OOUIpW3ufmO//zttQG6BLoL8wj6kYE45h+Mkr29PRuPx2l3NUQ0+B1Knr5S2cB1w7wCT3Pqhb6Fmw1fdaTUGcHcN7hHZZMaKswLRVFUnufpO+37RSLloYincvdE/MbX6v1emWzYgRQXYZyBRfCtz9WIL5fl1UHnrocdua1qgHmGRO6jBqs66bhvtR/5Ht4cAZkkZVmmeYmtp9nIYB5nGYAoKu96yLqf625W1dP8jiZ8dLdDrjuu1X7z5EGO5t5dSgdXO9cD0notysO1YEgNM5lZZcEJBD28NxgoDNKNGzfSFn7wLDKwQXrRbHZ7oU2v16tEF7jOGCwOhbFnzIs46ITmdRVs0Chg4FShojhZGwLBGAFO7U+APFYuWNPBXl8eUy+C4QHieUkFAPqLvVgIoWvb1OOtbWWQzRGkRSBMXPVUM3hRYMjzwDMkwSOsqNFu9AEDZPQhez6n02nKMcdvPANRPIA3ft+M2enUNqQfcloR2se7zOA4wCSDFk+IsmJgvtYIoacwWBkA7CGffGVlJe2Xv7W1lfhuZ2cn5eUPh0Pb29tLdeB1XigPufyXL1+2yWSSUi6RemJm6blmVknRhDcI6SJII+FwN7c1IjUuOA8e/bzooMnMKqF/7H63tbVlo9EorRvrdDr20EMP2cWLF+3KlSsJtLKCQ5+xZ0+BAeYGy0APdGGOYbHy0dGRXbx4MXn+Ebl65plnUnSZARJHrxkoqZde57kS5CW+wYe8rSz4EsCA0//Q9t3d3WRYYKH33t5exfkEpwS8raz/UC7v7qXGAtqIdSDYiKXT6aTdrJDqoWsgeD5z2yN9g+dpFJ/1PK6DHIAhytvv6g6Fiz5fFNx7zoTovpzDwcMSkcHBkVPIHWAc3mmPebAsy6Rv9vb2KilAGDPILd1AQJ2vXBf+Rru4fershYzg+plVXxmgsoMdRnBOI6sE80b1N8qETEd7OYUa/Ij1GNevX7enn37annjiCdvZ2bEbN26ciiCaWZr/t27dSmvVcB7zGbgXL980O5GzwMpFcXtNBZwAiGRgi2c8C2OqGQmMwTFmdXSml/FpB3gDHxkiEQOjI0DMEGggAxp4J+DZ4W38GPy3Wq2Ui41OBJDnEGrkQfKIhRjAHLdZQSNbmHo/b3uoTA6hyO3nECh7UlmAMthgY4XrkfOMeALoTshT6JFR46UXMKPnBOciEOrGHj5NF0K7vHZoX2nf4FoVhLyLF8rFcSwuQ6QPcwUEfjk6OkpgmL3MWlcAGxg/PC8x5xj88Tgr/7JhzmPO/aLk9RP4m99sj3GA0EWqTVEUNhwOKwtgkW4JRcrh8bW1NRuNRra5uWlmZv1+Py1644W0avyyt4+9Sbwd69HRUYqKqDNDeUrng3qPecx0vizSHDGrehzNLIH7srz9zoPt7W07PDy0ra2tytar8NxpGWx088JF7JDEoBzzhnkQ5eEbc4kdVlDYeAaUdlEUyQBFPVUXqEPNc67gOjaQeBEooiQAOjznmcD/WLyOHbWwexQMKgAErDfq9Xqn0no1KgGeYgCHvgFoAQCBM5AjT5wmrOl9PAYeqcwwO9kNimUMdB4vIsZvNaK0/PPQd+dNqgMjJxzTebVDjRA2gFnWsfwG1jo4OLCnnnoqpbEjDY8JqX2Y43h3CZxCHBFmnahGJeMajHPksFP8pJE11a28GQIi37PZ7NRrEDBfEXFAW9fX1ys6FzoK/cjzDDtn6pzmDUWgJzD+7KxV+cFzVDfawfxnhzj6DnpTPzxfsXatjuY2MkCeRaxUd5wFL4N1XMOMwZ5ftpZZALOHxqwKhiBoIGS4U1noR8CPCUwGI4OVnSe8PEMG4Tb27ONarhfqqwukzU48OjyJOPzF12kdGNDpODU1MOYFLpEnBXXwvDQROD8vA+i8iccsSmXRNkUGhpmfL8seQE7V4PFlQY/UiN3d3bTFM0fe+A3kHM6F8avgn8+DJwFAWBHyeTY8uM0wRJg8XtQ+5t8oR9OkzCxFMQaDQVJgiGSykYG+gTeNU1P29/fT1p9mlvb8B7icTCaVfmOvOTtnuK8Q8j48PExlqzJV4nHgCJGuyfAM20UzxnnczCzxIQD+5uamTadT29jYSC9Mwz1qZMBTzSmBiFBhLZ6mM/EiZpY/PNfMrCKLedEw+I3rDqDN46hGRs7Rw+c5Qsn6Dcc4mskAoyzLtMkBjIydnZ2UFmV28oJIBnBmVT2FfkCEgnfn4jHEdTBCsBAd0SDd1AP9DL5lsKi6N5r3nBKq+gTXaf8ACLNX2yt7ESnSGxohU1JQPQ+pccEGBnALO1HNrAI4p9OpjUYje+qpp+zGjRv20Y9+NG2gAAJQX1tbswsXLli/37f777/fLly4kLbhB7jlOcMRc9RP55nyCsaer2dcpEYG5Dfmnr4rBuPC80cXTUO28P1FUVTmMuZDp9NJ79/xUtx5q26V7YyL0a+Mb9UxpXOf5whHNr0XJOObjZ46mus9GeqN8ZiXPUMgBQ0Mrlhom8UhVLaaDw4OUl4s6sbeQQwkDAGeMAjNobMikIc6QClxe1kRcLtZ4JnZKYHMSgcpVEg9QYoKM7yZpbSUwWCQlBpC5mBkTNaVlZW0J/mFCxcqL0BipYa6RR8mFvYeEPb6zjMmIBhQnr7Bm610bwKp15aFm4bP7yXx3EC9MYbe4lxVjGpgqmca1zIQYYHCQhKLkm/evFnhl6Ko5pkzwAFQA1jiN1qjvuw15rniGRkQtOAHtAHCSc9xO9HWOuK+g+d3Npsl42lzczO902B9fT0JeyxIRarUcDhMazV6vZ6ZWYpeIBUE/dFq3d5lg4U3yIv+QH4CqLG8wAs0eWMEzyhg4c9veuf//M4ZjCGMmEUCUoj8mJ30V7fbtbW1Nev3+7a1tWVHR0eVVBvwOZQwp8Vhkf/Ozk5KC8RL9OBV5MXJapQz8bzE/OMIH+qJzQHQxxgbOMx4ATWIeZ1lHM4xUGBvJBsAzFcABxzxAJiDIY15zO/wQNoZng9ZA1mN68Bfmi6FD2QZy3HMO3Y8eDyd88RHxBiEHR8YN3VCcj+aVbeu5usYjywiqUMuZ2xAHrIXn8to8hz8ZqzGPI3NNCDTYGCiHpPJxG7evGkf+MAH7IknnrD3v//9SR9B5vP6gPvvv982NzftkUcesYceesiuXLliR0dHlZcpslGCzR+YZxkHQM8BZGsEjJ1BwIkauUD0ASnnnGbMjgnWP7geax6BVdBnnIrUbrft0qVLybHCu6JqVAEOsitXrqR3B6EOiLgy4dje3l6ajygPc9bMUqQWzgu8oLTb7Vqv10tON0QtsJmEOkdyNNfCb8+oqHuQZ3AoI5tVc6+9MnnisEGiYA5WL3s7GPhgS1d0vDIeMwx/uN2a/sQeOW6nep89gM59wMIY96NtAHrw2kGAY2IAxIMBoQghdBnMcf0YDOnYRIZkRKpEPIMGfe55XbXP9KNGB0+cRSFv/Lxohpm5fMe8xO32FDLfw4YHp3PAq8m7erVarYoAgUDDC+rYqAZowCJYM0s57uwd4nqzQC/LsrL4jIU/K3ZVoMpHdWMcgRiWCywfOPUQz1BnBkdDGGyhjwAg2cDC9V5EDmAUfcIfRJHUycCE8hj4arqadxxywCvzXtF4PD4FaNnogOGk/QhwAjA9Ho/TS/bG47Fdv37dhsNhep8Fe/7VQMEcYXmscxP9ivrACBoMBnblypVT8sqsCvxhfOZkGuaQNz4K+DCHuS/MTviRt6DFHIOuAx+DJ1g+YRw45x7tZg+mymkAFr6Xy+B6q7yK2uoR68qcM4v7lA0Sljdmpzd6ieq0CBTxjXfcc5R65c37TLOTlyPjnSrs0Vesg/ULWGdw9erVU0YGe83NLL1IeGNjwzY2Nmx/f9/MrILDIIOxiyPqqpiKx5mNApAa8bygG8d5TQZHE1Ee5DYMGdU9ZtX1Pxxdw7wcDAbJIBiPx9bv9085toHrsKYQjhe0h3USY1M43RQ783jCCc9RXsbU0J+chq8R0Dqae3epuomIDq8ry5sYuD96Dntv2RPabrfTQhcoHfZowKOPQdrY2EhvamWgwZEEMBQUFHtOEOZCnTxwraCJBxaDXhRFhcnBOAB3ZpbaWhRFCqlduHChsr87L3Lv9/vW6/XSJ8qr93K3o/FUYRxdVwf0cD+MPShuz9BQTw3aB0XJhtkiRTJUOJhZAvI8SbVPwdfqYWVDk+/TfgZPAWggPQoRDLPbfbW5uWndbjd59bHegCNrnJfNb+zFOMBomUwmp4ADb3AA4KwCmNOI0EdqkKE8vpfnFQMy5V0WkroGAsZ5v99PYHFzc9OOj49TewDeMGZ48RsEPL/wE/nx4G/wNgCZWTUdFCAR412WZdreE6kE6EcFnZpuxR9doAvPIiIakeFyr+jJJ59MW68ivYZBPrxnbPzhA+Pi2rVraVHzk08+aXt7eykHHNuxqhHLazKuX79un/jEJ+aue1EU9oIXvMC+7Mu+rPLCU/Q1ogeIuPO8Z8DPqYTqcGKjFHVHJJjBD+YeDCc4FcC7SMWAY43z3NEvqA/4BR88k3UF5ha+WTZz/dEGBqmq51nOeSCfnVxchvIE6wLeKYf1KwM7lTX6zEUj7kPud40cM5biNCHP8adlK77jPkI/Yn0f5h6Ddy0X6VJXr15NC5uRvsjef1BZ3s4auXTpkm1ubtrm5qbt7e1Vos5IJ8JiZTNLkXiUqY5hz3nJulKjo7xhCOYSMCUiGuykWllZSXIGcwV1BDaF3kH9UG9si76/v2/33XdfJTWLHY1s7GMHPDiNoEuxvpd19/Hx7ffi6Bpd1AOyBH3PKb6oO2Qatq1nJ0VTw3wuI4MnOxiDH+SBzLpK6MB7FrQyCd8L0Nntdq0sy/RGRAjvlZWVtBANYfh+v2+bm5unQDgLQGY8FoYasvY6moEQ9xt7dFTY4sOgEkoRYAVgYXNz046OjtIiXjAlGIO9TwxMMRFVUGl/67jpb88r5X1UObICZc8wpxCx8Od6KmhEXSAAF4VYOGjkhaM36p31+hPlsOGlSlHHzlujBCDR7Xbt4sWL1u/37cKFC5WQKQQN72DDO2TB8OX0L6xd0HQNjTZi7RJ7bcHXnlOB5wm3HaTAEcoE/Qye4PNQIHgmFoNfunTJ7rvvvsp6gLIs7cKFC8mjhjcXl2WZokPD4TC9XwBGBrxbEMSq0DhtA4YC+hF1UlDkGew8RxQEsuNA13EtkpHxxBNPWKfTsa2trdRmTrdgIx0eN06Nwvs0rl+/bjdu3LCnn37ahsNh8pgOh8PEA6wYmRTozEPj8diefPJJ6/f71ul07MKFC2mxM2QajGwP6PHYMZ/oPAdvw0jla4riZCdCbB4AowTXYd5zSos6dFAP3lYY9VJDguexAjfUl3WbOtm4D9Rw4HHxjAodO5WT3BYYSZp+qnJZwfkikmIi1QlRVEYNOS1Tr490DvqRHWEcGVeZxXoMYwJQyvOQnwfDAkY7rynV1C9vPvFxjlBwW3JGhq7p4nQp/Od2z2azpMeRqsQZNexU4DRpxkBsECMdntN9mWcZH6HvoEM1NQztYiOC05ZhgKNfzCxdxzqXnZs8X/A5dyODhQh/M5Mqw+buAXMwocGewcGRC7Xq4fVqtVrphUgsLLGl3ubmpm1sbFi327XNzc2kfLxJyuEyngxevb328IBx29R7g2OqQJghWBiizfDoYRJgMSSngOE+r34eeFPyJjQomviRkYH64BgbGLwmQ5lZARWMDJ4ki2ZkaL+y4vMiSzkDg/mBvfzswfOMDM61hFG3sbFhFy9eTGsUZrNZejEPADS8OLytHfp3dXU1eTTKsky5p4iqqfDGfwBwFpIYb01F5DkPJWVWNZB57BnIQKiz0sM16BOUg1D1pUuXbG9vr/LenePj4/TiN97t5Pj4uPLSOBgZaCOv9wJAhizhCBGAL5wY2NYWRgenajEvRGlSGpVkBaFAdlHoE5/4RNrNCHMBTh9WrNx/MPB2dnbs5s2b9sQTT9gzzzxj165ds2vXrtloNEppU0jHQvTO7EQ2esBsXppOp8nIAG/A0YU8csh19Dt4WZ0PZnYKEHGk4fj49qYAvBZKjQx4So+OjlK/Qa4ivQKGLbcfYAfgKLfjkxfBAHGqpBrG3j2RUyvCCiAFlGo8mFkCbtxnKNMDT0yLNEdA6ghk0Ow5CVk/eIC8DsfgnDq12PnKG9awvMV1eCb0HiJokHesH1utVlrsDXwGncHlKeb0CHXkcVf+QFk5I4ONCzU0GOAXRZF2meOX1AJbsu7juuDT6/VSeZyu5TlA2IBSgwR4EYQyOFNGjQz0PfpNx17THz0jownN9cbvnCGh5/mYeiaU6T1SoKxMyedXVlYq2xzC6wWBicWayGtD2Jjzlc2sMoD4gMHRqbAYuY5mVlEKOMft9IQv9xEYwewklakoiqTA2AvHVivvhBMJaO5/FfJqhHiGEv/n+io4VsMDQgpeYH4O6o5xwfaiUIjwRPG2iEiJw6RHXy2iYmDeRb9w9IbBoc4BBpZsXLHRqMYq+I1DrmV529MEo/qBBx6wBx98MBndAGN46y8WnSH6cXR0+43MZlYxyjc3NyuGLt7DgnZCAELga8oHgBN79wG20G5uP36zktC5xlE7Fthmlnb7QH1w3WAwSPePRiO7fPlyageiF/fff39yYGAh7dWrV1PKFHgcOyDBY4z+QX8w4CmKIhlyZVlat9s1M6ukZsIYwTdAt6Z/eYar98k5E+4Fve9977ONjY3Ec1hwiNC82UkqHYy70WiU3rR+7do1e+qpp+z69evp7dxHR0cJ0LAH9cKFC2nXI54nyPm+EwIwGY1GKZIA+cfKmceOPZvgEwV0kPEAZgAG6nyDwYF0W34pH4wF9qyynuIoMetYgBPUA+VxdDBnpLFRhTawTuA28vVeGUyoS52hASNjdXU1gWElzyO7iHrEzF9vouPG48HGLcZRQS7fk8MGbMzgmbwAmIE0A1lsjPCpn/qpybBFlBsGB+vAy5cvW7/ftwceeMAuXLiQnDwoD/oO+IC3Ecc5GD+826K2B8TGCAN2yKJcJIMdfJjzmH/QdboREfe/jhnmNRsRMAZQT3x4TYs6KNBezDvIJhznHfVAPL6QD+z4ZWcwzrGzswmdKZKRMyxUCPB1KhS8Z6gnF0KYyZsYAKU8UBDkWASN3F/1nIM4bSkC6l7H6mSM2qP3KqDXZ6P9zNBs4TIIU4s0Epx1RgbXR9vP5fLvXChTBRk/C4pXd8phZag56Fj0jnDloioHBcpeektOWecUCxu7rEjMqjst4dmI9MGYw1ok3oGNhSnWdayurtpkMrFut1tZSKov4WFAhf9qeOqHz+OeqB+9j1k1rQrPRr3QP/jAcNLFa3hpGKeZQJmxM2I2O1n0CCUEHgQ4ZuDPxqXZydzVtCaONij4RP+oEoi8S9o/ykOLNE92d3etLEsbDAY2Go2s2+0mBQrwwKCX0wB1n3k2MuFkgldxbW0tGdXYIa0sy7SD2lkJDhDmewYEDHy98Y7GS+c42s9GAMYS13K0kHUUGxGeM0NJ56R3DuWzsYO68zfIO87HIgMjJw+0b/icB+L4HP/26r+IpHXVY157VK56/aTPaFI2gCbAM/Mzjxtk4oULF6wsy8pOa5ibbHBfuHAhpfPinTMa8TCzyu55rG8UjPMaNNSdcVWkl/h+3bVRIzaI6mDtFb+Hh/tS5bMaiIyXuS6tVquyftHsxIBQww+6BffiGOshjmqA1MHA8kJ1jKdrmtDckQweUA+MewJKvS+q8BSgMjMwmPGuB0FhYOtJKCvuJAZ4rJTY6lNGiYwhnGPrj71RAH8Y1DowjOuLoqjkzMEz1mq1UioLv8HWY+Am/Rrdg/u4/bhPwaFObgaQPBF4HDinEeAXYVLslY28YRaYAHkrKys2Go3MzCr9tCjEQkSVKYDOZDKprJ1h76IHKPFfgTwIQkUFKTyY29vbdvHiRbvvvvvs0qVL1u/309aeWMCNl3UhbIw5ioVjk8kkCSd+HwD4qNPppHQk9ZhqffFfjdU6EOzxNuYgFAciBuBHKAIsbIdBhOgBFuAdHx/bxsZG4jXMZ/TDeDy24XCYFgPiGijDra2tivItipOXhXJ92asNrzPAL0cy4FVDGzGPeGE3DBLe9SfiR28M7iXBiMX2we1220ajUeojHlcYBbzJBcat3W6nPfVBnG7Wap1sjYuUotns9m4uV69ePXP9u92uPf/5z68oe86bxnghgoJ1ERx9Yu+mmZ2SAwrkzaoRTHa08OL/nDOLvZ1mJ84zHOc0ENzLMgXfDDrxrV5v/c+ywAP/kRxg40bbo+1U+cnpgjw2i6Y3csTRLnU4sY7QvuR1CXXYA+d5zLg88DdSGjkFGqm1rPdx3Ytf/GKbTCb28MMPJ1yF+zudTpoTvHGCtofbyDgL9eZoBK9HZAyjeIcBvQJ8XXvCqa5svMDRhCg5jCLUE/oIc13lBIN71mc8/82qW/QzH2Nc9BuGBfhGIyJedA/9DOOPHWa8vpf14rkbGQwePesYlAML6ilRC1OFiAq7qBy+1hP63sTh357hhE7n52m72HjhicAEZlGjzKsHW7W4R5nHA1ocvvO+vfFST5oKeq5/BBB1kip/8IRjMA3GB0AC+OZUExYwfA1eXqbh/0UhBdl8XD3WvG7IC30rP7NwMauOg5enj77nNC0V4Cxc4EHmKKBn9HhRGJTDuyzx+KtgVd6PlD7PFxXCDD68eYDoBIz3sjzZ/Urnvx4zs1OCGQYYyl1ZWUnRUfac89hwuZ6MAn9j8Ti/oI8jMJ6HKUq3A/GzFo0eeOCBypaMDFKQPscKGGOLPmc5wrsNmlllz3uz6pbCkFnT6TQ5pM5C8L4ytVqtihGoa85YbkUGYTQPeBzZm8m8wXzb1KBkPmXnQq4uer/KqrroGrcpV67XB3VtwHXQy7yGj+um9+Uwzb0mTy94slMxklITR45eyzIVfYrfqIeu42m1TqJ8ly5dssPDw7SDH8AvdAW/xBHHuQ6q/6CTzKprRGAU8DoLNdI9Oai8y233MI7XR7xGYjqd2vr6uu3v7yeHFuNU6IOov9XY0bmsRkZRnLzfhusIByxkIPeFx+/syNS1ftGajHM3MmBNaYdzB3hgPDrPzKukE0YnERsCIFbaKuhQhnoCmKk4PIbyQBhwtjaZ6dmbqAykzMKeTc+qBRPgOgbc3uB6QsPz1ETX1QEQZkwuy/sobzDwhMJlxueFifAIAwiDcP9sNrNer5deXog96Nm7vwjEQJD7n40LzxvtgXhWJszfOm/gVQcAxjPUyGDjw+y09wJepOPj41P3qODRSAV4mV8Ah3pzxCZqj2fs4ltlimdoox+4bZzTD97kNBvlfwAsLlf3SEdqCvoVaVWsJFUxeJ5GVhYwKLAYnI0MeO4xVqoIvLmO8nmM+dgi0POf/3xbX19PaXyIREdGBjt+sHZrY2MjtR38xmOGnb9YdnNuM9bknIXW19ft0qVLlXJRP3aYqLHBRoY3Zt5cUGDJEexILuQMDU83sMdbwSzuYaOe78V5NoQ9A0ProA4EnXvzUGRkILLDx9R41bYsmqEBmRw5oHSc+BvkyVGPlIdYHhfFSXQc13rGD4NgbIbAYF0NFHZosWNH8Ra3k9fdqZHhbQPv/fZwFbfXwzZKHPngtWWc0s33Ym5Exi3jRc0OUT5Gf6nh0mqdpFnx2hz+780X6CJdS+Y5QSO949FcazIUSOoEVRDtGRwcrs0JIG+yeMYGdywzIysUNggUAHKbvImL8zw4EOhsYLCXmBkClrZnQOBalMfADO3T+rOi8bbYnYcBPCMkJ4QiHuD/XB/UhT0WOF6WZWU9BpQyW+WoI5fByhuTeZGMDA+Eoz26aJeBPIMEHTf1MjCwxwf9yu9+AW+BHzh0itD35cuX07oLvIcF3ph2u21XrlyxixcvpvdE4E3hZlZZw4H5gJcL6XxSIaaGFfMs82LOk4S+4v5g49zM0kJvDnUDiPL9/GzmcZZX8IgCNHJ+MOYuyw2PJzyPEBQRdpcqyzIZF/yyOA5ls9HmAQw2SubxOt0t+qzP+qyKkQsDFfytYwJnQ6vVSgYJg1qMN0c3kFbK2yqDB6bT6ak0q3loZWXllJGC+mB8YIByJDfnBfSADc+lVquV5i7fwzqBeUANc9Ytqi+j31xXvZfndjSfuZ6gSM5xH3C2g97n9ZXZCShGf3HuP9eZ1195MmfRiPtZDTl1lLAxzpkYiOBqtoZHuA74An2Fj5lVxt3jBxzzDM6iKOz3fu/37E1velOFt/FsfDMG4L7A+de+9rX2t//2365sn87tY6NYDVmuK+M7r0+98eAyUB/IHPQLdAx0PZwnwHSa8aAYij+ekcR10ZQqONy4LF60jmNstGAOq0MEdVUjI9dHTHMbGZEF5ll9npHhHVdrGcd0EqiRoWA0Emp6DT+Pr1GAz3UGE5qdji5oSEn7gCedd04ViQoNnRi86KkoTrYx5DbOAyy8saw7pzwQjasCZHh6FXRFikn7WQWshljvNfGk5LZoWz0PgZmf9+wJcLOqRx/pJtgOlRUE8x0b3qurq+lFe1BEeJEfwCy2feZNE8xOwJyWh3UGPHZojyesIn71ZAd/cx+hL3SueGCCd4xDeTrfuHw+hzIYvHgpaKoQtL2qdFlhe1EjtIt5JzIeImXvydN7Sffff7+ZnfaEe3VmRaj/WR5ATvPGH/AyqpHBu1idhSCHte7e+HmAHZTTj8qL4CXwQlmWFacMAynwPdcPoE+NCFzjfbxIozdvI09nBNq94xFmiMpR/aN4AHVnMAcjjWWiArdFNDTM/LUFPC7cdnZIQVabnX4JosePiuP0OO7Teni8ACNEZeRkMrH3vOc9FUfxvPRpn/Zpp9ZKMG7Dt8c/qC/L6sgB4GFV7gNcw+lb2P2SI9F4Hn5Hxl7kWFN9qm0AroJ8UJzlYUsti3FVnTxuqlPmXpPBgJuFGM4hP9YDodxZUPy4FsfxHVlKDAp4gL1vLYuFKkcmUBeEuLyFP3jhitnJDjbqhePFnMfHx+kNl5jgvKgOzAdGYCWCvHb0u2d1KoOooYK+5X7ivvGY2AsJ1hkT3IcsMFi4K7BG/3iAHO1ky5yVCJfF1vaiEKcpcZvKsqxEY3QRqEYydNKrUYVrAKRarVYyLPBsvMMB83I8HqetB7FF66VLl2xtbc0uXbpkFy5cSFuFwptx//3322AwSC/xg4dmNpulXZawngBe3By/eIZlBJiVr1Q5egIfvMPzCUoXmzt4vKpl6rdZ1XvHEdGoLvjNYXN8q9EMfsb7FbAwvdPpJJDspdgpX6hXKjJ67zXdf//9lfHlMWGgwgDKywcHqTyDPAfhOOT+4eHhHaVLKXjlea+K2uMRJo6aaaoEy2PWeyxPZ7NZmoc8P9nJ4HkktQ+Vh7mvc4YJrvPairHzgB63W8GmBwp5bD2dr8CSN2HAOPGiV8YwHrBeVOLx4EgC2tBqtVIKMvQC8wRfx/iBP7iOy9Xnq2zktWpqcKixfR46m51pOm7KI3XtYLns6SKPlOd5UTVHLHidyNrayTtc2BCMMC3jAOZPz1jk3+BrTr1lfaCRwghrRA6xpgaG2RkjGWZVoc5MyuE17hQeZM96wzO0Qd41OWvTs848UMDCRQfRzBLz8u4CnoDlScOeXBgqbFUyyObwJb+5UXOtATD45WbMGDDSIsClzKATLRprvV6jU9GHyauDB55xXIWCV59cGYtAGDtOaTA7Adcf+tCH7P3vf79dv37dxuNx2uN/Op2mHYym06ldv37dPv7xj9uHP/xh63Q6CeArsMW4HB4eWrfbtc/5nM+xbrdbMWzxvb+/b+PxuDLPzE4UBHYEQch0dXU17UsOwcTvZOFF1IiuqdEJHjezNBc8z4jyicejymPaDrMqH4Ev2Njm+vE9+turFytOfOv93v+cYeUZkDDwoJQwfhrFiDxMnlKP5Om9Ih4j1M0D1CB2Rqk3zkst8MAEfvNz74SiPtdPE4WsAMJrA/9m3gcvQ/dCl2j0Peeh1Gdw+5T/FRBxG3h+RW2O9IY3v/U+/vaMDSaur+awezou0mP3mjzDxwN9jK0YkzCv5NrHGI6NDO+5amAwf3iyHDwBPXInEQyQ6hmvbt49OZ6LcKnXb1453IdwVPN4QF/ymEL2RfXXvmaHM0fp9ZjOc5Z5OczG7eNjZ5WXZ1qTocLQrLoTi5lVdkbSiurgaAN08vB1Zr6C0M5igcohOzyfmRyTEe1g4IZtY72t/XgQ4YnEQifOBVbwZWbJ8wRr3Ow2kNAcXm9bXYAb9ghEQjaiOmZTheEZGXzM8yR4E4bBFAOhHD9o+1hh4veiEDya4CeeH2tra/b7v//79su//MvPyrM/5VM+xT73cz83eXCLoqismxiNRlYURcpVB8/CAO71emkRM8As0qRg8PI4QRGxR9fs5KWWvMMHC9QIAHtzPVIazIcer+GZXD5HOOoEqApujh7p9ZGSwtzUSB5H8dS7B48aoqoYy7Is3QiFyiMNjS+qMc5e9jrA7xl04D/lNU1BaKK4z0qqAzxjQ0GXVxcFJ5FnlgljCV5eWVmpRDKgfzzgqXXkfvLaqOPEgJXrwPotZ1zVGVR1xgV0qh7T68E3MNzNzO1brx2LRBE/qFzidqDtvPAd5zy56YHk3DxSjKa/QagT8CD/v1NS/vHml2dMQCd5PKOyyMM8Xj0gj9BGyDc2MmAAsMFhZqfkeaRnQOjfyMBoIou0T7w2MUXzuIkcnes9GfoAZnwW9vjvKUFl8iakjOspSxYsuF6NC7UI8c07H+H9AfD8Atxj0a4u6NM0BH4OCzjUZ3V1NXklYcSU5cmiIdQDi4XW1tZSigfvfsXPQ6TEE9aeQlNhWsdsnlHBAimnEBUMgBh0qbJT0onEYOs8wMJ5Em+XaFYVcs92fVutVtpvHAvKp9Op7e3tpVSh3d1dGw6HNhqNEm+yZx7fMEAguGBs6zixMGNFF4FxyAQFw01BDvMa86IKUe5/rqOXVqP11OdGBoz3P5JNADkwGjjMzx4u9AvAAdKmIIN4ATGeze3zFuAuIkH5cgoUA8ccwMY16vBiD6knC1mGcWrDWQhySB0eHDXHHMSCds9x1lSO8n9Pj8E4RfSLU6j45Vs8PzxPJ+rl1UENksjQwP8I2OA7ij6hXK98Ps8gy+snkOINLh90Hp71Z4s8w5P7lseRHZeTycTMTmRNZFjwR41/npfM80iP1XVHkdzX+XgeRkYdMY+oIaL1UeNKy1AMUxQnKd0sZ/n6oqi+8wyGDTsh8WzWU57h39TwjfRo1Dc6D8+SsVJHZ174rce4kiwEWBDwfXy/N+lx3rOOPWuVmRsgJgIwKA/fUN5mVlFCMDCKokjX6EvUPKXBbeRnmZ1MVAYXnhHB3peiKCprQvgZ2rd8Xn/XjWUTyjFdzlBRL6Na2txP3iSJvIWLRhAezNPsXXg2jYyiKNK6Dwi4VquVdoziBWnwpnN+P28/y8KuLMtKJE+VkAIJBefe3I0APJ7ntQ1lcfpVVC6MOr2GHR16L//3vrU+Ws8I8CjfsoEd9StkxNramh0eHrrRP6+/FTguKsEJpZEukHcMFOkR77xnXLA8OivBQNKoEY+tt5OaAoc6BR7xYt3Y8245/CxvbuY80HUA3iMF9d65urZ74+/hBq9t3jOVPAB3VhD1bJNngJr5Y49+Q6oOZAx4PQdCdb54usvzkKusieRmHS45T8rxChsKfH2uTixDdB55fMxGC+ajGh5qUCj/e3XIyYl55X3dPPSexceaPu+OdpfizsTiFqRU8BaRnC6kTMwMqdYgAAEDdBWGoEj4ct2ZMWAkIGKwurqa0kqw5/HBwUGaUFtbW2nBLlJi2DON0DTeRo0+AJjDc+HJbLfblbfeAgTigzq22+0ERPDGW7wZGMyqk0jHjMmzVudVtk0UBF+rXka0Dak5vBAa93LYHdTpdOz4+Ng6nU5a0LRoCgHba3K74UG/G5EMLPjDC86wpd5kMrFWq5WiczBaOZpRlmX6DQEJHuPIJIwQkMd7KBtAEuc9pQhiPlalqLLCE4QoF9eiTewF9Dw1EWhnUuHrtVfbgjHhLQvBs9jSEB7nsjxJO0OaVKvVSo6Hg4ODytbNCgi57QxoNfK0SKTyh72oeh2PuRfN8soG0Pa2hFQP/7y0snJ7C1vmY4wvxolf0Kg8zPyYW+Rt1mzs2DhFuUjN43RbnYN1hmlT4K3t4uOYhxjDKPp0FtK5yO3icr35jT6+Ez64G8S7o3lt4sgzRzGAFyBj+H0UCo55XihPsGHBhrMXDYuMYaYIw52VUJ6mP6lx5hn3Ob5lXsI13oJ4TotV3tJjuF6NFFyL+qnjKZJ3el7b5xHLHU82skxSfXkWOvPCb6/SHLnwlDmXw/dGFq+nzPXanHGhz8DgIXrBu0IhfcmsynAQ3LqTEZQXGAfW8XQ6rXgTNE0IdUSdNF1IlQ4YEuAVfQtjLmcseH0eGRheXzdhKg9o8aRWD4cqA+1flOmBTG9byKb1vFuknkOAzLN4Gs5C6EvkaLdaLev3+0kIg89ZsUZeVnzrGHoCWIEg36POAk/hq6DkOnhGhtbRE7wcyVBjp87I0Dbk5JcSt1VBHUczorUVXHd+m653fa4uTRT+vaYmxoI3DiBW3lwW9BCuqTMi5yXoEAXqmH+817xuAuG12eNfr/1NiA0O1jWcCsJ94n342aoj6oh1Dc99nXfzgpdcP3A/RYa1J8f4+J2CqWeLcv3FY8bRfWAxfjGdp5cjfMbPiIyJaF55fct0Xrow0h2Kb/Cb5TB4k+vI89gznNCvKA9YkDc74vNROpJ+eG5wG9S44G+PPN6NsHdUL+2zO52zZndoZOhg8kJPzzuj5fF3xHQoD8IK96jAwHeUJoB7IHw7nU56oZZnrZqd5AnzegyAN9QFip/zHkHsqdTUMbZ+4XFCPWGcABRqrjwvYFWGiACYXou26jHckxs77Vc1bqJJq8KHc5fRv9z/PAat1u21MwgB4xj6YlEInkTuYw+UPxsEQwze8qI4iZwhAjcej9NaIOZJzAv1kHNbeCw8wJvjA1WM+FYAGYFmVp6qIJXn0R6+N3KAaH0jYyMS8t488bxikF/gD02lUd6AfOB8fjZMvH6rm6+LBJ48MOvxCM7nymCjzDMmuRw2SO5kLrZarcoWqRhjfeEmxi0aowg0ev3gtR/fOle4ThwRU8+uyubIgFWergM7/O3JFAU2EQ7w5iL3k4cjPBCt81pTVRZJhyhFel4/nF2B8VacYFbtOwXDHpBk50jEL5Exwd/RsfPuK+YvTo9kh4Anb7gPdYMNlM1zCB82NnRdGaeFsjGCa3PAnQ0QlKn/vXlYh9UZr3vRDO4/vp55xpPZEZ3JyPAqoEaGJ0Q01OcRAwQFEJ53u648sxOhiwVLWLzNW87yJAPg4sVNMBYYoEGpoAwwGAgDOB6P0yvnMSgwbjisxgoJOZUwNPj9A1BeZieGggpWDa2qMGahw8fqxjqaFBr9gVHA61hgIKGvNL1gfX09GRi8/S/A2Pr6uh0dHVXCtVz/RSCAGB2Tu/l88CGDL/Rvt9tNazNy21zyAlZeRwCeV4CC5zExf3n85l2L3xHo0GtU4EWAif+z8qnjHQ90eUCRvz2QhuNqeOc8hHg+p9xwOV5/1c3TRSFV+EqqxCJAqYCBAQUbl/wfZau8nodwP7eD9Yu3Zg/18wAdl4vvSIl7+o9luK5Z4nnB5zx+02co5fhJeZBBCcqMwFSO1ECok6mekeG1geu1yEaGWbXvvPorn6FNvGW+WRUbeOV5epwdHPP0lYJj/n1eMiniUTUyuE18L8sPxhvAJcAbmMsM0PGN47yWkfGZZ1B47WjC19zGuk+EwfmDtFEYpfjNspOxpNaR+zOic3njd11jcoqPGTDXySxEMahRWFTLZEXAi/LgTWSwxQqIU5nKsky5kZPJJNWDFZgSyoWBMRwO02Bhu0GkQTFzlmV14TmDvLI88YbyzgUoVz1OngBXQKfj6403H6vjCfUIMFBlzzlfw+lSHJ3gaJL3ErJFA1A5Xr4bikxBQ1EUaUE3+hJrMmaz2alFgWYnwFa/2bMThZO5HsoTnqCKQAB/63HvPzs3wBcK1j3w40VfIs+bpxy5XL1Hf3M5LJe8D65VpeXVUfsymreLBKQio8rMByLKEwoQveNem/naJgoyIh4bgDk2yr254empSA/m5IhXtqd7vTI9B15uDnNb6+ajHtO2RWDfK0vrlutH776IdP57wHzRKJrrdQS5rSA/krmRLs8ZoxGpPGzCO2ehSH5gHkTt9dqkBhWwi85pLRt4RSMD0Ed6vdcG77dSHW7zZH7OmGRjqcmH2878VEd3tLsUKskLllEJLJoGoysTAAw0ea5Z9UVDPGm0DG40GIOBEr91GcyDTuSF61AcYCxEFg4ODmw4HKb6wDOMF5lxWzmSMR6PbWdnpzJA2O4UH3jWsPB8Op0mq5LXgyAFRq1M/tat1tgww8SIxtYba29c1JAEcV+rV4/HD8YFxgN9iTqXZVlJPcD4ICoCfqjzhN1NUjCrdLcMDdQFH4wDokXeG2D1XowR8ycDXk9Be8CHn8ERHgg4EAOZJnznAbRWq7qzjgfmcwrAA4JR+1QW4tsTwJGSjgwK1IWP6bzmjyoYjUouGnlRBNRVDSo9H/ErruH+Y6OT+WY2m51aKzEP8dzA/OKFsayQ6wxEBfz8zec4bZZ1IeYYb1/KOxUycOIo51najDrlSMFQHbhS3o36IjrmPV95hGVBTsctqpFRZ1ixDCjLk7Wc/X7fyrJMG32o51qN03lxAFNOZnv4707J4wXUVdfDYuzV6Yl+4nkKGd7r9awoirSA/ujoKDmYWX+anbwslNPUoHMj3mcnRZ3TTtuHekaGgmdQsOzzIhnKFzjPm76osfGsRDKUOVjA8QJXPpazwJo8lwkN85R1pLA1j9zLLaybVMrIYC4YHkipYsHGg2Vmleeydcxt8z4e0FHvJn6zMaHg3/MoRB4APab3ef2FeqlHj9uHcjSKAeWMvuWojbeYkiMjiwSickrwbhkYkaDidxIwaFWAjd8MaFQQcnvqPDEer/DWfjkvTw6weOfYiNGoBoiNpAiMe6DHaysDY+63qH/wX+eyHvPuy8kD7QdcPy9QuFsU1Rl9Gs2VOtnM96NvzayiEFkG3WkbPJDAdcW3ZzzwvIuALt/H8pXHXcvCMegoneOe/vQIdfrQhz5kH/jAB1w+4jYqvymP8z1lWdqLX/xie+CBByrHo/GP6qtzwJMP2neekyLHc/eaojnugXcdZ7zUk/FABETVAFNqKj/OguvuhFje6RoDlQUeDlR9oVEM3cSBMy0wz1iPmJ3oWjj1tC6KUVUHnKX/PD3b5JOLXnjzmvmlibE4l5HhAbqyPFk/gPw1M0t7u2uYVQVrE+WnwlqVgwoyBkiaXw6PkxoaZr5lqMzJz+atQM3M1tbWKilM3GetViutw1hZWUlrQhgo8yTRFC5uK08EtqT52+sf/DazitBhJadC2hsfj1FBmv4EfmCvNows3sYWWwlzpGU2m6X1HBzNwH8suF9E8OSBxrtZh2iOYF6Y+fnbIE/p8oLjurYpeGdh9v+19yY9sm3bVf+MyCoiMrI657xbWH4WFjYNy24iRMM9DE0kxAegQYsGbYSEaCHRQUhI5hsgWhYNRJdvgARty7Lsh9+7950iM6PIyDLi3zj/sfK3R861IyJv5jnxUEwpFNUuVjHXnGPMNdfavD71fxU7UNNJXdcDHQSULK8iTxyrLGdbn9UIZBYNqx3LcezOpma8FXVinbLoF+3Oqm37pSUD4/z8HNBHgCqby2vP580HH/4UklEDCSp7Zrezz7VjsntxZr52DequAwXOhHh5Xdj+//N//s/40z/909UbZ0X5V//qX8Wf/MmfVO+bSY2w83yOHdWX2QzZ4l0du2njJGL14BT7Wzqpbd8ZVGrbutTJl9uP57aPn//SJGM+f8xE4XpDCckFZx0ZeHDfpLW2/X4/rq+vyzbAWmPBjX0iovEIBPkDraUTDnK7kRGedepdIw3+PVvcTZxFnfDPTHOnf3zVmQw3pgSrvV4vFotF2fs9AxsR8cQB6JiIx6iTG4s2A0Pw7B2Y5ZVnkQ932GT3mhLvdruFVOkJyAQWJEIc7FJYfefD/zw6SaflAM2PY5uxDJmTzdq01tdtkpVJxtxnHHRPZ/IiGNo9xxe36nhtMby/v1+eK8KF4npi+lae6g7HhvTBgT53w2h7d1JRI1HsZ0kGelXWLI+VZa4BoQzEUS8jmrN7DBhQPLqtduJ92urrhpe/8z0THkN7tVg8rv9iHe/v74vBV9k9sl1zNlkbfk1xQLcqqWgDgpnuZgRL1/h7f+/vxb/7d/+uCrKzd8m3337bAAZud/V7Fi2t1Yv3dr3zz6wH9UfARgBCawL1PSIaacD0CRxrTtheU1a5R83u+JhU2+k3+ha1j7bv9t22eJ9NEh8n/tLvbAMBRK29y4gVg6q+81GNhPh4cl3l56z8L90uspXakIcb5qgcnjGhAKXjDZ+N0GY7eo7X3d1dwXEiEzxX7aZyHBwcxHw+j+FwWDIzIqJBLLJ1jlm71fxfRjDaZiFqBMT9MNOk9J32qxZAy+TZJKM2qNWw2s0ga5Cs0bJ7ZeJGtgZ8fPbBO9PLxfOyxpPB0iyEHnSm6/i9CWj4MCYCAuXGtxlQXT8b4CQRJDWZIrghX8Ww15TcFdajZNz9SfWUoorR+6Iq5gsvFk+3+vRIhM7bRKfg8iVBnoNbgk8/RvpSA2cRTx+Kx8+ZnmbgkXpCklGLoDnBYNlYvsy50T6ReGfjmvdxMpP1WUYyvE29PN52frzbDUaNvEx0AhH5TEbN+WwSwYh4OhZWIWgZgKldtwaEeI+/9bf+VvzO7/xOK8nwyC7Pz2YvOFvivmUVWRVs8zvHsezvfD5vABvN6ul8Eda2e5K0vrZkdkO/Z8e2tanqqfFBP8Pgnts4Xn+TJMNO2eeIx7KrTlwnW/PhmR12UlHDINRxt9mvLQTJvqZAkqXKE3tI6CdVT22pz0cYaCZDRF73Xywe1x6K1OuBwbu7u9Hv9xt2m1iUmLBm8/y3VV41ouHH1AglZzFq16kFTShrr3zjhWm41BFnZ2fpYhFGENqMg4RpDxH1VA2/FhmhRzG4ADlzOnoOg945U8FraTGVpuVYLwfEnAFhPigj8ATnjO4z8kKGKwPK6Sq9M12LrzZHkUUpMoCSKacUlA831Iv11bFqx36/H/1+P3q9XqNv1V6MyqluqvfBwUF5svV0Oi3TlZskNPZfEuwR/DhYcxLgZfJZx4hm+l2NXPAcXqMWISGI1swg9bmmsx6R472zcnh99Hsb4PdrrtpfJDbLQCXHPclFZtB5jgIS/I9OSsfVoo6bKuxrD4rUQOay/q85xVXKUtO9rJy6LheCCpAoYurRyax/XWog2+2xl31nZ6c8LV7/39zcFD+lmQ3abAbF2OZfAjSu4p/WFY0lznjLzyjFdnd3t6S3RDwS+IjNmvGLeJr25j5V/xH7KIA5mUwiIhoLoCUE5iKmbrOVFiTd8BeBOf005aX7l+WfzWYxnU7j7u4urq+vn7QFN5dR6rWwic9kqL6yqcK3nMno9/ulPYkppUfX19dxfX0d4/E4ut1uzGazuL29jZ2dnTg5OSk4U5vdcNvbZcEVfa6RwzaySD3h/1wbqZf8sd4ZmFdwYhnRpzyLZLihZEGYN09jyIho7bo1yaJcbccyikHQkkUHeR7JBHeK4tQ3n8+gNRjcBjSbBqMi6VjtvqXrijlzzQgjSRlj9LqyL1aJ9qwjbQRExkZ1Yd39fiqfdohSNEEKnw0i/a/PfG4G+2PTJKvLl3JgmcHKjH8GumtldJ1ywqL3GsBzcJVFSHjdjKgtK2d2z2Ugcx37Urs/y7wuMPNxXLtGRrJqZG9dcP2lJbO/bcfViKGOabNNNd3JyuCBGX93UV9wn3n1Ja9ZK1vWHtl9Vh2jOpZ2mEBQL862cI2Hj73XAoi6di1o4SLf1na8+6AsdZfXUz1r0f5NkWU2zW0n00Ml7iNrvqlmr5fNYmTS1p8vQV4fHh7i+vq6pCdlMwX+nCefzVA5FNRmXWuzH9xuX+eozQnQF4tFXF1dxWw2i+vr62K7PSOj5qszm7DMnmV9V9MV7//abIb/RtywCvZai2QQHHCaiJ3Q7/fj4eHztq3cRoyd1uYg+J5VYJlB8sigs0SvC8+TAmmxFEmUlEJsWErACJEGnANtTstJARW1pLJykbPaSe3sdWYHq20j4km6Bc+rzVYsk1UMnJM0TUv7dRRh0kyGyKhyKlVORdtub29LHdTO6iOd/1O2onwt4QDmxgiv7cTc4bj4bxxj2Qwfz8mux/s5IXSDRxLpTo6LtHmvzJiuUm8n6PzO+jioqtXZbVMmdAzLwJB/95nOzGbJDtDeZE7fncJvkrC91wUimV7Vjqvd10l0RP5Ud32Xf5vNZk+2jdW7AEjm/L2MtbJl+lw7h7aYaVHMvX94eCgBQUV2vf76/lo6pHJmYIrf28ann6egnh64K5+tQJ8/74eLhWWfN41oeLBNvzkAlKgviS+Uxk47Vptl5rui3NRhva9DIl6DrN7c3MRoNCoAnmsv1M/CB1yPwQCnxqnPsAvH+bm9Xi8iovh0picqheru7q7MJC0Wn2dCjo6OyvoYlUuza7p/5p/YZplPrc1y1bYo9j5UP/s2tux32hDatVXt88rojBf0qCwHtgqjZzlIaBxr08c0ODJuq1bGo4E+peP3JPDgIO10OsUwRTw6djFODj4popfbI5L6n22m67Gc3JGJJIbtnBENESG9+3SfizPaNmkDdZnxI2BiWVR3DVYRBOU4KvVM1726unoSmdDA0SxGv98vxGyTJIsUeP+/ljDa4FOwTj5Wcd6ubzpPkgUIMqOWkdKaDrKsy9qLztWBmJclq5+3gb7XnGSN/LSVNSMctTFYuzdtD8FFRjSy6OSmietiW9CIcnd3F//5P//n+PHHH6vX5Ps333wT//yf//M06OH3WIdMq52VVstIpbYNrQV6av3G92XlqJEeHuMBN6UKya8IjNC/eTvUAg8vId4+GaFfxfc7MCM4FKCkn/bgAknHJs5m+HivEVaOKZGqw8PD0r+3t7dlrWxGKmrAlbn5xGltOKLmW2pBnefI3d1dTKfTkqokPMFnoHEtDvEV06Wk5/IRrLN8KPWJhCIiGutHJZq9UP/d3Nw0UvBVTvqszCa4n/R+Z5CutrYiIyLuEz1NLrsWZ8iEi1eRZ4WAHTBxUIvFkSERJIv16TxudasOFWhsAzUUN1Q+e5Gl7TgAYUeKaUZEUWBGBwSGnSjoXjWD6cSMJEWK7LM9nCGh43Aw4gY0M96MSi0zEKuAk5pjJLlQ2znJEDkgGZLuaFBKodUmupcMRK/XK5GJTZEa6HZi/hry8PAQl5eXRTfVB8PhMD0+MxLLfmszfLU6Z0SjTdZtIxrLzGivc9+MVPG763ob2ONxGXnIjms7XlHyTJe8nh613DRxm7Yq8Li/v4//8T/+R/z5n//5Svf5/d///fhn/+yfVUmG93etDJluKwKuZyURpPB6GbFcRR+z+/tn/lbTPYJoEgzVQ22TrXus3e8lJPNTq4ynTAiwZfccaHrdmGGxTmT2S4vb0Yj2tEjWv9/vt+KRNnJRi4JnrzbbuAqJf44oXSricYE3iSUJNnXBM11UJo0LptrzxYwdnU/Mpb56eHgou6yK1GvmQ+CcGFP/M2C2zM9mRCPzt8v6jcf4Gp9lRIXlbZO1dpfiZxkrphF1Op34sz/7sxiNRtUoWuZA+fnt27fxj//xP37iFLLGdslAdZZypYZSJ8phqKOlAIqes0O5D7Jvica1ESwjwbM6JpvJYDuQDKgOHBQ1o5iRC/99WfutK3RkNNgqK2cbzs7O4vj4OE5PT2MwGJQdHLi/tT5rkGYL+Pv9fpycnMTp6elGrcnwwa/fvoT83//7f+Of/JN/UghZRMRv/dZvxX/5L/8lTk9Pl57/nP6vGSy+mFKotvH0jFVSGtXPNQAtm6TPnN3Tb7yvG3L+ltmSVdrBP2fEIQNyklqQoNPpFPuULX53Isj+yNpyE4TEog3ct7XXT5Fa2+u+BORsb+nzbDaL2WwWNzc3cXNzU9aaKZgmf8DrLQs2tAFt+SwCI/2fjQkG87hF+Hw+j+vr60aAT/bZA36vCbxVF68f66DPHKOUbJx5Hr2vD9RnRaCVVrbpJCMiJxeOtTqdTtmEZTAYFIAsfebWq7WodZstFyCPiCf6rftnfUV5ibZWGRVoHAwGZZE219M60cwwovRdWSrUFx2jMSRirvbQPYQDtXHQ1dVVTCaTMvtxe3tbNvzRmFNbMVWJbci61vpkWZ/VyEbEY+CKEwNMn1LalMrlWUKr+JVnL/zOZjIiIkajUVxcXKx72SIkF5lhaQPIy6TmiJ3B6diMNJCgaODq+MwAZqCTx2cpUDqXx9MAy1EQIGWgqybZsR55qF3H76d6ZBEjAkq9hsNhDIfDMgvBaVgHoxGPgyCiuR2dZjK009emiBv8ZcT4JeX+/j7++q//uvEb10RRaiS/dkxEPkvD/2ovN3q8fgZolo3v2liTeERZ7576saqRzGSdc2tkv+347Di1ZWareEzt3ps0TkjqJKsSup8qq17fdZe/Kef69va2BEciogFuV4mOOyBrs7sZIeb/ene/Q7DFHHQdo3Vv9L1Otr6E1AhG7X2Z3reNNf73pUjVc6XNx/t/EfXMjszOrmK320hNzdetQjR+qqhu3K1JKVMkCqz3KvaXdZFwNsPbku2sNKrBYBARUYKkEU+3IBdWEumgvcjGAL+v88rIxSp++ovPZLBTZGTLRf5/1vxaU44E9vwtM4A+OLLye8MqV86nrCKawKTWUVl5a51LydrKjyWREWB3J7NYNKfA2+6ZGapVI4VeL7VPt9ttbBEn9quoh7b9PTw8jO+++y6Gw2GZgeh2u2X7R24UIFG/s37cXer+/r6aDvQ1hIB+WV98CeH9fQysYmhrx2RjIDNUHhmJiCdGmSmC6wAHXYOzF15fRi393vqe1SmLdnlZ1pEsgrasXg4IVE8u/M7qzbG5iaBJkunXS5f3ucCR+kt/t1gsykzr9fV1mcmIiAbg0TbkCghlBJtArGardU52LEmHjqcvkL1kmrJAEhemdruP21UqKizd+RJ2i3pfawf3d21lqxF0H3MOHDd1rLSBRA9qReQ67/bVbTUXefMl36t8fP2W2Vq2caarLy07OzvR6/Xi+Pg4+v1+HB8fN3Z+4r099SnDg1nUv9N5OjPG2TFehylbfHCfrnN/f192wtK4E57jhj013+rYq83fOjHIcDFxNftcC735mcsGaENWsQ8rk4wMwKoDFFX2acnnSgaK+HvtxWOywcfr6H8CW3ZSDSBmbJjH8dyM6PC7OxH95veKaH9aNx2LRzmXKUGboc7+r7UJgSKVeWdnpzzT4uTkJIbDYZnCVfuL4FFp2Vaqt6a05RB17U1Kl2IfZc7/7/7dvxunp6dxfn4e0+k03r9/Hz/88EOcn5+/WpnoMAhyM8frTsH11cXHyTKDRxDNGS6fyq4BCQfi0jEnGrq/jPl8/rhg0cctr12T2jitjY+sbXQ+0wmpu211lSOIiCdt6o7Ez2dKw6ZJZucjXnZWYxWikfkP12WJ9FrBKT1bSaCHzwlyQNZWp6wPaffVVu57Iuo7u+l+GcBS3ZTCoZkMkZK2sr60ZLaJ4mA205vs+zLdagOfmyK+FsvHvQv1l3ZRQjCb6XoNnGaBTF4rwze19vz93//9+Pf//t+3HsP+0PMnPn78GDc3NzGbzeL3fu/3SjbDYDCI4XBYfAnxUA2zkUhoTGuNleNC9yv8j/ZZ19eumYeHh43sDNkNpuZ7+ZbZoqwM7J9l/UnbILvh19NnBSDUpkyTW3WsrP3Eb3fKYm5abPNag7Q2mLxsbQTEz2ljftkApnGqMWGSjKzc7hyomLyeAykpM5Wa98hIxiqgYlm0qgbI+L+/PBKwu7sbvV6vEAztqjCfz8uA8yd1enswL1BTkMp/3DSSkemG+vAP/uAP4nd/93fjr//6r+PDhw/x53/+53F1dfWqJMMBfsRTHc5IB+vQ9jkjGj6uCAwykpGlDbqtYRl5HYIylk2/c0xnM5O6fpu0OcPserU2072y6XYX/88jbZnz4P3arr1JsirReC5JcnvZVo6I+laREtkizoDLDmkmQCkbsnOZ78zsvh8nnXWSW7Mxbb6PoFrtIWC1WCwKUdJahee297riwY1lY62tLTN/VLtWjWRs2nghgVzWxzyOIDs7x/FOLerN35bpmvcly8Tffv7zn8e/+Bf/orW9iSfH43FcXl7GX/7lX8ZoNIrLy8uSOaEgpgKOnU6nsQ7WhfWR8Dk3XJ/r7ZOBe87ySI9E2Pv9fkmpJI7xrJlaO9Tav41MrEM0smuxjp6VIhyh/1aRtZ+TQWXRgm+lwjAf/6WlzajqN4KpmoOQqJNrjFXiA9xF91CUnSRjVcBWIy28nv5nNNZZuSsI8//Yjn7uuuIGYz6fN562STbP9AGxe6UaKKd5Nps1ogKuvKrfbDaLbrcb19fXRfc2LfpUI4HqG87c1HTzJWWxaG5W4C9G0+ng3WH4NR1Y1yIr2cMquZe5L5BdJp1OpzFdy7ZWOTKbwAgM68o6Eajov2z2I3Oey5yvBy00AywntYzMsy5aaMyd/Nw2/6YQjIh2gufE8zl1qpEM9l3EchKnzwINeraC9FBBD6Yc6frer/zugS3e02fhWB+/Vtt9eK5AkMan1pRwDPqW9K8lq5A/HrtMV9bRfR3jM6qvbZPXFZZnmX2RrVM9aPd5DV03ezkeysYB7al+EwjV75Tn2CG/n8aB0vMPDg6ebGPvzz3hwzEVkdfY5HpbjWMtztZzu+7u7spTxWezWZyfn5cnequd+HwMT8Gbz+eNzUbm83ljtkTBCPZL1s/sm1q/EcsycNtGNkgaeA6JheqjfqU+rmIf1t5disbKc9VeAvDVnOwqZatdhw0qqTG77LrZoM6iULour+MRlnXqVzMo+o+OxxUoi3Bm4mDYj83AWPafBrN2WSGbVxtoEHe73Yaj1na1EZECToJxDVQ9bZ2DdBOERKnmDLLB/tplIvkhwajdfxVdbXN0/tI1szzoVQkvxxKBl67LqFIb0OK9VhkbbUAoszNt33VdJ3msW6191bb+kNMa+Gyr/9eWVYmFf+92u/GHf/iHcXJy0jimVref//znadCCn7P+ot7yf3fGDt49Kr5O2/v9I6Kh5xrDbJeaj+I1OS6zsgqI+OxMNpZeU9pmHGr+Nhs3PN7HU420+sziJgnrmvVvZssyvOK2dp2Xn0O95P9exnXasma76CsJeok7F4tFgxzc3Nw00mW73W7ZTU1kg+Be41nna/2ESMbV1VV56SnjKrPKwzYW+BaZv7u7K23jhKGGwWpju0Yyavgiw7n8T/607fpfZCaDN1cjKtrhj0d/CXGD0Hac3rNBUSMTUsDMiGadzuvwvj5wSWQImDNjz/sxwur183N0T9Yrm8Go1S0zNqtEb9zAcdDMZrPC0KUTesrow8Pn/ayn02nJ/9UTchWNdQPibUqHzlQpLbDcFOH0dBY1oCNn3V9LZEAFGjxqrvdlgL/mnGgsXQ/dOWQ2wwEUx4Lf28Gmomn6nbMbBFTeHjV9z2wO9dKdaUS+veQqBJ9ky6OoLEMWvRIxlzNkZM4BLs/bNPDUJjWw1+v14j/8h/9QBUISBzptTtzHaGbvIx7TpG5ubkqklMER7jyzzAFnNlhlcWKu/+gj+Mr8HduBxFTX0baaAmeLxaIArE6nU/7nOHsNeY7t4/hzf0T9z1IwKfQ3TNvcpKBVxPIg6qrnywZnvrUNsPq48Cg3gzwRj9HuGtlbp97U3cViUciFZi+UHXFzcxPj8Tgmk0lcXFyU1GptZ8stbfkUcAmJtsa2NnUYj8cxGo1iMpnE+fl58dva0arf7z8JsjPCLx+stvdARcTToHeNNLRlDDgGrC0D8HUXKpO/mJ3Dhd/UuxedyWCBI+KJM1MhXhowZc4jO8YHHR2r5yXq/xrJ8Guyszm4JD4tLqEjcINNYOIpUG0D04EOSYYraa1tlknmiDOH7m3gxlmAejqdFicmQuDTeaw/dSsjg3IGWgC2SU7BSQbbzA0D6/6a4oCJ4ER6qfeI5QTfDaH/xvo5eeQib7WXPzOD988ijLRBOk9l0Hc6OpbPx0JGplgO3cNJSwZyl71cXN/VRnKmDgb0LjKvXdnUFt62GenZFMmIpL/0O4+JeHRs3rZeP7VNNsba+ikLShHwMNpPW+j9Rfu8ik5kNpd1of67H/Od+ehX9L+nLSrNIwuEKFKrSOxrSK0dSJzaztWxes/0Z5lw/G0qySBgb9NVideHKar7+/slys/rOxh1e84XA0NOiN02U29JSmo+hsdmWCrzI9L9jx8/xsXFRbx//77c9+zsrAQjJTyfbSAfrbE9Ho/j+vo6Li8vYzwel5mMiMdU8MFgEMfHx7G/vx+9Xq9cT8B8Mpk0nvOlZ9XoXrIhNaLn7czfnEy0pVK12TXVPyMvwqzEY+zLVWSt3aXcWOvGMkwv7cQcDLQ5Snc2PlCyaNYyB1zrZJYti3zqd4+m0AH4/QmmsrQzr58bnDYFqrXpMqm1J6+hgeqLdzVwbm9vYzqdFsfFQeYDh+1GA5L971H5TRFOI9IA14zDlwB+JNw0Dj4+am3J331MZOPODV4tYqiykXjXorQOHrJ2y5xdrfy177X783j/vOo4zMrszlNOXK/MlmktE8eGz2KoPTKbtQmSRZXbjnFdoA2sBWO8/7J+yV6Zr5M9EwgREHF7pGNrYGxVwue2nuXndxGHbKEryZjPGGtxd0QTYOiaenZGtq37S4q3Q61PV7Hz9J2ZPXOfzUDCppOMzBZkNiaztSQZ9/f3jZn/DOOsQjT8P441Eg2SDM4Gt/Vn23+sm/pJ+iqC8ctf/jIioswu9Hq9NJjpgSuVTeP78vIyZrNZfPr0KSaTSVl3qo1s9LDDo6Oj6Pf7MRwOSztcXV2VIKhvf6tyk2S0tf+yvmibvVhGMNQ/2fX42XeXkp6t4lPWmsngtAlz3GazWUQ8TRd6rrQ58oj6w7X0H5mizmWjZMCInzNgkDkrd+AZIKGz44vOQN/pFCKeRmjbykAFUfv4f/69zVj59f1/ikgBDXXE45PONYOhFCo+IZ73ogLrRZCePUtBKSObIkpL0r70mcHm9OZrO/GIRxBBYM+xkEWOPX0qotlPumam11nUlJEngR7Wmw6AMxRcGF4zbDWAmkXBVY8MgDgR83bJxt+6dsQjkiRh3DZUeqS2ob4oJ1i678SEQQ0Rl1WcwdcStnENYLD9aFMz8sFzpJM1e8bjMntOXReY0UzSw8PDk40LFFjRU6QjorEI9fb2thF8YN0y++pBG42du7u7ogdKc9K5vvMex7quqXLrWJVb9dU6ud3d3bi7u3tWv76UuG2KaPpWT4/KQCSF45+gXCDwte3xukI7kemtgz/6Wvlbge2dnZ3GQyQXi+bGIBlmcJDZ6eQRbdpOXcNngheLpw+eWybCF/5MJV1P9dE2t8puIFhmO15dXZUxw/9Vdtna8/PzuLq6ik+fPpWxcXx8HL1eL96+fRtv376Ns7Oz+Pbbb2MwGMTZ2Vmp6/v372M0GsWnT5/KOBsMBmV3TbUnMVJG3rLsB6Z20dcSo2efa+QjIgr5pC5o3HP26VXTpbLCcer4pbe9qwHtVc9lZ2XXyQCB37sGqPk/I7EZyagB/WXXzRxmVseMqXq9VnnV6p21D9m/PnNGQ8dmAFv1Yg5jVjfeO2sDXU/6tyniBM9fz4lq/hRp62v2H4914Fa7DuuT1Y/XILjmmOH1fSpdTs/HRlYeHwdt7VGLkPP6JBwZuVll7Lhkuu7tQ7KQpeAQ8Mq5sL28PzNQvQmSRaproKOt3SjU3VXsoP73a9T03NMSVAb2lf4naOAaLP3u+sWytJHj+fxxTY52vBHhiHhcbyHC6mkhbGuOSUWdvb739/dxenoav/d7v5cGI2r9taz/Op1OnJycVP+rXbOGB2rBARcf/xHxZMxt2kzGKv6Zdk+glg+OE/nodDplVzumuNcCj8si4fQjHrzKyurlltTGAPvVtzv3cpCMdLvdxg6GwhsiSSLSAvlqN4F/rr1SYCAiyo5WR0dHMRwOYzgclt1VDw8PG6RM99G1uYZURI0bLGR4Kfu8Cq7IgspZEIV4pUYwGaxSXzOFapmsNZNB9qfCiAHRYH0t8YZnOZ1x1wCDdypBtDswRX80uLzBxQhptFUmHp85FS/zOuCqpoDZ5zan68d4ebggS0RT0a/FYtF48qYGsga59IYbBrQ5EG8nOsHXyhl+jjAlwRdjscxthPOlhcaBuusOVX0jR5GBONcprxfBVMTTNCfOOvl2thGPhl7nSp90vqegyElw2nldMMRr1q6RgVG+++fsXsv6WuVwcBDRfAK1HJ+2gXb9r43/TQNPkjZQyGMcmPA/Cf+vOdWsLzM7mJE6PqgrIhqgJiLKbjQaXwQziriqDAJNOp9kIBt7uv9kMomrq6u4vLyMyWRSZrUErLStp8aOtvomGeL1d3d3y9jvdDolaiug9cd//MfxD/7BPygPGKS/97LSx/JemU3PtrxnkMHboo2E6n4aN6s8e4fl5KYUXxPDZMKx6/qs/2WHpQO9Xi8Gg0Hp+4eHhzK7cXNzU3ZZ0ougWPpJQJ4BUP4X0ewnEg7WwwmuS4YBpHNa9zCfz0v2DINVR0dHBVtJF87OzqLf78fh4eET2z6ZTMqYpP54apWeH7O3txfff/99nJ2dxe/8zu/E6elpnJycxOnpaXmUg8aiAgGaLdrb2yukRDMZ8lnEiGp3+TbixrYX+7L2O/WE+F335EuZSmp/+W2mWa7qT9aaySCQkBJpemk+n680dbKKZIagzQkRBNOZMCcwM141opE5Jx7H6XcaKb0TGFBpeB3udqA66hzWmWkuHIBOAHSe1yUDG8uiFipHdhzvoel/pQ04YfApeToAClOsJIwAeF8zArNpkSdFJmRoa1OVmU68lmQgSr9zfNCRZcQz07tMtxihYd84kJfz03eSC72zHB7FIuhjGoruyxzrWhsQePAzx0GWopWRDG9vl8yG1WxdzRnLntB5ZDMaXpZamb6WtAFGCW06pVaP2rG1+tf60IlG5qwjHgkxCaEcN6/Fhfqc4SBYc1CcBcI8YEH/ozJw1zZPMySR4VjXPRXhdmDoQNLXLrDM7tMcNGa+3MdfRjz8s/dZ22xEdg5/YxtuYrqUytNmw1lmAXKlSkVEY9fHXq8Xi8WiRO2l44yoO7bI8IOTDOoIsZeL21adw/HudtkXr4sMEof1+/1CCtSXw+GwrJ3QvZU61ul0yo6XLLvaROB6OByW+37//fdxcnISZ2dncXx8HMPhsJAQzShOp9O4urqK2WxW6shne2gMypYQn9LmZG2evTJ8kWE970f+lpGM7D4ida5zbbL2mgxuvcnppZd2YpnDdKOVDTgH3e6oawbOz28D7mpwpulwkZFE7XR7e1t+k4GWshN0++DzKJDX3dvdwWBWZgeI2ffMwHh/iGkrmsqHN9HRaIDJ+WWEIos8cQqTv7kT1/U3RbgHdy2fkq8vAf5qQItgSW3cBshrBIN6w7pF5MRYfdjpdBqE0Z+rIlGZSORJMhg9lnNQTjp30WE5KA6SHGT6cfova+fsswOa2jGZrcsIA6NUjKxzjGbnbRJ4qpEMb5MMdNauVSMlq0jtHG9nbnDCRbUaQ5yx1XV9hs9Bo+xhZsfoE5xkRDzaPwExf8ilEwz+Rj1nNJU+QH5O128bp7qugyY/xv145uNc2n4nufGc/dp1XM9IMl7bHq8rtXRs/Ua7rOCeQDHXBmqWQ7NczM4Qnsts+rLAJAlHxNMZYgmxQ5ZWlQV51LfSvf39/Xh4eIj9/f0n47Hf70ev14vj4+MC5rXVrWZ0dI3Dw8PY29srO0hpxoE4qd/vlzJqu9qf/exnMRwO482bN+Up4xoPWug9Ho9jOp3G9fV1Gd98KDE3tfGZRfXFMhLhtsCJg2M9JxWO9fyaJBlMjVJfU1+WybPWZEiBHDgucwbrCB2/X9sV0YUK68raFiVxpSeQp5PQQj4xYBleKbWEx0lkBLV/s4yBtyE71aMymeKwjss6PlO2mnHJ2kROkxE6GYKsnT2q5u2tPtbOU3TWMi5ep01zBBKCiGzKkjvTfKnZDOoJxxX7u6Y7Dpyz7zWdYTtIVG8tVJ3PP099a9GZtgX09ICIxzFBUq7ns+gJrErD29nZicFgUNJHCIzcLrQJx4dHbtuEkbxVgTLJeVYOOgNNx2uxY7bQnrM+tajiJssq7UZps33LwK1+c/H2vru7a4A5bWXJp2O7vnC9mkAfd6bSvamTPraYGtrpdEr6xWAwKPciIJM9JfCmDeb95GNEUiROsOSPBNiyts18bO04/4/vq9pEXcvXIKybVaH67+/vb9w4oR3J/DJBJTGF+olbqQqIR3x+hgRTchQY40t97r8xiFQjFyq3dIXf6fcIVr3tnYRowxil7osgRESx8/1+vzy7wvUiIuLt27dxc3MT33//fZnJ4A6YPjPc7XbLrJBmLuRbmHY2nU7LszpE4o6Pj8vskdZjCENxHHA8tc1MEFNwFiojHVlKFc/hdRUcJZ7zlOeIKJta6PcXXfhNpWbkhdHrlxZWri3yRbDK32vHr3ItZ3d8QrWi9xnJ4OyGk4zFYtHYzUNOiulGHn1SWTW4MweU1bVGxLyOba/serXoBkESy51d1+sgcUIp50nA2lbGTRDOwNSMhac8fAmptXdNP/xz9r3t2vydAFf1564aBEHKV+WD+hyAKXLrhFef6VgiopD4THfadMl/Wxeok2C0kTd3zhngIsAg+BMAdKdYI/SbIt4mtShm7XgH5GyzDMDW2nVZUGaxWDQcNGeMuGtaLW2ToFrn1WaUvN7e77SfnlpIH0zgTdLBMmYzdNIdjb+IaOjW3d1dsWtZaqO3fabjbe3MvliFlPNYJ1OrYAHel+PmpdK+X0pqNiv7L+KRzKoPHx4eCmZZLBaN9Se+U1P2qgWQSHwimmSo5kNYp+z/ZTZKdTs4OCj2X2NSW8tqFyfVz2e4RJQ1O3FzcxO9Xq9gO5+JZ3tpdsjTI5WyK3tMki/C54vBOXZY7wxfLfucfW97tfUxSQixihOYVScW1kqXEuhT552cnESv1yvAoGY8nyM0WrUI4jJwTMeSGTxn1XyX4mj3jtlsVrZH0xZoGrQauGobCdOldJwMWa/XK6ybn0ncpKCM8jPC6yC1BuAzZfL61o7ltaVkHEwRUeqjAa5ByLbUNWj4GCXhQKOzVv9E1B8Ys0ngSZEhRXsEpD2HPkufeA1Rv7G9CWY9giKDrON0XsTTHbMo7qhJEJh7qjpPJpOYzWYlgtTpdOL09DSGw2G8ffs2Dg8PG+SApIw551pcp2i+FjUKYGlmQ2VUfV3nMhLA/9wetRnXmlOttR2BjfSG41w6xECH6nh1dRWDwaAx80eHSvv3mnr2HHHwH7H+DCVtXkYuqOvZsW4//f4iGJoxEtCWTSZYI7kTyGc6p/pWNlTXlmiMZKCBKVJMq1I/M/VFwpk/JwAEiCS5JPcRj1uEa4w+PDyU2XoGA5alSemeLINH5NcVjsfnzGR4W0VE8bebJLRVDvQjngaAmZqjB8j98MMPsbOzE/1+P46Pj2NnZyeGw2GJ4hNIyj/5YnD6ak+HVTn1m7AOdUsinaOu+KxHjfhQPzXmNDu4v79fnldBHOJ2m4FL6bYwHWeFaf+ZWaI6MMtF19DaQM2muG7qeI6F2rjI8E4tWJllTfC7z2hwfdl8Pi92jYFy4VbVnbiO/bxM1prJkLJwARG35HppqZGK2r3cYGWN4M7GWZsanHsv393dlYeraIpOzFXXkMJLgSIeo0AkIzTIUtKHh4fyZFXNbnD6ne9OJFRvtgHbIjPitXPb2G7tmh5FYiRJA9Lz92rl8evyf5Ypq+umiPqaMxnZdOaXnM2gkZIQxPp4EsFgZCobc+wr1wPt0qHrMRoqYz6ZTOLy8rLkrmp2kGknAjQyjrqOjLfKps9MEalFl1l2J9KZbrbVu3ZMm2Rt6YSPRE3OUO3D2R8FP5Sb7FG7trptgtT0ig64Jhl54HWXOUGPJGaEw1OGlNInnWO6MIG2E24HFbLlDM4RODqYpM4xXTCrJ8GUkwy397TLBHgMNOhY+TbtZJUtMK/Zcu/PNv+U+f1a37nvof/hvVa95ibOZGQ+OfMdsrucodBC5PPz87K7kRZIc8aD9tCj1g5q5dv1zn7UsQxoSafpc/Se4QuXTJ80u8B7cfMZlsfTtSQkqJppUPpTFozlZx6TbQgh/ctm10iyVI5sXNT6YJXflr28v/x6Gv/ZS9h11XGyNslQ5/Z6vZIDJ8fOqMxLS+ZI+F/b/y48joNHjkQPObq9vW3MZJB4kCFKkaWwUhrvfJKMiGiwzZ2dnZLvxofoyJmpnllq2jKS0fbd/3PF8+t69MkjSRpQPFb1azMiuh8jut5PXqbXILY/VZizrXrVCAZ/ey0hUHIDy2PcMEc003dqesTrSVfZT24ERTKurq5iPB7Hx48fYzKZxMPDQyHxnOp3kCOd4jjwcce0hwxwqI7LghVeZ3eS2Tm162Xt7m1HMMhxpP7jA/gk0+k0hsNhcXKe7sI6vKaerSvrEJ51iIaO98+Z7rfZIo5dtb38A2eXPc2V4N6JBu/v6XsRzQW+BJB07ozEZnafBIOpIl5HiRMNtaWAJ8mDiOz19XUD6EU8XTvnOu994Mfx/quIjnOCkc3a6PrLiKcT/U2RGtilnSVp0Axwp9MpC5E/fvxYnuVwenraeLAdA0LupxQs0zsDhk4qHEQzUCWpBRvVP66P+o/2i5goCzbpvqqTztE7dUH6Lbyl9HX6LEb+VT+mUBIHRkRDB327Z8dO2bhwkuE4sm12Y13ykekT66R+F+ngbNWqWSRrbcujRlMum/LTpBTs1J8iGSBwxWvrIH12x0IDo8+cPtJ0l1I55NQZRXW2KqPE73w50+dUu8qnfZqVBqEt17TISZEztoUbRDokb7tM2VwyVpuRD7WdgzifvZAS0tiwH8jsM4JDcEmHW+v7TZFs9xg+IVhAhfn06wCu54juz/b2PpB4X9SIBt8jnhp76bnqSoPNqDB3q+NC5uvr67ITioMgvTMVhVsaSjfkSD2PlnWlZPqUAbkaOM3Ef8+uR4KhOtCuKvAxm83Ktohqu8lkEsPhsCyAlGOQc3Nnu8nSRtQinj9ztOx+NUDDNDWmNqp9NeOcRfQdWJB0057RL7kNrNWTIM+v45F96ZbXj21K4EX9WywWDdClcapNFhaLRWNLTonXz//L2qFNMmJAEOdpUhkmcCzgbce23TTReBcZyHw5/a821ZhOp/HLX/4yfvzxx/jxxx+j03lczNvv9yMiyq58rocOQD1F2cGmPqu8bqd5LY4LAlX3T5JsjNJmekBFZSDm8jHAcvFcBnioo8RdFN5T9/Dr1vwG28j7OwP+tX5gGpT/Vkuj4kyY+oHHSVeIE9SWaj8Fj5fJWjMZNGI+qNWAfIpnZmhrRlav4+PjlPXVjFZbWamsTi68TGxkkQvNZniZ2egExQI2TjAIOh0cRTSjvYvFokzZKSpMxfI29Xq7ci9zWrVznFg4oJQe1Pq5LWKkfmhj8bXyLLvG1xamrUQ8GtKacVjV0T5XeH8BUP2eGW7/rwaSM5Djes2pddddfWb+dDauMjDAfve1UDyGIMsdRKZLtX6otcEyWdaG+pyBUm8LgTyBBLULbRXXvhDwZmN40+Q5ZWsb9wRNbfeq/Z+NVQJWgnnqlvuz7H41kO/3bquzg0L2efaSeKDIdZTAzH29SBbXBDGFMbPRWZ0zm14DXDqebURCxWCXz1quKrR9uu4mifBFFviLaOrCfD4vmRgREefn53FxcRGTySQuLi5id3c3jo6OShBTG2boOhS3w05uZFsyP01gnvl1vtM3tAV6fNy4Tc/0kGXxscYxVvNntMW8d1Yu6k6tLH5+ZqNYZm/PWltnfZX1WS2AXDt22WzIKmNt7ZkMRRe1/zAbdW9vL/7pP/2nBdgowhPxGXBMJpOyhzCfhKhtAAeDQYk6SliRVQa/s+hMvBNqeW6eA56lXkj0v2YdaMB1DZ++0/3FLiOiYdTdSUgZBN7oXFg3v68rYFt7+P88R+/qHzpDlcejGpw6dPCT9Z0rb63cvN4mgSetKaABYSQ0iyi8Zvl1f82WRURjOz/XU7VpbRypj9v6Q7MHWme0t7dXtgDVsdx68/T0NBaLRdkV5OjoqLEbB6+rMjP/WFHlVYhEWzst+9/BSFsUpwbeMlG5Oa40pn27aC7Avbu7i/F4HL1eL87Pz2MwGMT19XVERInu+lT+/wtSC7K0HZtJBtj0mQvtOeOofmfuu6foZEA1IxYZcOH3Wv1UDgItvbM8nqoR8fTp9hmIob3lluwiGVpDtVgsYjgcRrfbLbPuWV3os9gWq9o9J2EMaAg7CDf81IDTJgWsJA4A3ZbIHmqr2vF4XNZq/dVf/VVcXFzEhw8fYjqdxvv37+Pi4iIGg0GcnJyUReLCXg7amWq7s7NTAlUkGfT5tJFKtdFvJB2ql4RZDz6W/FhKptsO5tuEeI/EKAsaMHicjd8suJDhp2yse5lYNgY72CdZ2nX2n286k2Fd+RSmhdHfqk3YT6uS8bVIhiKGenGRjRp3f38/IqKACxk8n+5RB6iRZTRIMJzpuUPIflumWOxAlkH1U57p/v5+w9m7svl31ZO7QBG8ZRExvai4TEcTkfNUD9aX59baJRvUmWP1gVwjH6ofnxDLqKkTjIxUZIaE99T/GcnwwbxJjoFghATbjYGPhdcuk2bGuKBL7RvRBEaZHrhk+pX1i4ySSLN05fDwsIw1OSntUHZ4eFgibSIPDugZwfSx6GXO9D8DcW5ram1AZ5kBqgxM1cgGHTLTzTh7wSCE30trxPSUWaV3qp31aiM5X1O8DdcZ08uOcdDjdqZm9+is2fb0U5zFcB2s6QR/5+LtNr/WVjdeM4vqZ5F9kmW/d2YPlKIjn0//KSLGzQjoL/3ay4DiqnacY90zKrL2X1c2yZ9ENHcdy+yHyitSrOc1iFRMJpOy3b62V+33+3Fzc1PWafiuYhHNiLpHyTlL7TjBA8ME7xkeka3y35YR7dpvThBqQv2sYVKJj3HeR9dy4L4KycjqmJXJ+8L/z2Yo2mYg/Fiuu3BiwywI/Z755JqsTTKyyAEBExuP4EIERK/ZbBaLRfOhJBmgpPGr5Zb65xpTrHWAzlGESg+rEUjyazHymO0w4rMPzGlVXitz8dVuvL8AFh/Ul9VV/dJGELzu/M0Nlx+fMXzVnZEKMl06ODf+Pkh9FobRdLVNDci+lFN5SckWJ9dyJttml166TNyRSIbNCTb1kfqWEdjsc0QzTUmgRKRdqYSaVRkMBsXpibQqOqmFeL1er4AJ3Y9639b/NQNeK7fao82xSdd9TPA62Tn6XJuVI8mQbih1kykN7oy1OcVoNIrJZFK2YlTZ1Ofe35siJAJZu0TUI4CrXt9tjvsBv5/anrOPEc0ZNNk/pvtlZed3H1Osm4ObWl9lAFPnONFguTJAxOsRPKqui8WipOwuFosynpXHrw1Rut1ueS4B1xrqusz59/KsQjCy8eizmSR9Lt7WWZus8vvXEkaaiVfcf2o72h9//DE+fvwYl5eXcX5+3tj6Wlva7u/vx9XVVZyensbZ2VmxsxkJrUW9I56mCOk3jiUKxzmDiW2/1ST7v4YLHBc6znGSkREM+psMtzA44SC+TfdqPqNGFGrkKDs+S9POruezIepjrgVivxP7LZOVSYacIMEv9/+WI5Nk6zYEHgR4ZMjVacsiu9643tmrSNbpKr9AEOtL0EiQIcLFlI025XZgRyOvc3U9zmBoCpMgiOe6kc5IWlZ/V8oaKaGCSrzfeX86PO5ewVkN/sdZILZdDYhFNKOA6/b/a4vylSMe68BnYjAyrUF6eHhYNlJgX7N+NGBq05OTkzg8PIzj4+M4OjoqoFy6rGevCNhLn0WAuAvRfD4veuhTwm1GUN+z/tdvAmV8Qmq/3y+65eCIx7JNMuLrIMYXfmaS2RdG3zhmJe50+Ruldm93OG5/GDUmwdDsBJ++ShGwOD8/j6Ojozg/P4/pdBqDwaCksihC9dpk9rmyCtBsEwcQvC4Jis/6Zu2h/iXJ0Dl8IBefjUFdqQGSjIzyf3f8KgvL5Z+X+cm2FKUMqGSzrBGPO0rqAWjaZGE+/7zIuNPpRL/fLylTjIrzxTpnoC/rw2x8kegxq2LZ2M9A5m+CZOAxokmeHh4eYjabxWQyifPz8zg/P4/Ly8u4uroqfUmMoOciqN0PDw+j0+nE0dHRk2wSBQ7lsxxsEjO57XRb6X6lzcesa8epV8RqfnyNQNG2UzLCkEX7FUDm2Kn5SfZfTe9rBCMjCNnMg8/GejZRRhx1TsRjJorwekQ0/stm1zNZmWTQEfpWpRGPykYl8qi+R/4FpljxNuOfgRs3Yvq99pnvrBsBM6M3DsR1PQJlzmJ4mbN21Duv5W2bOTAHNbX2yD5n7ZUNnuwa6h93FFkuMnUlm7bPdINOORM/j+XMZnG+pmgQMtKT5U3SWQi4KJoU8WhkRN41+PVE6729vTg5OYmzs7N4+/ZtnJ2dRb/fj8PDwwIIRFQXi0XD0MhhRDT3xhfgz4xxzRDW/icpZP+rLpyZoA5wLGh2Q5IRYtkb1Yv3W1WWgba2erOtVjmHko0J6QT7W84ru4+cmyKU2iFPZDJi+YzPJom3J21OrX+WAUt/LetnjjcCNIFt+j8HScsAlB+nPte4a5vt8M/8zQFSBuJ5LD/Ltjv4YF9w5kAAg2RMwZUMpLX5QZa1VresXd3/ui/y+7idckDq99yksZL5awnBu1LXtB5Dm0G4fVN/axc/30mzhgkc8JIc0y/79xq+8Do8t214DV6rTaey+nAMsc0ysO8gvTZDwGvps9u2TN+ycdqG6ZaVsUZYav2bzYBkwZBVxsnKJEOzEIpYcC9mRl01M8FopIyxwM/Dw0Ps7++XVCkaKxkyAgUBDxpFdxoEHGx8XZ+dR8kACQ0X95D2zsme1spjdT92FsFeRNPZsByMuOk4vut3j1DWSIKXh9HgTOm8zCr3YrEojobbN7Kf1Xbsf5+5qJEpJ6acIXMSo/bOHNvXEhlq6q7a0Rd/e9+pHgT6WURE17++vo6rq6uyEcNisShronR/GXyNv6xdmfo2n88bkchMD52AEwhSaDzVz9xq1o9xEOHjW6K2YyRF9VSAwMdTZpxdWA8S6ZrUHH42VlkPnuNjR8cLMEyn07I9ra7D3Fltb3t+fh6Hh4fx4cOHuLy8jMFgEG/evGnYsU0CTjV5jTK2kQAX2naRNemTAgH0f7XZDL+mX3+Z86d95nltgIP1zerkukd/yvG0WDymevqs8c7OTslGUPtEfH5eS0Q0HiKb3S8jXJlk49ODcb6F8DKyWfvtN2FcaKxnIF2zntPptGy/z8BETe7v72M2m8XOzk6MRqPodrtl63DHAlmUO+JxZkkg1DGX3umPIh7tXkRTT+hrauCb1+PvNcKo4/XyyL/alsDZdV/4hw+T1Wf5fG7V7r6dZfDvbeO1FghWWzohYL18RqONJNG3yH5xKYPwAoMiq5LDlUmGR3AoVBgpURbdZwQiWzwuw+4AlI3vRIJKod/43ia1DvcoPI296tjpdBqD3qcRM0WhQmQDiPVsG2i1gZedu4rCZqQkWzuQtRWVkEqarVGpvbLrZREnCYGyp+l9bSFxbiNsmSHKyLBfgwZG40URqW73cb1D2yIu6qm3NWcjZUzY/hlI4v8cL35uzaBKlhnbzDn4ubqvE89VSAbLmE2z18qm82qOrmaMs3ZhXT3FjvdixFtE4+rqqiwAF9CIeLTFmzROJG12kOL23a+xyrltDr6mawygZc9kYBTdy+M6SKLpupzd3202CYe3XRv5qBFclkXvEgYa3D5odpQBCPcXz9W3bHzStmRBKs5iZGNvnfuue96XlIxgRERqL2oznxT5IwU0+MBJ9SHv3QZS5S/0Tt2g7nrwinZMdXHf722wTnvxOpmNVV3pk4VJOH6z3Zx81yYH8hT3s3rnGMswbBtG83faq4x8+P/+4gxlWx/r+yqpyRFrkAxFcLIBrYFPRfOUKDaqohAPDw9lZmM+n5cdEBQ1yhw9ldMNM1mWk5EMqPvvTjDU6JmC6rOUTWWlU+DxNXCTgWyvcwaya05H7zWQmoFfP54zLoy4kyQ6ichmLHxxJPNo+QArtT37wEEr+4x6sWkR2tvb24iIsjtZRHM9hSKAWd6mdM3Fyan6QgRDay8iHh+yROfr918sHhd0RsSTtuYYo7OQEJQ4oHLjKlGf1iKO2Xhx0KU2UMQoG5u1KHLmoNuATAYU2xxcZkuWidsbXefh4aEs1NTCbz5JnmNGv19dXcVkMonLy8sYjUZxfHxc8uVXifR+aXGwK2kro9vztv6sgcYsmOHnOWAWaecaAH9iMkkuz3eg4PrMGWIJ7TLJiLeTk2Evd9ZuWTsReOh4+W/5YQZ29IBMlVX35oy3j8NMfOy29Z3PYmSbrtTsigcA2gjrJorbIi83A06cfVtWP9mZbrdbFoOLaAhEEls5jlA/UzeklyQcLo7ROAYJuJfZW0pbkCe7P4mZdJe+z8eWzvEHyarN/aGzKpPeawTDy94mTjCyNC23K1mw2I8lPsiCk1pHGfGYRbFO4GotkqGdI3TziGg4SQd/EhWY23tq/213pooE6xp81gYBlncK/3MWXlPAGnNUI1Lp/LwMFNUiKd4ZAkMelfH32poHltnFARodlTuUjAy54jECoR1/5GTYxk42SC7omLlbVmZcSCiyvmG7MrVuU0RPZNZY0bMKNMXKB6f5rBdBM6MpWX/N548PxRIYIGmn3ggECXSKZFAPIx6nwCWLxSKdKaqlV0hXOLXqxDni6YxGpq+uuyS77hB0LzkBXTsDebo/y0GCIb1y4OJ14P39/2XOIiPULHMWXSTIZLn1u3aOGY1GcXFxEcPhMKbTaXQ6nScBm980cRvaBigyIJ1dT++6hgMoJ7FZBJ0zsSyf+lBpFJkeZk/edV2gTSYZYeqhP4tKD4/1tqN+6dp+L75T3xhEjGj6dqYMs146h/3l4uMx6yeWn0SP2GAZgSZWyIjqKsD0a0pWNuqo/AsfILyMaLCftUPd/v5+TKfTODg4KM97IhaiTSb+y4LJxA0S/Z4R4GzGvEYaeV7WRhmOqB2r+/rsd+YvOEa83WWzVT/aaA8kE/twHLo/yvrPiQZf1AnqBtOLMxvHZ2OIyLOvFETvdDpPdtpbRVYmGTKubGQaaY8AOiNidEbXm8/ncXBwUMCBBsbd3V1jT27vYBp1Ag2fMXBla3NArlR0LBFPO7w2gJcRArZPRjIIzl3xfCC1GW9XPv8tA19Zf+leimApL9mBHNvMX55aUEsvyNqx1j9637QIrdKVtEBbQNC3xCS4kNTAsP8f0ZwiFyDtdrvFOeg+3W73ydSuykRDQiNLA5jpbjaeI+KJoda1HMy5UD9r0RaSDB6va+u+jPZ5youDDeooAQfbPiNJ3ic8d9n4Z7tkjtUNP3Ula1PdW7owm83KAvCbm5tCOjeNjEesl6KyKhDMbLzbde8zSc1X6VwGUWrghY5ZM5ZMddNxTjIiIgXNru8aq7LJAtwRj2uVWHYnCBorrHsWpZZOEYDRJwmMcFzxGm12TPWq9SmPz8Yr/UgWCGjTq7ZxymM2Sdp8vNtIT9uJaK8jddVnTn2mgnhLekid5H/8rDK4nrifWXeM175nJCNrg4wEeEA400Vv+6zdeT21j+uq63atrjWiQVvnY9cJx7Kgsvraj898seokDLFMViYZ2p7Oo4pqQAePLAinpFRg5nzqnekQAk/aXcYNBY2gxJ02FVn/twmdEFMM1LDcYtLvvyzqyXvo+MxguiMjW2yLTGRSIxqudKwPneNisSg7FA0Ggzg8PCxEQ/0kFp+1oz5ndaSBYdQjc0w0iNIX9eWqU3ZfSi4vLxt7ju/t7ZUc+clkUnLm2cbeDm1OhUaCC7M0Tq6vr8vMBmcrFHmifi8Wj1HRiGi8O1lgGejU9BvHCtNIpM8O/toMI1+0HWwv1YW65obTp68lBIxM/yDI05jnAt+aOFilU661Icsvu6kya42NXp5jTaeocmmHqYuLi3j//n3s7+/Hhw8fSiBnMBisHHn6krIKyGwDCrxOG8Hw6zt5lO74lo/sK+q12tLTEjTzJNvooEOBB08Xla5ptlfHyR5rB6D5fF5mk/XQSm3zLJI5m81K2qaIiOqqDQRUJtVN9kQAczqdlrU+Eo0FjRfpLduI9mGdvqv1u9qdATltob/q1rW8zyrHrXLMlxT1lWMB2YtsFkP2YpkIz0yn0+h2uzEajYpuyafIH9BOq3/pz5mpkpELB9VOWpYFASLagwjZb9QjJxPSJ/lpjX+SHt2fADubcWS70N9wppMzQyQWWbvwuo7fWEfeMyObtXSp7FhiCfkjlUufuZX6qthrredkSBgJcSXKHJmDCYISGVXtWCHlJeiNaD6bgQ2ssmUdk5WjjdFKNAuT1c3Bee0aGUjmfyQRVEQfDJnhrQ2qzNHWFDV7sZ90L5GK4XAY/X6/7FAkA5e1ZdYmGUlkmTKptaHXc5NIhlKSbm5uivP3WQyPOJJcZPqbEREZ5lr+pX7nmBTg6Ha7jVkOjjmObS8HyajurXM8+sprMMrFOrH8HnVhwEHGn7NmEc31TE6UaySDTkYARVFatY1IEfPts7FY0z3WvU1YlohmqhTBQi1Vii/VXc/WmEwmMZlMotfrxe3tbXnA6KaI67nrhtvpzLY+Z9y39QvHI4/xtta9aS+VGqXgAYNRBBlKXeP41f+ytUpLle3QLKXWCO7ufn5ga7/fb5AMjWkRFl1XnyOaDwv1thRJ6XQ6cXV1FfP5PK6vrxsETOSI6UrZOFilb7yf+b0GDBmEW3cWe5mObao4uI1okmL6lWzXwjbRcdlshvp7Fbzgsxc+UyEfkfltt5dONGpl9u9txzqQp91VG6uMWfsRE7nU7IPOo/+jLtMn8viafVsFy9VmL7Jzve84m+Htwb7l/6uQ2ZVJBvPyCHSoOD4I9E7H7+dpbQaNoIgFtwdjakNNOTPg751UA+5+LGdFsoGRgWfeJxPeP1NMl1WMYBsg9d8zssffmJohAHZychL9fr887K3b7ZZomF9fZc4cAAdRrew6f1n7qNxS+k0SOWfOJHBmjgvFfCZDQn133ct0XQCDi/UFeNx4iXAIxJDkMoUqIp4YQtcTX7SqcgiARDR3NmLZuXhOYJqgWnrIPFeWi86CZXOH66BR+sT87oODgxIh1e+9Xq9RD486LQMpJI6ZcJxw1lf73Guve854ZWOCs07395+3pLy8vIyDg4P48OFD7O7uxps3bwoY3WTJiBTltUChdNNT8xwYkNBJNzVzMZlMij6rTzmTx4djyraSjHe73bK5ih7MqWDAbDaLXq9XZhc0mzAcDku/Chxom3kGGLh1NccERURJpPry8jLu7+9Lve7v7xtb92oTGI5tjg0naRmZrElGLrhxCF9t/nPZPX5ThGlrHpBguqzW/HmGxzKRj1KAQvZHs59KaY9obvBBQqEZbPqRiKfPYXICsQrRaCt39tnFSapvu6/6yLe1YaTs2iS/7m9kV9gObrudANXqqO81kkAC4DMX2XGesql+YwBSZRJ2FzbnYvBlstbD+JwxZiAxAxSuSLym72ChKVqChsVikRoVKmr28vKvUkc6Eg1sN5Cc7nIj16bsBIWUjGm6ZASJ57riSbkF6LLpsox4dDqfp/L7/X7s7+/H2dlZ9Hq9ODw8TBWUBNMHSFZGDl6J2jHbKYQOJss5zvr6a8r19XV0Op0CnjVAMyPAKDXrUIs0ZiSa1+V5MphsJxnYTqdTopt7e3vFCNLQSJj643UQKaBee542dUQ6KYBGB8mFsozGMVLiekJ7wPLpWBl9d2hqHxES9ZmAoJ45IlCl61Ev28iGE+osMsY+1Plqg+l0WtLquOjb6+FlEUkZjUaxu7sb79+/j729vXjz5k0j/eE3QWhX6Hylx8va1MGKPvPdP9OOuh9RORaLRSG+SmOSDks3RRT6/X4DgOzs7ES/3y/An8ESn8ng7ETEow7pu4IEHFNqG+58pe/Ss8xPyE5oTAts6rkLCoroGVn9fr/UddXZBMcP2TkZuWDbrbqr1P9rpEPb+su2Rjzad6ZJuQ9oE/YHr6c1XZPJJAaDQXS73aLHHnCSfWeQStfmbF1EExc6JlTEXOdmQp1xohIR8eHDh/iP//E/NtL7WFeVQe+0u8PhMP71v/7XcXZ21sCAnE1XGyvw46lp7peXBaNoa1QPLx/r6raplv5U++7YzdOpWH5tnqJMFfo+EpEXX/jNCruCZsZjFfCnzmB+qowod0hQY9Dw6Hzei52ROZKaYWNZnGj4sWTCGcnI7pMBRB9kJAWrtp8f64TBAahHzp1wRDwqlJzJ4eFhcZiKwjuz93ZrK6sMSsbgOQ0ukXFiqhrrvGkkQ5sW1EhEjVD656xe/hsBlxM4Xk9RTRIfGQk3RHIM7AO/ZkaUIp7qgSIi1DUZN0WAuYOSyIbnxUY87nrBzScclPA7Z4Iygss683kSBwcHcX9/X0AeCZjKQTu4TLzv+buPGc0+cT2GCJdfs3YvAQVtZ6tdpgQUN1Xa2pNt5G3mYyIjGO4LvO1rIID3I8lRW4oIaq2EZsb29/djMBjEcDgs+iq9cZLB+2itgV66L8eNgm6cRdB4Vb18vRW32BXx9pQupctwJo3rO2RDIqIx++j9skrf1vxl5oOdaGRr+9hf2T0y3cpwTO38ry0kmrQVBIwZ2HVxsk2RXeesyO3tbVl/qRd1zkmr29WMWKzrt9v6h/9NJpP47//9v8dkMll6TZc3b97Ev/yX/zJOTk6e4CK1CXf7YzprFvjMykd/lvl1Py/TV707cVj2ygiKj3//T3rl6VIZdlwma5GMiOb6Bw5yTZdJCK5kMGoLtBR5kdL2er3CqBk1UsX4tHE2vHckI58sf5tTkRCw6DyfbiPZ8RQO3sPBvIMd77xVykbQzuivs1k5EFcIB4zqh/39/ej3+3F6ehqDwSDOzs5KW2sRqsBPRDQWQmZOwh05yQkdhkenCOq8zqrPJoKmWoSADlN18QGekVvXw4hmypkAOVOPZAQj4gko11hQhJ5ghSlOTtR1Xxohpn05EJPBimhO7YtISIcIWFRmjl2NdUV4FSlWelM2q+HjTxFa3V86LID46dOnEgns9/sxHA7j/v4+jo6OSuqU2oz1VFnn83k1quMO1UERy3p/f18Wb3/69CkuLi4aD9VjPzjwVh/e3d3F5eVl3N3dxS9+8YtYLBZxfHwcJycnG7nw28UdrNvViOb2qjWg2EZYZF8IzN1u12zX3d1djMfjmE6n8etf/7r0z+npaRwfH8fx8XF8++238e7duzg+Pi5kWy+lLu3v7z/xAXwOB1M6VD7N5nK80e6q/QgsNMYo+l1E9tOnT3F1dRUfP36My8vLGI/H8eHDh7i+vo7JZFLaV7ZCG7LQxlC32kiE/+5t7+SCvoFt44vO22STCMNz5OrqKg4ODsrmO9Kp2qznc0T2WgEKpeOpvzudTlkc7b5KPoiBQvkK2UriEf3GDUGeI+z/n3KdxWIRFxcX0ev1GuBcPur6+rpsvDCdThtP/PZAYlvQg2PTceUqupxhRxIGxx1tsxgkSMSSnc7js5cUPFE9Ih6fk6Ex+uIkw40FFY0AOXOstVQaGksCIim9g3OCYnWQO10HqW0MXuIsM4u8ZACG5XUjmd1DnZSx3Izd8/dshsJZaVsuXu3aqptSRbSTFPO4XZFr4DlrY48q+efM2fDczOGvGgn50tLW7k4UvN8zgpG9UzwCwS1yCUaySIXyKj1i4eDH70X907sT+07nMcpF8uOpUdRdAkoBCT6bxcmF/mPeOduKQEtRKBp5OUitf+CCRz3U8PDwsIwNXZdjO9NXtRXbbZmoLIokKzeaKW9+L7ev6h85wfF4HKPRKC4vL0v6w6aJO2F9dwLFYANfy0DGMsCb2RcCXCcZAmLT6bSQQM18aWtv6ah2mWOkmSlMbvMZsPGxoOOyWX0nGCTtsglsHwXtBE7fv38f0+k0Pnz4EKPRKCaTSYxGo8bMZ0asGeEkycj6wskj+zbrA+8PzmJkfrhG4lfRibYyboLogXnSH9lWBk/8WTqrSAaAZafdHuqRA+oPn7GgLnjkO/N1uiff1xXHQ8+V+Xweo9Eo+v1+w7eJZNA/XF1dPfFfNezWRqql0/Ir3EEtwznZS/Vvw3z06e5v2S8StqdwgWyO9/uqhHZtkuHG30mGA5HFYtFouEyxZHSZJ85zmKYjQ0CFZ+51xo4dLGWAldfkb1kb8LoUgazabIk7g4w0sH2kGN6+jOTzxetl59VEZVYU9+zsLE5PT8vUPtNaxODZ/v7U7RpBq0lGItQGbf9vorQROxpdgnRJZqRU3wxA8zzNLHAL2wwcKO1Bu8YwKihDQuPhIMvJLaNnbg9UVzkr6Y9IDvtXhEIATQRXO5ppMSwXaCt3Xb/5TIqMo0ChdFltLmcxHo9jMpnEeDwuaYIRnyOISn3T77I3uo/bRLdxNceTzU4pUnZ5eRkXFxcxGo3K+jQCrGwsCwQoAnd7exsfP36Mvb29OD09jW+//bYxo/ubIBnoj3icnZPerQusIh4DUfQfnFnlZ+q/Fnmfn5/HDz/8UEAH1411Op1CMtQvss+qE4kDy5b5D9lYpq7wPx0rG6BAw2g0KjpF3ywAdXFxEePxOP7mb/4mJpNJfPjwIabTaSFOqofWmEhoA9SGLh7AyvyvE7kawajNYvBe68oy375JMpvNIiIaefCyobKpAsRZENMlwzbSqevr69LWk8kkdnd3y7OXOBNBYqxzNR51LK9Ln0IC8lyCwQCSSPNzZT6fxy9/+cuyUYp0W1hHsxjyr/RfGZ5dhmeEd7l1um+VTuyXBf/cF6vvs0wKkgbOYtRIqerGXSm5GFx1eHGS4QyLjZkxOWdJMhje4Lw2DbzOiYjC9tRoBNQ1h+BK7FGTtulxOSBdPwO3HjHxCC7r6kpBEkA2nDF+Z6GMVHnUWuXxepN48X/mtu7s7MTh4WEcHh7GcDgsT3hXubk1o7entwfBV+139hGNk0eraEyYr897bpIwsqQBLQDfFvWIyOvDlA5vO4oAxtXVVQExakfuKsT21FS4jhWwUKqGk/NMj3U9XZvPtdB/Aj6eNyzdE3jQwlLpoGbVBDJUH5XX98qXLnFB9+3tbUlvmU6nBXgpLWQymZSH100mk5JGpXSQ4+Pj2N/fL6l5BLvuWPy3Wh97QENl5loKlVmRZI4LXZt6IWfP1DSRpvfv38evf/3rjRovWdvxP9bLI3x0frSTvN6y8VUDtL7AmH3N9FOOt+vr6/j1r38d9/f3cXJyEp3OY4qUyLHuzUh0ZqtVF/YzQYLbEfoZzWBdXl6WGYrZbBbj8bgxXjU2NGvx448/ljQ9BfTUzrUtTNmG3nd8ub3K/K8TDT/OZ5bYHy9JFp4LeF9bZNP1gNeIR3uvKDvTd34KcPddpg4ODoqP0P3Vr9RN4i0Fq+T3dO221ypl07WFgQiYx+Pxs+stkjGbzRpYS7M4InC6nwdxa/Vw3ZeN2tnZiV6vF0dHR3F4eFh8n2ydp7d7EJplzF5ZAJu+gQQjazPHCFpnKpsg++X4oCZrkQw2mBcqK3DN0Og//UYjwmgdFZYpF2xEEgIyQSdANcOWRVJ4vn+WeF3oGD2CnM0wOFhztpqRDCkHp8HpdFyydmdZSOKk6P1+vxE1VooJFTMjZpnUHICfo8HENAB3shxAEkZUNkUYWeA0ow9+l7Y2zMicPuta0gfOZCiSqmOdtGlcsawCq9IPtnemnxz3AjBO1GvPB9F4F1lQit7x8XEcHR2VXc0851vji2syCNxUPzlfkozxeNzIZVaUShFBlV076Eyn0zg6OnpCjGrGuaaP+l3nsk/Zd9rVR+CBY8LTSR2M+5gRadEaj9+U3aVqQJNAPeJpuiz1cJV7uI2nD/JghztuApHZbBYXFxexWCziV7/6VYlQijAfHR010qSyGT+vr4R+ggSeY1TX0gMZz8/Py8zE1dVVjEajRpqrorQaFx8/fizrL1Qv2Q33S95++rwMbGWELvvd7Vt2HP0X26pGLqlTNVkWHPiaotkFzlRID7gtOoOAFPps/pYdJz3jlrhaAC7brmNreEUvjk19byMabX2kYzQGtBZKmHA6nf4kkvHx48cSGNM4UZty5y7PEPEZhjaioXM1u6nHN8gH0oYrqMXrsm19JqNGMBxr+nG1ts6IiepA3167BuVZD+PLGrFN2sBmNgvhja4FT5wa1GBQ2XQdNYLvQJGRC/5PgsP/qDTu1DjgVCeCLDdcVADOZNSUlSSEQFBEiwbFHVQGSiMeF02yzoogHx0dlc9SqGz/7TZy4aCgRiyzTQJ0DkGl6sxZG/VFRLQOlq8higJqqllGhdtdMkea7ZQZWvZTlmJBAEJDMJ/PC6gUUI9okjYZaP2nrVt9rLtzz4w5ybPuwzIy+sv+UsSYMxhnZ2dxdnZWdFHkxReaz+fzxkLD29vbkvYksKWIrUC7nJNmLwjo+YRmLczVFp7qKyfANftXc+K8hvry6uoqxuNxfPz4sSz4nk6npTxun+jsaUcJkhXt0wLlX/ziF3F1dZWWdZOEdixboxARJT0zmxlsA5m1AInfU6m7BNuy1WxvpejN5/P49OlTTCaTmM1m8f79+/jLv/zL+MUvfhHD4TBOT0/LmqLsORlOYBloY8RWi3vl/9z+i1iPx+OYzWZF/6fTaQMkkdTKLqluSpWhX454+kDdTqfT2Kyj1uY+C0X/VBs7NXKh8lMXMj+TEchlY5X6s2kkYzweR6fTidlsVvRRxMJ3olsngJXJfD4vdmc8Hsfu7m5MJpOiG/Jnat9s1oK/EdNJz5m5QJzkfUTdk75eXFyUd+7y9Ktf/erZOEAkg2v2HIe1tWWWYeOBA43PiCjpv2pLzdi7b1HZCPTbXk4geC7TKH3BdyaZvVN51Tc1TuCyFsloY2mZ0SDY9igDz62RgYjHVCkBX3W6WKwDdpWVRpJEgk7b710DWBIqD0mIkwkZxIxk6Hif0XCi4YrLWQsaejemWcdnDphOXFsmclcTliO7L/td1/P+dADt/e/tU4tqOJDIdGhTRHmzio7LAdcW6FHfSbS8bk58s7bTfW5ubmJvb6+8+8I96iJnXrLnetQIh790Leaq+n8CNzLaAiq1/lXdRKwFinRtgk+VXykgWttwc3NTiAIfhOjGmUY5m3GiXru0kW79n11L91HdlLqlnPgsiMBz+Z/rkvqRUetNWpPBNuFY0Hs2BrJr6Dr/+3//7xiPx0uBxmKxiH6/H3/0R3+U+hwGqBwE8b7d7uMug9K/xWIRl5eX0e124+bmJhaLRQwGgzg5OSkkQ+kR7AuV2R8yF/FoN5TCQlIg/SDgUwqX1hoxj9z9iedm0y+SYKjdOK69rXgc2yjz7U4I2vqWoEv2i+CH5amd6/f0/uRYXwa+vob4Mxl8tpxpxDUbuo5IT7hTofTF8QFn1PRd/2cRdWKBms/P9ES6rRlokoz7+/vGLmjrituADIM4LqVPk60V7qMOZXURzhJBrwXE2R/LXrU2dYyZBWZqonMZoMjuuUzWnsnIHIL+987K1gL4uZyazhpbi0G73W6ZttvZ2SlRS+bJLRaLki7CaIymqD2Vysur43guxZUsqxuBQRuIdsNGBZATUN0ycKZyZs/scELjzJXnK61GL+Xvqzx8Xkl2DZKVmmPx9mD/18Cyzue2pt4XWTt/bREIVruoTwUSfFbIHTW/sw0Jxj3Coj6mQYmIkvLDh82p3TyqGREFGPm++u7MPWIu46pIqowRQRiBEqf8RchUzt3d3TLjoPZURF5rJrg+gu3O9Rfa45+RG09j8wgQ7YhApJPvjHSRYPt/6h8HaMpxXiwWJaXp/fv38enTpxiNRmXGh+3twRDOqHJMMfp+f39fZjM2bSbDx79+4xhgG/Kdujifz+Pf/tt/G//n//yfle77u7/7u/Fnf/ZncXh4+OSeIuVKD+EiVonWCGnjgb29vZJ2pyhrt9uNv/iLv4i9vb0YDAblad56KKJmQeg/uZMaZ3JFLEQyNIY0fhwccfbXybPGQhbN9KwC+hIGmRicytZvUcc97Szrz2zc8FjOvBLYtREYfq4FbtyeCjiKiG6KTCaT2NnZKVvZRkTjuQ0iIS/lB4mltFZN6wjkG7QhhvomoukrnBCSGMqukaAQ2+idKXvyAdoB7de//nUjK+DTp08/iWQMh8M4OjpqXIN6w3GmMjGIQ6xG8u/tGvF5K/ThcFieQcb1hh6c4/jVGPAU51q6FIkQyeiqRJr10Oy5sMLu7m7p02Wy1hO//Xsb89TvPpPhDM+dKB2pjmP6lICSAJHe5ZSZr0rWLaNXM0g6zvOeKdmsTI1s6Dt/d5Kh/9wRSCncUajMUkruSECDrGMZ3eDA1zXoKH2Ro0+/ZdF3LpIUQasZ/uyla3Fg1V41ls+BvwmiNicx0KyCCAZ3ZMoAPBedSuf4tFdG39knMirM79/Z2WmQDJIIGX+BdhG6m5ubcm/NJKr9GTwQAKPTpsFTuXRtTutLZ+UsNUZlQOVQ9RvXT8jQcazxPB2jeklIhB8eHso4IoiRXvd6vbI+RIvQdXzEoyOmfrIfalEe13uRgNFoFOfn5yXVS/aBQLQmfi+SQLWNUmY2RbIZOYrbLJads3BZ0GaZsN/U/9Ln+XzeiDR6ZFPjU0RBMxQaJ9qC+P7+Ps7Pz4sd0GyxSIaIBIF9v99vPA8morleR4t7NV5UZvU1/RjbmWBb9fDop+7lxFXX5fXlO9RO6hPe04MREuqyE0eW14GW21Veu41gtPkU16NsBnMT5Pr6Og4ODmI2mxXyQxvHcUAhTmmT7DjZJhHc/f398s7IPe0/M0lIHvjSbyLIJBwZRtT11NcMHLPMZ2dn8Q//4T9sjFPXW5+h1PV3d3fj7/ydv1NSZFV/+mTqlHRGoF1pjNqeXeOIbclrMvDAYALbMUt7qr1cdxkYyEhIm9114fgTplT/vwrJYNTBHWuNhLQ5EweRGUDV+TJoBEqqZJb2oJc60WcxCEz5nXX0KAudjZMJfSd5yEiGd7IUNiMZNK4CYSIXyuXzKX0uGGL5HBRxW0C1rROV2vSYA2JdIxvA3t/ZDMeqxCIjFKso+ZcUkjESYoFppvm5HrFN3YEyh1t67+NKY0GfOTOgSKmPWZIMgWztJsEUK50T8birD/uaZWPUVP8xh/jh4aFEOWWcNW503Gw2K8Dt/v5xr3JN4TtR900RCNKz9lQKmeqidtCxypM9Ojoq2+l6/rnGZAZe1F4cc24DNcYULRyNRjGdTsu2tSp/Tcdpp1yPRADVDwK+myKrAiA6a/6W2dJ1788AFO2rpzGQ7PAYEQ3NZjCyKX1V2URaBoNByclmgEb/aWZZuqooruwHZx4JuGl/ORPK+nKWk365BqwFiJhPzyAIxwN1y0GdE5+IfBdEf+m4DKRyLZaPEa83r0cboGvSx24iyeD23woAMaLNfpWs6xez8SiSwRkTpUx5mlBENAiDYx6fyZDvoR5m+hDRTH/nuCMe6PV68ff//t9/MgaYlcIHuzr5zQivykH9Ut2YTnZwcFACAeoXbwPWS+NfSwDU1vycYVn+lmGz7LO/vDzLhNfKCMsqgau1SIYzSweK7AQd5yCdAyIDkDzHSQ3vJcCkFB9NJXNRHBun2+2WCCrTezS4dKwGsC845LvYXEauMvLhne7RE4IBgie2NaNhIhdMoVF0XGyaikpFyBwap0EZwdAg4qAR4BXJ0UyIBq63qxvubHpffcq+0XECumqHTHc2ySmwL2WEe71eY+G3/otoLrBipN1nqBj10XneriSsSk2KiLi8vCwg4OHhoUy56zzdQzMZjOKK1FP/BWiov0yh4EycQJdmVgSg5SSkw0oH4AyK6sqoEWfVWH8fM9InRsG4EF/1FZFRn6kOZ2dn8e7du3j37l2cnZ3F0dFRcVJ0SLyXfssIYETThs3n85L6cn5+Hh8/fowPHz6U7UfliLMUBLcxXn/di7MunAHaNCEZk9B2eXDBHepzZmjcn1Gkn5rt0j11vEDC8fFx8Tda95NFMlWfxWJRUk+ke7qW9J3pQGoXj0IyIitbydltT/eljxFR8Tx/6b8Deo1T2XnN8A0GgxJVly6zbRk0ZL/pvQ3oODFQ/zItRy+CV+9X1ykPXP0U8PUlRbtLjUajopea2fWNNF5SBJxHo1EDHAt3CQtFRLGramOfyc5m1Ij3pCf0Kzpmd3c3Dg8Py3+z2Szevn3bCNjpXA/UaSwIr/CdOy+qDtSBbKZUY1Hk6/b2Nvr9flkvwvQ1J7CqJ/GSAkDUVd+el/6vli7VNotB37kuidY1PRBJErdMnvXEb4+U+OAkcHQWyP+z6zvpoAJJFCHWE1bVQVJygWTmnxHM8bru+J0Y+AyLznXDlgkBQMZKnWTUUpLkPBzQ01BKmaiYVCiV3WcwNAi9L7MpNl2HU5ZyahnJyCKONCY0jk402d4eLXbd2jTHQOLHqBPb0gmqD/5Mv9yB8lgXGTg+oE9pHRor6gPXSxomRVgUPYx4HIuM+Mrh+5O3XZ+kmyqDiD/bhBGyjKQ7uHTdpKMhaVO5Oa7ZZxGPO9v1+/2ypS5BoPdFLdDggIr9pPowUigiJuDn98hIhgdw/DPLtmkRWpbRwSCdst5pK2hXIpqzh+uK+5psNiCLlO/u7kav14t+v19AoPsVLu728rle1HSJ/3NmJSMZDERxlo7jmtFmT3lwm697qg+YIsYZjpr/U9m9vv45s28ubD/ds3ZejWTwP7ctmzQ2XOTXBV61nsufO/TSIl2gffLZEwaNM8LmeEpjOZvxqL0Y7FKwZ29v78msAceQz/BJdzVufYMFCTGqCAID1mpz6hHTjOXPstm7zJ4ooECb75v8uH/OfGGGXbPjn0Oma+TFA9g1WXu7EabrKDLo0zturDmlqsbMAIJHGuhcaEikZGLW/X6/ROoUUVLaARdMs9Einj5Yqwby+Z7NYLQZSe+gjGTUyMDOzk7Z8lDTa3RmAm2KiN7d3ZWdR2iIOc2oJyhr2l6zIgQjmpL3Lc90PTkyPVeDxIfT0QSYBAWsq/SAA5AzSO7s2Xec7twUIXBXNGM6nTYWhjGqEdHcxYHtFrFctyT6j+RNxk8P49IxBPZsQ6ZLaSteGXfOLKks3Ltd5IWRKEXatIg7S2fSdbmmR3XLAALTJLzd5Ux8M4SIaKw5EsBn20dEyZnXLMbbt2/j9PQ0hsNh44niLEvWL27U2X8cE5rdGY/HjQXrTjIk7EN3EjT2dM7LAjtfS2ok2e2wkxEep+8CA8+9v9qJs1EMxhBwCCAdHBzEyclJAQkfPnwoGxiIXHC9gsY39ZRP05Y99TQktok+yxYzUisirNllridh1FPjm+BJbUu77wE5zX4fHR3FcDgsdp+pnxnp5TjOSIbrgO7ps0t+HNtlFdvIsVjTFd2zjTR9DZENnUwm0ev14uHhocwKy56+xvgWwRiPxxHxObh7cnJS7D7bfWdnp9hUptkS4xBYM5ik8ad+IgnROVxDOp/PC6DPUsZk+0g2RMA1Vkgy2N+028KOvuEAfcdisYj9/f1iP9ynZ3rn403+SGVRfbKdEH1XuIxsZIHnn0pIdZ58kzDlKrIyyVDHR0QjVUadoU6PaC7WljFdLBYl95rA3xdu0bBJnKXqO8/VNJSYpZTKldDZJK/nURe9MrKTAcGIpztZOMnQORxAvjiJeboiASQXTI3i4+6liA7ENUB9q1qmJXGAZ8qr62nAsoy+UNkjf4zgcwpSxoDXdpLJdnES6PfZBGGKguqrFAUvP99rkZ/abCHP9d8yMCuDKzIgEiFiIcIno6T+FFEhCZBxlm4pBUsBBZVTaSHSSU2/y6jqXhpbnNrOyLwki6KQnLsOqu4Mdqiuskndbrc80+Dt27dxcnISx8fHBbCxTbNxrz7KonN+rOrvmwH4zh8ZycqE44i2ihG+NuD2NSQLHkU8dc6u86oPbfNz0qV4LZVD7wyQKf9cUXu19e7ubgyHwwI8jo+PSwqUyu8kw21aRjg4u0zbQLvJVBTZXtl1buRBXVA7ckG5xkFNN1Q2Pd/j8PCw7IhD0p0FBPQ7xwR/y0im60EWYKkRijaQzTJQr9zP0CdvkjCQqBRYkozXmslQe2grdG2v3ev1it+grXUyzTZl29ai87wG7buPm07ncadExy7etxmuiGjOllIy/XK9zF76LxOd7zP8xIS0+VyPy0Av06NWIRh+nI/FVYXnqW9JupbJyiSDnSKjNhgMGuRBhYl4nPFQpEbn+5akbNyMZDgBIIhivj7Zs4ysptRIbiRZ1KKmTBH51rTu3Jz4SNhBXlfO9nBxO6e/PcIr4KaddJRyQVCha2cOiNf3lBEqfwbqdU2SFJ9t4EzEYvG4awvBjztdN1jZf9QNft8kx6DyyfCpvzLwWHOW7AcaZjdGal+dy991f5Ec6YPWMvX7/TJNq/5ipEZORMRd6xV8PJLEcnaJdkLG8ebmpkz103CqbiTW7F9vI05j02DWSK7KKYClttWMDUnGyclJvHnzJk5OTsoMhohTjeR5H3g/ZoSSKRAZweD1sntm/2e2k22zSTN/HP8Ud5bLACTH2TqStRFtjZMMzlByLEV8Bu7Hx8dl9x3ZTvkCRtsdADHtVCSDJIHjmACCpMFtvEgKCZnaiLMstOHZmBGYE8nQWgzNmrQBtAyArdtHLu4T2H81H+BEh7pFG7NpfoSiNXzalrvT6TTSK2szGau2d+042VjhC+3uJ5vluMvJA2e1Od4dDPtMhvs/Btt0DZ+FyIKiOt4xherm/pTnuB3OfHOm2zU99/urzE4yIprrOhkM8FdGHrwP/PXcMagyMuBCTNcma6/J0IyBpk4VsVGlFSFVio8MkwqkqLt3pK4vAy4DKUWtNY6vD1FZDg8PnyyG5hZjWedqatxzzth5VLRscLcptP5nWgdzaDWNx12j1E4qv1LClBql+gh403nwenRAIjIeJacC18iFLy6sRcCYJsf2i3iMosmA6DrcSpcOQIZM5+ozo+qbJK63XJym/yPySKp+FzCRoSWBZ59EPE099IiJdmMiMdcsJCP8JEMcy0qvkk5Ld0g6NFY47aupfere/f197O3txXQ6bYBeBzRZXqvKpTrQ0FIyMiYRuVBUcDabFdL17t27+P777+PnP/95vHv3rqQGcJx4P6+iCy7S9cPDw3h4eIhvvvkm7u7u4vT0tDhz9pnbDva5hLOhbsMiogQYNkWcZGQgxe1zBgieC15JAH08OgGQY2X+987OThweHpZ+/P7776Pb7ZYntotceETWga18gVJ/ubuU+pqAIyMZIjycUXZxv8r21C5YGleLxaL4pZOTk5I+KPKt5+94v3jbZuCr5vP9erR1taCMfvsp5CUjupsmAvoRn8ex77b3WulSEY8BEaVsjcfj2NnZiePj44iIhv9VJgvtpWMMkguBVdkqncuMmJpPq4HmTB9cBxnszGxANiPAmXemIHnqksqQBXV8dlLjWnZA5dQ9eQ+mPNEOZLiU/9XG3bpCLMYAzCopU2vtLpVFsgUSCYqzY+fzx/3H2dgRTQPkUVKfIfEy+Tkyph6FUmf6OoPMkel6zMOlojp7pPD8WqSHZIAkgzMwBAwEcP4ETpXfHZYAm0gG05u8/VVu9kVWZs5SZDMg2XnsF0XLeQ6vyWv7fQVo1Zf+/6aJyue6mxEM/0//cyYjIn82g0eAOCYkGgOK3O/u7pZ3GUilo3nZuXhduacOekkoVR71ocawovYKOOi6TsppyJxkkHCpjaQTbGPaEtVH7alxw52AVAete2JOO6+5bt9nETEGUjTLe3h4GMPhsBElZopnzc759TNCpfMUId8UYR/ytzaHWAOZLwUSXQ+p2wz4qE1pt46OjuLq6iqOjo4aKaw1sOwv95e00exnJwgkK06GM/9G4pLNZOglf6E1j/1+v4wP2eI2kLcKycj6zY+rjaXsPCcjWaAhIy2bTjQISG9vb8v6BwLJiPZZznXE209BCwU69WJAlP3m6YW1lwcVqDv+G30hdW9ZPTOCwYBljeCS2Pv6VE9dcuxawySZP3Hi43XLxtKqfej2ZZVxtOx6bm9WwV4rkww5KTlCpRFENCPXboAJJBSlESMjiGdnseBqFJ/RWDag2Fli/wLn+swoEzub01SajoyIJ+zQB2NWHu8Yzlpw+0KSC12D5dDe6xrgKhOn27VQnJExpshk0+JtA9YVi1sjZhEKlcfPo/FQO5LlC9Dx2r4gWA5Y7aJrbdpMRtb3WbvqWDcCbNfadCSBAg1wBkS8f7U9ar/fL8RffSGioXHBAAEBibYvZOSU41n1Up201aUIojYd0L3Uh9QBz/mmQ2AkykmHkyCdI5IzmUxKRI7P7GD96FQZocr6kJ9VttrYYJ/v7e3F4eFh7O7uxrfffhsPDw/x3XfflXIqesmoXvbuhJL3IcBVTv2mCIEw+zUjTcvG90uOf5JA2WSmPrHs0tNOpxPfffdd7OzsxOXlZTmOdsptJu9FQiMd5DqgiHhiR2j/aGMFfAjOaEdYDum2SC19uLIQTk9P4/T0NM7Ozsp6DGYuuJ45EFTZa4SkRowzO8q+cRDFY/0zxwj9H2f/svM3SYRLNOvEnZUiXqfc9Nu6txaBaz0SI9u007JbnKFgXfSb+kPH095xttZnMlYB4K6LjjE5pjICJJzquFHEwxeeyyfq3n5P3cfF/baTA7cNCuxzVlVtrX7Q1rJcI+ZYdx2hb3Z/uUxWJhncAYN7etecugOEiOb2kJwC8uhHxNMIBg1nxj4zAywlolFSFMBTLnQPKQsXtTDSq+hvTXH4mdFcdRIfpOdRK9XR82+l1O4ouPDar8ttZblIikL2XGt/tSFBoDuFGjt2R6C+cKJDksF3/qeX3y+blfma4lEN/VYDTBnR0DE0DBFPnS0NUJsuss0YkdKMhtZleFpURDzZhleGl2sv6Cx0X0bRIx4XkQ4Gg6LjighxTYfXi2NextzruYroegL2SjWQ43x4eIhPnz41ItMREW/evHnSJlmfu4Pg7IrbN+m27MHR0VGcnp7Gu3fvYjqdltdisSi7xfEamQ75d5JPBRoGg8Fabfaa0kYyMqKhz37+unpQKweFvoIvgnkH7sPhMO7u7uLdu3dFt/Tcl9vb28a5NTBB0Eub6XY4K7tHVHmMt2dEvtEGy6SZcD0Pg8EwXqeNCK4CBLPjvW5qB9oYb6dlPoDnyceveu6miMB+hr1euw4kGjs7OzEej6Pb/ZxmqlRYzqoz3ZcBYgfynpok8EwCS5L63/7bf4tf/epXDV1xHOPiOKTb7cbf/tt/O/7kT/6kUT9eg4Sd5dH13FfRPvvaiZo947Wo27yfkxX5euFXti/HNMmIiAGD+qzzMmHbuT18UZKhLesUhXRF90Evg0mFUyRfTLyWI6qK+TScV1pCpeUx+l0RcKZQMWLLvDt1jAZzRHMLQkZs/f7+WeVkdEqRYz5Qz+/j5SIZ0vX0zh28/LqefpQZ/JoTyAamX88BgkeE3BGxL3isdIVkg//p2jI2PNcJyyYJ9Zp15u/6zZ09DRYJlc4nucgMB/ubIsIqknFzc1N0huk0KgfTDD0v1I2uBxakH6rb7u7nbTBVbqX+0TjSeJNkqOz8LslAlH9XlEljRYsZJ5NJiVZp84T5fB4nJyfR7Xbj+++/LzarFk3jfUgwnBT7OdJ3pdj87Gc/i8lkEpPJJD59+lQ2d6CTccnGMf/bZJKhsmb2ye1PxNO+/akEg9eoOX46Vdox6bj0+ujoKBaLRXzzzTdlxvni4iIimlsP8x5ttjUjrTU/UxtvmfDaHGtef/kWkQwFr7KgzjKiUSOPflzmm1RO6oUDK9VB59A/UPz3rMwvoVMvLdQ5Rfojnj6A8zWFMykRUdZmaMcx2SfOUhCgC1dFPE1dYjBNwV1eS3r98PAQ//W//tf4X//rf/3k+vyjf/SP4o//+I/Ld/ebui/1V/87kKfvyzCl6utBBCcFxFK8J9tH+ImzifKnxAQkIyqLY8F1xUmGXstkZZJxdHRUohtSAimWIh8RURZScutH5dCrEXq9XpmOIiPTIFJ0k0RDjd3WODTMDvQjogFyuU0Y9xDnIPE8Zg4Of3fFIHly8sVBpB2veB1Py1I9uNOUyseXOytnx34fd1hZuoLKmrUlr6kIV81J6jMHREZqMuLlKSsE2zXn9rUkIxAsexaNy2Zw3Omyr5xkEYxnANx1aT7/vM+4xqnGGrfPJJDSzId0TI5GtsBfsgucKtd40PjTzjyMwGaRLQYqODPgII3/sS9cR6Rbw+GwbKQwnU5jPp/HxcVF3NzcxOXlZezv78fV1VW8e/cu5vN5yU1XW/mYdyCc6abOYx8pCv7w8BC//du/XZySAOp4PG7YRdXByQRJiEfZ9/f34/j4OM7OznKl/cpSI0gU6Xem5891mF4GB+A7OzuNVCJFAyOai7EXi0UcHh6W4NR8/jkFaTabxeXlZUREYx2gX993/PNZE+oSgZePG44HJyyqF0EBg0W8hnz0YDCI4XBYHkopf04ddj/j/dlmmzPb1kaWSaII7lRm2t42cqrfaqRok0V6J9D9pUQ2RpvNyH5r1zGu+VQ5VUb1D2c6IpopUfJpGRh2HPISosBAZrdVX40JLu5WkE0BN9liEl7VX8fRLgu36V6cafBgguwJ21NBPwae1J76T9eLiMY6SpVF+rNKexKXsayczVja1qt2CvfBV6WpLJyVUNTQI1QssACzO1Bd241rBtjYELUGoqFzY+YOS9emEyd4lhCAkbmyw2tC4+bRZ5+ac0OuzhXYqz2nwsEVHVPGzv29rcyUzEnoeJ7n57Lds/IQOHuKDPViE2cxMmNYm3lhHTInTT3gb9k9M6Phes52lIHkU2SZ05mVhesUssj6MtLH30kkCCL4kjEliM501H/PAIa3nSK1SgPlIvi7u7s4Pz+PXq8Xo9EoBoNBXF9fl9lCRuSov25nvDwZcFJZer1eHB8fx8nJSXkA4NXVVUnT9LbJgJjrjGyt1mdt0kxGRJ7mJXFSwd/cjr+0cFxmJJr+Qp8FHLQN8vX1dZycnMR8Pi8PhmVE0gMM/OzjiIGHjByxv33GIyPkDoh0Hd2r03l84CqfreT+nO21rh1e5k+yoAHLyd85Y+jjrKZHbeXYZGG71OzJT5W2a0l/uQA8exaZ+61ltrvNFryGCD+5P6b47KAHzUgusjTwZXWnfaEd8POytRjyQ1yrmBFwT21i/6wqWfAiwy01WZlkDIfDFFwL/ArkqkG0IK7T6TSi9SqgnrHR6/VK2oTSFRi1ZISibeGKM6oacKZB5oDV+ZpZYUO6Eug63MrM12nQGHvKk0drM6clgMBZC0+NEvvNwJ0b7OzVpmgZiM+Uitdn2bPZFL8+20W/SY8ODg5KG3L7uPl83oj2bZpw55WM3GZAwgdsrZ8YCfK+EBmWEHDS0TohVptHRNmaUtvb6jyRi7u7uxLZ5fqliBxIMw1O19BDpc7Pz8sTr6XL7HuRHSehGeFhwIPlYTuorhwXe3t7MRwO4/j4uLTJzc1NjEaj+Ju/+Zu4vb2N7777rkTuOp1OHB4eRr/fb/QpZ118JsqFfaw2VhrZd999V4jeDz/8EBER79+/L+k3jFw6iFQ/McVSdlgPGXzz5s3Kevwlpc0O+TiqEbl1ZRnxk/1lEEeLwDnDphdnASM+r2GczWZxdHQUDw8PcXl5GaPRqJFqy6gjU2q5mQUBd82es066rvsvBqp0DQ9OcHbl6Ogojo+P4+joKAaDQWMjhmwmg7OVy/rHQR3rVyPQ7ttYbvc7BIbCHKuC8CxYs0mSBQclL0k0lt1/NpvFwcFB2W5bvtl1dVlb1gCsg+OX9vXdbrfgKOI6ll3EyUmGp8vr0Qd6LhsDvt4WHHsqhzKENP59fD48PJSMGgUz5PsiHrMBPG1KxwnT8plXHGttov7JZjFefCaDQIHOjIbKgYAKyUpxWsiBtBylxKfOsk7T95oRyqI1bEAqMoHaskiWptF4vjsp3Y+pWQ4E2HZeNpXDQagb8iy6VCMZqwx+OuCsHXl9HevOgW2XlY/X8BkdJ01ej1WM19cSTp9KnGQ4MWR7+4tSq7MTj0zPM93g/xlR9RlFz8WkXvo12feKoMznn9O0rq6uYjwelydea+qd5EFgISMZ3J2OETTVxceL6kCDSGLL9VKyVbPZLCaTSXz8+DH6/X7ZXYdrVzJ95DjO+tJ1mu3V7/fj+Pg4rq+v4+zsrGyJyuuS0GR9zDJphoQpL7+p4sBSvz1XfNzV/nfQQzvvfSvgohz1t2/fRkTExcVF8RfcMawWnGFKk+uWL0bleR4My3ys7BN1SGVQ+bngmw/3y3Qusx2u4/77c/rK3z1Q0/bye9fsn4/RTZWv7fsYWF4lkyLzLRHNMebjLfteC1g+RzJsF/F0NjV7ZfWsnUNirusTj+k4Pr7AM1oUxJb9EY5mQJz/Eae67eJsyDrBZicZrzKTwcgio8oZA9QxEuWCMT+PQIUNJgChjskMqQMPB91sIC+bGz7ulqHfuEDHFVyAbj6flz2rxXIJyNTJYsRyDgRIIlHuNCjZAHBG3AZs1O4ZkWEb1QwAP2cg1NuEDpdM15WZDs6jH1n/efSOerdJTiHLl+c7DY+3KVOClhEp12OXVcmYR4/YX7w2iXgtksG+j3i6ReR8Po/ZbBbT6TQuLy/LDKbagiSj02nuskYdYV4sQRfL6qTCo620HSQZKs9sNovRaBTv37+Pg4ODksakrWfb+qtNH6n3/G1nZycGg0GZVXn37l3c3NzE2dlZqbM/DI5rk3RNtUdElHUkikiLsGyK/JRx67bQo5Ft4iCmZhfpYAmmZH+yfj84OIjhcBjdbjd+9rOfRbfbjcvLy7KuSet/ssBJRjLoCz1AxWhnFgzLosKKuvq4lE5psbcW9GpXKScZAuUefGsjFMvGB8F+5nv03evXBv5q93I/U/M7W2mK2llklA/4zYJPy0hHm976cS9NrvxeFGI51btGNPx/tlNGzoWDmX6lLBU9boHjXDMknOlgRoGwudKniJNJDrgBkuzJMoxAvJ75/lVs7sokQ4VSNEYOvtPpNLah1ZaXs9msFF6NySiupm44PSyScXNz84SUcNGzg2eCjLZor4MmJzzK0SMIZBTJgbSAGAeWM2M/V2VVBDYDS23gSiknImdZ5EvvTMVyAOiDoWZYM0CsdiHQFdN28FRzOm2g28vXdhyvtQlSI4TuPCkZMVylTm70dG135hmgVdpdr9crrxqYyIAWj/PojOscAdZoNIrLy8u4vLws+qnUyYeHh/Kka9XHZ994Ly68ZTBC5eKYJCiPeHyKroB7p9Mpzw7RtW5vb+Pjx49xcHAQx8fH8e7du5JixZQWtXGbvrf1N6PM/X4/Hh4e4ttvv435fB4//PBDCURcXl42ykt7Spuka2oW4+zsLE5OTspTejdNarbBpTZ+9vb24t/8m38T0+n0idPnZ720WJX/ZwEq6r3SoQjunWDrHG2I8LOf/awsAJdoHGhrYq2J4gJRJwC8RxZ9dJvh9sOjma53Gicag/LBCgLwwbXeRx7w028ZcfO2crLDce+gnzbOCVQbmGVZvQ11bdeXrdRFQPjo6KjMkPK5ad5HbeSP/ZiRFA9+vWQfuX5Qdz3zhPhMz8ng+FA669XVVcxms/KdM+2OUXd2dsoOjyqLHkEgsqB7cfxy4xFuMhERDRKSLQInXs/GrAttRm3W6kVJRmbEMqNGIKDvcoptICoDsbX/9d0NxbpSM1jZdLVHavw6vJ7eHdjrehGPhEsKx/8yB8LPPjgYda71UXZ+rR61ui1r56z8NfFrtV27rQyZrnxNqemnt3sGcNath48JXSMbiw7EZdjbprt5bBZhohD8OCCRwby+vi4pUiQTbuDVVt42GdnICIa3JyPPOtbXA0VEA0zqWJX36uqqOBYZa6ZXOijK3l3cNuqaWkdxfHwcx8fHMZlMot/vx2QyacyAEpR5OXgtPutg08TbiABU4jbPpdvtxh/90R+V67QRjCyA1FY2J9gKpniZWU4Bh8FgEPf39w1AdnBwEHd3dyUI56kRLDPHAWXVIIRL5n+9vZipwIeQMWCV9U8bPqiVZVUf0EYyMhBbu1ZW/8wub5I/2SQRNhLR4BPga2nANX+x7Fj/rs+//du/HZ8+fYqIen+2lV/v7969e5KyLnvs2SYZydAaYvq12WxWPmsNHdN5+RJ413onlYuBdMemDBL4rIKuyZmM7Bq8987OTiPjKGsv9Xk25lYlfWunSylnTNE1TfVEfDZQeliLUgoWi0VJQeC0kECNWJe2khT78/xvAgIpBL/zPRNXRipNTdlrDJzkgVvg0unTAdXSpajQWX10D73UbprV8XQUr6ccVzYtRuPqqTH6jW2e1Z+/Eag6CeL9vK+ckGbHEywSYC3r800U1yX+FpEbTv0ucSLLvs5eilzQ6Ki/fAcZjyjxOG6zyUirAxPvM63B0OLXq6urMs3LHE8Zfc2MErA5EHBDx7HgZIe6pLbghg0Rn+3bwcFBY5yqTHIkV1dXhWzoHIoTDSdqbRFovTSb8e7du4iI+K3f+q2Yzz+nZirVxhcPE5Dyfps+k5EBQtaFdmad6/F7BtB535r90DHSUY0Rphk4OPcxJh/49u3bskD2/fv3cX9/H6PRqPQlNzCo2bXMsWfHeF3lf2TjmX6lsiodY7FYFIDU6/Xi/v4+Tk5OytqeXq9XbANtM20475uVMSuf95XbPrcF9MucUV2FYGQzrhHNtORV9e1riepNzKDfX+Ne7KNerxeHh4dxdnYWp6encXx8XKLvtMueVpORw+x4fvfr7OzsxH/6T/+pAf71QFV9Z9/SRvKamjHQNuHEaMoUkT/Tdfm/z/ZNJpO4vb2N0WhUxo/ICMk5/RvbZj6fxzfffFOCW2x7Bjmkv53O5wCm7JHwt8Zwp9N84jqxe0Q07kN74P2utqo9JsHTpWuyVrqUjBK3ddX3jDVJ1OHesCQYmnriSvnMoFGB2qZkdd+2/2rgbFm0RMcp0iOlpOPhcbWF31JaGj8KjYaz+mywet04+8K6qj/b2qrmKDKwW3OANcdDyUhcrUzrMuivJRmRom45AKU4kcvOrbW1nI6TFP5GUO7pTxy7IhK+TbKn6JCMeuRG5dE08vX1ddF3Tv/6/VU+RXpkY3zmIiIaueYqO405yyRyQaAhACljLXsU8RgUEcFSnZnamOl0BpL03na8+mdnZ6c489PT0xiNRsWZa2aF59XGgzvXVRzCl5KMYFNIBla5Dr+vYx98vK1yn4woUvSbgIjIqQgqwQBBmM7VzBvvxXGroJuXw4NFDtozUhTR3KRBeq0tm1VuPcVc40Xntdlrljs7JuujrO88eupRc15rWb+vSn42WUS4fCZW/0W8fB1IurUl9sHBQUmTcqziQVD38Y5jsgi5H9fpdMoaEKUbSu99rVJmUzWu5Bs0m6ixyuUATjJ8PRTJyHQ6bZCNbLct9QlJxu7ubgND6uVEmG0gwpCRMOmEZivUX6q3jmfap/7PbGA2i+L99KIkQ45XCs6ZDGdZNJ5sYBZUCqLOEgP0BpKi+v78GQClZMbEB6AAA9mp6uEDJNuWjASJoMONqq/D4Ktt8ai3H+vAAcjvLmp33astWsZzakCZbVkzBBHRqFvN8FNXWLes31hXd26bJCRx3o4aLxLvS69nRqRplCPiiaFlbjfvq7KorbUmg89+IMHQ+gzOdPjOEm7gNZadRE8mk0I05BQ5K8ftO1UG5fmenJyU6XmNGdmiiCjkp9/vN6aARW4U6VI0SkSH7a6te3u9XmMWY2dnp6QZKc9eba4XpWaD9B/HAsez+kZ9LXJ1f38fb9++jclkEqPRKPr9fiO/vwbq3DG9FvD4KZKRg4jlqVHrXLNN2q7NNmwj/fxO0Zi4vr6O6XQaFxcXcXFxEefn5+WZGbo+yTuvx9ldlYl+kXqje+p4bmai+2RAQp85pjW+rq6uotvtlufETKfTMhbVJvT33rbuy7I2rrW9+7Rlvqat3zPfqjap6cAm+hbXyf39/TLLSnnpMc7rCet5CqbPJjGAtYxgeCpObaZDn1Xn8XgcV1dXMZ1Oi533nQY5jjwgKpGfVnqTiIPWEWo8EPTT52mca8xodoVrMHR/iUjGfD4vuHc2mxUC4GXL2kptzIwAkQfaAAYkdCxJhrA7HzOR9WO2FkP+dpmsTDJkdLg4ms6A075sSJ8GU+MJjMjpcyaABEUd5Qrk4oyR7/4bgT9ZKomMizscXcNnJDLj6sZN/7GeBINUCk6Pqd208JtRYN8amMZf7F3vjIDUnCd/U3lr5K4WWecAd9F1eK7qwDQ2XYNbw5LIbJpD8D4kaBDJcDKl8eFGOeJxbQeNDUG+rpFF1wlA1E9yEtoZhFtUcnZB0XuBfUWtBDJ0Xek+X4zmMI+12/2cwkOyyKlY3UMPphsMBvHNN9+ULTVlA2T8F4tFISkiGcqbd5LBp3sriqVyjsfj8p3jcW9vL7755pt49+5dvH37Ng4PD2N/f7/0p3bBYl9pjKl+Ev8vA6/UZ/UTSQ5nktrGonRBu3i9f/++bKe6qdIWjPgp11vlut6O3ie08fRVnDXjuQo8XVxcxKdPn+L9+/fx4cOH+PTpU+PBfLSdEc3UQwL5iCb4ZsSSgIp15mwI20PX4m8EDDpfC1ovLy/LQvnT09MCbBwDsAy1gFSms7WyOXD1V9s1KNm9u93mTkVts+mbIt5uvV6vANvXCh54GymlNFuPwcg29alGGjjT4fbTj1N/PTw8xGg0iul0Gr/61a9iPB7HaDQqwSsFjxwjSHgf+mXiUeJYjfMsO4C2ganvGtce+XciL1/V7/djd3e3+CS2l2MoXVNYgOQi4hEj63NE8wHPakdmBYhcEAd7H2ZrNteRlUmGVsJ7w7GjCIplKH0qjNFI5tOpEbJIqZSlFh2pAeTaOwG8py85YeDsBEEb6+0sV/chyFeZfaqXoIbvHskSKaAiqPxSMo8A0VA70Pf2oENra09Kzfi3ERfvM13HSavnDjtIq5Xpa4vrg5MMd4Z0fE6aXD9qg9yde63Na9GJmpPQ/75Wg2PTx35tViPicao94nGnCxoykZt+vx/D4bCsJ9DTqhk5UvuqbL1er1xDTkKOWCTj9va2bFO7t7dXUo/U7v1+v8xOdjqdsgCbi3ZFhAnk2Ke1dne7VQNK+i8bV20AiGNEeqa1JJPJJMbjcXkeySZIBgrdBq5yTu04Sdb2tWNr18p0ndf2l4j1dDotba8dpTQmvHx+nwwcZz7DieuyujlQUpu6bmkcaLcc7ZijdA7Xy9o9soBJrZ3bSMUyYuH/u411P1gbj78JBKPT6RQ7Sruz6vioiV/L/6Oddr/hmKZmu5a9eKzLw8NDifqPRqMYjUZxcXFRMKR8imMRrwsxFjMARPD5e5tfJeaj/fW2YJYAf5e/E3HX7Al3LnSM5Hha1yV+diztRM9nI7zdan3x3DGyMskYjUYlF1PbXcpoyKhq2675/HNOJxVTxwp8jMfjEi1RRQaDQeP4xWJRAD9Xwbc5Wn+nEjgYUnk8nYlsljlyJCI1IM13KlmWg866qn1UTt/6TAOMTogLcpX2kqWfZBFVH4RObvQfmXRGDAg829qD1+N1Ix43FdDvTIfxMkVEw0k/h1m/plCHvB3YdxQ6+oho6ASNghvfjORm/aBxqJkJRSb1sC1f1E1nov91DPs6i/zoXdFc9R3Ts+7v78vMVESU30Umjo+P4+zsLI6OjuLNmzdlfYLqKGKgiBBnSJi6yZkUlWc6nZanes9ms7i6uoq9vb1CMBSp0+LA77//Ps7OzuLNmzcxHA7LjAnBimzVqgC4BnqpyyJH2u738vKyTMvzXhnpVnl0/g8//BDD4bCRarUJkrVdG9FY1r41At9GztquRZ/hs3Vus3WOcrTH43H88MMP8eHDh/jhhx/i48eP5YnfDJzpetJP2tUaAXGwkwEIkhGvj7eP2oj6p9TCy8vLMtt5dnYWnU6npE1pG3q+MjDGtnc/4uXgOTWwWCMfy/rYdUyfqYOZfd4kkR0fDAZxe3sb+/v7jWeL/VSiUbunUqT0oj/wVwZsHRRnawoycqI6iQjoIanaRESLrYlTHN9ENIMNGkOc/ffsFZVNkgWRa+NH2Ez+KAP8xIPCPyIZ3H5W1661ofz1fP6Y+rRYPKbIZySQ12EbOwakL/dMGQWzVpGVSYbySAlEyKYJIGvsTopyfX3dyJMmUHUQlbFIZ1RtQF/KRGfBKS4uCiXZyLYvy2Y6eD//7ArHmR8aNtWdeblcR0Gy48RLgE2K8PDw0NgRSIpeM8gyrBHNaeSMfLDcGXPP2p7HRzymE1FBF4vm/ui8JkF0Rjg3jWQ46I9YLUKrczVOIpozGRwfTtbaooNqT+kBCUM2Q+GRDho1b2uP+Lhk15OeM82EzorGT0RhZ2en7FrF+9LoyzBTb32jBbdRKiMNPtuEbc1pZ3cwus6qkgExvwadqtaz8NlEfq3sGnJaWtOxSv7slxIvc2ZDV23j2rhyApOBl9q5/N9n62gHeaxsFIGQwJD6z89xAiMb7jY1Cyiw/D5OaU/dJq9yTRJ6kabxeBz7+/tl4wEHQbxHTScz0Jf5iVp/+vW8v/y/rI8yPEFb1VaGrymyVVx8f3Bw0OiziKezND+1PvIdTK/NIuo1clEDuNnMfNa3jieVtqXAkHY85fVrhJLXcpuuutYILn1d5kecZPA9CwQ4ueK9iJ/axI/PxnI27ll3xyru92SjVB+et4rfW2tNhsAdF4Iy8szKCSh5dFEPI9L1VCkHwoz2ZI2VGa6s8TlbwYcLcYbCO4mGn7l6fM/KxHJRUbmQ9OHh6ZZirpiMkrKDnQAxf079oVkmRoy5uJdtTFDvSu0DknUjQ64B0OwaDvxoNMSMfR0Pj3eyEfEY9d8UqemGf454mhtNwEzyKX1Q38mgZiCf6RMOQjRboDx/37bWHYdHm0gA3Ai5njAa65ErL5/KwesrgsJtrXlv3Z8BDHcM1B0FNPjwM7WbysWdtHR9bkpxe3tbonoZcHUQ65LpQE0UjBG4G4/HJcrlukOSqbbXOLm+vo7RaBQfP358MkO4CVJrB3d6kmXAyUHsMvBa8ys15y2dIhjVPeQvRqPRk7UYSjdiOZhWqJ1mOLvtfoDBMpWJwIWRTR8rHKPZ2PX/uBBU4/jdu3exs7MTk8mk/K42zkAZ23PVfs+O8zGmd7eftetm/cjgDG3bKsDua4j6WGBfC671INPFYvGExL7UfXVPPXhPqakOlrNZDCcdGRnOAswRTd3VZxGM4+Pjgm283m0R+uzF9nX8oWtonPiDk3m+7u319fZ0wrVM3zygwbp5vbxsWeDffSLbl20mn6tAX0SUDCb68WWyMsmQc9vZ+fykQqVSuMEiEPWXHLZyU6U0zmgJQkg22LBZY9OYsLG1c4CAgkBLFgVmXTjjwcgry5mVx40uo64E9WLgYuNqD4EYDljVT2A8W7De7XbLtbT3uQwEcyllrCKaoLSNJDB6p3uxvl5O9gN/I2lT20kHFNHm4mJPU1Cddd9V2fSXFhoGtq/rS5ZqRn3h1qyZE1+1LNIDpUpx4Z6vzyBYqS368nFCHZEOS895LsecPpNQasb04eHzwuXpdNrYhUpkyUGViDTJiu6vdpQN08yfbBIj0FosrdSV29vb8lyPiIijo6Pi4H18Zu2u/pIQfJEQOGm4vr5u5B4rLYCpOlmgheRUTnE8HsfHjx9LBHoTxIFhLWhUG9vLHG92Tb+nE4xMMj9GUk/if39/H5eXl/Hx48f48ccf4/3792Wxt+y1jwPZcr1op0mSvB4cbyRSDuxoTyLiyQYlXg8CH9kN+XqBW9kOjaksqquyuo/M2jvzOxwTru9sk2XEPhM/ZxP9h4v6gvZ7b28vjo+PS1t4sIfnLvMXbeNM9pcBKs72ZkTD9SmbvXAwnoFux31MV/UU/QwjEn9koNvbKyPLHJ/yF8RfrtNOJLI21meNdW5c4oGCrMy0HwyMewqz+2diRh6XjUv5RQU/Ih4DoI4B22St52TU2E9mrLMZCFZO/1NRaTCza6jjJf4bO4KNTgUhycgaluV0JVoH3NUAu+fbEaQIRBGYSbhFmVgknRWjuroXAYyDvVpZHRix3rxW5pyyOktcyb1d2f90oIwgOsmgYdo0ceev3yLyNBAe63rmoGFVx8r7ilhysRkjSBnA8KhMTTeyWQwSWQcIclzs54hHo9btdhvpQVwjsrOzU3bkEDGnHVE5PJql+2oMcScv6pgWS4vsaKwOBoOYzWblgX0EdG0OOusP73MHw7S1fIKs7GatP3htjX29tPZtU6RWlhohq12jDVAts9XL7HnmG/zFflQg6+rqKiaTSZmx5/Of/HpZBHIVf5f5PrYB7UXE03VtNcmAPQMP2WYRWVtmfZN9X0UP2sq57P9lgPunkJUvKU76ZL96vV6ZJXut8tOeZ0En9xcsbxtR5O/Zb5nuMuPl7u6uPDSShMGD1BmhICb1seE4MuJxoxJel0HoTF9ruIj/617alMNnUjhGMizMOmYkJLNZLL/777Z2oE9ZBw93Fqui5q1sZStb2cpWtrKVrWxlK1tZQTYvBLyVrWxlK1vZyla2spWtbOU3WrYkYytb2cpWtrKVrWxlK1vZyovKlmRsZStb2cpWtrKVrWxlK1t5UdmSjK1sZStb2cpWtrKVrWxlKy8qW5Kxla1sZStb2cpWtrKVrWzlRWVLMrayla1sZStb2cpWtrKVrbyobEnGVrayla1sZStb2cpWtrKVF5UtydjKVrayla1sZStb2cpWtvKisiUZW9nKVrayla1sZStb2cpWXlT+P5Suhk8nHbMaAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1000x1000 with 16 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import torchvision.utils\n",
    "\n",
    "print(train_dataset.transform)  # Cek apakah transformasi benar-benar berubah setiap epoch\n",
    "\n",
    "\n",
    "# Fungsi untuk menampilkan gambar dari DataLoader\n",
    "def show_images(dataloader, class_names, num_images=16):\n",
    "    images_shown = 0\n",
    "    fig, axes = plt.subplots(4, 4, figsize=(10, 10))  # Grid 4x4\n",
    "\n",
    "    for images, labels in dataloader:\n",
    "        for i in range(num_images):\n",
    "            ax = axes[i // 4, i % 4]\n",
    "            img = images[i].squeeze(0).cpu().numpy()  # Hapus channel dimensi (1, H, W) -> (H, W)\n",
    "            ax.imshow(img, cmap=\"gray\")  # Tampilkan dalam grayscale\n",
    "            ax.set_title(class_names[labels[i].item()])  # Ambil nama kelas dari indeks label\n",
    "            ax.axis(\"off\")\n",
    "            \n",
    "            images_shown += 1\n",
    "            if images_shown >= num_images:\n",
    "                plt.show()\n",
    "                return\n",
    "\n",
    "# Dictionary label berdasarkan indeks (sesuaikan dengan dataset FER-2013)\n",
    "class_names = {0: \"Angry\", 1: \"Disgust\", 2: \"Fear\", 3: \"Happy\", 4: \"Sad\", 5: \"Surprise\", 6: \"Neutral\"}\n",
    "\n",
    "# Tampilkan beberapa gambar dari train_loader\n",
    "show_images(train_loader, class_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from collections import Counter\n",
    "\n",
    "# Kumpulkan semua label dari DataLoader\n",
    "train_labels = []\n",
    "val_labels = []\n",
    "\n",
    "for _, targets in train_loader:\n",
    "    train_labels.extend(targets.numpy())  # Simpan label dari batch\n",
    "\n",
    "for _, targets in val_loader:\n",
    "    val_labels.extend(targets.numpy())  # Simpan label dari batch\n",
    "\n",
    "# Hitung distribusi kelas\n",
    "train_counts = Counter(train_labels)\n",
    "val_counts = Counter(val_labels)\n",
    "\n",
    "# Plot distribusi kelas\n",
    "plt.figure(figsize=(10, 5))\n",
    "\n",
    "plt.subplot(1, 2, 1)\n",
    "sns.barplot(x=list(train_counts.keys()), y=list(train_counts.values()))\n",
    "plt.title(\"Distribusi Training Set\")\n",
    "plt.xlabel(\"Kelas\")\n",
    "plt.ylabel(\"Jumlah Sampel\")\n",
    "\n",
    "plt.subplot(1, 2, 2)\n",
    "sns.barplot(x=list(val_counts.keys()), y=list(val_counts.values()))\n",
    "plt.title(\"Distribusi Validation Set\")\n",
    "plt.xlabel(\"Kelas\")\n",
    "plt.ylabel(\"Jumlah Sampel\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "torch.Size([64, 1, 100, 100])\n"
     ]
    }
   ],
   "source": [
    "for images, labels in train_loader:\n",
    "    print(images.shape)  # Harusnya (batch_size, 1, 100, 100)\n",
    "    break\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# DEFINE FUNCTION MODELS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "RESNET18"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torchvision.models as models\n",
    "\n",
    "# class ResNet18(nn.Module):\n",
    "#     def __init__(self, num_classes=7):\n",
    "#         super(ResNet18, self).__init__()\n",
    "#         self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)  # Load pretrained model\n",
    "#         # Ubah input layer dari 3 channel menjadi 1 channel\n",
    "#         self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=7, stride=2, padding=3, bias=False)\n",
    "\n",
    "#         # Ganti fully connected layer agar sesuai dengan jumlah kelas\n",
    "#         in_features = self.resnet18.fc.in_features\n",
    "#         self.resnet18.fc = nn.Linear(in_features, num_classes)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         return self.resnet18(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "RESNET18 & CBAM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # import torch\n",
    "\n",
    "# # # define model\n",
    "# # class ResNet18_CBAM(torch.nn.Module):\n",
    "    \n",
    "# #     # block definition - ResNet18 uses basic blocks rather than bottleneck blocks\n",
    "# #     def basic_block(self, in_features, out_features, stride=1):\n",
    "# #         return torch.nn.Sequential(\n",
    "# #             torch.nn.Conv2d(in_features, out_features, kernel_size=3, stride=stride, padding=1),\n",
    "# #             torch.nn.BatchNorm2d(out_features),\n",
    "# #             torch.nn.ReLU(inplace=True),\n",
    "# #             torch.nn.Conv2d(out_features, out_features, kernel_size=3, padding=1),\n",
    "# #             torch.nn.BatchNorm2d(out_features)\n",
    "# #         )\n",
    "    \n",
    "# #     # init function\n",
    "# #     def __init__(self, num_classes=7):\n",
    "# #         super(ResNet18_CBAM, self).__init__()\n",
    "        \n",
    "# #         # initial layers\n",
    "# #         self.features = torch.nn.Sequential(\n",
    "# #             torch.nn.Conv2d(1, 64, kernel_size=7, stride=2, padding=3),\n",
    "# #             torch.nn.BatchNorm2d(64),\n",
    "# #             torch.nn.ReLU(inplace=True)\n",
    "# #         )\n",
    "        \n",
    "# #         self.pool = torch.nn.Sequential(torch.nn.MaxPool2d(kernel_size=3, stride=2, padding=1))\n",
    "        \n",
    "# #         # spatial attention\n",
    "# #         self.spatial_attention = torch.nn.Sequential(\n",
    "# #             torch.nn.Conv2d(2, 1, kernel_size=7, padding=3, stride=1),\n",
    "# #             torch.nn.BatchNorm2d(1),\n",
    "# #             torch.nn.Sigmoid()\n",
    "# #         )\n",
    "        \n",
    "# #         # channel attention pooling operations\n",
    "# #         self.max_pool_11 = torch.nn.AdaptiveMaxPool2d(1)\n",
    "# #         self.max_pool_1 = torch.nn.AdaptiveMaxPool2d(1)\n",
    "# #         self.max_pool_2 = torch.nn.AdaptiveMaxPool2d(1)\n",
    "# #         self.max_pool_3 = torch.nn.AdaptiveMaxPool2d(1)\n",
    "# #         self.max_pool_4 = torch.nn.AdaptiveMaxPool2d(1)\n",
    "        \n",
    "# #         self.avg_pool_11 = torch.nn.AdaptiveAvgPool2d(1)\n",
    "# #         self.avg_pool_1 = torch.nn.AdaptiveAvgPool2d(1)\n",
    "# #         self.avg_pool_2 = torch.nn.AdaptiveAvgPool2d(1)\n",
    "# #         self.avg_pool_3 = torch.nn.AdaptiveAvgPool2d(1)\n",
    "# #         self.avg_pool_4 = torch.nn.AdaptiveAvgPool2d(1)\n",
    "\n",
    "        \n",
    "# #         # ResNet18 blocks - 2 for each layer\n",
    "# #         # layer 1 (64 -> 64)\n",
    "# #         self.resnet_block_1_1 = self.basic_block(64, 64)\n",
    "# #         self.resnet_block_1_2 = self.basic_block(64, 64)\n",
    "        \n",
    "# #         # layer 2 (64 -> 128)\n",
    "# #         self.resnet_block_2_1 = self.basic_block(64, 128, stride=2)\n",
    "# #         self.resnet_block_2_2 = self.basic_block(128, 128)\n",
    "        \n",
    "# #         # layer 3 (128 -> 256)\n",
    "# #         self.resnet_block_3_1 = self.basic_block(128, 256, stride=2)\n",
    "# #         self.resnet_block_3_2 = self.basic_block(256, 256)\n",
    "        \n",
    "# #         # layer 4 (256 -> 512)\n",
    "# #         self.resnet_block_4_1 = self.basic_block(256, 512, stride=2)\n",
    "# #         self.resnet_block_4_2 = self.basic_block(512, 512)\n",
    "        \n",
    "# #         # skip connection layers\n",
    "# #         self.skip_connection_1 = torch.nn.Identity()  # No transformation needed\n",
    "        \n",
    "# #         self.skip_connection_2 = torch.nn.Sequential(\n",
    "# #             torch.nn.Conv2d(64, 128, kernel_size=1, stride=2),\n",
    "# #             torch.nn.BatchNorm2d(128)\n",
    "# #         )\n",
    "        \n",
    "# #         self.skip_connection_3 = torch.nn.Sequential(\n",
    "# #             torch.nn.Conv2d(128, 256, kernel_size=1, stride=2),\n",
    "# #             torch.nn.BatchNorm2d(256)\n",
    "# #         )\n",
    "        \n",
    "# #         self.skip_connection_4 = torch.nn.Sequential(\n",
    "# #             torch.nn.Conv2d(256, 512, kernel_size=1, stride=2),\n",
    "# #             torch.nn.BatchNorm2d(512)\n",
    "# #         )\n",
    "        \n",
    "# #         # final layers\n",
    "# #         self.avgpool = torch.nn.AdaptiveAvgPool2d((1, 1))\n",
    "# #         self.classifier = torch.nn.Linear(512, num_classes)\n",
    "# #         self.relu = torch.nn.ReLU(inplace=True)\n",
    "        \n",
    "# #     # define forward function\n",
    "# #     def forward(self, x):\n",
    "# #         # apply initial conv layers\n",
    "# #         x = self.features(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_11(x) + self.avg_pool_11(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         x = self.pool(x)\n",
    "        \n",
    "# #         # layer 1 - block 1\n",
    "# #         input_1 = x\n",
    "# #         x = self.resnet_block_1_1(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_1(x) + self.avg_pool_1(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_1, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 1 - block 2\n",
    "# #         input_1 = x\n",
    "# #         x = self.resnet_block_1_2(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_1(x) + self.avg_pool_1(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_1, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 2 - block 1\n",
    "# #         input_2 = self.skip_connection_2(x)\n",
    "# #         x = self.resnet_block_2_1(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_2(x) + self.avg_pool_2(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_2, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 2 - block 2\n",
    "# #         input_2 = x\n",
    "# #         x = self.resnet_block_2_2(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_2(x) + self.avg_pool_2(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_2, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 3 - block 1\n",
    "# #         input_3 = self.skip_connection_3(x)\n",
    "# #         x = self.resnet_block_3_1(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_3(x) + self.avg_pool_3(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_3, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 3 - block 2\n",
    "# #         input_3 = x\n",
    "# #         x = self.resnet_block_3_2(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_3(x) + self.avg_pool_3(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_3, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 4 - block 1\n",
    "# #         input_4 = self.skip_connection_4(x)\n",
    "# #         x = self.resnet_block_4_1(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_4(x) + self.avg_pool_4(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_4, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # layer 4 - block 2\n",
    "# #         input_4 = x\n",
    "# #         x = self.resnet_block_4_2(x)\n",
    "        \n",
    "# #         # apply channel and spatial attention\n",
    "# #         scale = torch.nn.functional.sigmoid(self.max_pool_4(x) + self.avg_pool_4(x)).expand_as(x)\n",
    "# #         x = x * scale\n",
    "# #         scale = torch.cat((torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1)), dim=1)\n",
    "# #         scale = self.spatial_attention(scale)\n",
    "# #         x = x * scale\n",
    "        \n",
    "# #         # add skip connection and apply ReLU\n",
    "# #         x = torch.add(input_4, x)\n",
    "# #         x = self.relu(x)\n",
    "        \n",
    "# #         # final classification\n",
    "# #         x = self.avgpool(x)\n",
    "# #         x = x.view(x.size(0), -1)\n",
    "# #         x = self.classifier(x)\n",
    "        \n",
    "# #         return x\n",
    "\n",
    "\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torchvision.models as models\n",
    "# import torch.nn.functional as F\n",
    "\n",
    "# # Channel Attention Module\n",
    "# class ChannelAttention(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16):\n",
    "#         super(ChannelAttention, self).__init__()\n",
    "#         self.avg_pool = nn.AdaptiveAvgPool2d(1)\n",
    "#         self.max_pool = nn.AdaptiveMaxPool2d(1)\n",
    "\n",
    "#         self.fc = nn.Sequential(\n",
    "#             nn.Linear(in_channels, in_channels // ratio, bias=False),\n",
    "#             nn.ReLU(),\n",
    "#             nn.Linear(in_channels // ratio, in_channels, bias=False)\n",
    "#         )\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         b, c, _, _ = x.size()\n",
    "#         avg_out = self.fc(self.avg_pool(x).view(b, c))\n",
    "#         max_out = self.fc(self.max_pool(x).view(b, c))\n",
    "#         out = avg_out + max_out\n",
    "#         return x * self.sigmoid(out).view(b, c, 1, 1)\n",
    "\n",
    "# # Spatial Attention Module\n",
    "# class SpatialAttention(nn.Module):\n",
    "#     def __init__(self, kernel_size=7):\n",
    "#         super(SpatialAttention, self).__init__()\n",
    "#         self.conv = nn.Conv2d(2, 1, kernel_size=kernel_size, padding=kernel_size // 2, bias=False)\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         avg_out = torch.mean(x, dim=1, keepdim=True)\n",
    "#         max_out, _ = torch.max(x, dim=1, keepdim=True)\n",
    "#         out = torch.cat([avg_out, max_out], dim=1)\n",
    "#         out = self.conv(out)\n",
    "#         return x * self.sigmoid(out)\n",
    "\n",
    "# # CBAM Block\n",
    "# class CBAM(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16, kernel_size=7):\n",
    "#         super(CBAM, self).__init__()\n",
    "#         self.channel_attention = ChannelAttention(in_channels, ratio)\n",
    "#         self.spatial_attention = SpatialAttention(kernel_size)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = self.channel_attention(x)\n",
    "#         x = self.spatial_attention(x)\n",
    "#         return x\n",
    "\n",
    "# # Modifikasi ResNet-18 untuk Grayscale + CBAM\n",
    "# class ResNet18_CBAM(nn.Module):\n",
    "#     def __init__(self, num_classes=7):\n",
    "#         super(ResNet18_CBAM, self).__init__()\n",
    "#         self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)\n",
    "\n",
    "#         # Ubah input layer agar menerima grayscale (1 channel)\n",
    "#         self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=7, stride=2, padding=3, bias=False)\n",
    "\n",
    "#         # Tambahkan CBAM di setiap blok residual\n",
    "#         self.cbam1 = CBAM(64)\n",
    "#         self.cbam2 = CBAM(128)\n",
    "#         self.cbam3 = CBAM(256)\n",
    "#         self.cbam4 = CBAM(512)\n",
    "\n",
    "#         # Ganti fully connected layer agar sesuai jumlah kelas\n",
    "#         in_features = self.resnet18.fc.in_features\n",
    "#         self.resnet18.fc = nn.Linear(in_features, num_classes)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = self.resnet18.conv1(x)\n",
    "#         x = self.resnet18.bn1(x)\n",
    "#         x = self.resnet18.relu(x)\n",
    "#         x = self.resnet18.maxpool(x)\n",
    "\n",
    "#         x = self.cbam1(self.resnet18.layer1(x))\n",
    "#         x = self.cbam2(self.resnet18.layer2(x))\n",
    "#         x = self.cbam3(self.resnet18.layer3(x))\n",
    "#         x = self.cbam4(self.resnet18.layer4(x))\n",
    "\n",
    "#         x = self.resnet18.avgpool(x)\n",
    "#         x = torch.flatten(x, 1)\n",
    "#         x = self.resnet18.fc(x)\n",
    "\n",
    "#         return x"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "RESNET + CBAM + CIRCULAR LBP"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # MAKE INI LABEL 1 BISA KEDETEKSI\n",
    "\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torchvision.models as models\n",
    "# import torch.nn.functional as F\n",
    "# import numpy as np\n",
    "# from skimage.feature import local_binary_pattern\n",
    "\n",
    "# # Channel Attention Module\n",
    "# class ChannelAttention(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16):\n",
    "#         super(ChannelAttention, self).__init__()\n",
    "#         self.avg_pool = nn.AdaptiveAvgPool2d(1)\n",
    "#         self.max_pool = nn.AdaptiveMaxPool2d(1)\n",
    "        \n",
    "#         self.fc = nn.Sequential(\n",
    "#             nn.Linear(in_channels, in_channels // ratio, bias=False),\n",
    "#             nn.ReLU(),\n",
    "#             nn.Linear(in_channels // ratio, in_channels, bias=False)\n",
    "#         )\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         b, c, _, _ = x.size()\n",
    "#         avg_out = self.fc(self.avg_pool(x).view(b, c))\n",
    "#         max_out = self.fc(self.max_pool(x).view(b, c))\n",
    "#         out = avg_out + max_out\n",
    "#         return x * self.sigmoid(out).view(b, c, 1, 1)\n",
    "\n",
    "# # Spatial Attention Module\n",
    "# class SpatialAttention(nn.Module):\n",
    "#     def __init__(self, kernel_size=7):\n",
    "#         super(SpatialAttention, self).__init__()\n",
    "#         self.conv = nn.Conv2d(2, 1, kernel_size=kernel_size, padding=kernel_size // 2, bias=False)\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         avg_out = torch.mean(x, dim=1, keepdim=True)\n",
    "#         max_out, _ = torch.max(x, dim=1, keepdim=True)\n",
    "#         out = torch.cat([avg_out, max_out], dim=1)\n",
    "#         out = self.conv(out)\n",
    "#         return x * self.sigmoid(out)\n",
    "\n",
    "# # CBAM Block\n",
    "# class CBAM(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16, kernel_size=7):\n",
    "#         super(CBAM, self).__init__()\n",
    "#         self.channel_attention = ChannelAttention(in_channels, ratio)\n",
    "#         self.spatial_attention = SpatialAttention(kernel_size)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = self.channel_attention(x)\n",
    "#         x = self.spatial_attention(x)\n",
    "#         return x\n",
    "\n",
    "# # LBP Feature Extractor\n",
    "# class LBPExtractor(nn.Module):\n",
    "#     def __init__(self, P=8, R=1):\n",
    "#         super(LBPExtractor, self).__init__()\n",
    "#         self.P = P\n",
    "#         self.R = R\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = x.squeeze(1).detach().cpu().numpy()  # Pastikan aman\n",
    "#         lbp_features = []\n",
    "#         for img in x:          \n",
    "#             # print(f\"SEBELUM LBP Min: {img.min()}, Max: {img.max()}, type: {img.dtype}\")  # Cek nilai sebelum konversi\n",
    "\n",
    "#             # plt.imshow(img, cmap=\"gray\")\n",
    "#             # plt.title(\"Gambar Sebelum Konversi ke uint8\")\n",
    "#             # plt.axis(\"off\")\n",
    "#             # plt.show()\n",
    "            \n",
    "#             # **Perbaiki normalisasi sebelum dikonversi ke uint8**\n",
    "#             img = img - img.min()  # Geser agar min = 0\n",
    "#             if img.max() > 0:\n",
    "#                 img = img / img.max()  # Normalisasi agar max = 1\n",
    "#             img = (img * 255).clip(0, 255).astype(np.uint8)  # **Pastikan uint8**\n",
    "\n",
    "#             lbp = local_binary_pattern(img, P=self.P, R=self.R, method=\"default\")\n",
    "            \n",
    "#             # print(f\"SESUDAH LBP Min uint8: {lbp.min()}, Max uint8: {lbp.max()}, type: {lbp.dtype}\")  # Cek setelah konversi\n",
    "#             # plt.imshow(lbp, cmap=\"gray\")\n",
    "#             # plt.title(\"Gambar Setelah Konversi ke uint8\")\n",
    "#             # plt.axis(\"off\")\n",
    "#             # plt.show()\n",
    "#             # break\n",
    "            \n",
    "#             # **Buat histogram 256 fitur**\n",
    "#             hist, _ = np.histogram(lbp.ravel(), bins=256, range=(0, 256))\n",
    "#             hist = hist.astype(np.float32)\n",
    "#             if hist.sum() > 0:\n",
    "#                 hist /= hist.sum()  # Normalisasi histogram\n",
    "                \n",
    "#             # **Tambahkan histogram ke dalam list**\n",
    "#             lbp_features.append(hist)\n",
    "                \n",
    "#         # **Pastikan tensor LBP memiliki bentuk (batch, 256)**\n",
    "#         lbp_features = np.array(lbp_features)\n",
    "        \n",
    "#         return torch.tensor(lbp_features, dtype=torch.float32).to(x.device)\n",
    "\n",
    "# # Model ResNet18 + CBAM + LBP\n",
    "# class ResNet18_CBAM_CIRCULARLBP1(nn.Module):\n",
    "#     def __init__(self, num_classes=7, lbp_dim=256):\n",
    "#         super(ResNet18_CBAM_CIRCULARLBP1, self).__init__()\n",
    "#         self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)\n",
    "#         self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=7, stride=2, padding=3, bias=False)\n",
    "        \n",
    "#         self.cbam1 = CBAM(64)\n",
    "#         self.cbam2 = CBAM(128)\n",
    "#         self.cbam3 = CBAM(256)\n",
    "#         self.cbam4 = CBAM(512)\n",
    "        \n",
    "#         self.lbp_extractor = LBPExtractor()\n",
    "        \n",
    "#         in_features = self.resnet18.fc.in_features\n",
    "#         self.resnet18.fc = nn.Linear(in_features + lbp_dim, num_classes)  # Concatenation dengan LBP\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         lbp_features = self.lbp_extractor(x)\n",
    "        \n",
    "#         x = self.resnet18.conv1(x)\n",
    "#         x = self.resnet18.bn1(x)\n",
    "#         x = self.resnet18.relu(x)\n",
    "#         x = self.resnet18.maxpool(x)\n",
    "\n",
    "#         x = self.cbam1(self.resnet18.layer1(x))\n",
    "#         x = self.cbam2(self.resnet18.layer2(x))\n",
    "#         x = self.cbam3(self.resnet18.layer3(x))\n",
    "#         x = self.cbam4(self.resnet18.layer4(x))\n",
    "\n",
    "#         x = self.resnet18.avgpool(x)\n",
    "#         x = torch.flatten(x, 1)\n",
    "\n",
    "#         # Pindahkan lbp_features ke perangkat yang sama dengan x\n",
    "#         lbp_features = lbp_features.to(x.device)\n",
    "        \n",
    "#         x = torch.cat((x, lbp_features), dim=1)  # Menggabungkan fitur CNN dan LBP\n",
    "#         x = self.resnet18.fc(x)\n",
    "        \n",
    "#         return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torchvision.models as models\n",
    "# import numpy as np\n",
    "# from skimage.feature import local_binary_pattern\n",
    "\n",
    "# # ðŸ”¹ Channel Attention Module\n",
    "# class ChannelAttention(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16):\n",
    "#         super(ChannelAttention, self).__init__()\n",
    "#         self.avg_pool = nn.AdaptiveAvgPool2d(1)\n",
    "#         self.max_pool = nn.AdaptiveMaxPool2d(1)\n",
    "#         self.fc = nn.Sequential(\n",
    "#             nn.Linear(in_channels, in_channels // ratio, bias=False),\n",
    "#             nn.ReLU(),\n",
    "#             nn.Linear(in_channels // ratio, in_channels, bias=False)\n",
    "#         )\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         b, c, _, _ = x.size()\n",
    "#         avg_out = self.fc(self.avg_pool(x).view(b, c))\n",
    "#         max_out = self.fc(self.max_pool(x).view(b, c))\n",
    "#         out = avg_out + max_out\n",
    "#         return x * self.sigmoid(out).view(b, c, 1, 1)\n",
    "\n",
    "# # ðŸ”¹ Spatial Attention Module\n",
    "# class SpatialAttention(nn.Module):\n",
    "#     def __init__(self, kernel_size=7):\n",
    "#         super(SpatialAttention, self).__init__()\n",
    "#         self.conv = nn.Conv2d(2, 1, kernel_size=kernel_size, padding=kernel_size // 2, bias=False)\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         avg_out = torch.mean(x, dim=1, keepdim=True)\n",
    "#         max_out, _ = torch.max(x, dim=1, keepdim=True)\n",
    "#         out = torch.cat([avg_out, max_out], dim=1)\n",
    "#         out = self.conv(out)\n",
    "#         return x * self.sigmoid(out)\n",
    "\n",
    "# # ðŸ”¹ CBAM Block\n",
    "# class CBAM(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16, kernel_size=7):\n",
    "#         super(CBAM, self).__init__()\n",
    "#         self.channel_attention = ChannelAttention(in_channels, ratio)\n",
    "#         self.spatial_attention = SpatialAttention(kernel_size)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = self.channel_attention(x)\n",
    "#         x = self.spatial_attention(x)\n",
    "#         return x\n",
    "\n",
    "# # ðŸ”¹ LBP Feature Extractor\n",
    "# class LBPExtractor(nn.Module):\n",
    "#     def __init__(self, P=8, R=1):\n",
    "#         super(LBPExtractor, self).__init__()\n",
    "#         self.P = P\n",
    "#         self.R = R\n",
    "#         self.fc_lbp = nn.Linear(256, 256)  # FC2 untuk LBP\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         device = x.device  # Pastikan menggunakan device input\n",
    "#         x = x.squeeze(1).detach().cpu().numpy()\n",
    "#         lbp_features = []\n",
    "#         for img in x:\n",
    "#             img = img - img.min()\n",
    "#             if img.max() > 0:\n",
    "#                 img = img / img.max()\n",
    "#             img = (img * 255).clip(0, 255).astype(np.uint8)\n",
    "\n",
    "#             lbp = local_binary_pattern(img, P=self.P, R=self.R, method=\"default\")\n",
    "            \n",
    "#             hist, _ = np.histogram(lbp.ravel(), bins=256, range=(0, 256))\n",
    "#             hist = hist.astype(np.float32)\n",
    "#             if hist.sum() > 0:\n",
    "#                 hist /= hist.sum()\n",
    "#             lbp_features.append(hist)\n",
    "\n",
    "#         lbp_features = torch.from_numpy(np.array(lbp_features, dtype=np.float32)).to(device)\n",
    "#         lbp_features = self.fc_lbp(lbp_features)  # Masukkan ke FC2 (256)\n",
    "#         return lbp_features\n",
    "\n",
    "# # ðŸ”¹ ResNet18 + CBAM + LBP\n",
    "# class ResNet18_CBAM_CIRCULARLBP(nn.Module):\n",
    "#     def __init__(self, num_classes=7):\n",
    "#         super(ResNet18_CBAM_CIRCULARLBP, self).__init__()\n",
    "#         self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)\n",
    "\n",
    "#         # ðŸ”¥ Ganti kernel awal 7Ã—7 â†’ 3Ã—3 & hapus maxpool\n",
    "#         self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=3, stride=1, padding=1, bias=False)\n",
    "#         self.resnet18.maxpool = nn.Identity()\n",
    "\n",
    "#         # ðŸ”¥ CBAM di tiap residual block\n",
    "#         self.cbam1 = CBAM(64)\n",
    "#         self.cbam2 = CBAM(128)\n",
    "#         self.cbam3 = CBAM(256)\n",
    "#         self.cbam4 = CBAM(512)\n",
    "\n",
    "#         # ðŸ”¥ LBP Feature Extractor\n",
    "#         self.lbp_extractor = LBPExtractor()\n",
    "\n",
    "#         # ðŸ”¥ Fully Connected Layers\n",
    "#         self.fc1 = nn.Linear(512, 512)  # FC1 untuk CNN\n",
    "#         self.fc2 = nn.Linear(256, 256)  # FC2 untuk LBP\n",
    "#         self.fc3 = nn.Linear(512 + 256, 14)  # FC3 (gabungan CNN+LBP)\n",
    "#         self.fc4 = nn.Linear(14, num_classes)  # FC4 output 7 kelas\n",
    "#         self.sigmoid = nn.Sigmoid()  # ðŸ”¥ Sigmoid di FC3\n",
    "#         # self.softmax = nn.Softmax(dim=1)  # ðŸ”¥ gak perlu Softmax di FC4\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         lbp_features = self.lbp_extractor(x)  # ðŸ”¥ Cabang LBP â†’ FC2\n",
    "\n",
    "#         # ðŸ”¥ Forward ke ResNet + CBAM\n",
    "#         x = self.resnet18.conv1(x)\n",
    "#         x = self.resnet18.bn1(x)\n",
    "#         x = self.resnet18.relu(x)\n",
    "\n",
    "#         x = self.cbam1(self.resnet18.layer1(x))\n",
    "#         x = self.cbam2(self.resnet18.layer2(x))\n",
    "#         x = self.cbam3(self.resnet18.layer3(x))\n",
    "#         x = self.cbam4(self.resnet18.layer4(x))\n",
    "\n",
    "#         x = self.resnet18.avgpool(x) # avgpool sesuai paper halaman 8\n",
    "#         x = torch.flatten(x, 1)\n",
    "\n",
    "#         # ðŸ”¥ Masukkan ke FC1 (512)\n",
    "#         x = self.fc1(x)\n",
    "\n",
    "#         # ðŸ”¥ Masukkan LBP ke FC2 (256)\n",
    "#         lbp_features = lbp_features.to(x.device)\n",
    "#         lbp_features = self.fc2(lbp_features)\n",
    "\n",
    "#         # ðŸ”¥ Gabungkan FC1 dan FC2 â†’ FC3\n",
    "#         x = torch.cat((x, lbp_features), dim=1)\n",
    "#         x = self.fc3(x)\n",
    "\n",
    "#         # ðŸ”¥ Sigmoid di FC3\n",
    "#         x = self.sigmoid(x)\n",
    "\n",
    "#         # ðŸ”¥ Softmax di FC4\n",
    "#         x = self.fc4(x)\n",
    "#         # x = self.softmax(x) #gak perluu softmax\n",
    "\n",
    "#         return x\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # SARAN GPT AGAR LEBIH MASUK AKAL MODELNYA\n",
    "\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torchvision.models as models\n",
    "# import numpy as np\n",
    "# from skimage.feature import local_binary_pattern\n",
    "\n",
    "# # ðŸ”¹ Channel Attention Module \n",
    "# class ChannelAttention(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16):\n",
    "#         super(ChannelAttention, self).__init__()\n",
    "#         self.avg_pool = nn.AdaptiveAvgPool2d(1)\n",
    "#         self.max_pool = nn.AdaptiveMaxPool2d(1)\n",
    "#         self.fc = nn.Sequential(\n",
    "#             nn.Linear(in_channels, in_channels // ratio, bias=False),\n",
    "#             nn.ReLU(),\n",
    "#             nn.Linear(in_channels // ratio, in_channels, bias=False)\n",
    "#         )\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         b, c, _, _ = x.size()\n",
    "#         avg_out = self.fc(self.avg_pool(x).view(b, c))\n",
    "#         max_out = self.fc(self.max_pool(x).view(b, c))\n",
    "#         out = avg_out + max_out\n",
    "#         return x * self.sigmoid(out).view(b, c, 1, 1)\n",
    "\n",
    "# # ðŸ”¹ Spatial Attention Module\n",
    "# class SpatialAttention(nn.Module):\n",
    "#     def __init__(self, kernel_size=7):\n",
    "#         super(SpatialAttention, self).__init__()\n",
    "#         self.conv = nn.Conv2d(2, 1, kernel_size=kernel_size, padding=kernel_size // 2, bias=False)\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         avg_out = torch.mean(x, dim=1, keepdim=True)\n",
    "#         max_out, _ = torch.max(x, dim=1, keepdim=True)\n",
    "#         out = torch.cat([avg_out, max_out], dim=1)\n",
    "#         out = self.conv(out)\n",
    "#         return x * self.sigmoid(out)\n",
    "\n",
    "# # ðŸ”¹ CBAM Block\n",
    "# class CBAM(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16, kernel_size=7):\n",
    "#         super(CBAM, self).__init__()\n",
    "#         self.channel_attention = ChannelAttention(in_channels, ratio)\n",
    "#         self.spatial_attention = SpatialAttention(kernel_size)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = self.channel_attention(x)\n",
    "#         x = self.spatial_attention(x)\n",
    "#         return x\n",
    "\n",
    "# # ðŸ”¹ LBP Feature Extractor\n",
    "# class LBPExtractor(nn.Module):\n",
    "#     def __init__(self, P=8, R=1):\n",
    "#         super(LBPExtractor, self).__init__()\n",
    "#         self.P = P\n",
    "#         self.R = R\n",
    "#         self.fc_lbp = nn.Linear(256, 256)  # FC2 untuk LBP\n",
    "#         self.bn_lbp = nn.BatchNorm1d(256)  # ðŸ”¥ Tambahkan batch norm\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         device = x.device  # Pastikan menggunakan device input\n",
    "#         x = x.squeeze(1).detach().cpu().numpy()\n",
    "#         lbp_features = []\n",
    "#         for img in x:\n",
    "#             img = img - img.min()\n",
    "#             if img.max() > 0:\n",
    "#                 img = img / img.max()\n",
    "#             img = (img * 255).clip(0, 255).astype(np.uint8)\n",
    "\n",
    "#             lbp = local_binary_pattern(img, P=self.P, R=self.R, method=\"default\")\n",
    "            \n",
    "#             hist, _ = np.histogram(lbp.ravel(), bins=256, range=(0, 256))\n",
    "#             hist = hist.astype(np.float32)\n",
    "#             if hist.sum() > 0:\n",
    "#                 hist /= hist.sum()\n",
    "#             lbp_features.append(hist)\n",
    "\n",
    "#         lbp_features = torch.from_numpy(np.array(lbp_features, dtype=np.float32)).to(device)\n",
    "#         lbp_features = self.fc_lbp(lbp_features)  # Masukkan ke FC2 (256)\n",
    "#         lbp_features = self.bn_lbp(lbp_features)  # ðŸ”¥ Batch normalization\n",
    "#         return lbp_features\n",
    "\n",
    "# # ðŸ”¹ ResNet18 + CBAM + LBP\n",
    "# class ResNet18_CBAM_CIRCULARLBP(nn.Module):\n",
    "#     def __init__(self, num_classes=7):\n",
    "#         super(ResNet18_CBAM_CIRCULARLBP, self).__init__()\n",
    "#         self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)\n",
    "\n",
    "#         # ðŸ”¥ Ganti kernel awal 7Ã—7 â†’ 3Ã—3 & hapus maxpool\n",
    "#         self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=3, stride=1, padding=1, bias=False)\n",
    "#         self.resnet18.maxpool = nn.Identity()\n",
    "\n",
    "#         # ðŸ”¥ CBAM di tiap residual block\n",
    "#         self.cbam1 = CBAM(64)\n",
    "#         self.cbam2 = CBAM(128)\n",
    "#         self.cbam3 = CBAM(256)\n",
    "#         self.cbam4 = CBAM(512)\n",
    "\n",
    "#         # ðŸ”¥ LBP Feature Extractor\n",
    "#         self.lbp_extractor = LBPExtractor()\n",
    "\n",
    "#         # ðŸ”¥ Fully Connected Layers\n",
    "#         self.fc1 = nn.Linear(512, 512)  # FC1 untuk CNN\n",
    "#         self.fc2 = nn.Linear(256, 256)  # FC2 untuk LBP\n",
    "#         self.fc3 = nn.Linear(512 + 256, num_classes)  # ðŸ”¥ Gabungan CNN + LBP langsung ke num_classes\n",
    "#         self.relu = nn.ReLU()\n",
    "#         self.dropout = nn.Dropout(0.5)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         lbp_features = self.lbp_extractor(x)  # ðŸ”¥ Cabang LBP â†’ FC2\n",
    "\n",
    "#         # ðŸ”¥ Forward ke ResNet + CBAM\n",
    "#         x = self.resnet18.conv1(x)\n",
    "#         x = self.resnet18.bn1(x)\n",
    "#         x = self.resnet18.relu(x)\n",
    "\n",
    "#         x = self.cbam1(self.resnet18.layer1(x))\n",
    "#         x = self.cbam2(self.resnet18.layer2(x))\n",
    "#         x = self.cbam3(self.resnet18.layer3(x))\n",
    "#         x = self.cbam4(self.resnet18.layer4(x))\n",
    "\n",
    "#         x = self.resnet18.avgpool(x)  # avgpool sesuai paper halaman 8\n",
    "#         x = torch.flatten(x, 1)\n",
    "\n",
    "#         # ðŸ”¥ Masukkan ke FC1 (512) + ReLU + Dropout\n",
    "#         x = self.fc1(x)\n",
    "#         x = self.relu(x)\n",
    "#         x = self.dropout(x)\n",
    "\n",
    "#         # ðŸ”¥ Masukkan LBP ke FC2 (256) + ReLU + Dropout\n",
    "#         lbp_features = lbp_features.to(x.device)\n",
    "#         lbp_features = self.fc2(lbp_features)\n",
    "#         lbp_features = self.relu(lbp_features)\n",
    "#         lbp_features = self.dropout(lbp_features)\n",
    "\n",
    "#         # ðŸ”¥ Gabungkan FC1 dan FC2 â†’ FC3\n",
    "#         x = torch.cat((x, lbp_features), dim=1)\n",
    "#         x = self.fc3(x)  # ðŸ”¥ Langsung ke output\n",
    "\n",
    "#         return x  # ðŸ”¥ Tanpa softmax karena CrossEntropyLoss() akan menangani ini\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "RESNET18 + CBAM + SIM LBP"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torchvision.models as models\n",
    "import numpy as np\n",
    "from skimage.feature import local_binary_pattern\n",
    "\n",
    "# ðŸ”¹ Channel Attention Module\n",
    "class ChannelAttention(nn.Module):\n",
    "    def __init__(self, in_channels, ratio=16):\n",
    "        super(ChannelAttention, self).__init__()\n",
    "        self.avg_pool = nn.AdaptiveAvgPool2d(1)\n",
    "        self.max_pool = nn.AdaptiveMaxPool2d(1)\n",
    "        self.fc = nn.Sequential(\n",
    "            nn.Linear(in_channels, in_channels // ratio, bias=False),\n",
    "            nn.ReLU(),\n",
    "            nn.Linear(in_channels // ratio, in_channels, bias=False)\n",
    "        )\n",
    "        self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "    def forward(self, x):\n",
    "        b, c, _, _ = x.size()\n",
    "        avg_out = self.fc(self.avg_pool(x).view(b, c))\n",
    "        max_out = self.fc(self.max_pool(x).view(b, c))\n",
    "        out = avg_out + max_out\n",
    "        return x * self.sigmoid(out).view(b, c, 1, 1)\n",
    "\n",
    "# ðŸ”¹ Spatial Attention Module\n",
    "class SpatialAttention(nn.Module):\n",
    "    def __init__(self, kernel_size=7):\n",
    "        super(SpatialAttention, self).__init__()\n",
    "        self.conv = nn.Conv2d(2, 1, kernel_size=kernel_size, padding=kernel_size // 2, bias=False)\n",
    "        self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "    def forward(self, x):\n",
    "        avg_out = torch.mean(x, dim=1, keepdim=True)\n",
    "        max_out, _ = torch.max(x, dim=1, keepdim=True)\n",
    "        out = torch.cat([avg_out, max_out], dim=1)\n",
    "        out = self.conv(out)\n",
    "        return x * self.sigmoid(out)\n",
    "\n",
    "# ðŸ”¹ CBAM Block\n",
    "class CBAM(nn.Module):\n",
    "    def __init__(self, in_channels, ratio=16, kernel_size=7):\n",
    "        super(CBAM, self).__init__()\n",
    "        self.channel_attention = ChannelAttention(in_channels, ratio)\n",
    "        self.spatial_attention = SpatialAttention(kernel_size)\n",
    "\n",
    "    def forward(self, x):\n",
    "        x = self.channel_attention(x)\n",
    "        x = self.spatial_attention(x)\n",
    "        return x\n",
    "\n",
    "# ðŸ”¹ LBP Feature Extractor\n",
    "class LBPExtractor(nn.Module):\n",
    "    def __init__(self):\n",
    "        super(LBPExtractor, self).__init__()\n",
    "        self.fc_lbp = nn.Linear(256, 256)  # FC2 untuk LBP\n",
    "        \n",
    "        # Kernels untuk ekstraksi piksel vertikal dan horizontal\n",
    "        self.register_buffer('vertical_kernels', self._create_vertical_kernels())\n",
    "        self.register_buffer('horizontal_kernels', self._create_horizontal_kernels())\n",
    "        \n",
    "    def _create_vertical_kernels(self):\n",
    "        # Kernel untuk mengekstrak piksel vertikal (atas, tengah, bawah)\n",
    "        kernel_top = torch.zeros(1, 1, 3, 3)\n",
    "        kernel_top[0, 0, 0, 1] = 1  # Piksel atas\n",
    "        \n",
    "        kernel_center = torch.zeros(1, 1, 3, 3)\n",
    "        kernel_center[0, 0, 1, 1] = 1  # Piksel tengah\n",
    "        \n",
    "        kernel_bottom = torch.zeros(1, 1, 3, 3)\n",
    "        kernel_bottom[0, 0, 2, 1] = 1  # Piksel bawah\n",
    "        \n",
    "        return torch.cat([kernel_top, kernel_center, kernel_bottom], dim=0)\n",
    "    \n",
    "    def _create_horizontal_kernels(self):\n",
    "        # Kernel untuk mengekstrak piksel horizontal (kiri, tengah, kanan)\n",
    "        kernel_left = torch.zeros(1, 1, 3, 3)\n",
    "        kernel_left[0, 0, 1, 0] = 1  # Piksel kiri\n",
    "        \n",
    "        kernel_center = torch.zeros(1, 1, 3, 3)\n",
    "        kernel_center[0, 0, 1, 1] = 1  # Piksel tengah\n",
    "        \n",
    "        kernel_right = torch.zeros(1, 1, 3, 3)\n",
    "        kernel_right[0, 0, 1, 2] = 1  # Piksel kanan\n",
    "        \n",
    "        return torch.cat([kernel_left, kernel_center, kernel_right], dim=0)\n",
    "    \n",
    "    def compute_sim_lbp(self, x):\n",
    "        batch_size, height, width = x.shape\n",
    "        \n",
    "        # Normalisasi gambar ke [0, 1]\n",
    "        x_min = x.reshape(batch_size, -1).min(dim=1, keepdim=True)[0].reshape(batch_size, 1, 1)\n",
    "        x_max = x.reshape(batch_size, -1).max(dim=1, keepdim=True)[0].reshape(batch_size, 1, 1)\n",
    "        x_norm = (x - x_min) / (x_max - x_min + 1e-8)\n",
    "        \n",
    "        # Pad gambar untuk konvolusi\n",
    "        x_padded = nn.functional.pad(x_norm.unsqueeze(1), (1, 1, 1, 1), mode='reflect')\n",
    "        \n",
    "        # Ekstrak piksel menggunakan konvolusi\n",
    "        vertical_pixels = nn.functional.conv2d(x_padded, self.vertical_kernels).squeeze(1)  # [B, 3, H, W]\n",
    "        horizontal_pixels = nn.functional.conv2d(x_padded, self.horizontal_kernels).squeeze(1)  # [B, 3, H, W]\n",
    "        \n",
    "        # Reorganisasi untuk perhitungan lebih mudah\n",
    "        v_top = vertical_pixels[:, 0]  # [B, H, W]\n",
    "        v_center = vertical_pixels[:, 1]  # [B, H, W]\n",
    "        v_bottom = vertical_pixels[:, 2]  # [B, H, W]\n",
    "        \n",
    "        h_left = horizontal_pixels[:, 0]  # [B, H, W]\n",
    "        h_center = horizontal_pixels[:, 1]  # [B, H, W]\n",
    "        h_right = horizontal_pixels[:, 2]  # [B, H, W]\n",
    "        \n",
    "        # Hitung perbedaan\n",
    "        v_diff1 = v_center - v_top  # [B, H, W]\n",
    "        v_diff2 = v_bottom - v_center  # [B, H, W]\n",
    "        h_diff1 = h_center - h_left  # [B, H, W]\n",
    "        h_diff2 = h_right - h_center  # [B, H, W]\n",
    "        \n",
    "        # Hitung varians\n",
    "        vertical = torch.stack([v_top, v_center, v_bottom], dim=1)  # [B, 3, H, W]\n",
    "        horizontal = torch.stack([h_left, h_center, h_right], dim=1)  # [B, 3, H, W]\n",
    "        \n",
    "        v_var = torch.var(vertical, dim=1) + 1e-8  # [B, H, W]\n",
    "        h_var = torch.var(horizontal, dim=1) + 1e-8  # [B, H, W]\n",
    "        \n",
    "        # Hitung koefisien fitur\n",
    "        v_feat1 = v_diff1 / v_var\n",
    "        v_feat2 = v_diff2 / v_var\n",
    "        h_feat1 = h_diff1 / h_var\n",
    "        h_feat2 = h_diff2 / h_var\n",
    "        \n",
    "        # Konversi ke biner\n",
    "        b1 = (v_feat1 >= 0).long()\n",
    "        b2 = (v_feat2 >= 0).long()\n",
    "        b3 = (h_feat1 >= 0).long()\n",
    "        b4 = (h_feat2 >= 0).long()\n",
    "        \n",
    "        # Hitung nilai piksel LBP menggunakan bit shift\n",
    "        lbp = (b1 << 3) | (b2 << 2) | (b3 << 1) | b4\n",
    "        \n",
    "        return lbp\n",
    "    \n",
    "    def forward(self, x):\n",
    "        batch_size = x.size(0)\n",
    "        x = x.squeeze(1)  # Hapus dimensi channel jika ada\n",
    "        \n",
    "        # Compute SIM-LBP langsung di GPU\n",
    "        lbp_maps = self.compute_sim_lbp(x)\n",
    "\n",
    "        # # Untuk debugging dan visualisasi gambar pertama dari batch\n",
    "        # if batch_size > 0:\n",
    "        #     # Ambil gambar pertama dari batch\n",
    "        #     lbp_image = lbp_maps[0].detach().cpu().numpy()\n",
    "        #     print(f\"SESUDAH LBP Min: {lbp_image.min()}, Max: {lbp_image.max()}, type: {lbp_image.dtype}\")\n",
    "            \n",
    "        #     import matplotlib.pyplot as plt\n",
    "        #     plt.figure(figsize=(8, 8))\n",
    "        #     plt.imshow(lbp_image, cmap=\"gray\")\n",
    "        #     plt.title(\"Gambar Pertama Setelah SIM-LBP\")\n",
    "        #     plt.axis(\"off\")\n",
    "        #     plt.show()\n",
    "        #     import sys\n",
    "        #     sys.exit()\n",
    "        \n",
    "        # Buat histograms untuk setiap gambar\n",
    "        histograms = []\n",
    "        for i in range(batch_size):\n",
    "            # Flatten LBP map\n",
    "            lbp_flat = lbp_maps[i].reshape(-1)\n",
    "            \n",
    "            # Buat histogram menggunakan torch.histc\n",
    "            hist = torch.histc(lbp_flat.float(), bins=256, min=0, max=255)\n",
    "            \n",
    "            # Normalisasi histogram\n",
    "            hist = hist / (hist.sum() + 1e-8)\n",
    "            \n",
    "            histograms.append(hist)\n",
    "        \n",
    "        # Stack histograms into a batch\n",
    "        lbp_features = torch.stack(histograms, dim=0)\n",
    "        \n",
    "        # Masukkan ke fully connected layer\n",
    "        lbp_features = self.fc_lbp(lbp_features)\n",
    "        \n",
    "        return lbp_features\n",
    "\n",
    "# ðŸ”¹ ResNet18 + CBAM + LBP\n",
    "class ResNet18_CBAM_SIMLBP(nn.Module):\n",
    "    def __init__(self, num_classes=7):\n",
    "        super(ResNet18_CBAM_SIMLBP, self).__init__()\n",
    "        self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)\n",
    "\n",
    "        # ðŸ”¥ Ganti kernel awal 7Ã—7 â†’ 3Ã—3 & hapus maxpool\n",
    "        self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=3, stride=1, padding=1, bias=False)\n",
    "        self.resnet18.maxpool = nn.Identity()\n",
    "\n",
    "        # ðŸ”¥ CBAM di tiap residual block\n",
    "        self.cbam1 = CBAM(64)\n",
    "        self.cbam2 = CBAM(128)\n",
    "        self.cbam3 = CBAM(256)\n",
    "        self.cbam4 = CBAM(512)\n",
    "\n",
    "        # ðŸ”¥ LBP Feature Extractor\n",
    "        self.lbp_extractor = LBPExtractor()\n",
    "\n",
    "        # ðŸ”¥ Fully Connected Layers\n",
    "        self.fc1 = nn.Linear(512, 512)  # FC1 untuk CNN\n",
    "        self.fc2 = nn.Linear(256, 256)  # FC2 untuk LBP\n",
    "        self.fc3 = nn.Linear(512 + 256, 14)  # FC3 (gabungan CNN+LBP)\n",
    "        self.fc4 = nn.Linear(14, num_classes)  # FC4 output 7 kelas\n",
    "        self.sigmoid = nn.Sigmoid()  # ðŸ”¥ Sigmoid di FC3\n",
    "\n",
    "    def forward(self, x):\n",
    "        lbp_features = self.lbp_extractor(x)  # ðŸ”¥ Cabang LBP â†’ FC2\n",
    "\n",
    "        # ðŸ”¥ Forward ke ResNet + CBAM\n",
    "        x = self.resnet18.conv1(x)\n",
    "        x = self.resnet18.bn1(x)\n",
    "        x = self.resnet18.relu(x)\n",
    "\n",
    "        x = self.cbam1(self.resnet18.layer1(x))\n",
    "        x = self.cbam2(self.resnet18.layer2(x))\n",
    "        x = self.cbam3(self.resnet18.layer3(x))\n",
    "        x = self.cbam4(self.resnet18.layer4(x))\n",
    "\n",
    "        x = self.resnet18.avgpool(x)\n",
    "        x = torch.flatten(x, 1)\n",
    "\n",
    "        # ðŸ”¥ Masukkan ke FC1 (512)\n",
    "        x = self.fc1(x)\n",
    "\n",
    "        # ðŸ”¥ Masukkan LBP ke FC2 (256)\n",
    "        lbp_features = lbp_features.to(x.device)\n",
    "        lbp_features = self.fc2(lbp_features)\n",
    "\n",
    "        # ðŸ”¥ Gabungkan FC1 dan FC2 â†’ FC3\n",
    "        x = torch.cat((x, lbp_features), dim=1)\n",
    "        x = self.fc3(x)\n",
    "\n",
    "        # ðŸ”¥ Sigmoid di FC3\n",
    "        x = self.sigmoid(x)\n",
    "\n",
    "        # ðŸ”¥ No Softmax di FC4\n",
    "        x = self.fc4(x)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dari claude model yang masuk akal:\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torchvision.models as models\n",
    "# import torch.nn.functional as F\n",
    "\n",
    "# # ðŸ”¹ Channel Attention Module\n",
    "# class ChannelAttention(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16):\n",
    "#         super(ChannelAttention, self).__init__()\n",
    "#         self.avg_pool = nn.AdaptiveAvgPool2d(1)\n",
    "#         self.max_pool = nn.AdaptiveMaxPool2d(1)\n",
    "#         self.fc = nn.Sequential(\n",
    "#             nn.Linear(in_channels, in_channels // ratio, bias=False),\n",
    "#             nn.ReLU(),\n",
    "#             nn.Linear(in_channels // ratio, in_channels, bias=False)\n",
    "#         )\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         b, c, _, _ = x.size()\n",
    "#         avg_out = self.fc(self.avg_pool(x).view(b, c))\n",
    "#         max_out = self.fc(self.max_pool(x).view(b, c))\n",
    "#         out = avg_out + max_out\n",
    "#         return x * self.sigmoid(out).view(b, c, 1, 1)\n",
    "\n",
    "# # ðŸ”¹ Spatial Attention Module\n",
    "# class SpatialAttention(nn.Module):\n",
    "#     def __init__(self, kernel_size=7):\n",
    "#         super(SpatialAttention, self).__init__()\n",
    "#         self.conv = nn.Conv2d(2, 1, kernel_size=kernel_size, padding=kernel_size // 2, bias=False)\n",
    "#         self.sigmoid = nn.Sigmoid()\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         avg_out = torch.mean(x, dim=1, keepdim=True)\n",
    "#         max_out, _ = torch.max(x, dim=1, keepdim=True)\n",
    "#         out = torch.cat([avg_out, max_out], dim=1)\n",
    "#         out = self.conv(out)\n",
    "#         return x * self.sigmoid(out)\n",
    "\n",
    "# # ðŸ”¹ CBAM Block\n",
    "# class CBAM(nn.Module):\n",
    "#     def __init__(self, in_channels, ratio=16, kernel_size=7):\n",
    "#         super(CBAM, self).__init__()\n",
    "#         self.channel_attention = ChannelAttention(in_channels, ratio)\n",
    "#         self.spatial_attention = SpatialAttention(kernel_size)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         x = self.channel_attention(x)\n",
    "#         x = self.spatial_attention(x)\n",
    "#         return x\n",
    "\n",
    "# # ðŸ”¹ Improved LBP Feature Extractor\n",
    "# class LBPExtractor(nn.Module):\n",
    "#     def __init__(self):\n",
    "#         super(LBPExtractor, self).__init__()\n",
    "#         # LBP menghasilkan 16 kemungkinan nilai (2^4) -> 16 bin histogram\n",
    "#         self.fc_lbp = nn.Linear(16, 128)\n",
    "        \n",
    "#         # Kernels untuk ekstraksi 8 tetangga (standar LBP)\n",
    "#         self.register_buffer('neighbors_kernel', self._create_neighbor_kernels())\n",
    "#         self.register_buffer('center_kernel', self._create_center_kernel())\n",
    "        \n",
    "#     def _create_neighbor_kernels(self):\n",
    "#         # Membuat 8 kernel untuk mengekstrak 8 tetangga dalam LBP\n",
    "#         kernels = []\n",
    "#         # Posisi 8 tetangga relatif terhadap pusat (y, x)\n",
    "#         positions = [(-1,-1), (-1,0), (-1,1), (0,-1), (0,1), (1,-1), (1,0), (1,1)]\n",
    "        \n",
    "#         for pos_y, pos_x in positions:\n",
    "#             kernel = torch.zeros(1, 1, 3, 3)\n",
    "#             kernel[0, 0, 1+pos_y, 1+pos_x] = 1  # Posisi tetangga\n",
    "#             kernels.append(kernel)\n",
    "            \n",
    "#         return torch.cat(kernels, dim=0)\n",
    "    \n",
    "#     def _create_center_kernel(self):\n",
    "#         # Kernel untuk mengekstrak piksel pusat\n",
    "#         kernel = torch.zeros(1, 1, 3, 3)\n",
    "#         kernel[0, 0, 1, 1] = 1  # Piksel pusat\n",
    "#         return kernel\n",
    "        \n",
    "#     def compute_lbp(self, x):\n",
    "#         batch_size = x.shape[0]\n",
    "        \n",
    "#         # Normalisasi gambar ke [0, 1]\n",
    "#         x_min = x.reshape(batch_size, -1).min(dim=1, keepdim=True)[0].reshape(batch_size, 1, 1)\n",
    "#         x_max = x.reshape(batch_size, -1).max(dim=1, keepdim=True)[0].reshape(batch_size, 1, 1)\n",
    "#         x_norm = (x - x_min) / (x_max - x_min + 1e-8)\n",
    "        \n",
    "#         # Pad gambar untuk konvolusi\n",
    "#         x_padded = F.pad(x_norm.unsqueeze(1), (1, 1, 1, 1), mode='reflect')\n",
    "        \n",
    "#         # Ekstrak nilai piksel pusat\n",
    "#         center_pixels = F.conv2d(x_padded, self.center_kernel).squeeze(1)  # [B, H, W]\n",
    "        \n",
    "#         # Ekstrak nilai 8 tetangga\n",
    "#         neighbor_pixels = F.conv2d(x_padded, self.neighbors_kernel)  # [B, 8, H, W]\n",
    "        \n",
    "#         # Bandingkan tetangga dengan pusat\n",
    "#         greater_or_equal = (neighbor_pixels >= center_pixels.unsqueeze(1)).float()  # [B, 8, H, W]\n",
    "        \n",
    "#         # Hitung nilai LBP dengan operasi bit\n",
    "#         weights = 2 ** torch.arange(8, device=x.device).view(1, 8, 1, 1)\n",
    "#         lbp_maps = torch.sum(greater_or_equal * weights, dim=1)  # [B, H, W]\n",
    "        \n",
    "#         return lbp_maps\n",
    "    \n",
    "#     def forward(self, x):\n",
    "#         batch_size = x.size(0)\n",
    "#         x = x.squeeze(1) if x.dim() == 4 else x  # Hapus dimensi channel jika ada\n",
    "        \n",
    "#         # Compute LBP\n",
    "#         lbp_maps = self.compute_lbp(x)\n",
    "        \n",
    "#         # Buat histogram untuk setiap gambar secara efisien\n",
    "#         # Hanya 16 bin (4-bit LBP) yang lebih tepat untuk implementasi\n",
    "#         lbp_features = torch.zeros(batch_size, 16, device=x.device)\n",
    "        \n",
    "#         for i in range(batch_size):\n",
    "#             # Flatten LBP map\n",
    "#             lbp_flat = lbp_maps[i].reshape(-1)\n",
    "            \n",
    "#             # Buat histogram dengan 16 bin (bukan 256)\n",
    "#             hist = torch.histc(lbp_flat, bins=16, min=0, max=15)\n",
    "            \n",
    "#             # Normalisasi histogram\n",
    "#             hist = hist / (hist.sum() + 1e-8)\n",
    "            \n",
    "#             lbp_features[i] = hist\n",
    "        \n",
    "#         # Masukkan ke fully connected layer\n",
    "#         lbp_features = self.fc_lbp(lbp_features)\n",
    "        \n",
    "#         return lbp_features\n",
    "\n",
    "# # ðŸ”¹ Improved ResNet18 + CBAM + LBP\n",
    "# class ResNet18_CBAM_SIMLBP(nn.Module):\n",
    "#     def __init__(self, num_classes=7):\n",
    "#         super(ResNet18_CBAM_SIMLBP, self).__init__()\n",
    "#         self.resnet18 = models.resnet18(weights=models.ResNet18_Weights.DEFAULT)\n",
    "\n",
    "#         # ðŸ”¥ Modifikasi untuk input grayscale (1 channel)\n",
    "#         self.resnet18.conv1 = nn.Conv2d(1, 64, kernel_size=3, stride=1, padding=1, bias=False)\n",
    "        \n",
    "#         # Membiarkan maxpool tetap ada untuk efisiensi dan ketahanan terhadap translasi\n",
    "#         # Mengurangi stride jika dibutuhkan\n",
    "#         self.resnet18.maxpool = nn.MaxPool2d(kernel_size=3, stride=1, padding=1)\n",
    "\n",
    "#         # ðŸ”¥ CBAM di tiap residual block\n",
    "#         self.cbam1 = CBAM(64)\n",
    "#         self.cbam2 = CBAM(128)\n",
    "#         self.cbam3 = CBAM(256)\n",
    "#         self.cbam4 = CBAM(512)\n",
    "\n",
    "#         # ðŸ”¥ LBP Feature Extractor\n",
    "#         self.lbp_extractor = LBPExtractor()\n",
    "\n",
    "#         # ðŸ”¥ Fully Connected Layers dengan dimensi yang lebih baik\n",
    "#         self.fc1 = nn.Linear(512, 256)  # FC1 untuk CNN\n",
    "#         self.dropout1 = nn.Dropout(0.3)  # Dropout untuk mengurangi overfitting\n",
    "        \n",
    "#         # LBP sudah memiliki fc_lbp ke 128 dimensi\n",
    "#         self.dropout2 = nn.Dropout(0.3)  # Dropout untuk fitur LBP\n",
    "        \n",
    "#         # ðŸ”¥ Gabungkan 256 + 128 = 384 dimensi, kurangi secara bertahap\n",
    "#         self.fc3 = nn.Linear(256 + 128, 128)  \n",
    "#         self.bn3 = nn.BatchNorm1d(128)  # Batch normalization\n",
    "#         self.dropout3 = nn.Dropout(0.3)\n",
    "        \n",
    "#         self.fc4 = nn.Linear(128, num_classes)  # Output layer\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         # ðŸ”¥ Ekstrak fitur LBP\n",
    "#         lbp_features = self.lbp_extractor(x)\n",
    "#         lbp_features = self.dropout2(lbp_features)\n",
    "\n",
    "#         # ðŸ”¥ Forward ke ResNet + CBAM\n",
    "#         x = self.resnet18.conv1(x)\n",
    "#         x = self.resnet18.bn1(x)\n",
    "#         x = F.relu(x)\n",
    "#         x = self.resnet18.maxpool(x)\n",
    "\n",
    "#         x = self.resnet18.layer1(x)\n",
    "#         x = self.cbam1(x)\n",
    "        \n",
    "#         x = self.resnet18.layer2(x)\n",
    "#         x = self.cbam2(x)\n",
    "        \n",
    "#         x = self.resnet18.layer3(x)\n",
    "#         x = self.cbam3(x)\n",
    "        \n",
    "#         x = self.resnet18.layer4(x)\n",
    "#         x = self.cbam4(x)\n",
    "\n",
    "#         x = self.resnet18.avgpool(x)\n",
    "#         x = torch.flatten(x, 1)\n",
    "\n",
    "#         # ðŸ”¥ CNN features melalui FC1\n",
    "#         x = self.fc1(x)\n",
    "#         x = F.relu(x)\n",
    "#         x = self.dropout1(x)\n",
    "\n",
    "#         # ðŸ”¥ Gabungkan CNN dan LBP features\n",
    "#         combined = torch.cat((x, lbp_features), dim=1)\n",
    "        \n",
    "#         # ðŸ”¥ FC3 dengan ReLU dan Batch Normalization\n",
    "#         combined = self.fc3(combined)\n",
    "#         combined = self.bn3(combined)\n",
    "#         combined = F.relu(combined)\n",
    "#         combined = self.dropout3(combined)\n",
    "\n",
    "#         # ðŸ”¥ Output layer tanpa aktivasi (untuk CrossEntropyLoss)\n",
    "#         output = self.fc4(combined)\n",
    "        \n",
    "#         return output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# DEFINE FUNCTION TRAINING, VALIDATION, AND TESTING"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def training(model_used,epochs,learn,mom,wd,saving_path,alpha_mixup):\n",
    "    import torch\n",
    "    import torch.nn.functional as F\n",
    "    from tqdm import tqdm\n",
    "    from sklearn.metrics import precision_score, recall_score, f1_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "    import numpy as np\n",
    "    import matplotlib.pyplot as plt\n",
    "    import os\n",
    "\n",
    "    # define model\n",
    "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "    model = model_used.to(device)\n",
    "\n",
    "    # define optimizer\n",
    "    optimizer = torch.optim.SGD(model.parameters(), lr=learn, momentum=mom, weight_decay=wd)\n",
    "\n",
    "    # define loss for two-class problem\n",
    "    criterion = torch.nn.CrossEntropyLoss(label_smoothing=0.1)\n",
    "\n",
    "    scaler = torch.amp.GradScaler() # Untuk Mixed Precision Training, KODE TAMBAHAN\n",
    "    \n",
    "    def mixup_data(x, y, alpha):\n",
    "        \"\"\"Apply Mixup augmentation\"\"\"\n",
    "        # if alpha > 0:\n",
    "        #     lam = np.random.beta(alpha, alpha)\n",
    "        # else:\n",
    "        #     lam = 1\n",
    "        lam = np.random.beta(alpha, alpha) if alpha > 0 else 1 # KODE REVISI\n",
    "        batch_size = x.size()[0]\n",
    "        index = torch.randperm(batch_size).to(x.device)\n",
    "        mixed_x = lam * x + (1 - lam) * x[index, :]\n",
    "        # y_a, y_b = y, y[index]\n",
    "        y_a, y_b = y.long(), y[index].long()  # Pastikan tetap integer, KODE TAMBAHAN\n",
    "        return mixed_x, y_a, y_b, lam\n",
    "    \n",
    "    def mixup_criterion(criterion, pred, y_a, y_b, lam):\n",
    "        return lam * criterion(pred, y_a) + (1 - lam) * criterion(pred, y_b)\n",
    "    \n",
    "    def plot_and_save_metrics(train_acc, val_acc, train_loss, val_loss, labels, predictions, saving_path, epoch, best=False):\n",
    "        suffix = \"best\" if best else f\"epoch_{epoch + 1}\"\n",
    "    \n",
    "        if (epoch + 1) % 10 == 0 or best:\n",
    "            plt.figure()\n",
    "            plt.plot(train_acc, label='Train Accuracy')\n",
    "            plt.plot(val_acc, label='Validation Accuracy')\n",
    "            plt.xlabel('Epoch')\n",
    "            plt.ylabel('Accuracy')\n",
    "            plt.legend()\n",
    "            plt.title(f'Accuracy ({suffix})')\n",
    "            plt.savefig(os.path.join(saving_path, f'accuracy_plot.png'))\n",
    "            plt.close()\n",
    "    \n",
    "            plt.figure()\n",
    "            plt.plot(train_loss, label='Train Loss')\n",
    "            plt.plot(val_loss, label='Validation Loss')\n",
    "            plt.xlabel('Epoch')\n",
    "            plt.ylabel('Loss')\n",
    "            plt.legend()\n",
    "            plt.title(f'Loss ({suffix})')\n",
    "            plt.savefig(os.path.join(saving_path, f'loss_plot.png'))\n",
    "            plt.close()\n",
    "    \n",
    "        if best:\n",
    "            cm = confusion_matrix(labels, predictions)\n",
    "            disp = ConfusionMatrixDisplay(confusion_matrix=cm)\n",
    "            disp.plot()\n",
    "            plt.title(f'Confusion Matrix ({suffix})')\n",
    "            plt.savefig(os.path.join(saving_path, f'confusion_matrix_best.png'))\n",
    "            plt.close()\n",
    "    \n",
    "    train_losses, train_acc, val_losses, val_acc = [], [], [], []\n",
    "    best_metric, best_metric_epoch = -1, -1\n",
    "    \n",
    "    # Pastikan direktori untuk menyimpan hasil ada\n",
    "    os.makedirs(saving_path, exist_ok=True)\n",
    "    \n",
    "    best_val_acc = -1  # Inisialisasi best_val_acc\n",
    "    \n",
    "    for epoch in range(epochs):\n",
    "        train_dataset.transform = get_train_transforms()  # ðŸ”¥ Ubah transformasi setiap epoch tanpa reload DataLoader\n",
    "\n",
    "        ### ======================================== xamples =====================================\n",
    "        # import matplotlib.pyplot as plt\n",
    "        # import torchvision.transforms.functional as TF\n",
    "        \n",
    "        # # Ambil beberapa sampel gambar setelah augmentasi\n",
    "        # fig, axes = plt.subplots(2, 5, figsize=(12, 6))  # Grid 2x5\n",
    "        # axes = axes.ravel()\n",
    "        \n",
    "        # for i in range(10):  # Ambil 10 gambar pertama\n",
    "        #     img, label = train_dataset[i]  # Ambil dari dataset langsung\n",
    "        #     img = img.permute(1, 2, 0).cpu().numpy()  # Konversi ke (H, W, C)\n",
    "        \n",
    "        #     axes[i].imshow(img, cmap=\"gray\")  # Tampilkan dalam grayscale\n",
    "        #     axes[i].set_title(f\"Label: {class_names[label]}\")\n",
    "        #     axes[i].axis(\"off\")\n",
    "        \n",
    "        # plt.tight_layout()\n",
    "        # plt.show()\n",
    "\n",
    "        # print(train_dataset.transform)  # Cek apakah transformasi benar-benar berubah setiap epoch\n",
    "        # break\n",
    "        ### ======================================== xamples =====================================\n",
    "        \n",
    "        model.train()\n",
    "        training_loss, correct, total = 0.0, 0, 0\n",
    "        all_targets, all_preds = [], []\n",
    "    \n",
    "        train_pbar = tqdm(train_loader, desc=f'Epoch {epoch} Training', leave=False) # Leave TRUE jadi -> FALSES\n",
    "        for i,(inputs, targets) in enumerate(train_pbar):\n",
    "            inputs, targets = inputs.to(device), targets.to(device)\n",
    "            inputs, targets_a, targets_b, lam = mixup_data(inputs, targets, alpha=alpha_mixup)\n",
    "            \n",
    "            optimizer.zero_grad()\n",
    "\n",
    "            with torch.autocast(device_type=\"cuda\", dtype=torch.float16): # Mixed Precision # KODE TAMBAHAN \n",
    "                outputs = model(inputs)\n",
    "                loss = mixup_criterion(criterion, outputs, targets_a, targets_b, lam)\n",
    "\n",
    "            scaler.scale(loss).backward()\n",
    "            scaler.step(optimizer)\n",
    "            scaler.update()\n",
    "    \n",
    "            training_loss += loss.detach().item()  # âœ… Pakai .detach()\n",
    "            \n",
    "            with torch.no_grad():  # âœ… Gunakan no_grad saat hitung accuracy\n",
    "                _, predicted = outputs.max(1)\n",
    "                total += targets.size(0)\n",
    "                correct += (lam * predicted.eq(targets_a).sum().item() + (1 - lam) * predicted.eq(targets_b).sum().item())\n",
    "    \n",
    "            # all_targets.extend(targets.cpu().numpy())\n",
    "            all_targets.extend(targets_a.cpu().numpy())  # Pakai labels A sebagai referensi (LABEL ASLI) KODE TAMBAHAN\n",
    "            all_preds.extend(predicted.cpu().numpy())\n",
    "            \n",
    "            train_pbar.set_postfix({'loss': f'{training_loss/(i+1):.4f}', 'acc': f'{(100.0 * correct / total):.2f}%'})\n",
    "    \n",
    "        precision = precision_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        recall = recall_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        f1 = f1_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "    \n",
    "        training_accuracy = 100.0 * correct / total\n",
    "        train_losses.append(training_loss / len(train_loader))\n",
    "        train_acc.append(training_accuracy)\n",
    "        # train_acc.append(100.0 * correct / total)\n",
    "        \n",
    "        model.eval()\n",
    "        valid_loss, correct, total = 0.0, 0, 0\n",
    "        all_targets, all_preds = [], []  # Reset sebelum validasi\n",
    "    \n",
    "        with torch.no_grad():\n",
    "            val_pbar = tqdm(val_loader, desc=f'Epoch {epoch} Validation', leave=False) # leave ddibuat false\n",
    "            for i,(inputs, targets) in enumerate(val_pbar):\n",
    "                inputs, targets = inputs.to(device), targets.to(device)\n",
    "\n",
    "                with torch.autocast(device_type=\"cuda\", dtype=torch.float16): # Mixed Precision # KODE TAMBAHAN \n",
    "                    outputs = model(inputs)\n",
    "                    loss = criterion(outputs, targets)\n",
    "                \n",
    "                # outputs = model(inputs)\n",
    "                # loss = criterion(outputs, targets)\n",
    "                valid_loss += loss.item()\n",
    "                \n",
    "                _, predicted = outputs.max(1)\n",
    "                total += targets.size(0)\n",
    "                correct += predicted.eq(targets).sum().item()\n",
    "                \n",
    "                all_targets.extend(targets.cpu().numpy())\n",
    "                all_preds.extend(predicted.cpu().numpy())\n",
    "                \n",
    "                val_pbar.set_postfix({'loss': f'{valid_loss/(i+1):.4f}', 'acc': f'{(100.0 * correct / total):.2f}%'})\n",
    "        \n",
    "        valid_accuracy = 100.0 * correct / total\n",
    "        val_losses.append(valid_loss / len(val_loader))\n",
    "        val_acc.append(valid_accuracy)\n",
    "    \n",
    "        val_precision = precision_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        val_recall = recall_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        val_f1 = f1_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "    \n",
    "        # Simpan model terbaik berdasarkan validasi akurasi\n",
    "        if valid_accuracy > best_val_acc:\n",
    "            best_val_acc = valid_accuracy  # Update best validation accuracy\n",
    "            best_checkpoint_path = os.path.join(saving_path, 'best_model.pth')\n",
    "            torch.save({\n",
    "                'epoch': epoch,\n",
    "                'model_state_dict': model.state_dict(),\n",
    "                'optimizer_state_dict': optimizer.state_dict(),\n",
    "                'best_val_acc': best_val_acc,\n",
    "                'train_loss': train_losses[-1],  # Gunakan nilai terakhir\n",
    "                'val_loss': val_losses[-1],\n",
    "                'precision': val_precision,\n",
    "                'recall': val_recall,\n",
    "                'f1': val_f1\n",
    "            }, best_checkpoint_path)\n",
    "            plot_and_save_metrics(train_acc, val_acc, train_losses, val_losses, all_targets, all_preds, saving_path, epoch, best=True)\n",
    "    \n",
    "        # Simpan checkpoint setiap 10 epoch\n",
    "        if (epoch + 1) % 10 == 0:\n",
    "            checkpoint_path = os.path.join(saving_path, f'checkpoint.pth')\n",
    "            torch.save({\n",
    "                'epoch': epoch,\n",
    "                'model_state_dict': model.state_dict(),\n",
    "                'optimizer_state_dict': optimizer.state_dict(),\n",
    "                'best_val_acc': best_val_acc\n",
    "            }, checkpoint_path)\n",
    "            plot_and_save_metrics(train_acc, val_acc, train_losses, val_losses, all_targets, all_preds, saving_path, epoch)\n",
    "    \n",
    "        # Print metrics setiap epoch\n",
    "        print(f\"Epoch {epoch}\\n{'='*50}\")\n",
    "        print(f\"Train Acc: {training_accuracy:.2f}%, Loss: {train_losses[-1]:.4f}, Precision: {precision:.4f}, Recall: {recall:.4f}, F1: {f1:.4f}\")\n",
    "        print(f\"Valid Acc: {valid_accuracy:.2f}%, Loss: {val_losses[-1]:.4f}, Precision: {val_precision:.4f}, Recall: {val_recall:.4f}, F1: {val_f1:.4f}\\n\")\n",
    "        \n",
    "        # Simpan log ke file .txt\n",
    "        with open(os.path.join(saving_path, 'training_log.txt'), 'a') as f:\n",
    "            f.write(f\"Epoch {epoch+1}\\n\")\n",
    "            f.write(\"=\"*50 + \"\\n\")\n",
    "            f.write(f\"Train Acc: {training_accuracy:.2f}%, Loss: {train_losses[-1]:.4f}, Precision: {precision:.4f}, Recall: {recall:.4f}, F1: {f1:.4f}\\n\")\n",
    "            f.write(f\"Valid Acc: {valid_accuracy:.2f}%, Loss: {val_losses[-1]:.4f}, Precision: {val_precision:.4f}, Recall: {val_recall:.4f}, F1: {val_f1:.4f}\\n\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TANPA MIXUP AUG\n",
    "\n",
    "def trainingNoMixup(model_used,epochs,learn,mom,wd,saving_path,alpha_mixup):\n",
    "    import torch\n",
    "    import torch.nn.functional as F\n",
    "    from tqdm import tqdm\n",
    "    from sklearn.metrics import precision_score, recall_score, f1_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "    import numpy as np\n",
    "    import matplotlib.pyplot as plt\n",
    "    import os\n",
    "\n",
    "    # define model\n",
    "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "    model = model_used.to(device)\n",
    "\n",
    "    # define optimizer\n",
    "    optimizer = torch.optim.SGD(model.parameters(), lr=learn, momentum=mom, weight_decay=wd)\n",
    "\n",
    "    # define loss for two-class problem\n",
    "    criterion = torch.nn.CrossEntropyLoss(label_smoothing=0.1)\n",
    "\n",
    "    scaler = torch.amp.GradScaler() # Untuk Mixed Precision Training, KODE TAMBAHAN\n",
    "    \n",
    "    def plot_and_save_metrics(train_acc, val_acc, train_loss, val_loss, labels, predictions, saving_path, epoch, best=False):\n",
    "        suffix = \"best\" if best else f\"epoch_{epoch + 1}\"\n",
    "    \n",
    "        if (epoch + 1) % 10 == 0 or best:\n",
    "            plt.figure()\n",
    "            plt.plot(train_acc, label='Train Accuracy')\n",
    "            plt.plot(val_acc, label='Validation Accuracy')\n",
    "            plt.xlabel('Epoch')\n",
    "            plt.ylabel('Accuracy')\n",
    "            plt.legend()\n",
    "            plt.title(f'Accuracy ({suffix})')\n",
    "            plt.savefig(os.path.join(saving_path, f'accuracy_plot.png'))\n",
    "            plt.close()\n",
    "    \n",
    "            plt.figure()\n",
    "            plt.plot(train_loss, label='Train Loss')\n",
    "            plt.plot(val_loss, label='Validation Loss')\n",
    "            plt.xlabel('Epoch')\n",
    "            plt.ylabel('Loss')\n",
    "            plt.legend()\n",
    "            plt.title(f'Loss ({suffix})')\n",
    "            plt.savefig(os.path.join(saving_path, f'loss_plot.png'))\n",
    "            plt.close()\n",
    "    \n",
    "        if best:\n",
    "            cm = confusion_matrix(labels, predictions)\n",
    "            disp = ConfusionMatrixDisplay(confusion_matrix=cm)\n",
    "            disp.plot()\n",
    "            plt.title(f'Confusion Matrix ({suffix})')\n",
    "            plt.savefig(os.path.join(saving_path, f'confusion_matrix_best.png'))\n",
    "            plt.close()\n",
    "    \n",
    "    train_losses, train_acc, val_losses, val_acc = [], [], [], []\n",
    "    best_metric, best_metric_epoch = -1, -1\n",
    "    \n",
    "    # Pastikan direktori untuk menyimpan hasil ada\n",
    "    os.makedirs(saving_path, exist_ok=True)\n",
    "    \n",
    "    best_val_acc = -1  # Inisialisasi best_val_acc\n",
    "    \n",
    "    for epoch in range(epochs):\n",
    "        train_dataset.transform = get_train_transforms()  # ðŸ”¥ Ubah transformasi setiap epoch tanpa reload DataLoader\n",
    "        \n",
    "        model.train()\n",
    "        training_loss, correct, total = 0.0, 0, 0\n",
    "        all_targets, all_preds = [], []\n",
    "    \n",
    "        train_pbar = tqdm(train_loader, desc=f'Epoch {epoch} Training', leave=False) # Leave TRUE jadi -> FALSES\n",
    "        for i,(inputs, targets) in enumerate(train_pbar):\n",
    "            inputs, targets = inputs.to(device), targets.to(device)\n",
    "            \n",
    "            optimizer.zero_grad()\n",
    "\n",
    "            with torch.autocast(device_type=\"cuda\", dtype=torch.float16): # Mixed Precision # KODE TAMBAHAN \n",
    "                outputs = model(inputs)\n",
    "                loss = criterion(outputs, targets)\n",
    "\n",
    "            scaler.scale(loss).backward()\n",
    "            scaler.step(optimizer)\n",
    "            scaler.update()\n",
    "    \n",
    "            training_loss += loss.detach().item()  # âœ… Pakai .detach()\n",
    "            \n",
    "            with torch.no_grad():  # âœ… Gunakan no_grad saat hitung accuracy\n",
    "                _, predicted = outputs.max(1)\n",
    "                total += targets.size(0)\n",
    "                correct += predicted.eq(targets).sum().item()\n",
    "    \n",
    "            all_targets.extend(targets.cpu().numpy())  # Pakai labels asli\n",
    "            all_preds.extend(predicted.cpu().numpy())\n",
    "            \n",
    "            train_pbar.set_postfix({'loss': f'{training_loss/(i+1):.4f}', 'acc': f'{(100.0 * correct / total):.2f}%'})\n",
    "    \n",
    "        precision = precision_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        recall = recall_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        f1 = f1_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "    \n",
    "        training_accuracy = 100.0 * correct / total\n",
    "        train_losses.append(training_loss / len(train_loader))\n",
    "        train_acc.append(training_accuracy)\n",
    "        \n",
    "        model.eval()\n",
    "        valid_loss, correct, total = 0.0, 0, 0\n",
    "        all_targets, all_preds = [], []  # Reset sebelum validasi\n",
    "    \n",
    "        with torch.no_grad():\n",
    "            val_pbar = tqdm(val_loader, desc=f'Epoch {epoch} Validation', leave=False) # leave ddibuat false\n",
    "            for i,(inputs, targets) in enumerate(val_pbar):\n",
    "                inputs, targets = inputs.to(device), targets.to(device)\n",
    "\n",
    "                with torch.autocast(device_type=\"cuda\", dtype=torch.float16): # Mixed Precision # KODE TAMBAHAN \n",
    "                    outputs = model(inputs)\n",
    "                    loss = criterion(outputs, targets)\n",
    "                \n",
    "                valid_loss += loss.item()\n",
    "                \n",
    "                _, predicted = outputs.max(1)\n",
    "                total += targets.size(0)\n",
    "                correct += predicted.eq(targets).sum().item()\n",
    "                \n",
    "                all_targets.extend(targets.cpu().numpy())\n",
    "                all_preds.extend(predicted.cpu().numpy())\n",
    "                \n",
    "                val_pbar.set_postfix({'loss': f'{valid_loss/(i+1):.4f}', 'acc': f'{(100.0 * correct / total):.2f}%'})\n",
    "        \n",
    "        valid_accuracy = 100.0 * correct / total\n",
    "        val_losses.append(valid_loss / len(val_loader))\n",
    "        val_acc.append(valid_accuracy)\n",
    "    \n",
    "        val_precision = precision_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        val_recall = recall_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "        val_f1 = f1_score(all_targets, all_preds, average='weighted', zero_division=0)\n",
    "    \n",
    "        # Simpan model terbaik berdasarkan validasi akurasi\n",
    "        if valid_accuracy > best_val_acc:\n",
    "            best_val_acc = valid_accuracy  # Update best validation accuracy\n",
    "            best_checkpoint_path = os.path.join(saving_path, 'best_model.pth')\n",
    "            torch.save({\n",
    "                'epoch': epoch,\n",
    "                'model_state_dict': model.state_dict(),\n",
    "                'optimizer_state_dict': optimizer.state_dict(),\n",
    "                'best_val_acc': best_val_acc,\n",
    "                'train_loss': train_losses[-1],  # Gunakan nilai terakhir\n",
    "                'val_loss': val_losses[-1],\n",
    "                'precision': val_precision,\n",
    "                'recall': val_recall,\n",
    "                'f1': val_f1\n",
    "            }, best_checkpoint_path)\n",
    "            plot_and_save_metrics(train_acc, val_acc, train_losses, val_losses, all_targets, all_preds, saving_path, epoch, best=True)\n",
    "    \n",
    "        # Simpan checkpoint setiap 10 epoch\n",
    "        if (epoch + 1) % 10 == 0:\n",
    "            checkpoint_path = os.path.join(saving_path, f'checkpoint.pth')\n",
    "            torch.save({\n",
    "                'epoch': epoch,\n",
    "                'model_state_dict': model.state_dict(),\n",
    "                'optimizer_state_dict': optimizer.state_dict(),\n",
    "                'best_val_acc': best_val_acc\n",
    "            }, checkpoint_path)\n",
    "            plot_and_save_metrics(train_acc, val_acc, train_losses, val_losses, all_targets, all_preds, saving_path, epoch)\n",
    "    \n",
    "        # Print metrics setiap epoch\n",
    "        print(f\"Epoch {epoch}\\n{'='*50}\")\n",
    "        print(f\"Train Acc: {training_accuracy:.2f}%, Loss: {train_losses[-1]:.4f}, Precision: {precision:.4f}, Recall: {recall:.4f}, F1: {f1:.4f}\")\n",
    "        print(f\"Valid Acc: {valid_accuracy:.2f}%, Loss: {val_losses[-1]:.4f}, Precision: {val_precision:.4f}, Recall: {val_recall:.4f}, F1: {val_f1:.4f}\\n\")\n",
    "        \n",
    "        # Simpan log ke file .txt\n",
    "        with open(os.path.join(saving_path, 'training_log.txt'), 'a') as f:\n",
    "            f.write(f\"Epoch {epoch+1}\\n\")\n",
    "            f.write(\"=\"*50 + \"\\n\")\n",
    "            f.write(f\"Train Acc: {training_accuracy:.2f}%, Loss: {train_losses[-1]:.4f}, Precision: {precision:.4f}, Recall: {recall:.4f}, F1: {f1:.4f}\\n\")\n",
    "            f.write(f\"Valid Acc: {valid_accuracy:.2f}%, Loss: {val_losses[-1]:.4f}, Precision: {val_precision:.4f}, Recall: {val_recall:.4f}, F1: {val_f1:.4f}\\n\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_checkpoint(file_path):\n",
    "    import torch\n",
    "    from numpy._core.multiarray import scalar\n",
    "    \n",
    "    # Tambahkan global yang diperlukan ke daftar aman\n",
    "    torch.serialization.add_safe_globals([scalar])\n",
    "    \n",
    "    # Load file dengan weights_only=True\n",
    "    file_path = file_path  # Ganti dengan path file\n",
    "    pth_data = torch.load(file_path, weights_only=False)\n",
    "    \n",
    "    print(pth_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def testing(path_data,model_used,best_checkpoint_path):\n",
    "    import torch\n",
    "    import matplotlib.pyplot as plt\n",
    "    import numpy as np\n",
    "    import pandas as pd\n",
    "    import albumentations as A\n",
    "    import cv2\n",
    "    from torch.utils.data import Dataset, DataLoader\n",
    "    from albumentations.pytorch import ToTensorV2\n",
    "    \n",
    "    # Load dataset PrivateTest\n",
    "    df_test = pd.read_parquet(path_data)\n",
    "\n",
    "    # visualize    \n",
    "    num_samples = 112\n",
    "    sample_df = df_test.iloc[82:num_samples]\n",
    "    \n",
    "    # Buat plot 4x4 untuk menampilkan 16 gambar pertama\n",
    "    fig, axes = plt.subplots(8, 4, figsize=(8, 8))\n",
    "    fig.suptitle(\"Sample Images from df_test\", fontsize=16)\n",
    "    \n",
    "    for i, ax in enumerate(axes.flat):\n",
    "        if i < len(sample_df):\n",
    "            # Konversi string pixels menjadi numpy array\n",
    "            pixels = np.array([int(p) for p in sample_df.iloc[i]['resized_pixels'].split()], dtype=np.uint8)\n",
    "            pixels = pixels.reshape(100, 100)  # Karena sudah berukuran 100x100\n",
    "    \n",
    "            ax.imshow(pixels, cmap=\"gray\")  # Tampilkan gambar dalam grayscale\n",
    "            ax.set_title(f\"Label: {sample_df.iloc[i]['emotion']}\")\n",
    "            ax.axis(\"off\")\n",
    "    \n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "    df_test = df_test[df_test[\"usage\"] == \"PrivateTest\"].reset_index(drop=True)\n",
    "    \n",
    "    # Transformasi: Resize 48x48 -> 100x100, Normalisasi, dan Convert ke Tensor\n",
    "    test_transforms = A.Compose([\n",
    "        A.Normalize(mean=[0], std=[255]),  # Normalisasi 0-1\n",
    "        ToTensorV2()\n",
    "    ])\n",
    "    \n",
    "    class FERTestDataset(Dataset):\n",
    "        def __init__(self, dataframe, transform=None):\n",
    "            self.data = dataframe\n",
    "            self.transform = transform\n",
    "    \n",
    "        def __len__(self):\n",
    "            return len(self.data)\n",
    "    \n",
    "        def __getitem__(self, idx):\n",
    "            pixels = np.array([int(p) for p in self.data.iloc[idx]['resized_pixels'].split()], dtype=np.uint8)\n",
    "            pixels = np.reshape(pixels, (100, 100))  # Pastikan bentuknya benar\n",
    "        \n",
    "            label = int(self.data.iloc[idx]['emotion'])\n",
    "        \n",
    "            # Terapkan transformasi\n",
    "            if self.transform:\n",
    "                augmented = self.transform(image=pixels)\n",
    "                pixels = augmented['image']\n",
    "        \n",
    "            return pixels, label\n",
    "    \n",
    "    \n",
    "    # Load checkpoint\n",
    "    checkpoint = torch.load(best_checkpoint_path)\n",
    "    \n",
    "    # Inisialisasi model\n",
    "    model = model_used  # Sesuaikan dengan model kamu\n",
    "    \n",
    "    # Load state_dict ke model\n",
    "    model.load_state_dict(checkpoint[\"model_state_dict\"])\n",
    "    \n",
    "    # Set model ke mode evaluasi\n",
    "    model.eval()\n",
    "    \n",
    "    # Buat DataLoader untuk Testing\n",
    "    test_dataset = FERTestDataset(df_test, transform=test_transforms)\n",
    "    test_loader = DataLoader(test_dataset, batch_size=62, shuffle=False)\n",
    "    \n",
    "    # Evaluasi Model\n",
    "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "    model.to(device)\n",
    "    \n",
    "    correct = 0\n",
    "    total = 0\n",
    "    \n",
    "    with torch.no_grad():\n",
    "        for images, labels in test_loader:\n",
    "            images, labels = images.to(device), labels.to(device)\n",
    "            outputs = model(images)\n",
    "            _, predicted = torch.max(outputs, 1)\n",
    "            correct += (predicted == labels).sum().item()\n",
    "            total += labels.size(0)\n",
    "    \n",
    "    accuracy = 100 * correct / total\n",
    "    print(f\"Accuracy on PrivateTest: {accuracy:.2f}%\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EXPERIMENTS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jumlah core CPU: 16\n"
     ]
    }
   ],
   "source": [
    "import multiprocessing\n",
    "print(\"Jumlah core CPU:\", multiprocessing.cpu_count())\n",
    "\n",
    "# maka JUMLAH CPU - TOTAL CPU CORE = 16-2= 14 buat numworkernya"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 0\n",
      "==================================================\n",
      "Train Acc: 27.05%, Loss: 1.8081, Precision: 0.1962, Recall: 0.2588, F1: 0.1316\n",
      "Valid Acc: 34.27%, Loss: 1.7075, Precision: 0.2741, Recall: 0.3427, F1: 0.2529\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1\n",
      "==================================================\n",
      "Train Acc: 36.80%, Loss: 1.6728, Precision: 0.2421, Recall: 0.3097, F1: 0.2609\n",
      "Valid Acc: 44.33%, Loss: 1.5363, Precision: 0.3540, Recall: 0.4433, F1: 0.3657\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 2\n",
      "==================================================\n",
      "Train Acc: 45.08%, Loss: 1.5440, Precision: 0.3229, Recall: 0.3565, F1: 0.3177\n",
      "Valid Acc: 50.24%, Loss: 1.4274, Precision: 0.4720, Recall: 0.5024, F1: 0.4581\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 3\n",
      "==================================================\n",
      "Train Acc: 47.65%, Loss: 1.5048, Precision: 0.3430, Recall: 0.3659, F1: 0.3418\n",
      "Valid Acc: 56.78%, Loss: 1.3336, Precision: 0.5644, Recall: 0.5678, F1: 0.5425\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 4\n",
      "==================================================\n",
      "Train Acc: 49.39%, Loss: 1.4781, Precision: 0.3611, Recall: 0.3781, F1: 0.3632\n",
      "Valid Acc: 55.87%, Loss: 1.3330, Precision: 0.5485, Recall: 0.5587, F1: 0.5293\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 5\n",
      "==================================================\n",
      "Train Acc: 50.04%, Loss: 1.4755, Precision: 0.3648, Recall: 0.3820, F1: 0.3681\n",
      "Valid Acc: 60.21%, Loss: 1.2601, Precision: 0.5979, Recall: 0.6021, F1: 0.5896\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 6\n",
      "==================================================\n",
      "Train Acc: 51.31%, Loss: 1.4569, Precision: 0.3830, Recall: 0.3989, F1: 0.3863\n",
      "Valid Acc: 60.10%, Loss: 1.2869, Precision: 0.5848, Recall: 0.6010, F1: 0.5803\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 7\n",
      "==================================================\n",
      "Train Acc: 53.48%, Loss: 1.4212, Precision: 0.3906, Recall: 0.4040, F1: 0.3942\n",
      "Valid Acc: 61.05%, Loss: 1.2675, Precision: 0.5992, Recall: 0.6105, F1: 0.5863\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "                                                                                                                        \r"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 8\n",
      "==================================================\n",
      "Train Acc: 54.91%, Loss: 1.3974, Precision: 0.3982, Recall: 0.4109, F1: 0.4018\n",
      "Valid Acc: 63.36%, Loss: 1.2225, Precision: 0.6155, Recall: 0.6336, F1: 0.6124\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 9 Training:  91%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ   | 409/449 [00:48<00:04,  8.54it/s, loss=1.4472, acc=52.39%]"
     ]
    }
   ],
   "source": [
    "# (model_used,epochs,learn,mom,wd,saving_path,alpha_mixup):\n",
    "training(ResNet18_CBAM_SIMLBP(),300,0.1,0.01,0.00001,\"./results/FIX_resnet18_cbam_simlbp_attemp4\",0.4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'epoch': 298, 'model_state_dict': OrderedDict({'resnet18.conv1.weight': tensor([[[[-9.4483e-02, -9.8564e-03,  3.0915e-01],\n",
      "          [-1.5985e-01, -2.4016e-01,  1.4802e-01],\n",
      "          [-3.1839e-02, -7.4917e-02,  1.5022e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.5445e-01, -4.8429e-01,  3.2133e-01],\n",
      "          [-5.4198e-01, -2.9197e-01,  2.8455e-01],\n",
      "          [-9.2798e-02,  7.5515e-02,  8.8165e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.7572e-01, -2.8578e-01,  1.8306e-01],\n",
      "          [ 5.8149e-02, -2.0233e-01, -7.0800e-02],\n",
      "          [ 8.4651e-02,  2.0294e-01, -3.7348e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.4150e-01,  2.0826e-01,  1.5439e-02],\n",
      "          [-1.1784e-01,  2.5967e-03,  2.9047e-01],\n",
      "          [-9.1570e-02,  7.7668e-02,  1.1566e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 5.0197e-02, -9.8551e-02, -2.5816e-01],\n",
      "          [-5.6290e-02,  2.2793e-01, -2.8984e-01],\n",
      "          [-1.0370e-01,  1.6509e-01,  1.4938e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.7070e-01,  2.1847e-01,  1.5095e-01],\n",
      "          [-4.9344e-01, -2.1935e-01,  4.9256e-01],\n",
      "          [-2.7915e-01, -1.1565e-02,  2.9628e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.7939e-01, -4.6343e-01,  4.7491e-01],\n",
      "          [-5.3062e-01, -6.5600e-01,  9.4388e-01],\n",
      "          [-2.9326e-01, -5.3388e-01,  9.2177e-01]]],\n",
      "\n",
      "\n",
      "        [[[-7.6010e-02,  3.3680e-02, -3.8018e-02],\n",
      "          [ 6.7940e-03,  8.1728e-02, -8.1227e-04],\n",
      "          [ 6.9060e-02, -4.5454e-02, -1.5751e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 4.0497e-02,  1.4089e-04, -9.8522e-02],\n",
      "          [ 4.8508e-02, -2.3671e-01,  2.4087e-01],\n",
      "          [-1.9331e-01, -2.3506e-01, -1.7099e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.7104e-01,  1.5883e-01,  9.9649e-02],\n",
      "          [-2.7812e-01,  1.3610e-01, -1.2239e-01],\n",
      "          [-6.4814e-02,  6.1817e-02,  2.7725e-01]]],\n",
      "\n",
      "\n",
      "        [[[-7.7987e-02, -2.1951e-01,  4.3988e-01],\n",
      "          [-1.4903e-01, -3.5128e-01,  1.1934e-01],\n",
      "          [-5.2193e-01,  1.6027e-01,  4.5298e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.7354e-01, -2.4047e-01,  2.0844e-02],\n",
      "          [-1.0478e-01, -1.8324e-01, -3.6576e-01],\n",
      "          [ 4.7047e-01,  2.3201e-01,  6.6690e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.8853e-01, -2.2710e-01, -2.1632e-03],\n",
      "          [ 6.0605e-02, -2.1910e-01,  1.8381e-01],\n",
      "          [-2.4584e-01,  2.1738e-02, -2.8000e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.0392e-01, -1.5913e-01,  3.1854e-02],\n",
      "          [-1.4651e-01,  2.2231e-01,  1.7788e-01],\n",
      "          [-1.8778e-01,  2.1759e-01,  2.6453e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 4.5065e-01, -1.5308e-01,  4.8402e-02],\n",
      "          [ 3.2518e-04,  2.6562e-01, -1.4218e-01],\n",
      "          [-1.4362e-01,  1.5074e-01, -4.1653e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.6363e-01, -1.9858e-03,  1.8491e-01],\n",
      "          [-2.2705e-01, -5.3812e-02,  1.3328e-01],\n",
      "          [-5.6748e-02,  3.7170e-03,  2.6519e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.5599e-01,  5.9710e-01,  3.5212e-01],\n",
      "          [-3.0610e-01, -6.3446e-01, -2.8268e-01],\n",
      "          [ 3.5059e-02, -4.8977e-01,  7.7057e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.5347e-01, -3.0154e-02, -4.5634e-02],\n",
      "          [ 2.4037e-01,  8.1645e-02,  4.0976e-02],\n",
      "          [ 2.5173e-01,  1.8928e-01, -2.4579e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.1080e-01,  2.6798e-01, -1.5593e-02],\n",
      "          [ 1.5508e-01, -6.0140e-02,  2.6814e-01],\n",
      "          [-5.5030e-02,  2.5717e-01, -2.4504e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.1445e-01, -3.5985e-01,  1.4512e-01],\n",
      "          [-5.9881e-01, -6.1185e-01, -9.8697e-03],\n",
      "          [ 9.6323e-02,  2.9463e-01,  1.0978e+00]]],\n",
      "\n",
      "\n",
      "        [[[ 1.8123e-01,  8.5369e-02, -7.3184e-02],\n",
      "          [ 4.1959e-01,  2.6125e-01, -3.7115e-01],\n",
      "          [ 1.0807e-01, -1.4320e-01, -2.3022e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.3148e-01,  4.4601e-02,  7.9814e-02],\n",
      "          [ 1.0205e-01,  9.8084e-04, -1.1192e-01],\n",
      "          [ 1.0700e-01, -6.1789e-01, -6.1021e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.0055e-01,  1.2426e-01,  5.1485e-01],\n",
      "          [-4.5518e-01,  1.7691e-01,  5.1974e-01],\n",
      "          [-3.3706e-01, -4.4452e-01,  1.6121e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.5042e-02, -6.5422e-02,  2.4305e-01],\n",
      "          [-6.8883e-02, -2.2141e-01, -2.4541e-01],\n",
      "          [ 1.8654e-01,  1.7461e-01, -1.5032e-01]]],\n",
      "\n",
      "\n",
      "        [[[-3.8417e-01, -4.0945e-01,  2.9062e-01],\n",
      "          [ 1.4172e-01, -4.9092e-02, -1.2941e-01],\n",
      "          [-9.4290e-02,  3.5503e-01,  2.6488e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.0811e-01, -1.3244e-01, -8.4805e-02],\n",
      "          [ 1.5427e-01, -3.3656e-01, -1.0982e-02],\n",
      "          [ 8.7097e-02, -1.1303e-01, -1.1005e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.5121e-01,  1.0358e+00,  9.7580e-01],\n",
      "          [-1.8328e-01, -1.1873e-01,  6.3513e-01],\n",
      "          [-6.3777e-01, -1.1419e+00, -9.6291e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.7871e-01, -1.1200e-01,  4.8450e-02],\n",
      "          [ 2.9454e-01,  3.6071e-01,  2.5750e-01],\n",
      "          [ 4.8986e-02, -1.1065e-01, -5.3049e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 7.8931e-02,  6.7395e-01,  1.4863e-01],\n",
      "          [-1.2926e+00, -1.9435e-01, -1.3943e-01],\n",
      "          [-6.2727e-01,  4.7592e-01,  5.6182e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.3693e-01, -1.3102e-01,  4.5867e-01],\n",
      "          [-3.8525e-01,  1.3541e-01,  1.0632e+00],\n",
      "          [-3.2986e-01, -6.0827e-01,  2.1713e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.4967e-01, -1.3680e-01,  2.3870e-01],\n",
      "          [-3.5533e-01, -2.8585e-02,  4.1144e-01],\n",
      "          [-2.7888e-01, -2.0389e-02,  1.6673e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 9.2599e-02,  1.6588e-01, -2.4033e-01],\n",
      "          [-1.5212e-01,  5.0944e-03,  3.9677e-02],\n",
      "          [-2.5850e-01, -3.7779e-01,  1.7715e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.3597e-01, -2.1984e-02, -1.6333e-01],\n",
      "          [ 2.9388e-01,  9.6048e-02,  1.8731e-01],\n",
      "          [ 2.7449e-01, -2.3249e-01, -3.1535e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.6388e-01,  4.8663e-01, -5.8464e-02],\n",
      "          [ 2.3695e-01,  3.4870e-01, -9.5603e-04],\n",
      "          [-2.4741e-01, -6.2717e-01, -2.6158e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.9849e-01, -1.2581e-01, -8.6264e-02],\n",
      "          [ 1.1554e-01, -1.5369e-01,  2.2823e-01],\n",
      "          [ 1.2488e-01,  7.1636e-03,  1.5352e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4075e-01,  6.0425e-02, -1.0947e-02],\n",
      "          [-2.2156e-01, -1.1271e-01, -1.5938e-01],\n",
      "          [ 2.3013e-01,  3.1021e-02, -4.6658e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.8046e-01, -7.1018e-02,  2.4731e-01],\n",
      "          [-1.8733e-01, -2.7600e-01, -1.3330e-02],\n",
      "          [-2.5240e-01,  1.6153e-02, -4.5678e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.0198e-02,  6.5962e-02, -2.0766e-04],\n",
      "          [-4.4319e-02,  2.3008e-01,  2.5692e-01],\n",
      "          [-1.5255e-01, -1.7526e-01,  2.4540e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 9.1421e-02, -4.1695e-03,  1.7002e-01],\n",
      "          [-1.4375e-02,  2.8820e-01,  1.5600e-02],\n",
      "          [ 7.7998e-02,  1.5069e-01,  3.2919e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.9644e-01,  5.6001e-02, -1.7972e-01],\n",
      "          [-1.6523e-01,  1.9692e-01,  5.8774e-02],\n",
      "          [-1.3325e-01, -6.3925e-02, -2.1743e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.1204e-01,  8.1611e-02, -1.9914e-01],\n",
      "          [-1.8279e-01,  2.4592e-01, -5.8468e-02],\n",
      "          [-8.9809e-02,  1.7497e-01,  3.7486e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.8960e-01, -8.2141e-02,  5.7989e-02],\n",
      "          [-8.0929e-02, -1.3311e-02, -1.8668e-02],\n",
      "          [-3.3335e-01,  2.1266e-01,  2.1026e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.2565e-01,  3.8706e-01,  3.4465e-01],\n",
      "          [ 1.9515e-01,  7.8632e-02, -1.3720e-01],\n",
      "          [-2.6129e-01, -3.2587e-01, -4.7236e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.1522e-01, -5.5935e-02, -3.0707e-01],\n",
      "          [-3.0700e-01, -3.7293e-01, -2.4064e-01],\n",
      "          [ 3.9959e-01,  4.0757e-01,  4.6456e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4052e-01,  2.8178e-01, -3.5357e-01],\n",
      "          [-3.9434e-02,  3.1620e-02, -1.3345e-01],\n",
      "          [-3.4683e-02,  8.7970e-02, -1.0078e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.0664e-01,  1.5880e-01,  2.7013e-01],\n",
      "          [ 2.2741e-01,  2.5585e-01, -1.5374e-01],\n",
      "          [ 2.0533e-01, -1.1787e-01, -2.5750e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.2378e-01,  6.4689e-02,  7.7781e-02],\n",
      "          [-9.0483e-02, -2.6053e-01,  5.9066e-03],\n",
      "          [-2.7900e-01, -4.4467e-01,  2.6320e-01]]],\n",
      "\n",
      "\n",
      "        [[[-4.0585e-02,  2.4633e-01, -1.6544e-02],\n",
      "          [-2.1861e-02, -2.2347e-01,  2.2467e-01],\n",
      "          [-3.0711e-01, -2.5758e-01,  2.0460e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.7052e-01, -2.7456e-01, -1.1835e-01],\n",
      "          [-1.5048e-01, -5.7149e-02, -5.7562e-02],\n",
      "          [-2.7354e-01,  3.1234e-02,  1.0387e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 2.7641e-01,  4.2500e-01, -4.0749e-01],\n",
      "          [-3.2437e-01,  4.8005e-01,  1.0388e-01],\n",
      "          [-6.3986e-01, -2.7250e-01,  2.5742e-01]]],\n",
      "\n",
      "\n",
      "        [[[-3.4245e-01, -3.3283e-01, -3.5749e-01],\n",
      "          [ 8.4245e-02,  2.3272e-01, -4.2593e-01],\n",
      "          [ 2.5638e-01,  4.0979e-01,  4.9989e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.3152e-02,  2.6178e-01,  4.0407e-02],\n",
      "          [ 1.4000e-01, -1.6857e-02,  1.6159e-01],\n",
      "          [-1.7364e-01,  1.8899e-01,  4.7883e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.4394e-01,  1.6318e-01, -1.0086e-01],\n",
      "          [ 7.1236e-02, -2.3114e-01, -4.6906e-01],\n",
      "          [ 5.1260e-02,  2.6142e-02, -4.4435e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 3.1558e-01, -2.0538e-01, -5.1663e-01],\n",
      "          [ 4.3505e-01, -3.2164e-01, -6.0771e-01],\n",
      "          [ 2.1580e-02,  5.3643e-01,  1.8489e-01]]],\n",
      "\n",
      "\n",
      "        [[[-2.1170e-01, -2.8707e-01,  1.6683e-01],\n",
      "          [ 2.6091e-01,  2.8500e-01, -2.0641e-01],\n",
      "          [-2.8383e-01, -1.8541e-01, -2.0844e-01]]],\n",
      "\n",
      "\n",
      "        [[[-4.3348e-02,  2.3376e-01, -1.1696e-01],\n",
      "          [-2.0028e-01, -2.2899e-01, -2.3737e-01],\n",
      "          [ 1.6123e-01,  2.3958e-01,  1.6756e-01]]],\n",
      "\n",
      "\n",
      "        [[[-1.9498e-01,  4.0057e-01,  4.6027e-02],\n",
      "          [-2.6705e-01, -3.1332e-01,  1.4508e-01],\n",
      "          [-2.5157e-01,  1.7226e-01,  3.1906e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.5015e-02, -3.4837e-01, -2.0182e-01],\n",
      "          [-3.0083e-01, -5.4971e-02,  2.9017e-02],\n",
      "          [ 1.6345e-01,  1.2768e-01,  3.5669e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 8.2716e-02, -2.1691e-01, -9.9717e-02],\n",
      "          [ 1.0809e-02,  8.0586e-02, -7.1646e-02],\n",
      "          [ 1.6716e-01,  1.7445e-01, -9.5954e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.2182e-01,  1.5137e-01, -2.8990e-01],\n",
      "          [ 1.2587e-01,  3.8439e-01, -4.6872e-01],\n",
      "          [ 1.1597e-01,  2.2444e-01, -3.3394e-01]]],\n",
      "\n",
      "\n",
      "        [[[-5.5121e-02, -4.5340e-01, -6.9320e-02],\n",
      "          [ 2.8424e-01,  3.3970e-01,  2.3406e-01],\n",
      "          [ 1.3791e-01,  4.7296e-02,  4.8991e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 9.5125e-02,  4.7383e-01, -1.2011e-01],\n",
      "          [-3.7121e-02, -3.2037e-01,  6.5945e-02],\n",
      "          [-1.5530e-01, -4.2789e-01, -3.4882e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 6.3564e-02, -5.4059e-02,  2.8461e-01],\n",
      "          [-1.8416e-01, -2.1628e-01,  5.3922e-03],\n",
      "          [ 2.6395e-01, -2.3658e-01,  4.8620e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.3820e-01, -2.0589e-01,  2.0249e-01],\n",
      "          [ 2.1332e-01,  2.2296e-01, -1.1399e-01],\n",
      "          [ 2.0728e-01, -1.7694e-01,  2.0738e-01]]]], device='cuda:0'), 'resnet18.bn1.weight': tensor([ 2.6175e-01,  5.6472e-01, -4.4634e-08,  4.5237e-01,  3.0045e-09,\n",
      "         4.0262e-01,  1.1437e+00,  1.1476e-07, -8.6196e-03,  1.3238e-06,\n",
      "         3.6922e-01,  3.1648e-01,  3.3138e-01,  9.4771e-06,  1.9162e-01,\n",
      "         2.2961e-01,  6.4130e-01,  3.4529e-01,  4.0989e-01,  8.6774e-01,\n",
      "         3.0206e-01,  4.2018e-01,  4.5689e-01,  7.7882e-02,  2.5888e-01,\n",
      "         2.1723e-01,  5.4840e-01,  3.8851e-01,  7.9425e-01,  7.1738e-01,\n",
      "         2.7759e-01,  3.5099e-01,  3.6421e-01,  4.3515e-01,  3.7215e-01,\n",
      "         2.8328e-01,  6.5348e-08, -1.3279e-01,  1.2870e-08,  5.4464e-02,\n",
      "         8.6449e-02,  2.2291e-01,  3.0476e-01,  5.1622e-01,  3.2535e-01,\n",
      "         3.8334e-01,  3.4212e-01,  2.9402e-01,  1.9230e-08,  7.6912e-01,\n",
      "         3.7442e-01,  2.6312e-01,  3.4995e-01,  5.2045e-01,  3.1922e-01,\n",
      "         1.4426e-01,  3.2175e-01,  2.5587e-01,  4.5837e-01,  3.7805e-01,\n",
      "         3.7557e-01,  3.7218e-01,  4.2206e-01,  2.1621e-01], device='cuda:0'), 'resnet18.bn1.bias': tensor([ 3.3433e-01, -2.7697e-01, -9.1993e-07, -5.8033e-01, -1.4460e-08,\n",
      "         5.3289e-02,  3.4301e-01, -3.7564e-07,  2.4233e-01, -6.9780e-06,\n",
      "         2.6177e-01,  2.1736e-01, -2.1725e-01, -3.0325e-05,  1.1048e-01,\n",
      "         7.0150e-02,  3.0534e-01, -4.6198e-01, -5.4911e-01,  2.3812e-01,\n",
      "         2.9632e-01,  4.2640e-01,  4.2879e-01,  2.0641e-01,  1.4261e-01,\n",
      "         1.5773e-01,  2.2580e-01,  1.1304e-01,  6.5822e-01, -2.1413e-01,\n",
      "         1.7091e-01,  3.0907e-01,  3.3291e-01,  4.3087e-01, -2.4528e-01,\n",
      "        -5.1245e-02, -2.1382e-07,  1.4987e-01, -4.2922e-08,  2.0621e-01,\n",
      "         1.6927e-01,  3.1603e-01,  4.2592e-01,  9.9402e-02,  1.8292e-01,\n",
      "         5.7016e-01,  5.9845e-01,  2.3579e-01, -7.5920e-08,  4.3129e-01,\n",
      "         2.4075e-01,  6.7176e-01,  1.9828e-01,  4.2138e-01, -3.5995e-01,\n",
      "         3.7311e-01,  1.4477e-01,  1.5774e-01, -3.9215e-01,  6.4445e-02,\n",
      "         5.3521e-01,  3.7399e-01, -3.5154e-01,  1.9511e-01], device='cuda:0'), 'resnet18.bn1.running_mean': tensor([-7.2475e-06, -1.5536e-04,  3.2286e-04,  3.5903e-04, -2.8928e-04,\n",
      "        -9.9986e-06,  5.5261e-05, -1.7029e-04, -8.2912e-04,  1.3373e-04,\n",
      "        -1.9546e-04, -3.8582e-04, -1.2266e-03,  3.0220e-04,  7.6889e-05,\n",
      "         1.1537e-04, -4.2700e-04,  1.0105e-03,  9.3997e-04,  2.1510e-04,\n",
      "         3.1265e-04, -9.2844e-04,  6.2362e-04, -1.7412e-04, -1.3094e-05,\n",
      "        -6.0709e-04, -5.9571e-05,  6.3410e-04, -4.5263e-04, -1.5386e-04,\n",
      "        -2.0159e-04, -7.4849e-04,  6.2256e-04,  2.0207e-04,  6.2865e-04,\n",
      "        -1.2787e-04, -1.0499e-03,  5.7188e-04,  1.1104e-03, -8.7437e-04,\n",
      "         1.7277e-04, -6.4983e-05,  3.1236e-04, -1.8198e-04, -1.7181e-04,\n",
      "         1.0857e-03, -7.3801e-04, -2.6442e-04, -8.6023e-04, -1.2311e-04,\n",
      "         4.9761e-05,  8.2000e-04, -6.8019e-04, -2.1588e-04, -9.1117e-04,\n",
      "        -3.7556e-05,  7.6256e-05, -3.9215e-04,  4.3479e-05,  1.7963e-04,\n",
      "         7.0599e-04, -1.0760e-03, -4.5508e-05,  4.3126e-04], device='cuda:0'), 'resnet18.bn1.running_var': tensor([2.5937e-08, 2.2212e-07, 5.3063e-08, 7.8269e-08, 4.9160e-08, 1.0223e-07,\n",
      "        3.0321e-07, 1.4496e-08, 3.0862e-07, 2.8338e-08, 1.0583e-07, 1.1216e-07,\n",
      "        6.5744e-07, 8.0102e-08, 3.6573e-08, 3.6970e-08, 1.8248e-07, 4.6931e-07,\n",
      "        3.8469e-07, 2.0073e-07, 1.0281e-07, 4.8328e-07, 3.1792e-07, 2.0442e-08,\n",
      "        4.5273e-08, 1.7128e-07, 7.4384e-07, 1.8546e-07, 3.2046e-07, 2.8661e-07,\n",
      "        9.0014e-08, 2.5351e-07, 2.1576e-07, 1.2271e-07, 1.7817e-07, 1.4240e-08,\n",
      "        4.9759e-07, 1.5780e-07, 5.3444e-07, 3.3857e-07, 1.7560e-08, 6.9321e-09,\n",
      "        1.8422e-07, 1.0759e-07, 2.8848e-08, 5.4520e-07, 2.6430e-07, 5.6763e-08,\n",
      "        3.2254e-07, 5.9030e-08, 1.3488e-07, 2.9568e-07, 2.9372e-07, 1.4487e-07,\n",
      "        3.7059e-07, 1.5490e-08, 4.9256e-08, 1.1368e-07, 1.4949e-08, 8.9685e-08,\n",
      "        2.4320e-07, 5.5729e-07, 1.0771e-08, 8.9601e-08], device='cuda:0'), 'resnet18.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer1.0.conv1.weight': tensor([[[[ 5.0513e-02, -8.3174e-02, -3.4369e-03],\n",
      "          [-6.5585e-02, -7.1529e-01, -1.7159e-01],\n",
      "          [ 6.0417e-02, -1.1182e-01, -8.1309e-03]],\n",
      "\n",
      "         [[ 2.0331e-03, -2.5267e-02,  4.5787e-03],\n",
      "          [ 8.3492e-02, -1.8689e-01, -1.1147e-02],\n",
      "          [ 4.8653e-02, -4.1004e-02,  1.0072e-01]],\n",
      "\n",
      "         [[-2.0627e-09, -3.4290e-08, -2.8769e-08],\n",
      "          [ 1.8989e-08,  7.2708e-09,  1.0949e-08],\n",
      "          [ 9.9372e-09,  7.6913e-09,  1.3521e-08]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.4594e-02,  1.2761e-02,  1.1323e-02],\n",
      "          [-1.2551e-01, -5.9639e-02, -3.1600e-02],\n",
      "          [-1.0618e-01,  2.8689e-02, -4.2583e-03]],\n",
      "\n",
      "         [[ 1.4782e-02,  1.2206e-02,  8.4566e-03],\n",
      "          [ 1.2485e-02, -5.8531e-04, -1.9265e-02],\n",
      "          [ 1.0831e-02,  3.0944e-02, -1.9478e-02]],\n",
      "\n",
      "         [[-1.0200e-02, -2.8958e-02, -2.3246e-02],\n",
      "          [ 6.2485e-02, -8.1613e-02,  2.9691e-02],\n",
      "          [-5.3233e-03,  7.1343e-02, -4.3013e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3528e-02,  3.5613e-02, -2.3629e-02],\n",
      "          [-3.4543e-02,  6.3336e-02,  3.4214e-02],\n",
      "          [-1.7050e-02,  5.6077e-02,  3.0390e-02]],\n",
      "\n",
      "         [[ 1.4440e-02,  1.3898e-02,  3.4686e-02],\n",
      "          [-5.9084e-02, -2.1960e-01, -3.2099e-02],\n",
      "          [ 1.4177e-02,  8.5821e-02,  4.5621e-02]],\n",
      "\n",
      "         [[-2.7424e-08,  3.0853e-08,  4.6970e-08],\n",
      "          [-2.3485e-08,  4.5010e-08,  4.7573e-08],\n",
      "          [-3.3578e-08, -9.8124e-09, -6.6153e-09]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1785e-01,  7.7755e-02,  1.3266e-02],\n",
      "          [-9.2915e-02,  1.7186e-01,  6.1889e-02],\n",
      "          [-1.1831e-01,  1.0187e-02, -5.4398e-02]],\n",
      "\n",
      "         [[-2.9043e-02,  1.4524e-03, -7.7241e-03],\n",
      "          [ 1.3581e-02, -5.0893e-02, -2.3963e-02],\n",
      "          [ 1.1458e-02, -2.6435e-02, -1.8901e-03]],\n",
      "\n",
      "         [[-1.5800e-02,  3.3849e-02, -1.5927e-02],\n",
      "          [ 4.8537e-02, -1.8846e-02, -1.5947e-02],\n",
      "          [ 6.1765e-03,  1.8547e-02,  1.0269e-01]]],\n",
      "\n",
      "\n",
      "        [[[-3.0362e-02,  6.4636e-03,  7.9435e-03],\n",
      "          [ 1.8709e-02, -1.5440e-03,  1.8482e-02],\n",
      "          [-1.3736e-02,  3.1122e-02,  8.9194e-03]],\n",
      "\n",
      "         [[-3.7108e-02,  1.5148e-02,  4.6697e-02],\n",
      "          [-5.4592e-02,  4.3835e-02,  1.1315e-01],\n",
      "          [-4.9933e-02, -5.3474e-03, -2.2152e-02]],\n",
      "\n",
      "         [[ 2.7034e-08,  4.6777e-08,  2.7793e-08],\n",
      "          [-1.4009e-08, -1.5790e-08, -1.7006e-09],\n",
      "          [-5.0937e-08, -3.9613e-08, -1.0822e-08]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7784e-02, -1.4717e-02, -3.1042e-02],\n",
      "          [ 1.9839e-02, -7.9384e-03, -7.2159e-03],\n",
      "          [-1.4217e-02, -4.3613e-02, -6.9323e-03]],\n",
      "\n",
      "         [[ 1.8826e-02,  1.9888e-03, -2.2549e-02],\n",
      "          [ 2.0335e-02, -6.9254e-03, -1.8148e-03],\n",
      "          [-4.9852e-03, -2.3527e-02, -1.2593e-02]],\n",
      "\n",
      "         [[-1.5168e-02,  1.9712e-02, -4.2805e-02],\n",
      "          [ 7.1031e-02, -2.9114e-02, -1.5144e-02],\n",
      "          [-1.8766e-02,  1.1984e-02, -9.3584e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.0201e-02, -5.1433e-03, -6.3218e-02],\n",
      "          [ 1.3506e-02, -2.2868e-02, -5.2591e-02],\n",
      "          [ 2.9402e-02,  1.5506e-02, -1.9469e-02]],\n",
      "\n",
      "         [[ 4.1031e-02, -1.9068e-02, -2.5883e-02],\n",
      "          [ 7.4194e-02,  1.8496e-02, -8.6897e-02],\n",
      "          [ 2.4338e-02,  4.9926e-02,  7.7347e-03]],\n",
      "\n",
      "         [[ 2.3286e-09,  2.4165e-08,  2.1569e-08],\n",
      "          [ 5.5823e-09,  3.5838e-08,  2.9357e-08],\n",
      "          [ 5.0924e-09,  1.1644e-08,  8.4297e-09]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5110e-02,  5.1940e-02, -1.4097e-02],\n",
      "          [-1.0527e-02,  4.7626e-02, -1.9324e-02],\n",
      "          [-1.4868e-02,  3.9620e-02, -1.2540e-02]],\n",
      "\n",
      "         [[ 9.8165e-04, -5.0217e-03, -5.9750e-03],\n",
      "          [ 5.2898e-03,  6.4010e-03, -1.0293e-02],\n",
      "          [-9.9981e-04,  4.5305e-03, -1.7342e-02]],\n",
      "\n",
      "         [[ 2.1926e-02,  4.0599e-02, -2.7364e-02],\n",
      "          [ 2.2546e-02,  3.8794e-02,  1.4355e-02],\n",
      "          [ 2.0470e-02,  5.3043e-02,  1.1151e-02]]],\n",
      "\n",
      "\n",
      "        [[[-3.3786e-02,  5.1938e-03, -1.4399e-02],\n",
      "          [-2.6295e-02,  2.4790e-02, -2.9889e-02],\n",
      "          [-1.5598e-02,  1.3031e-04, -1.7990e-02]],\n",
      "\n",
      "         [[-6.1171e-02,  4.9077e-03, -3.3945e-03],\n",
      "          [-2.0686e-02,  6.8879e-02,  3.2681e-02],\n",
      "          [-3.2672e-02, -7.4529e-03, -3.8328e-02]],\n",
      "\n",
      "         [[-4.3481e-08, -2.4637e-08, -1.7980e-08],\n",
      "          [-4.5755e-08, -2.4910e-08, -3.0640e-08],\n",
      "          [-2.8058e-08, -2.9764e-08, -3.7684e-08]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1609e-03,  3.0838e-02, -2.9847e-03],\n",
      "          [ 8.9691e-05,  3.7617e-02, -2.5425e-02],\n",
      "          [ 2.3807e-02,  2.9075e-02,  1.4738e-03]],\n",
      "\n",
      "         [[-5.7571e-03,  1.4363e-02,  1.9043e-02],\n",
      "          [-1.0734e-02,  1.9469e-02,  1.1046e-02],\n",
      "          [-7.8419e-03,  1.0443e-03, -4.5779e-03]],\n",
      "\n",
      "         [[-9.1272e-03,  5.9689e-02, -1.1483e-02],\n",
      "          [-4.6143e-02,  6.5137e-02, -2.8776e-02],\n",
      "          [-3.1127e-03, -5.1922e-02, -7.4842e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.4934e-02,  1.7279e-03, -3.1483e-02],\n",
      "          [ 3.5699e-02,  2.3675e-02, -1.5454e-02],\n",
      "          [ 3.3481e-02,  5.1507e-02, -1.6053e-02]],\n",
      "\n",
      "         [[-8.5702e-02,  6.8700e-02, -4.3202e-02],\n",
      "          [-9.3245e-02,  9.3825e-02, -1.2481e-01],\n",
      "          [-1.5641e-02,  4.4311e-02, -4.5629e-03]],\n",
      "\n",
      "         [[ 1.6170e-08,  4.6066e-09,  3.6504e-08],\n",
      "          [ 3.2745e-08,  2.2229e-08,  2.6548e-08],\n",
      "          [ 9.8224e-09, -4.9727e-09, -1.7484e-08]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.1638e-02, -7.7368e-02, -7.6531e-02],\n",
      "          [ 1.1872e-01, -4.5203e-02, -6.0171e-03],\n",
      "          [ 4.3094e-02, -8.8700e-03,  6.1317e-02]],\n",
      "\n",
      "         [[-2.1954e-03,  1.9243e-02, -1.7423e-02],\n",
      "          [-5.1907e-02,  3.8294e-02,  2.3438e-02],\n",
      "          [-1.5286e-02,  2.1504e-02,  2.1687e-02]],\n",
      "\n",
      "         [[ 4.5081e-02, -6.5953e-02, -3.2799e-03],\n",
      "          [-3.1244e-02,  8.3881e-02,  3.2576e-02],\n",
      "          [-1.1988e-02,  5.6173e-04, -7.4845e-02]]]], device='cuda:0'), 'resnet18.layer1.0.bn1.weight': tensor([0.2865, 0.3935, 0.7460, 0.4261, 0.4372, 0.2364, 0.4412, 0.3523, 0.2584,\n",
      "        0.4411, 0.2833, 0.4772, 0.3810, 0.4536, 0.3878, 0.3462, 0.1256, 0.2668,\n",
      "        0.3370, 0.5410, 0.5263, 0.6261, 0.3817, 0.3158, 0.5046, 0.2545, 0.2499,\n",
      "        0.2933, 0.6467, 0.4032, 0.1680, 0.3189, 0.4051, 0.2997, 0.4635, 0.3309,\n",
      "        0.4573, 0.5421, 0.4377, 0.4676, 0.6085, 0.2117, 0.5378, 0.2425, 0.2939,\n",
      "        0.3563, 0.5362, 0.3898, 0.6321, 0.4680, 0.4577, 0.3481, 0.3317, 0.4572,\n",
      "        0.3362, 0.6273, 0.2653, 0.3280, 0.3045, 0.6680, 0.1537, 0.3656, 0.2095,\n",
      "        0.5204], device='cuda:0'), 'resnet18.layer1.0.bn1.bias': tensor([ 0.3740,  0.3942,  0.1974,  0.1772, -0.2962,  0.2793,  0.2127,  0.2369,\n",
      "        -0.0096,  0.4542,  0.2179, -0.1622,  0.1129,  0.4322,  0.1300,  0.1777,\n",
      "         0.0876, -0.1827, -0.0470,  0.3581,  0.3044, -0.5394, -0.4951, -0.2800,\n",
      "        -0.5656, -0.0096, -0.0028, -0.0820,  0.1880,  0.0867, -0.4916,  0.0611,\n",
      "        -0.5454, -0.0984, -0.3408, -0.2909,  0.5066,  0.3073, -0.2383, -0.2700,\n",
      "         0.1219,  0.2335,  0.2745, -0.1792, -0.0624,  0.2872, -0.2911,  0.0585,\n",
      "        -0.3657,  0.5321,  0.1692, -0.2250, -0.1561, -0.2223,  0.1901, -0.5654,\n",
      "        -0.1402, -0.2666,  0.2814, -0.6599,  0.2410, -0.2380, -0.1993,  0.2248],\n",
      "       device='cuda:0'), 'resnet18.layer1.0.bn1.running_mean': tensor([-0.4352,  0.2897, -0.2644, -0.4919, -0.4319, -0.2783,  0.3343,  0.7660,\n",
      "        -0.3918, -0.8149,  0.6451, -1.5133,  0.4400, -1.4050, -0.3630, -1.0336,\n",
      "         0.1158, -1.3102, -1.0011, -0.5562,  0.0636, -1.1887,  0.5491, -0.7265,\n",
      "        -1.8157,  0.9143,  0.4773,  0.5311,  0.9373, -0.4824, -0.5413,  0.4209,\n",
      "        -2.2436, -2.6356, -1.2777, -0.7947,  0.1186,  0.8142, -2.1938, -0.3788,\n",
      "         0.5970, -0.8292,  0.0457,  0.2138, -0.7480, -0.2517, -0.6956, -1.0554,\n",
      "        -1.2630, -0.2174, -0.2092, -1.6494,  0.3339, -1.2923, -1.3370,  0.3671,\n",
      "        -1.2862, -0.6368, -0.0076, -0.8196, -0.2028, -1.0541,  0.4567,  0.3977],\n",
      "       device='cuda:0'), 'resnet18.layer1.0.bn1.running_var': tensor([0.0295, 0.0342, 0.1669, 0.0505, 0.0202, 0.0450, 0.0111, 0.0762, 0.0384,\n",
      "        0.1210, 0.0152, 0.0247, 0.0158, 0.1231, 0.0667, 0.0480, 0.0115, 0.0189,\n",
      "        0.0604, 0.0045, 0.0923, 0.1004, 0.0281, 0.0326, 0.1647, 0.0512, 0.0478,\n",
      "        0.0865, 0.0674, 0.1162, 0.0052, 0.0178, 0.1410, 0.0185, 0.0306, 0.0404,\n",
      "        0.0285, 0.0787, 0.0290, 0.0535, 0.1212, 0.0131, 0.0283, 0.0170, 0.0523,\n",
      "        0.0075, 0.0760, 0.0748, 0.0950, 0.0277, 0.0635, 0.0695, 0.0355, 0.0913,\n",
      "        0.0151, 0.0211, 0.0302, 0.0414, 0.0096, 0.1005, 0.0048, 0.0108, 0.0083,\n",
      "        0.0162], device='cuda:0'), 'resnet18.layer1.0.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer1.0.conv2.weight': tensor([[[[ 4.0925e-02, -1.0246e-01,  7.7206e-03],\n",
      "          [-5.7061e-02, -3.0090e-01, -6.2304e-02],\n",
      "          [-3.2561e-02, -1.7533e-01, -1.6361e-02]],\n",
      "\n",
      "         [[ 1.6457e-03,  4.2676e-02, -4.3247e-03],\n",
      "          [ 1.0663e-02,  4.4424e-02, -4.2355e-02],\n",
      "          [-4.3715e-02,  7.4896e-03, -1.8477e-02]],\n",
      "\n",
      "         [[ 7.2928e-03,  2.6622e-02, -2.2083e-02],\n",
      "          [ 3.3722e-03, -2.5891e-02, -6.9686e-02],\n",
      "          [ 1.2263e-02, -4.6587e-03, -6.1977e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2639e-03, -3.9812e-03,  1.1296e-02],\n",
      "          [-5.4195e-02, -5.2405e-02, -5.8959e-02],\n",
      "          [-1.4244e-02, -1.3448e-03,  8.2290e-03]],\n",
      "\n",
      "         [[-1.1471e-03,  3.8786e-02, -8.7995e-03],\n",
      "          [ 3.3413e-03,  1.6444e-02, -7.3854e-03],\n",
      "          [-1.4265e-02, -1.1512e-03, -3.5232e-03]],\n",
      "\n",
      "         [[ 5.8453e-03,  2.6118e-02, -1.7592e-02],\n",
      "          [-1.7943e-02,  9.4761e-02,  5.1893e-02],\n",
      "          [ 8.4952e-03,  9.9016e-02,  3.6609e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.2772e-02,  1.1582e-02, -3.2796e-03],\n",
      "          [ 1.1143e-02, -3.3776e-02,  2.8324e-02],\n",
      "          [-1.9397e-02,  3.7773e-02,  4.0543e-02]],\n",
      "\n",
      "         [[ 5.0129e-02,  5.3765e-02,  2.9513e-02],\n",
      "          [ 1.4686e-02, -5.2511e-02, -6.1112e-02],\n",
      "          [-5.2884e-02, -7.0833e-02, -7.2209e-02]],\n",
      "\n",
      "         [[ 8.2705e-02,  9.2795e-02, -7.9556e-02],\n",
      "          [-2.4137e-02, -2.6893e-02,  1.9937e-02],\n",
      "          [-8.5755e-02, -1.0246e-01,  1.0715e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.6269e-03,  1.8447e-02,  1.0601e-02],\n",
      "          [ 3.4773e-05,  4.6073e-03,  9.4806e-04],\n",
      "          [ 1.1899e-03, -2.8370e-03, -2.8005e-03]],\n",
      "\n",
      "         [[-2.1237e-02, -2.3997e-02,  3.6129e-02],\n",
      "          [-1.7211e-02, -1.3790e-02,  2.6996e-02],\n",
      "          [ 1.2578e-02,  4.2437e-03,  7.3333e-03]],\n",
      "\n",
      "         [[ 9.6504e-03,  2.0461e-02,  7.8730e-02],\n",
      "          [-1.8518e-02,  2.4909e-02,  2.9758e-02],\n",
      "          [-9.5834e-03, -2.3788e-02, -5.0976e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.6202e-02,  1.1015e-02,  2.7760e-02],\n",
      "          [-1.1605e-02,  3.1259e-02,  3.2075e-02],\n",
      "          [ 2.0042e-02,  7.7475e-02,  4.6230e-02]],\n",
      "\n",
      "         [[-2.4306e-03,  1.4230e-02,  3.1782e-02],\n",
      "          [ 1.3987e-02,  4.6093e-02,  6.5907e-02],\n",
      "          [-3.3470e-02, -1.7266e-02,  5.1601e-02]],\n",
      "\n",
      "         [[-6.4676e-02, -3.3675e-02, -3.2951e-02],\n",
      "          [ 1.7807e-02,  5.0117e-02,  3.6780e-02],\n",
      "          [-1.4385e-02, -1.4598e-02, -3.1716e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0355e-02,  1.4354e-02,  2.7303e-02],\n",
      "          [ 3.1668e-02,  6.3482e-02,  9.0158e-02],\n",
      "          [ 3.9715e-03,  4.5160e-02,  6.2787e-02]],\n",
      "\n",
      "         [[ 1.6872e-02,  4.8153e-02,  8.4897e-02],\n",
      "          [ 1.9859e-03,  2.0150e-02,  6.2848e-02],\n",
      "          [ 8.4214e-03,  9.9233e-03,  3.5623e-02]],\n",
      "\n",
      "         [[-3.9500e-02,  1.2176e-02,  4.7812e-02],\n",
      "          [-2.7131e-02, -1.1718e-02,  4.6387e-02],\n",
      "          [-1.6462e-02, -1.3040e-02,  5.6549e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.2174e-02,  1.2778e-03, -3.9992e-02],\n",
      "          [ 4.5766e-02,  1.2107e-02, -4.5283e-02],\n",
      "          [ 5.8906e-02,  1.9433e-02, -1.2450e-02]],\n",
      "\n",
      "         [[-3.4348e-02,  1.1596e-02, -6.6618e-02],\n",
      "          [ 4.7122e-02,  1.4826e-01, -6.5979e-03],\n",
      "          [ 8.4095e-02,  1.4717e-01,  1.2956e-02]],\n",
      "\n",
      "         [[ 5.8750e-02,  4.9772e-02,  4.2456e-02],\n",
      "          [ 1.9577e-02,  6.2309e-02,  7.2991e-02],\n",
      "          [ 2.5124e-02,  4.2195e-02,  6.2236e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1398e-02, -1.0610e-02,  2.8346e-02],\n",
      "          [-5.0067e-03,  7.2199e-05,  5.5733e-02],\n",
      "          [-2.2229e-02, -2.7282e-02,  3.1267e-02]],\n",
      "\n",
      "         [[ 1.5054e-02, -1.4489e-02,  1.5415e-02],\n",
      "          [-8.6518e-04, -3.2365e-02, -1.9588e-04],\n",
      "          [ 2.9286e-03, -3.7581e-02, -1.1299e-02]],\n",
      "\n",
      "         [[ 4.7398e-02, -1.1807e-02,  9.6033e-03],\n",
      "          [ 4.3382e-02, -3.7772e-02,  5.0774e-02],\n",
      "          [ 2.5763e-02, -1.1797e-02,  6.5542e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.4067e-02,  1.6075e-02,  9.1276e-03],\n",
      "          [-1.1501e-01, -4.6437e-04,  7.2640e-02],\n",
      "          [-1.2130e-01, -3.2851e-02,  6.1154e-03]],\n",
      "\n",
      "         [[ 1.3136e-02,  1.8179e-02,  1.7912e-02],\n",
      "          [ 5.7417e-02, -1.3729e-02, -6.7301e-02],\n",
      "          [-1.0167e-02, -5.8961e-03,  2.9839e-02]],\n",
      "\n",
      "         [[-6.6401e-02, -1.0937e-01, -4.3818e-02],\n",
      "          [ 8.2416e-03, -5.7758e-02, -5.0213e-02],\n",
      "          [-3.5833e-02, -8.2072e-02, -8.9032e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5743e-02, -3.3479e-04,  2.6911e-02],\n",
      "          [ 7.3965e-03,  5.6924e-03,  1.5670e-02],\n",
      "          [ 1.0028e-02,  1.4937e-02,  4.5460e-03]],\n",
      "\n",
      "         [[ 2.2098e-02,  5.2608e-02, -8.8984e-02],\n",
      "          [ 4.7875e-03,  2.1243e-02, -7.0393e-02],\n",
      "          [-6.5068e-03,  4.3006e-02, -6.4426e-02]],\n",
      "\n",
      "         [[ 7.8113e-02, -6.3668e-02, -9.2206e-02],\n",
      "          [ 9.6515e-02, -2.4519e-02, -1.1886e-01],\n",
      "          [ 8.9678e-02,  2.9406e-02, -1.1213e-02]]],\n",
      "\n",
      "\n",
      "        [[[-1.3217e-01,  2.4720e-02, -4.8364e-03],\n",
      "          [ 1.1423e-01,  5.9108e-02,  5.3321e-02],\n",
      "          [ 3.5277e-02, -1.1385e-01,  5.5394e-02]],\n",
      "\n",
      "         [[ 4.5130e-02, -4.8790e-02, -2.6983e-02],\n",
      "          [ 5.6913e-03,  3.2070e-02,  7.4223e-03],\n",
      "          [-6.5144e-02,  7.1899e-02, -8.2760e-02]],\n",
      "\n",
      "         [[-1.0908e-01, -4.1588e-02, -6.7794e-02],\n",
      "          [ 6.2627e-03, -2.2158e-01, -5.5243e-02],\n",
      "          [-3.7878e-02,  9.9122e-02,  3.3421e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.2159e-02, -1.9709e-03, -1.6745e-02],\n",
      "          [ 2.2486e-02,  4.0393e-02, -1.0646e-01],\n",
      "          [ 7.6618e-03,  4.8291e-02, -8.2141e-02]],\n",
      "\n",
      "         [[-5.7680e-03,  1.4129e-02, -2.8599e-02],\n",
      "          [-8.3834e-02, -5.7166e-02, -2.2139e-02],\n",
      "          [-6.0561e-02, -1.2142e-01, -3.6580e-02]],\n",
      "\n",
      "         [[-8.8158e-02, -2.2428e-02, -5.1938e-02],\n",
      "          [-8.4910e-02,  2.2726e-01, -6.4478e-02],\n",
      "          [-2.1158e-02, -2.7157e-02, -5.8492e-02]]]], device='cuda:0'), 'resnet18.layer1.0.bn2.weight': tensor([0.1414, 0.1881, 0.5275, 0.6797, 0.2613, 0.3885, 0.2929, 0.3676, 0.3291,\n",
      "        0.5273, 0.1816, 0.8261, 0.6851, 0.4155, 0.5156, 0.2462, 0.4930, 0.6712,\n",
      "        0.2372, 0.5569, 0.5946, 0.2414, 0.3236, 0.2093, 0.1186, 0.2190, 0.4020,\n",
      "        0.2514, 0.5283, 0.5722, 0.4983, 0.3918, 0.1696, 0.4016, 0.1434, 0.3694,\n",
      "        0.5031, 0.4835, 0.3321, 0.0897, 0.3541, 0.1343, 0.0777, 0.3975, 0.1208,\n",
      "        0.5315, 0.2842, 0.1685, 0.6096, 0.5008, 0.6120, 0.1637, 0.2290, 0.1216,\n",
      "        0.5394, 0.1088, 0.5255, 0.5728, 0.4948, 0.2897, 0.1041, 0.2224, 0.5129,\n",
      "        0.5699], device='cuda:0'), 'resnet18.layer1.0.bn2.bias': tensor([ 0.4000,  0.0217, -0.4159, -0.0060,  0.3603, -0.2364,  0.0624, -0.0136,\n",
      "         0.4291,  0.0851, -0.0249,  0.2020, -0.1097, -0.4024,  0.0288, -0.1704,\n",
      "         0.2746,  0.0949, -0.3254, -0.3311, -0.2403, -0.0154, -0.1027, -0.0817,\n",
      "        -0.0831,  0.1291, -0.0317, -0.2688, -0.4869, -0.0548,  0.2254,  0.0574,\n",
      "        -0.1138, -0.1229,  0.1800, -0.0975, -0.3311, -0.1188,  0.2884,  0.2447,\n",
      "         0.1856,  0.2766,  0.1936, -0.0787, -0.0634, -0.2820,  0.8255,  0.1029,\n",
      "         0.1496, -0.0160,  0.3200,  0.2072, -0.1439,  0.0577, -0.0043,  0.2480,\n",
      "        -0.1772, -0.2155,  0.0877,  0.0863,  0.0244,  0.2364, -0.1400,  0.2151],\n",
      "       device='cuda:0'), 'resnet18.layer1.0.bn2.running_mean': tensor([ 0.3346, -0.3955,  2.7885, -0.8649, -0.7029,  0.0051, -0.2445, -0.2631,\n",
      "        -0.7202, -0.1373, -0.4146, -0.5125, -0.7798,  1.3470, -0.4733,  0.3323,\n",
      "        -0.3278, -0.3090, -0.1010, -0.8464, -0.0384, -0.0396, -0.4004,  0.0953,\n",
      "         0.1768, -0.5913, -0.9251,  0.0953, -1.9640, -1.3978, -0.2301, -0.4560,\n",
      "        -0.7324, -1.2561,  0.2842,  0.1930, -0.4046, -1.0783, -0.8973, -0.1355,\n",
      "        -0.5204,  0.6654,  0.0607, -0.7063,  0.4506, -1.0867, -1.2442,  0.3805,\n",
      "        -0.9739, -0.8010, -0.4562, -0.2800, -0.7643,  0.2987, -1.0385,  0.1539,\n",
      "        -0.7967,  0.0309, -0.3739,  0.2471,  0.1007,  0.2988, -0.9427, -0.6061],\n",
      "       device='cuda:0'), 'resnet18.layer1.0.bn2.running_var': tensor([0.3012, 0.2314, 0.8799, 2.0457, 0.4653, 0.1965, 0.7301, 0.3069, 0.3487,\n",
      "        0.8231, 0.6351, 0.5261, 0.3317, 0.3538, 1.8124, 0.2113, 2.1440, 1.4817,\n",
      "        0.0615, 1.3699, 1.4772, 0.7367, 1.6508, 0.2937, 0.1269, 0.5461, 1.7914,\n",
      "        0.3555, 1.4228, 1.5377, 0.3562, 2.6232, 0.3050, 0.9612, 0.2821, 0.5445,\n",
      "        0.1939, 1.7286, 0.5207, 0.1281, 0.2426, 0.3717, 0.5890, 0.4464, 0.4858,\n",
      "        1.2123, 0.7714, 0.4297, 1.9899, 0.8146, 0.4508, 0.6170, 0.4384, 0.3466,\n",
      "        0.6657, 0.2152, 0.6644, 1.8008, 1.2441, 0.3475, 0.4001, 0.9326, 0.7305,\n",
      "        0.3504], device='cuda:0'), 'resnet18.layer1.0.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer1.1.conv1.weight': tensor([[[[ 9.0952e-03, -5.8233e-03,  1.3536e-03],\n",
      "          [-4.1504e-02, -2.6961e-02, -4.9766e-02],\n",
      "          [ 4.7188e-02,  7.4830e-02,  2.6057e-02]],\n",
      "\n",
      "         [[-1.0593e-02, -1.8530e-02, -1.5019e-04],\n",
      "          [-5.7371e-02, -2.8795e-02, -3.4234e-02],\n",
      "          [-8.9338e-03,  4.4187e-02,  6.0217e-02]],\n",
      "\n",
      "         [[ 5.7362e-02,  8.1012e-03, -3.3888e-03],\n",
      "          [-2.5640e-02, -6.3278e-02, -5.6870e-02],\n",
      "          [-3.5444e-02, -5.8163e-02,  4.7451e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.3790e-02,  1.5150e-01,  6.4080e-02],\n",
      "          [ 2.3466e-02,  8.7168e-02,  3.4634e-02],\n",
      "          [-1.4981e-02, -2.4175e-02,  1.0803e-02]],\n",
      "\n",
      "         [[ 7.4381e-02, -2.3793e-02, -7.7816e-02],\n",
      "          [ 6.4200e-02, -7.8276e-03, -9.3794e-02],\n",
      "          [-1.4890e-02,  1.9768e-02, -5.5577e-02]],\n",
      "\n",
      "         [[-3.0993e-02,  3.1071e-02, -2.9608e-04],\n",
      "          [ 1.3064e-01,  4.7840e-02, -9.9104e-03],\n",
      "          [ 9.8720e-02, -6.7275e-02,  1.9153e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.0109e-02, -1.8938e-02,  3.3172e-02],\n",
      "          [-4.7937e-02, -5.4737e-03, -8.4931e-03],\n",
      "          [-1.2601e-02, -1.5746e-02,  7.5025e-03]],\n",
      "\n",
      "         [[ 8.1625e-03, -6.3911e-03,  6.3830e-02],\n",
      "          [-2.3010e-02, -5.6411e-02, -5.1564e-03],\n",
      "          [ 4.4489e-02, -1.6004e-02,  2.3458e-02]],\n",
      "\n",
      "         [[-5.6216e-02, -7.5106e-02, -7.2827e-02],\n",
      "          [ 3.0493e-02,  2.2212e-02,  1.8409e-02],\n",
      "          [-9.6346e-03,  1.5356e-02, -3.4949e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6125e-02,  2.2382e-02,  6.1014e-02],\n",
      "          [-1.5119e-02, -7.6293e-03,  6.7743e-03],\n",
      "          [-5.1529e-03, -2.3153e-02,  1.8244e-02]],\n",
      "\n",
      "         [[-4.2901e-02, -2.7923e-02,  5.8553e-02],\n",
      "          [-5.4096e-02, -5.9028e-02,  1.4195e-01],\n",
      "          [-2.6083e-02, -2.1633e-02, -1.7521e-02]],\n",
      "\n",
      "         [[-1.4767e-01,  8.9687e-02,  1.6726e-02],\n",
      "          [-8.0332e-02,  3.9315e-01, -5.6776e-02],\n",
      "          [-1.4620e-02, -2.8179e-02, -1.2180e-01]]],\n",
      "\n",
      "\n",
      "        [[[ 1.2220e-01,  7.0507e-02,  1.3276e-02],\n",
      "          [ 5.7799e-02, -1.7053e-02, -5.2663e-02],\n",
      "          [-4.2113e-03, -3.9086e-02, -5.7808e-02]],\n",
      "\n",
      "         [[ 5.8521e-02,  5.1399e-02,  3.2282e-02],\n",
      "          [-1.8583e-02,  4.1798e-03, -4.8626e-02],\n",
      "          [ 8.2978e-03, -5.7909e-02,  3.0513e-03]],\n",
      "\n",
      "         [[ 5.6216e-02,  8.6421e-02,  7.4854e-02],\n",
      "          [ 5.9840e-02,  1.8051e-02, -1.9961e-02],\n",
      "          [ 5.4141e-02,  3.0012e-03, -4.8896e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3426e-01, -1.2476e-01,  5.2487e-02],\n",
      "          [-1.1630e-01, -1.0430e-01,  7.6160e-02],\n",
      "          [-4.2023e-02,  1.4848e-02,  6.4318e-02]],\n",
      "\n",
      "         [[ 6.5330e-02,  5.0176e-02, -6.5818e-02],\n",
      "          [ 8.7787e-02,  4.8243e-02, -7.8750e-02],\n",
      "          [ 8.2186e-02,  1.2306e-02, -1.7144e-02]],\n",
      "\n",
      "         [[ 1.2461e-01,  4.3462e-02,  5.6397e-02],\n",
      "          [ 4.4634e-02,  5.8872e-02,  3.0680e-02],\n",
      "          [-1.2028e-03, -5.1268e-02, -5.5489e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 4.4611e-02,  7.2108e-02,  8.5147e-03],\n",
      "          [ 8.1421e-03, -2.1565e-02, -4.1547e-02],\n",
      "          [ 2.5840e-02, -1.3793e-02, -2.5712e-02]],\n",
      "\n",
      "         [[-1.1938e-02,  1.4003e-03, -2.0765e-02],\n",
      "          [ 9.6775e-04,  2.4111e-02,  6.2509e-03],\n",
      "          [-2.1682e-02, -4.2594e-02, -3.1445e-02]],\n",
      "\n",
      "         [[ 9.5078e-03,  5.8615e-03, -2.7407e-02],\n",
      "          [-6.3719e-02, -6.4221e-02, -7.2742e-02],\n",
      "          [-1.0416e-01, -1.2683e-01, -1.3831e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.1567e-02,  7.1339e-02,  2.5936e-02],\n",
      "          [-1.6561e-02, -6.3524e-03, -3.5747e-02],\n",
      "          [ 2.5910e-02,  3.7127e-02,  6.6571e-03]],\n",
      "\n",
      "         [[ 2.9113e-02,  5.8341e-02,  1.1584e-01],\n",
      "          [ 9.1100e-03, -2.9834e-02, -4.7929e-02],\n",
      "          [-2.4529e-02, -6.5790e-02, -6.8748e-02]],\n",
      "\n",
      "         [[-1.6268e-02, -6.9313e-02, -4.3463e-02],\n",
      "          [-2.7386e-02, -1.5266e-01, -9.0092e-02],\n",
      "          [ 4.5037e-02,  9.3001e-02,  9.4345e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 3.7963e-02, -2.3897e-02, -1.2659e-02],\n",
      "          [ 3.7539e-02, -4.9084e-03, -1.9297e-02],\n",
      "          [-1.2231e-02, -1.3433e-02,  1.9434e-02]],\n",
      "\n",
      "         [[ 2.0255e-03, -9.7259e-03, -9.3078e-03],\n",
      "          [ 1.8895e-03, -1.0751e-02,  2.2978e-02],\n",
      "          [ 8.2647e-02,  1.4567e-02,  2.0619e-02]],\n",
      "\n",
      "         [[-6.2378e-02, -2.9050e-02, -3.8815e-02],\n",
      "          [-2.4929e-02, -2.9477e-02, -5.8532e-03],\n",
      "          [ 4.1849e-02,  2.1541e-02,  3.5189e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.1182e-02, -9.3101e-03, -1.0547e-02],\n",
      "          [ 1.7805e-02, -2.0161e-02, -4.1667e-02],\n",
      "          [ 4.2198e-02,  5.0484e-03, -1.5052e-02]],\n",
      "\n",
      "         [[-6.2417e-02, -7.9884e-02, -7.3657e-02],\n",
      "          [-6.7413e-02, -5.5658e-02,  3.4800e-02],\n",
      "          [-2.2071e-02, -1.7273e-02, -8.6811e-03]],\n",
      "\n",
      "         [[ 1.6025e-01, -6.1452e-03,  1.1692e-01],\n",
      "          [ 5.0393e-02, -9.6692e-02,  6.4225e-02],\n",
      "          [ 1.2428e-01, -5.5405e-02,  1.7445e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3705e-02, -2.0811e-02, -5.9589e-02],\n",
      "          [-8.2051e-03, -4.3926e-02, -5.1902e-02],\n",
      "          [ 3.5967e-02,  1.8475e-02, -2.5764e-02]],\n",
      "\n",
      "         [[-4.3722e-02, -4.2326e-02, -5.4909e-03],\n",
      "          [-1.0744e-01, -1.3990e-01, -6.1458e-02],\n",
      "          [-3.6172e-02, -5.4933e-02, -2.0495e-02]],\n",
      "\n",
      "         [[ 1.4733e-02,  2.6569e-02, -4.5330e-03],\n",
      "          [-2.9128e-02, -4.5511e-02, -5.8907e-02],\n",
      "          [-7.4911e-02, -9.1675e-02, -6.7567e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.2951e-02,  8.9986e-02,  4.4860e-02],\n",
      "          [ 5.5721e-02,  1.4018e-01,  5.4568e-02],\n",
      "          [ 1.3619e-03,  3.4916e-02, -3.1591e-02]],\n",
      "\n",
      "         [[ 1.2078e-01, -8.1789e-02, -2.2946e-02],\n",
      "          [ 7.0665e-02, -8.5735e-02, -6.9821e-02],\n",
      "          [ 1.7269e-02,  9.3598e-05,  3.6399e-02]],\n",
      "\n",
      "         [[-1.4602e-01, -3.5599e-02,  4.1738e-02],\n",
      "          [-5.6815e-02, -6.3077e-02, -7.3851e-02],\n",
      "          [ 6.9959e-03,  4.1583e-02, -1.1450e-03]]]], device='cuda:0'), 'resnet18.layer1.1.bn1.weight': tensor([0.5981, 0.4914, 0.6113, 0.4304, 0.3090, 0.4512, 0.4770, 0.3917, 0.4058,\n",
      "        0.5729, 0.2616, 0.1906, 0.7061, 0.1797, 0.2496, 0.6114, 0.3309, 0.2954,\n",
      "        0.1606, 0.5821, 0.3621, 0.3098, 0.4048, 0.2882, 0.2968, 0.2738, 0.3486,\n",
      "        0.3598, 0.2901, 0.4574, 0.3020, 0.3403, 0.4540, 0.1891, 0.3976, 0.3366,\n",
      "        0.3869, 0.3443, 0.1903, 0.3178, 0.5120, 0.3760, 0.2628, 0.3927, 0.3842,\n",
      "        0.3568, 0.2960, 0.2918, 0.6441, 0.3669, 0.4872, 0.4031, 0.3901, 0.3513,\n",
      "        0.3884, 0.3247, 0.4090, 0.3413, 0.4205, 0.3664, 0.4400, 0.3034, 0.5391,\n",
      "        0.4270], device='cuda:0'), 'resnet18.layer1.1.bn1.bias': tensor([-0.1040, -0.5648, -0.1874, -0.4834, -0.1699,  0.1087, -0.0155,  0.0279,\n",
      "        -0.0378, -0.1724,  0.2758,  0.0970, -0.6159,  0.1006,  0.0425, -0.6328,\n",
      "         0.0132, -0.1604,  0.0451, -0.2912, -0.3769,  0.0211, -0.4186,  0.0014,\n",
      "        -0.2276,  0.1958, -0.3035,  0.0689, -0.3373,  0.0509, -0.2638, -0.1919,\n",
      "         0.0427, -0.2149, -0.2874, -0.2517, -0.0101, -0.1752, -0.0416, -0.0325,\n",
      "        -0.5769, -0.2623, -0.1114, -0.0737,  0.1206,  0.0164, -0.2704,  0.0899,\n",
      "        -0.7009, -0.0220, -0.0796,  0.0234, -0.0700, -0.4570,  0.0829,  0.0028,\n",
      "        -0.1491, -0.1561,  0.0678, -0.2319, -0.1859,  0.0876, -0.4125, -0.0077],\n",
      "       device='cuda:0'), 'resnet18.layer1.1.bn1.running_mean': tensor([-0.1862,  0.2673, -0.1237, -0.5754, -0.9252, -1.7470, -0.5011, -0.5665,\n",
      "        -1.5671, -0.4805, -0.0303, -0.2176, -1.1185, -0.1609,  0.2230, -0.1427,\n",
      "        -0.1321, -0.6828, -1.4150, -0.4181,  0.6099, -0.5785, -0.5401,  0.3443,\n",
      "         0.0963, -1.8829, -1.3620, -0.6326, -0.4242, -0.3903,  0.9813, -2.3103,\n",
      "        -0.5181, -0.1764, -0.9462, -1.6877, -0.2188,  0.0677, -1.1196, -0.8154,\n",
      "         0.5362, -0.0839,  0.5809, -1.4758, -0.8473, -0.1109, -0.8279,  0.3819,\n",
      "        -0.7980, -0.7046, -0.0778, -1.7363, -0.0948, -0.7373, -0.9723,  0.6341,\n",
      "        -0.4457, -0.8184,  0.8066, -1.9759, -0.4515,  0.9773,  0.1201, -0.7001],\n",
      "       device='cuda:0'), 'resnet18.layer1.1.bn1.running_var': tensor([1.4688, 0.3132, 1.6005, 0.3601, 0.2358, 1.2950, 0.9829, 1.5309, 0.8595,\n",
      "        1.5522, 0.3499, 0.5224, 0.3526, 0.5284, 0.8149, 0.4773, 0.6862, 0.5437,\n",
      "        0.5376, 0.7083, 0.1688, 0.2816, 0.4545, 0.2659, 0.2138, 0.4590, 0.2650,\n",
      "        0.6244, 0.1966, 2.1411, 0.2157, 0.3766, 0.7346, 0.1322, 0.4739, 0.2556,\n",
      "        1.2437, 0.5154, 0.2641, 0.7698, 0.2381, 0.2341, 0.2701, 1.7847, 0.5792,\n",
      "        0.3933, 0.3338, 0.7373, 0.3436, 0.9353, 1.7446, 0.9862, 1.2024, 0.3475,\n",
      "        1.0041, 0.7825, 0.5326, 0.4743, 1.3108, 0.4016, 0.5893, 0.6528, 0.3382,\n",
      "        1.0023], device='cuda:0'), 'resnet18.layer1.1.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer1.1.conv2.weight': tensor([[[[-2.7040e-02, -1.6714e-02,  9.4580e-03],\n",
      "          [-4.0776e-02, -2.1682e-04, -9.1623e-03],\n",
      "          [-3.0176e-02,  2.6168e-02,  2.2794e-02]],\n",
      "\n",
      "         [[ 6.1050e-02,  2.7391e-02,  2.2712e-02],\n",
      "          [ 2.7306e-02, -2.4472e-02, -1.2602e-02],\n",
      "          [ 4.9212e-02,  1.6550e-02,  1.3463e-02]],\n",
      "\n",
      "         [[ 1.2545e-02, -1.9533e-02, -2.2806e-02],\n",
      "          [-6.8396e-03,  2.7354e-02,  1.9129e-02],\n",
      "          [ 1.6786e-02,  3.0517e-02,  5.4130e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.2009e-02,  2.9164e-02,  3.4176e-02],\n",
      "          [ 2.5536e-02,  3.5007e-02, -4.0797e-03],\n",
      "          [ 4.0248e-03,  2.1022e-04, -1.2449e-02]],\n",
      "\n",
      "         [[ 1.3169e-02,  2.1827e-02,  3.7759e-02],\n",
      "          [-5.5973e-03, -1.9647e-02,  4.8762e-03],\n",
      "          [ 1.0954e-02,  1.7899e-02,  2.6838e-03]],\n",
      "\n",
      "         [[ 7.4849e-02,  6.8707e-02,  5.4374e-02],\n",
      "          [ 7.0114e-02,  9.1823e-02,  4.7095e-02],\n",
      "          [ 6.2187e-02,  7.2755e-02,  6.9491e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 8.6252e-03, -3.0746e-03,  1.3837e-02],\n",
      "          [ 2.4174e-02,  7.7918e-03,  3.6886e-02],\n",
      "          [ 4.5277e-02,  2.4927e-02,  2.5807e-02]],\n",
      "\n",
      "         [[ 1.6645e-03, -2.8895e-02, -1.1830e-02],\n",
      "          [-2.9902e-02, -3.3799e-02,  6.5499e-03],\n",
      "          [-2.2101e-02, -1.0241e-02,  1.4130e-03]],\n",
      "\n",
      "         [[-2.5902e-03,  1.4698e-02, -1.6342e-03],\n",
      "          [ 7.1705e-03, -1.3292e-03, -1.5352e-02],\n",
      "          [-1.3637e-02,  8.6050e-03,  1.1664e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.6286e-04,  1.8141e-02,  2.4117e-02],\n",
      "          [-5.3951e-02, -3.9635e-02, -3.2626e-02],\n",
      "          [-3.9015e-02, -2.8968e-02, -3.8552e-02]],\n",
      "\n",
      "         [[-3.1917e-02, -3.4605e-02, -1.9172e-02],\n",
      "          [-2.8384e-02, -4.7899e-02, -3.0229e-02],\n",
      "          [ 1.4954e-02, -5.3063e-03, -1.2572e-02]],\n",
      "\n",
      "         [[-8.7711e-02, -9.5363e-02, -4.0878e-02],\n",
      "          [-4.8604e-02, -3.3131e-02,  1.4781e-02],\n",
      "          [-1.3529e-02,  9.6352e-03, -1.3146e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.4558e-02, -2.2431e-02, -4.7432e-03],\n",
      "          [ 1.9184e-02,  8.5110e-03,  3.6781e-02],\n",
      "          [-1.1689e-02, -1.8588e-03,  1.9328e-02]],\n",
      "\n",
      "         [[-1.1918e-02, -2.6101e-03,  6.9064e-02],\n",
      "          [ 2.2517e-02,  4.2890e-02,  8.9716e-02],\n",
      "          [ 4.9568e-02,  7.3016e-02,  7.1285e-02]],\n",
      "\n",
      "         [[-2.5856e-02, -7.6607e-03,  2.8866e-02],\n",
      "          [-2.5444e-02,  7.2659e-04, -3.4350e-04],\n",
      "          [ 1.7570e-02,  3.1865e-02, -3.5546e-06]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0050e-04, -2.8724e-02, -2.1632e-02],\n",
      "          [ 3.0937e-02,  3.0225e-02,  2.9467e-03],\n",
      "          [ 7.8560e-02,  1.2631e-01,  1.2023e-01]],\n",
      "\n",
      "         [[ 1.9506e-02,  1.2617e-01,  1.6072e-02],\n",
      "          [ 3.1762e-02,  1.9612e-01,  7.8279e-02],\n",
      "          [ 2.5937e-03,  1.3220e-01,  2.7147e-04]],\n",
      "\n",
      "         [[ 1.1189e-02,  5.3618e-02,  1.1628e-02],\n",
      "          [ 2.6500e-02,  5.7554e-02,  1.2445e-02],\n",
      "          [-2.5072e-03,  3.4035e-02,  3.2373e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-6.1204e-02, -1.1409e-01, -7.3110e-02],\n",
      "          [ 4.9541e-02,  3.3202e-02,  4.8259e-02],\n",
      "          [-2.6805e-03, -1.4174e-02,  5.1253e-02]],\n",
      "\n",
      "         [[ 2.1006e-02,  1.4247e-02, -2.2016e-02],\n",
      "          [ 3.3403e-02, -1.0615e-02, -4.3837e-02],\n",
      "          [ 3.2364e-02,  8.8756e-03, -1.5400e-03]],\n",
      "\n",
      "         [[-1.1527e-02,  3.9280e-02,  5.2816e-02],\n",
      "          [-6.2075e-02, -3.0163e-02, -3.1203e-02],\n",
      "          [-4.7354e-02, -4.2480e-02, -4.0137e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.2431e-02, -2.9356e-02, -4.1964e-03],\n",
      "          [-3.4446e-02, -2.7914e-02, -1.9113e-03],\n",
      "          [-1.6342e-02,  7.3357e-03,  1.5440e-02]],\n",
      "\n",
      "         [[-2.0110e-03,  2.2468e-02,  1.9107e-02],\n",
      "          [-9.7534e-03, -2.7890e-03,  4.7824e-02],\n",
      "          [-5.0267e-03,  1.2999e-02,  4.2511e-02]],\n",
      "\n",
      "         [[-3.0580e-02, -4.4201e-02, -2.1729e-02],\n",
      "          [-3.5618e-02, -5.9354e-02,  1.0524e-02],\n",
      "          [-4.2420e-02,  1.1866e-03,  6.3418e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 2.6623e-02, -6.4702e-03, -1.6267e-02],\n",
      "          [ 5.5787e-02, -4.4038e-03, -2.4454e-02],\n",
      "          [-3.0530e-02,  1.0949e-03, -1.4728e-02]],\n",
      "\n",
      "         [[-2.3958e-02,  1.2249e-02,  3.9820e-02],\n",
      "          [-1.9228e-02,  5.6264e-02,  3.6242e-02],\n",
      "          [ 1.9118e-02,  4.8876e-02,  1.6044e-02]],\n",
      "\n",
      "         [[-2.0863e-02,  3.4936e-02, -1.8695e-02],\n",
      "          [ 2.8594e-02,  2.9915e-02,  6.9926e-03],\n",
      "          [ 2.5677e-02, -6.2190e-02, -8.7109e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.3305e-02, -4.3745e-02, -2.2708e-02],\n",
      "          [-4.6127e-03, -3.5915e-02, -6.6783e-02],\n",
      "          [-1.8425e-03, -1.5711e-02, -7.1516e-02]],\n",
      "\n",
      "         [[ 2.5090e-02,  1.4657e-02,  1.7773e-02],\n",
      "          [ 4.5771e-03,  3.8086e-02,  1.2934e-02],\n",
      "          [ 4.0281e-03,  4.5269e-02, -2.1714e-02]],\n",
      "\n",
      "         [[-4.8166e-02, -5.4272e-02, -1.5922e-02],\n",
      "          [-4.6510e-02, -7.9639e-03, -7.8076e-03],\n",
      "          [ 5.0627e-03,  2.6785e-02, -3.1708e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.9405e-02, -8.2609e-02, -3.6010e-02],\n",
      "          [-1.6775e-03,  3.7635e-02,  1.6480e-02],\n",
      "          [-1.1775e-01, -4.4862e-02, -1.9489e-02]],\n",
      "\n",
      "         [[ 8.7156e-02, -1.1079e-01, -6.6629e-02],\n",
      "          [-1.0923e-01, -1.0532e-01, -1.6867e-01],\n",
      "          [-1.0126e-01, -7.4271e-02,  4.3759e-02]],\n",
      "\n",
      "         [[-6.4504e-02,  2.7899e-02,  1.1720e-01],\n",
      "          [-5.1883e-02,  1.0938e-01,  3.4430e-03],\n",
      "          [-4.0849e-02, -4.3164e-02,  6.1262e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.2914e-02, -6.5446e-02,  5.4777e-02],\n",
      "          [-7.3763e-02, -6.6345e-02,  5.3339e-02],\n",
      "          [-2.3397e-02,  1.8012e-02,  4.5790e-02]],\n",
      "\n",
      "         [[ 1.6364e-02,  3.3863e-02, -6.6880e-02],\n",
      "          [ 7.1828e-03,  1.6276e-03, -2.9542e-02],\n",
      "          [-2.4599e-02, -2.6591e-02, -2.2583e-02]],\n",
      "\n",
      "         [[-4.1377e-03, -4.2380e-02, -3.1503e-02],\n",
      "          [-7.1815e-02,  4.4405e-02,  1.2334e-01],\n",
      "          [ 6.8319e-02,  1.6994e-01,  9.0720e-02]]]], device='cuda:0'), 'resnet18.layer1.1.bn2.weight': tensor([0.2566, 0.4889, 0.4482, 0.5418, 0.2760, 0.6076, 0.2723, 0.8015, 0.5900,\n",
      "        0.5068, 0.3047, 0.7740, 0.6845, 0.4345, 0.3073, 0.3531, 0.6144, 0.8601,\n",
      "        0.4990, 0.2964, 0.6053, 0.3586, 0.6188, 0.3286, 0.2838, 0.1973, 0.1456,\n",
      "        0.2563, 0.7324, 0.3724, 0.3056, 0.3306, 0.6558, 0.4115, 0.1815, 0.2828,\n",
      "        0.6668, 0.4975, 1.0071, 0.1979, 0.6863, 0.0768, 0.1980, 0.3384, 0.3156,\n",
      "        0.3671, 0.2887, 0.1545, 0.4753, 0.7378, 0.6343, 0.1949, 0.6627, 0.1010,\n",
      "        0.4865, 0.2787, 0.3377, 0.2742, 0.6660, 0.4828, 0.0616, 0.1316, 0.3577,\n",
      "        0.4780], device='cuda:0'), 'resnet18.layer1.1.bn2.bias': tensor([ 0.1339, -0.1358, -0.0606, -0.2059,  0.2451, -0.2686, -0.3626, -0.2652,\n",
      "         0.3947, -0.1482,  0.0059, -0.0253, -0.2977, -0.1286, -0.1443, -0.0651,\n",
      "         0.3655,  0.1428, -0.1864, -0.0393, -0.3588, -0.0860, -0.0723, -0.0402,\n",
      "        -0.2383,  0.0828, -0.1292,  0.2739, -0.0320, -0.1687, -0.0165, -0.1813,\n",
      "        -0.1404, -0.3538,  0.2233,  0.0478,  0.4435, -0.0483,  0.3662,  0.1760,\n",
      "        -0.2738,  0.3479,  0.1308,  0.4089, -0.1067, -0.1192,  0.6204,  0.1109,\n",
      "        -0.0243, -0.0967,  0.0095,  0.1782, -0.2856, -0.1729, -0.0175,  0.0598,\n",
      "        -0.1658, -0.0142,  0.1411,  0.1080,  0.0298,  0.0756, -0.0122,  0.0478],\n",
      "       device='cuda:0'), 'resnet18.layer1.1.bn2.running_mean': tensor([ 0.0772, -0.1778,  0.8368, -0.1736,  0.0277, -0.1972, -0.2414, -0.3377,\n",
      "        -0.2830, -0.3126,  0.0937, -0.2347, -0.1441, -0.4317, -0.1838, -0.0773,\n",
      "        -0.1199, -0.4823,  0.0690,  0.2724, -0.3036,  0.0636, -0.1467, -0.0720,\n",
      "         0.1713,  0.0540, -0.1211, -0.0588, -0.4591, -0.1774, -0.3136, -0.4107,\n",
      "        -0.4879, -0.1763, -0.2875,  0.0453, -0.3045, -0.6454, -0.4139, -0.1492,\n",
      "        -0.0921,  0.2367,  0.4257, -0.0367, -0.2920, -0.1797, -0.6304,  0.1986,\n",
      "        -0.5872, -0.3063, -0.0804, -0.0267, -0.4128,  0.0496, -0.2467,  0.2744,\n",
      "        -0.1750, -0.0941, -0.2035, -0.0264,  0.1101, -0.1767,  0.0658,  0.0240],\n",
      "       device='cuda:0'), 'resnet18.layer1.1.bn2.running_var': tensor([0.0939, 0.2000, 0.1092, 0.2419, 0.1131, 0.1594, 0.1054, 0.1979, 0.2346,\n",
      "        0.2509, 0.0756, 0.1254, 0.1638, 0.1437, 0.2388, 0.1543, 0.3546, 0.3626,\n",
      "        0.0540, 0.2572, 0.2632, 0.1847, 0.4950, 0.1384, 0.0398, 0.0693, 0.1481,\n",
      "        0.0846, 0.2353, 0.1576, 0.0911, 0.2781, 0.1570, 0.1881, 0.0876, 0.0854,\n",
      "        0.1525, 0.1938, 0.3140, 0.0853, 0.1169, 0.0595, 0.0958, 0.1626, 0.0959,\n",
      "        0.1416, 0.3562, 0.0551, 0.3560, 0.4167, 0.1707, 0.1017, 0.1755, 0.0488,\n",
      "        0.2414, 0.0876, 0.0893, 0.3804, 0.4178, 0.1022, 0.0525, 0.0681, 0.0962,\n",
      "        0.1263], device='cuda:0'), 'resnet18.layer1.1.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer2.0.conv1.weight': tensor([[[[-0.1328, -0.1578, -0.1772],\n",
      "          [ 0.0054, -0.0609, -0.1332],\n",
      "          [ 0.0347,  0.0119, -0.0701]],\n",
      "\n",
      "         [[-0.0356, -0.0166,  0.0013],\n",
      "          [-0.0041,  0.0041,  0.0136],\n",
      "          [ 0.0415,  0.0283,  0.0105]],\n",
      "\n",
      "         [[-0.0189, -0.0344, -0.0426],\n",
      "          [ 0.0235, -0.0021, -0.0032],\n",
      "          [ 0.0067, -0.0345, -0.0512]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0603,  0.0656,  0.0497],\n",
      "          [ 0.0347,  0.0394,  0.0274],\n",
      "          [ 0.0135,  0.0116, -0.0080]],\n",
      "\n",
      "         [[-0.0084, -0.0243, -0.0488],\n",
      "          [-0.0005,  0.0178, -0.0261],\n",
      "          [ 0.0104,  0.0543,  0.0424]],\n",
      "\n",
      "         [[ 0.0484,  0.0056,  0.0191],\n",
      "          [ 0.0344, -0.0004, -0.0151],\n",
      "          [ 0.0341,  0.0308,  0.0192]]],\n",
      "\n",
      "\n",
      "        [[[-0.0940, -0.0912, -0.0633],\n",
      "          [-0.0496, -0.0772, -0.0588],\n",
      "          [-0.0559, -0.0795, -0.0783]],\n",
      "\n",
      "         [[-0.0201, -0.0138,  0.0005],\n",
      "          [ 0.0012,  0.0154,  0.0114],\n",
      "          [ 0.0395,  0.0283,  0.0011]],\n",
      "\n",
      "         [[-0.0740, -0.0801, -0.0384],\n",
      "          [-0.0462, -0.0620,  0.0028],\n",
      "          [-0.0423, -0.0475,  0.0180]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0231, -0.0270, -0.0192],\n",
      "          [-0.0061, -0.0005,  0.0102],\n",
      "          [ 0.0316,  0.0469,  0.0411]],\n",
      "\n",
      "         [[-0.0205, -0.0399, -0.0351],\n",
      "          [-0.0125, -0.0140, -0.0229],\n",
      "          [-0.0128,  0.0013,  0.0029]],\n",
      "\n",
      "         [[ 0.0139,  0.0454,  0.0271],\n",
      "          [ 0.0285,  0.0499,  0.0309],\n",
      "          [ 0.0352,  0.0581,  0.0052]]],\n",
      "\n",
      "\n",
      "        [[[-0.0038,  0.0166,  0.0332],\n",
      "          [-0.0311, -0.0216, -0.0079],\n",
      "          [-0.0941, -0.0833, -0.0787]],\n",
      "\n",
      "         [[ 0.0286,  0.0172,  0.0263],\n",
      "          [ 0.0616,  0.0514,  0.0305],\n",
      "          [ 0.0444,  0.0597,  0.0227]],\n",
      "\n",
      "         [[-0.0315, -0.0292, -0.0312],\n",
      "          [-0.0111,  0.0074, -0.0064],\n",
      "          [ 0.0124,  0.0149,  0.0049]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0104, -0.0387, -0.0581],\n",
      "          [ 0.0617,  0.0348, -0.0038],\n",
      "          [ 0.1164,  0.1212,  0.0576]],\n",
      "\n",
      "         [[-0.0097,  0.0518,  0.0034],\n",
      "          [-0.0255,  0.0318,  0.0118],\n",
      "          [-0.0462, -0.0300,  0.0037]],\n",
      "\n",
      "         [[ 0.0033, -0.0029, -0.0274],\n",
      "          [ 0.0165,  0.0042,  0.0273],\n",
      "          [ 0.0744,  0.0508,  0.0552]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0220, -0.0454, -0.0098],\n",
      "          [-0.0783, -0.0482,  0.0038],\n",
      "          [-0.0333,  0.0162,  0.0449]],\n",
      "\n",
      "         [[-0.0158, -0.0141, -0.0245],\n",
      "          [-0.0006, -0.0178, -0.0189],\n",
      "          [-0.0010, -0.0184, -0.0305]],\n",
      "\n",
      "         [[-0.0325, -0.0161,  0.0255],\n",
      "          [-0.0425,  0.0033,  0.0491],\n",
      "          [-0.0442,  0.0290,  0.0708]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0086,  0.0146,  0.0078],\n",
      "          [-0.0028,  0.0165, -0.0059],\n",
      "          [-0.0250, -0.0182, -0.0328]],\n",
      "\n",
      "         [[-0.0030, -0.0045,  0.0444],\n",
      "          [-0.0002, -0.0320,  0.0710],\n",
      "          [ 0.0234,  0.0415,  0.0985]],\n",
      "\n",
      "         [[-0.0505, -0.0541, -0.0092],\n",
      "          [-0.0563, -0.0670, -0.0238],\n",
      "          [-0.0071, -0.0351,  0.0256]]],\n",
      "\n",
      "\n",
      "        [[[-0.0757, -0.0647, -0.0504],\n",
      "          [-0.0161, -0.0432, -0.0432],\n",
      "          [-0.0151,  0.0524,  0.0666]],\n",
      "\n",
      "         [[ 0.0034,  0.0388,  0.0399],\n",
      "          [-0.0259, -0.0224, -0.0163],\n",
      "          [-0.0013,  0.0300,  0.0518]],\n",
      "\n",
      "         [[ 0.0375,  0.0181,  0.0276],\n",
      "          [-0.0123, -0.0338, -0.0166],\n",
      "          [ 0.0620,  0.0341,  0.0434]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0174, -0.0005, -0.0042],\n",
      "          [-0.0023,  0.0135,  0.0105],\n",
      "          [ 0.0025,  0.0232,  0.0125]],\n",
      "\n",
      "         [[-0.0098, -0.0055, -0.0239],\n",
      "          [-0.0025, -0.0256, -0.0241],\n",
      "          [ 0.0224, -0.0291, -0.0062]],\n",
      "\n",
      "         [[-0.0140, -0.0031,  0.0009],\n",
      "          [ 0.0385,  0.0291,  0.0294],\n",
      "          [-0.0236, -0.0211, -0.0232]]],\n",
      "\n",
      "\n",
      "        [[[-0.0290,  0.0112,  0.0236],\n",
      "          [-0.0066,  0.0145,  0.0214],\n",
      "          [-0.0136, -0.0010,  0.0211]],\n",
      "\n",
      "         [[-0.0082,  0.0107,  0.0149],\n",
      "          [-0.0143,  0.0201,  0.0044],\n",
      "          [-0.0159, -0.0097,  0.0094]],\n",
      "\n",
      "         [[-0.0099, -0.0153,  0.0147],\n",
      "          [-0.0250, -0.0335,  0.0091],\n",
      "          [ 0.0096, -0.0333,  0.0046]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0291, -0.0222,  0.0142],\n",
      "          [-0.0178, -0.0032,  0.0394],\n",
      "          [-0.0011,  0.0088,  0.0398]],\n",
      "\n",
      "         [[-0.0073, -0.0073, -0.0312],\n",
      "          [-0.0371,  0.0145, -0.0204],\n",
      "          [-0.0444, -0.0138,  0.0137]],\n",
      "\n",
      "         [[-0.1017, -0.0152,  0.0007],\n",
      "          [-0.0071, -0.1051,  0.0046],\n",
      "          [ 0.1113, -0.0717,  0.0002]]]], device='cuda:0'), 'resnet18.layer2.0.bn1.weight': tensor([0.3659, 0.3167, 0.4121, 0.1936, 0.4602, 0.3382, 0.3782, 0.4506, 0.3045,\n",
      "        0.2797, 0.2961, 0.3748, 0.3861, 0.1920, 0.4109, 0.3217, 0.5600, 0.2510,\n",
      "        0.3147, 0.1829, 0.3833, 0.3782, 0.2738, 0.3412, 0.2910, 0.4669, 0.4096,\n",
      "        0.4455, 0.3481, 0.2106, 0.3026, 0.3076, 0.3589, 0.3628, 0.3575, 0.2990,\n",
      "        0.3261, 0.3442, 0.2538, 0.4905, 0.3012, 0.3189, 0.4031, 0.3134, 0.4090,\n",
      "        0.5020, 0.1034, 0.2901, 0.4857, 0.2681, 0.2860, 0.4445, 0.3807, 0.3746,\n",
      "        0.4549, 0.4402, 0.3454, 0.4696, 0.5055, 0.3238, 0.3690, 0.3231, 0.2794,\n",
      "        0.2919, 0.3921, 0.4242, 0.3734, 0.2437, 0.3344, 0.4528, 0.4331, 0.2602,\n",
      "        0.3822, 0.4824, 0.4030, 0.4694, 0.3109, 0.3503, 0.4494, 0.2889, 0.4250,\n",
      "        0.3268, 0.4002, 0.4402, 0.3401, 0.2556, 0.5198, 0.3838, 0.1487, 0.3170,\n",
      "        0.3224, 0.3664, 0.2497, 0.2785, 0.3625, 0.3559, 0.3643, 0.2252, 0.4892,\n",
      "        0.2980, 0.3637, 0.4485, 0.3636, 0.4736, 0.4485, 0.2759, 0.4097, 0.2730,\n",
      "        0.4428, 0.2897, 0.4113, 0.3728, 0.4163, 0.2337, 0.4092, 0.3384, 0.4843,\n",
      "        0.3498, 0.4527, 0.4243, 0.2905, 0.3195, 0.2771, 0.4952, 0.3296, 0.2963,\n",
      "        0.3066, 0.4130], device='cuda:0'), 'resnet18.layer2.0.bn1.bias': tensor([-0.2109, -0.2116, -0.0395, -0.0204, -0.1252, -0.0067, -0.0660, -0.1379,\n",
      "        -0.2706, -0.1453, -0.2623, -0.0087, -0.0994,  0.1960, -0.1835, -0.1884,\n",
      "        -0.1729,  0.2872, -0.1349,  0.2452, -0.0987, -0.1952, -0.1731, -0.1476,\n",
      "        -0.0209, -0.0799, -0.2236, -0.1069, -0.0888,  0.3519, -0.0924, -0.1580,\n",
      "         0.0645, -0.1264, -0.0899, -0.1536, -0.1792, -0.1740, -0.1317, -0.1328,\n",
      "        -0.1072, -0.2129, -0.4005, -0.1894, -0.2145, -0.1292,  0.4126, -0.1399,\n",
      "        -0.0928, -0.0506, -0.1775, -0.1354, -0.1584, -0.1767, -0.1529, -0.1428,\n",
      "        -0.0210, -0.1045, -0.0675, -0.2746,  0.0705, -0.1521, -0.1168, -0.2022,\n",
      "        -0.2164,  0.1027, -0.1519, -0.1285, -0.1209, -0.1619, -0.2313, -0.1772,\n",
      "        -0.0755, -0.0741, -0.1462, -0.1516, -0.1549, -0.1616, -0.0778, -0.2407,\n",
      "        -0.2500, -0.1937, -0.1404, -0.1747, -0.2471, -0.2136, -0.0951, -0.1979,\n",
      "         0.1758, -0.2409, -0.1370,  0.1733, -0.2010, -0.1929, -0.1005, -0.1070,\n",
      "        -0.1610,  0.1660, -0.1853, -0.0943, -0.0926, -0.1612, -0.1562, -0.1528,\n",
      "         0.0724, -0.1686, -0.1306, -0.0325, -0.1804, -0.1597, -0.2118, -0.1459,\n",
      "        -0.1073,  0.2346,  0.0750, -0.2134, -0.1150, -0.0968, -0.1464, -0.1214,\n",
      "        -0.1272, -0.1745, -0.1961, -0.0657, -0.1419, -0.1868, -0.1796, -0.0527],\n",
      "       device='cuda:0'), 'resnet18.layer2.0.bn1.running_mean': tensor([-0.7819, -0.6418, -0.4626, -0.3746, -0.7434, -0.4144, -0.5431, -0.1743,\n",
      "        -0.5559, -0.0217, -0.2412, -0.4049, -0.2397,  0.6316, -0.5837, -0.1721,\n",
      "        -0.1037,  0.1572, -0.1301,  0.0251, -0.2318, -0.2991, -0.0664, -0.2551,\n",
      "         0.0604, -0.1677, -0.3115, -0.2481, -0.4751,  0.9255, -0.1558, -0.1897,\n",
      "        -0.5959, -0.1472, -0.1810, -0.4028, -0.1425, -0.1735, -0.3831, -0.3647,\n",
      "        -0.1051,  0.0721, -0.4532, -0.5368, -0.8415, -0.2738,  0.5207, -0.3098,\n",
      "        -0.1183, -0.4023, -0.3204, -0.1715, -0.1161, -0.3998, -0.2564, -0.2077,\n",
      "        -0.3743, -0.6274, -0.3998, -0.4882, -0.0831, -0.4057, -0.2833, -0.6571,\n",
      "        -0.7036, -0.4410, -0.1380, -0.3045, -0.1730, -0.8343, -0.4472, -0.3224,\n",
      "        -0.2579, -0.2081, -0.6549, -0.2578, -0.5565, -0.4292, -0.0625, -0.5848,\n",
      "        -0.6975, -0.2113, -0.3181, -0.3652,  0.0908,  0.2065, -0.2547, -0.3751,\n",
      "         0.1544, -0.5541, -0.0914, -0.5270, -0.3973, -0.4211, -0.4838, -0.0965,\n",
      "        -0.4161, -0.7413, -0.1698, -0.4137, -0.0599, -0.0727, -0.4483, -0.6146,\n",
      "        -0.6246, -0.2467, -0.4669,  0.0467, -0.2040, -0.4958, -0.4164, -0.6640,\n",
      "         0.0931,  0.1794, -0.4196, -0.2837, -0.0679, -0.2972, -0.2743, -0.3994,\n",
      "        -0.4747, -0.0985, -0.2348, -0.3115, -0.2094, -0.5481, -0.6140, -0.2819],\n",
      "       device='cuda:0'), 'resnet18.layer2.0.bn1.running_var': tensor([0.1370, 0.0722, 0.4207, 0.1297, 0.3056, 0.1775, 0.1264, 0.2626, 0.0593,\n",
      "        0.0670, 0.0379, 0.2740, 0.1898, 0.0755, 0.2567, 0.0848, 0.1590, 0.0663,\n",
      "        0.0910, 0.1147, 0.1433, 0.0951, 0.0301, 0.0733, 0.1075, 0.2643, 0.1107,\n",
      "        0.3421, 0.1311, 0.1520, 0.1342, 0.0651, 0.1196, 0.0807, 0.1174, 0.0591,\n",
      "        0.0839, 0.0756, 0.0686, 0.1567, 0.1039, 0.0671, 0.0362, 0.0825, 0.2550,\n",
      "        0.3191, 0.0475, 0.0688, 0.2547, 0.0602, 0.0524, 0.1307, 0.1455, 0.1563,\n",
      "        0.2319, 0.1376, 0.2118, 0.3692, 0.3834, 0.0665, 0.1838, 0.0935, 0.0646,\n",
      "        0.1027, 0.1997, 0.3525, 0.1304, 0.0766, 0.1020, 0.2819, 0.1655, 0.0478,\n",
      "        0.1941, 0.2500, 0.1384, 0.2269, 0.1136, 0.1690, 0.3110, 0.0535, 0.2508,\n",
      "        0.0954, 0.1834, 0.2432, 0.0366, 0.0198, 0.3504, 0.1757, 0.0580, 0.0792,\n",
      "        0.1051, 0.3352, 0.0315, 0.0498, 0.2461, 0.1262, 0.1372, 0.1429, 0.1062,\n",
      "        0.1212, 0.1183, 0.1332, 0.1043, 0.4152, 0.4032, 0.0666, 0.2034, 0.1374,\n",
      "        0.2043, 0.0802, 0.1447, 0.1377, 0.1193, 0.1320, 0.2558, 0.0902, 0.2790,\n",
      "        0.1336, 0.2996, 0.3025, 0.1285, 0.0838, 0.0785, 0.2262, 0.0865, 0.0595,\n",
      "        0.1077, 0.1864], device='cuda:0'), 'resnet18.layer2.0.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer2.0.conv2.weight': tensor([[[[ 6.7671e-03,  2.0828e-02,  3.0228e-02],\n",
      "          [-2.6727e-02,  2.5086e-02,  3.8639e-02],\n",
      "          [-2.2447e-02,  7.5736e-03,  1.6557e-02]],\n",
      "\n",
      "         [[ 6.1721e-02,  1.8560e-02, -8.2145e-03],\n",
      "          [ 3.3264e-02,  3.2245e-03,  2.1200e-03],\n",
      "          [ 5.3544e-02,  1.8175e-02,  1.2189e-02]],\n",
      "\n",
      "         [[ 3.7683e-03, -8.3592e-03,  6.3783e-03],\n",
      "          [-3.5685e-02, -4.1119e-02, -7.0416e-02],\n",
      "          [-6.1541e-02, -6.7875e-02, -4.0116e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1799e-02,  8.0068e-03, -2.6320e-02],\n",
      "          [ 5.1842e-02,  1.3773e-02, -2.7671e-02],\n",
      "          [ 3.7874e-02,  2.6542e-03, -1.6460e-02]],\n",
      "\n",
      "         [[-1.1313e-03,  4.5364e-03,  1.1150e-02],\n",
      "          [ 5.4868e-04,  2.0098e-04,  9.5565e-03],\n",
      "          [ 1.6757e-02,  2.7524e-02,  2.6441e-02]],\n",
      "\n",
      "         [[-3.0663e-02, -7.0902e-02, -4.3494e-02],\n",
      "          [ 7.5906e-03,  1.6314e-03, -3.9069e-02],\n",
      "          [ 7.9511e-03,  2.4470e-04, -1.9955e-03]]],\n",
      "\n",
      "\n",
      "        [[[-5.4679e-03,  1.5044e-02, -2.8541e-02],\n",
      "          [ 1.5380e-03,  2.8557e-02,  3.1471e-02],\n",
      "          [-2.5289e-04,  3.4653e-02,  7.4133e-03]],\n",
      "\n",
      "         [[-1.5918e-02, -1.3549e-02, -6.9947e-03],\n",
      "          [-9.7609e-03,  5.2527e-02,  2.4632e-02],\n",
      "          [ 8.3947e-03,  2.2208e-02,  3.3923e-02]],\n",
      "\n",
      "         [[-7.7098e-02, -5.7267e-02, -1.0719e-02],\n",
      "          [-4.7281e-02, -6.1857e-02, -7.6960e-02],\n",
      "          [-3.0521e-02,  3.3003e-02,  2.6813e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.1549e-02, -2.6664e-02, -1.4557e-02],\n",
      "          [-6.9293e-02, -4.5866e-02, -3.7970e-02],\n",
      "          [-6.0930e-02, -5.0357e-02, -2.6460e-02]],\n",
      "\n",
      "         [[ 4.8511e-02,  6.8575e-02,  6.1684e-02],\n",
      "          [ 4.9440e-02,  8.9706e-02,  4.7436e-02],\n",
      "          [-9.2660e-03,  2.7119e-02,  3.2395e-02]],\n",
      "\n",
      "         [[ 3.7971e-03, -2.0974e-02, -8.3198e-03],\n",
      "          [ 2.2079e-02, -1.2414e-02, -4.1658e-02],\n",
      "          [-7.5438e-03,  1.8270e-03, -5.6129e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.8139e-02,  4.9042e-02,  3.6109e-02],\n",
      "          [ 1.6406e-02, -5.2833e-02, -3.6595e-02],\n",
      "          [ 1.9298e-04, -3.9553e-02,  7.5748e-03]],\n",
      "\n",
      "         [[ 2.0713e-02,  1.1018e-02, -4.5564e-02],\n",
      "          [ 1.3074e-02,  4.8436e-03, -3.3932e-02],\n",
      "          [ 1.0401e-01,  7.7556e-02,  6.0252e-02]],\n",
      "\n",
      "         [[-4.2121e-03,  1.3203e-02,  3.2212e-02],\n",
      "          [ 4.4167e-02,  1.2725e-02,  2.1688e-02],\n",
      "          [ 1.6646e-03, -2.9345e-02, -1.7168e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.8921e-03,  7.9875e-03, -1.0759e-02],\n",
      "          [-2.0318e-02, -1.0473e-03, -2.3294e-02],\n",
      "          [ 1.4873e-03, -1.4311e-02, -3.1613e-02]],\n",
      "\n",
      "         [[ 6.5628e-02,  5.5799e-02,  2.5999e-02],\n",
      "          [ 4.1587e-03, -1.8818e-02,  5.3207e-02],\n",
      "          [-4.8154e-02, -2.4144e-02, -4.3794e-02]],\n",
      "\n",
      "         [[ 1.1895e-03, -5.4404e-02,  1.3486e-02],\n",
      "          [-1.1287e-03,  3.1617e-02,  1.9047e-02],\n",
      "          [-1.9731e-02, -3.6586e-03,  5.4660e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.2907e-02,  4.2152e-02,  7.6286e-02],\n",
      "          [ 8.9792e-02,  2.1118e-02,  4.4862e-02],\n",
      "          [ 5.8867e-02,  4.5838e-02,  6.4299e-02]],\n",
      "\n",
      "         [[ 5.8331e-03,  2.0903e-04, -1.8685e-02],\n",
      "          [ 8.4193e-03, -1.5420e-02,  5.1956e-03],\n",
      "          [-2.8068e-02, -3.5259e-02, -1.4528e-02]],\n",
      "\n",
      "         [[-5.6901e-02,  5.3225e-02,  5.5496e-02],\n",
      "          [-3.4311e-02,  2.7108e-02, -3.3543e-02],\n",
      "          [ 1.1193e-02,  1.2129e-02, -4.2969e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.8680e-02, -2.4067e-02, -2.0176e-02],\n",
      "          [ 2.7888e-02,  8.9268e-02,  1.1084e-03],\n",
      "          [ 8.4042e-03, -1.6895e-02,  2.1985e-02]],\n",
      "\n",
      "         [[-3.2724e-02, -1.3653e-02, -4.1192e-02],\n",
      "          [-4.2794e-02, -9.2298e-02, -6.3538e-02],\n",
      "          [ 1.6600e-03,  1.3072e-02, -9.7411e-03]],\n",
      "\n",
      "         [[ 1.4140e-02, -5.7006e-02, -3.6570e-02],\n",
      "          [-5.7786e-03, -2.2455e-02, -2.9977e-02],\n",
      "          [ 2.3878e-02,  6.6740e-03, -4.8811e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 7.6838e-02,  8.7777e-02,  8.4213e-02],\n",
      "          [ 5.9464e-02,  2.5537e-02,  9.8892e-02],\n",
      "          [ 3.4322e-02,  2.2542e-03,  2.2368e-02]],\n",
      "\n",
      "         [[ 5.0306e-02,  5.7238e-02, -9.8930e-03],\n",
      "          [ 6.5722e-02,  6.0825e-02,  2.7444e-02],\n",
      "          [ 7.5494e-02,  6.9291e-02,  1.7164e-02]],\n",
      "\n",
      "         [[-4.2450e-02,  2.0877e-02,  2.3275e-02],\n",
      "          [-9.8009e-02,  1.4812e-02, -5.4996e-03],\n",
      "          [-1.6703e-01, -1.3032e-01, -7.5053e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.8174e-02,  3.4083e-03,  2.1812e-02],\n",
      "          [ 3.0913e-02, -4.9489e-03, -2.0417e-02],\n",
      "          [ 1.8728e-02, -2.2261e-02, -4.5759e-02]],\n",
      "\n",
      "         [[ 4.2449e-02,  2.8555e-02,  4.7555e-02],\n",
      "          [-2.2109e-02, -1.0883e-02,  7.4719e-03],\n",
      "          [ 3.7557e-02,  3.0887e-02,  1.7600e-02]],\n",
      "\n",
      "         [[-1.8863e-02, -1.0284e-02,  2.5691e-02],\n",
      "          [-4.7244e-02, -3.1557e-02,  1.0491e-02],\n",
      "          [-3.6305e-02, -1.8013e-02,  3.6741e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4887e-02,  3.0925e-02, -3.3336e-02],\n",
      "          [ 1.3511e-02, -3.1636e-02, -1.1512e-01],\n",
      "          [-1.2898e-02, -4.6150e-03, -4.5033e-02]],\n",
      "\n",
      "         [[ 6.3950e-03,  3.9269e-02,  3.2601e-02],\n",
      "          [-5.3188e-03,  7.1413e-02,  6.3807e-03],\n",
      "          [ 3.5744e-03, -2.2928e-02, -6.8073e-02]],\n",
      "\n",
      "         [[ 2.3441e-04,  1.4805e-02, -1.5893e-04],\n",
      "          [ 1.5875e-02,  2.1997e-03, -1.6399e-02],\n",
      "          [-3.0453e-02, -6.5477e-03, -1.8939e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1002e-02,  1.7664e-04, -4.3370e-03],\n",
      "          [-1.9058e-02, -1.3629e-02,  1.5769e-02],\n",
      "          [ 7.8271e-03, -2.1287e-02, -1.4590e-02]],\n",
      "\n",
      "         [[ 5.4911e-02,  1.4308e-03, -4.4420e-02],\n",
      "          [-9.4278e-04, -8.3287e-02, -4.3434e-02],\n",
      "          [-1.6922e-02, -1.9690e-02, -2.8159e-02]],\n",
      "\n",
      "         [[-1.7037e-02, -7.5570e-02,  1.3943e-02],\n",
      "          [ 1.7837e-02,  5.2049e-02,  1.4234e-01],\n",
      "          [ 3.2120e-02, -1.1058e-03,  3.9408e-02]]]], device='cuda:0'), 'resnet18.layer2.0.bn2.weight': tensor([0.2919, 0.3870, 0.3999, 0.2562, 0.6857, 0.3798, 0.4258, 0.4253, 0.3014,\n",
      "        0.3702, 0.4860, 0.4739, 0.2502, 0.3648, 0.3245, 0.1720, 0.4295, 0.4525,\n",
      "        0.3501, 0.3548, 0.3681, 0.4338, 0.2535, 0.4386, 0.1502, 0.5609, 0.3687,\n",
      "        0.2707, 0.1305, 0.2383, 0.4799, 0.4060, 0.2065, 0.1272, 0.3803, 0.2520,\n",
      "        0.3212, 0.3820, 0.4706, 0.5164, 0.6315, 0.2698, 0.2882, 0.1530, 0.1893,\n",
      "        0.4136, 0.1850, 0.2886, 0.4409, 0.4829, 0.1764, 0.3336, 0.5602, 0.2163,\n",
      "        0.3186, 0.2192, 0.4065, 0.2636, 0.3115, 0.4161, 0.6321, 0.4282, 0.4183,\n",
      "        0.3622, 0.7556, 0.8633, 0.7618, 0.2422, 0.4667, 0.4246, 0.3335, 0.3032,\n",
      "        0.4882, 0.4093, 0.4687, 0.3549, 0.4012, 0.3983, 0.0997, 0.4635, 0.2654,\n",
      "        0.4974, 0.4239, 0.2834, 0.3022, 0.2270, 0.4605, 0.4798, 0.3872, 0.4842,\n",
      "        0.1324, 0.3497, 0.3756, 0.3504, 0.1682, 0.5206, 0.4000, 0.1867, 0.3599,\n",
      "        0.5603, 0.3780, 0.2630, 0.4072, 0.3530, 0.2868, 0.4003, 0.4429, 0.3102,\n",
      "        0.4804, 0.4900, 0.3920, 0.7784, 0.3588, 0.4406, 0.2050, 0.7280, 0.4808,\n",
      "        0.4701, 0.3361, 0.1662, 0.4319, 0.3985, 0.3809, 0.4256, 0.2980, 0.4465,\n",
      "        0.3506, 0.2865], device='cuda:0'), 'resnet18.layer2.0.bn2.bias': tensor([ 1.0835e-02,  2.6313e-02,  3.7038e-02, -1.0208e-01, -7.7804e-02,\n",
      "        -1.6966e-01, -5.7760e-02,  6.8430e-02, -7.3422e-02, -1.2693e-01,\n",
      "         1.9996e-02, -4.8428e-02, -9.4030e-02, -6.3360e-02, -6.5027e-02,\n",
      "        -3.4570e-02,  3.3615e-02, -9.6995e-02, -1.0906e-01,  2.6114e-02,\n",
      "        -2.0733e-01, -1.1414e-01,  1.0463e-01, -1.5405e-01,  6.1395e-02,\n",
      "         6.8024e-02, -2.3455e-02, -1.0160e-01, -2.5581e-02,  9.5643e-02,\n",
      "        -3.2521e-02, -7.9143e-03,  1.2582e-01, -5.8445e-02, -3.7460e-02,\n",
      "        -1.0497e-01,  1.2727e-01, -2.0048e-01, -3.6712e-02,  1.2777e-01,\n",
      "         1.5774e-01,  1.3512e-01, -1.1480e-01,  8.3012e-02,  6.8027e-03,\n",
      "         3.3304e-02,  5.1253e-03, -5.4060e-02,  3.2987e-02, -6.1139e-02,\n",
      "        -7.0331e-02, -1.6432e-01,  2.3660e-01,  5.3673e-02,  9.2009e-02,\n",
      "         3.7757e-02, -1.1147e-02, -2.3243e-02, -5.8077e-02, -5.5026e-02,\n",
      "        -1.3882e-01, -6.6346e-02, -1.0731e-01,  3.5125e-02, -7.1549e-02,\n",
      "         9.8977e-02, -6.6496e-02,  1.1224e-01, -1.6051e-02, -1.8600e-01,\n",
      "        -8.0791e-02, -6.4852e-02, -1.7134e-01,  3.5216e-02, -3.2782e-02,\n",
      "         8.3264e-02, -9.6292e-02,  1.1511e-01,  1.2198e-01, -5.4638e-02,\n",
      "        -5.7528e-02,  1.3289e-02,  8.6413e-02,  1.2867e-01, -3.0133e-02,\n",
      "         8.6222e-02, -2.3438e-02, -6.2446e-02, -2.2694e-03, -9.9863e-02,\n",
      "         1.4914e-01, -2.7808e-01, -7.8693e-02, -9.5430e-02,  2.3526e-03,\n",
      "        -1.6846e-02,  7.2695e-02,  1.1996e-01, -1.1371e-01,  1.4130e-01,\n",
      "        -8.4063e-02,  2.1947e-02, -1.7150e-01, -4.9694e-02,  1.7479e-04,\n",
      "         8.8009e-02,  2.7326e-01,  3.4596e-02, -8.3783e-02, -1.0956e-01,\n",
      "        -6.6106e-02, -1.7214e-01, -4.6962e-02, -1.3312e-01, -5.4036e-02,\n",
      "        -2.3788e-01, -1.4562e-01, -5.2683e-02, -6.6211e-02,  1.0619e-02,\n",
      "        -3.8703e-02,  7.7104e-03, -7.3720e-02, -5.2998e-03, -1.7429e-02,\n",
      "        -1.6690e-01, -2.6430e-02, -1.4543e-01], device='cuda:0'), 'resnet18.layer2.0.bn2.running_mean': tensor([-0.9030, -0.3614, -0.5927, -0.2562, -0.7999, -0.1555, -0.7436, -0.8145,\n",
      "        -0.3325, -0.4231, -0.6145, -0.2628, -0.0268, -0.3164, -0.7201, -0.3332,\n",
      "        -0.7203, -0.2706, -0.1112,  0.1956, -0.3782, -0.1278,  0.3093, -0.4336,\n",
      "         0.1036, -0.4576, -0.6649, -0.2341, -0.2689, -0.4431, -0.0676, -0.2306,\n",
      "        -0.3535, -0.2187, -0.2586, -0.0181,  0.7335,  0.0683, -0.4245,  0.0805,\n",
      "        -0.5674, -0.4116, -0.0828, -0.2021, -0.2373, -0.9147, -0.2337, -0.2417,\n",
      "         0.0456, -0.2054, -0.0969, -0.3453,  0.4226, -0.1767, -0.2921, -0.6340,\n",
      "        -0.2488, -0.3639,  0.0480, -0.2664, -0.8929, -0.7960, -0.2066, -0.4645,\n",
      "        -0.9129, -0.6219, -0.8375,  0.7029, -0.8282, -0.3871, -0.0593, -0.1502,\n",
      "        -0.4600, -0.1448, -1.1850, -0.0036, -0.0539,  0.3146, -0.0781, -0.1886,\n",
      "        -0.8652, -0.2107,  0.2130, -0.4821, -0.6511, -0.1430, -0.6265, -0.2078,\n",
      "        -0.2897, -0.6771, -0.4478, -0.0578, -0.6045, -0.3847, -0.1219, -0.3111,\n",
      "         0.1945, -0.1859, -0.1655, -0.8640, -0.5611, -0.4600, -0.3609, -0.1179,\n",
      "        -0.3001, -0.1018,  0.4982, -0.2493, -0.1004, -0.1742, -0.0112, -1.4430,\n",
      "        -0.2517, -0.1943, -0.8485, -1.3277, -0.5134, -0.0937,  0.0286, -0.6802,\n",
      "        -0.5802,  1.1416, -0.3356, -0.3592, -0.1970, -0.6524,  0.0151, -0.2203],\n",
      "       device='cuda:0'), 'resnet18.layer2.0.bn2.running_var': tensor([0.3631, 0.2040, 0.2122, 0.0869, 0.7439, 0.1109, 0.1426, 0.6743, 0.2087,\n",
      "        0.1947, 0.4681, 0.4771, 0.1895, 0.2795, 0.1339, 0.1204, 0.4874, 0.4308,\n",
      "        0.2411, 0.2021, 0.1355, 0.1971, 0.2390, 0.2352, 0.1300, 0.4534, 0.2647,\n",
      "        0.2346, 0.0781, 0.1698, 0.3916, 0.2396, 0.1668, 0.1123, 0.1320, 0.1309,\n",
      "        0.3482, 0.1110, 0.3756, 0.9312, 1.0773, 0.2640, 0.1138, 0.1186, 0.0803,\n",
      "        0.7194, 0.1453, 0.2728, 0.4044, 0.3021, 0.0837, 0.1305, 0.9350, 0.1612,\n",
      "        0.2708, 0.1370, 0.2704, 0.0804, 0.2553, 0.3490, 0.3882, 0.4482, 0.1719,\n",
      "        0.2685, 0.9764, 1.4551, 1.2546, 0.2234, 0.3852, 0.2488, 0.4383, 0.1328,\n",
      "        0.3512, 0.2175, 0.3329, 0.2302, 0.1316, 0.2811, 0.0839, 0.3018, 0.1756,\n",
      "        0.3834, 0.3435, 0.2130, 0.1712, 0.2995, 0.2426, 0.3137, 0.2490, 0.3093,\n",
      "        0.0725, 0.1075, 0.1780, 0.1721, 0.0816, 0.4990, 0.3597, 0.1053, 0.1119,\n",
      "        1.3450, 0.3545, 0.2790, 0.1207, 0.3153, 0.1842, 0.2511, 0.7039, 0.1364,\n",
      "        0.1822, 0.1716, 0.2697, 0.7472, 0.2679, 0.2014, 0.3352, 0.2053, 0.4203,\n",
      "        0.2204, 0.2174, 0.0965, 0.2637, 0.6069, 0.1622, 0.3408, 0.1696, 0.1798,\n",
      "        0.3770, 0.0805], device='cuda:0'), 'resnet18.layer2.0.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer2.0.downsample.0.weight': tensor([[[[-0.0187]],\n",
      "\n",
      "         [[-0.2417]],\n",
      "\n",
      "         [[ 0.0931]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0827]],\n",
      "\n",
      "         [[ 0.0454]],\n",
      "\n",
      "         [[-0.0267]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0116]],\n",
      "\n",
      "         [[-0.0071]],\n",
      "\n",
      "         [[ 0.0183]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0379]],\n",
      "\n",
      "         [[-0.0744]],\n",
      "\n",
      "         [[-0.0219]]],\n",
      "\n",
      "\n",
      "        [[[-0.0434]],\n",
      "\n",
      "         [[ 0.0063]],\n",
      "\n",
      "         [[-0.1497]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0385]],\n",
      "\n",
      "         [[-0.0186]],\n",
      "\n",
      "         [[ 0.0633]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0292]],\n",
      "\n",
      "         [[ 0.0376]],\n",
      "\n",
      "         [[-0.0233]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0228]],\n",
      "\n",
      "         [[ 0.0607]],\n",
      "\n",
      "         [[ 0.0569]]],\n",
      "\n",
      "\n",
      "        [[[-0.0898]],\n",
      "\n",
      "         [[-0.0805]],\n",
      "\n",
      "         [[ 0.0222]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.7337]],\n",
      "\n",
      "         [[-0.0495]],\n",
      "\n",
      "         [[ 0.0213]]],\n",
      "\n",
      "\n",
      "        [[[-0.0232]],\n",
      "\n",
      "         [[-0.0271]],\n",
      "\n",
      "         [[-0.0750]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0184]],\n",
      "\n",
      "         [[-0.0839]],\n",
      "\n",
      "         [[ 0.0473]]]], device='cuda:0'), 'resnet18.layer2.0.downsample.1.weight': tensor([ 2.4782e-01,  5.4239e-02, -8.1378e-03,  2.3652e-01,  1.9595e-01,\n",
      "         9.2379e-02,  1.2401e-01,  3.2158e-01,  8.5904e-02,  1.9459e-01,\n",
      "         1.8661e-01,  2.3693e-01,  3.3256e-01,  1.5230e-01,  2.6953e-01,\n",
      "         3.2526e-01,  1.5493e-01,  2.4895e-01,  3.0056e-01,  6.2358e-02,\n",
      "         4.9198e-01,  3.9124e-02,  1.6616e-01,  8.0160e-02,  1.2103e-01,\n",
      "         7.5303e-02,  2.8531e-01,  2.4696e-01,  2.8405e-01,  2.4835e-01,\n",
      "         3.6158e-02, -1.4916e-02,  1.7675e-01,  2.9254e-01,  1.8649e-01,\n",
      "         2.5651e-01,  1.4203e-02,  1.7562e-01,  2.7307e-01,  1.2987e-02,\n",
      "         7.6760e-02,  9.9211e-02,  2.4221e-01,  1.7071e-01,  1.9344e-01,\n",
      "         3.6907e-01,  1.9080e-01,  1.9176e-01,  2.8825e-02,  1.7974e-01,\n",
      "         2.9374e-01,  1.4882e-01,  2.4231e-03,  2.6371e-01,  2.6933e-03,\n",
      "         2.2534e-01,  1.9051e-01,  1.3364e-01,  6.2114e-03,  1.9796e-01,\n",
      "         5.2753e-02,  9.6435e-02,  8.8554e-02,  2.2563e-02, -1.4797e-02,\n",
      "         1.5026e-02,  2.9630e-02,  6.3921e-02,  1.3377e-01,  2.9683e-03,\n",
      "         2.2566e-01,  1.3361e-01, -3.8383e-02, -5.7561e-03,  7.9792e-02,\n",
      "         6.1314e-05,  1.2207e-01, -4.7782e-03,  1.7503e-01,  1.7487e-01,\n",
      "         3.6536e-01,  6.1144e-02,  5.0767e-02,  8.6461e-02,  6.1005e-02,\n",
      "         1.9381e-01,  7.5746e-02,  1.9941e-02,  1.3062e-01,  8.0093e-02,\n",
      "         2.6326e-01,  1.4235e-01,  1.1044e-01,  8.5281e-02,  2.3351e-01,\n",
      "         7.0501e-02,  3.0222e-02,  7.1055e-02,  8.7569e-02,  1.2440e-02,\n",
      "         2.3708e-01,  2.8188e-01,  2.1779e-01,  2.0893e-01,  3.3362e-01,\n",
      "         2.4675e-01,  5.3292e-03,  3.7771e-02,  6.4583e-03,  8.6285e-02,\n",
      "         9.1584e-02,  1.0262e-01,  1.7723e-01,  4.2502e-02,  3.8949e-01,\n",
      "         2.6367e-01,  1.2936e-01,  4.4973e-02,  6.2038e-02,  1.7281e-01,\n",
      "        -1.4336e-02,  7.3274e-02,  7.4952e-02,  2.8930e-02,  2.3259e-01,\n",
      "         1.9743e-03,  2.0142e-01,  9.6592e-02], device='cuda:0'), 'resnet18.layer2.0.downsample.1.bias': tensor([ 1.0835e-02,  2.6313e-02,  3.7038e-02, -1.0208e-01, -7.7804e-02,\n",
      "        -1.6966e-01, -5.7760e-02,  6.8430e-02, -7.3422e-02, -1.2693e-01,\n",
      "         1.9996e-02, -4.8428e-02, -9.4030e-02, -6.3360e-02, -6.5027e-02,\n",
      "        -3.4570e-02,  3.3615e-02, -9.6995e-02, -1.0906e-01,  2.6114e-02,\n",
      "        -2.0733e-01, -1.1414e-01,  1.0463e-01, -1.5405e-01,  6.1395e-02,\n",
      "         6.8024e-02, -2.3455e-02, -1.0160e-01, -2.5581e-02,  9.5643e-02,\n",
      "        -3.2521e-02, -7.9143e-03,  1.2582e-01, -5.8445e-02, -3.7460e-02,\n",
      "        -1.0497e-01,  1.2727e-01, -2.0048e-01, -3.6712e-02,  1.2777e-01,\n",
      "         1.5774e-01,  1.3512e-01, -1.1480e-01,  8.3012e-02,  6.8027e-03,\n",
      "         3.3304e-02,  5.1253e-03, -5.4060e-02,  3.2987e-02, -6.1139e-02,\n",
      "        -7.0331e-02, -1.6432e-01,  2.3660e-01,  5.3673e-02,  9.2009e-02,\n",
      "         3.7757e-02, -1.1147e-02, -2.3243e-02, -5.8077e-02, -5.5026e-02,\n",
      "        -1.3882e-01, -6.6346e-02, -1.0731e-01,  3.5125e-02, -7.1549e-02,\n",
      "         9.8977e-02, -6.6496e-02,  1.1224e-01, -1.6051e-02, -1.8600e-01,\n",
      "        -8.0791e-02, -6.4852e-02, -1.7134e-01,  3.5216e-02, -3.2782e-02,\n",
      "         8.3264e-02, -9.6292e-02,  1.1511e-01,  1.2198e-01, -5.4638e-02,\n",
      "        -5.7528e-02,  1.3289e-02,  8.6413e-02,  1.2867e-01, -3.0133e-02,\n",
      "         8.6222e-02, -2.3438e-02, -6.2446e-02, -2.2694e-03, -9.9863e-02,\n",
      "         1.4914e-01, -2.7808e-01, -7.8693e-02, -9.5430e-02,  2.3526e-03,\n",
      "        -1.6846e-02,  7.2695e-02,  1.1996e-01, -1.1371e-01,  1.4130e-01,\n",
      "        -8.4063e-02,  2.1947e-02, -1.7150e-01, -4.9694e-02,  1.7479e-04,\n",
      "         8.8009e-02,  2.7326e-01,  3.4596e-02, -8.3783e-02, -1.0956e-01,\n",
      "        -6.6106e-02, -1.7214e-01, -4.6962e-02, -1.3312e-01, -5.4036e-02,\n",
      "        -2.3788e-01, -1.4562e-01, -5.2683e-02, -6.6211e-02,  1.0619e-02,\n",
      "        -3.8703e-02,  7.7104e-03, -7.3720e-02, -5.2998e-03, -1.7429e-02,\n",
      "        -1.6690e-01, -2.6430e-02, -1.4543e-01], device='cuda:0'), 'resnet18.layer2.0.downsample.1.running_mean': tensor([-1.7450e-01,  2.0964e-02,  3.5457e-02, -1.2286e-02, -1.1288e-01,\n",
      "        -1.0259e-01,  5.3941e-02, -9.5680e-02, -7.7666e-02, -4.9873e-02,\n",
      "        -2.0571e-01, -1.1105e-01, -2.9710e-01, -1.5905e-02, -1.7195e-01,\n",
      "        -3.6547e-01, -1.1260e-01, -6.7188e-02, -2.0515e-01, -9.7285e-02,\n",
      "        -2.4572e-01,  2.4417e-03, -5.3249e-03, -1.4855e-01, -1.0433e-01,\n",
      "        -6.0486e-02, -6.1907e-02, -1.5255e-01, -6.7912e-03, -4.6047e-02,\n",
      "        -3.7850e-04,  7.8373e-03, -1.1734e-01, -1.1444e-01,  3.8444e-02,\n",
      "        -9.4356e-02,  6.9656e-02,  5.2800e-02, -5.7480e-02,  7.6205e-02,\n",
      "        -1.0935e-01, -1.1401e-02, -1.1564e-01, -4.3958e-02, -2.4512e-01,\n",
      "        -2.1206e-01,  2.3982e-02, -1.1514e-01, -4.7208e-02, -1.0680e-01,\n",
      "        -5.4428e-02, -2.0227e-01,  8.7682e-02, -6.9981e-02,  6.1645e-02,\n",
      "        -9.6366e-02, -6.0171e-03,  2.5454e-02, -1.1434e-03, -5.3878e-02,\n",
      "         4.2456e-02, -1.8620e-01, -1.2794e-01, -2.0808e-02,  1.4673e-02,\n",
      "         2.7206e-02, -1.1559e-01,  1.1192e-01, -1.3175e-01,  1.4408e-02,\n",
      "        -1.5827e-01, -4.1188e-02,  4.4214e-02, -2.5370e-02, -1.3934e-01,\n",
      "        -1.4434e-02, -9.9578e-03,  4.5063e-02,  1.2904e-01, -6.4645e-02,\n",
      "         3.0719e-02, -2.0988e-02, -4.5043e-02,  3.9557e-02,  7.4943e-03,\n",
      "        -1.3680e-01, -3.6284e-02, -1.0882e-01,  2.7625e-02, -5.1709e-02,\n",
      "        -5.4328e-02,  7.2640e-04, -4.5522e-02, -7.9870e-02, -1.7573e-01,\n",
      "        -8.9532e-02, -6.8295e-02, -1.0729e-01, -1.6712e-01, -3.6477e-02,\n",
      "        -6.5189e-02, -1.7004e-01, -1.3047e-01, -6.7155e-02, -1.0636e-01,\n",
      "         4.4839e-02,  7.4730e-02,  1.5176e-02, -8.7435e-02, -2.1489e-02,\n",
      "         6.5933e-02, -1.1365e-01, -1.6218e-01, -9.9344e-02, -4.1759e-01,\n",
      "         3.4957e-02, -1.0229e-01,  3.1781e-03,  2.0397e-02,  3.3100e-02,\n",
      "        -2.6507e-02, -1.9617e-01, -2.8715e-02,  9.9765e-03, -1.6993e-01,\n",
      "        -8.3194e-02,  3.7103e-02, -7.6784e-02], device='cuda:0'), 'resnet18.layer2.0.downsample.1.running_var': tensor([0.0412, 0.0019, 0.0021, 0.0113, 0.0138, 0.0027, 0.0043, 0.0423, 0.0054,\n",
      "        0.0057, 0.0175, 0.0177, 0.0213, 0.0111, 0.0115, 0.0149, 0.0145, 0.0165,\n",
      "        0.0123, 0.0032, 0.0150, 0.0015, 0.0114, 0.0031, 0.0092, 0.0038, 0.0188,\n",
      "        0.0176, 0.0089, 0.0150, 0.0052, 0.0019, 0.0128, 0.0142, 0.0067, 0.0077,\n",
      "        0.0043, 0.0081, 0.0270, 0.0028, 0.0101, 0.0086, 0.0093, 0.0104, 0.0087,\n",
      "        0.0336, 0.0133, 0.0095, 0.0024, 0.0061, 0.0131, 0.0044, 0.0054, 0.0130,\n",
      "        0.0026, 0.0175, 0.0160, 0.0136, 0.0015, 0.0109, 0.0024, 0.0090, 0.0043,\n",
      "        0.0025, 0.0013, 0.0025, 0.0025, 0.0047, 0.0095, 0.0013, 0.0195, 0.0041,\n",
      "        0.0014, 0.0017, 0.0057, 0.0027, 0.0017, 0.0013, 0.0103, 0.0101, 0.0127,\n",
      "        0.0045, 0.0054, 0.0094, 0.0043, 0.0208, 0.0046, 0.0031, 0.0067, 0.0048,\n",
      "        0.0175, 0.0047, 0.0042, 0.0048, 0.0135, 0.0048, 0.0046, 0.0066, 0.0047,\n",
      "        0.0068, 0.0155, 0.0266, 0.0050, 0.0129, 0.0244, 0.0111, 0.0044, 0.0034,\n",
      "        0.0025, 0.0050, 0.0052, 0.0060, 0.0116, 0.0029, 0.0353, 0.0085, 0.0133,\n",
      "        0.0022, 0.0027, 0.0076, 0.0008, 0.0110, 0.0040, 0.0009, 0.0121, 0.0031,\n",
      "        0.0163, 0.0034], device='cuda:0'), 'resnet18.layer2.0.downsample.1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer2.1.conv1.weight': tensor([[[[-1.9289e-02, -3.0776e-02, -2.8620e-02],\n",
      "          [ 5.5689e-02, -2.6534e-04, -9.9255e-03],\n",
      "          [ 2.4671e-02, -3.4029e-02, -1.7831e-02]],\n",
      "\n",
      "         [[-1.2674e-02, -1.7396e-02, -9.0155e-03],\n",
      "          [-2.2730e-02, -8.4868e-03,  7.0303e-03],\n",
      "          [-1.1934e-02, -2.3995e-02, -1.8105e-02]],\n",
      "\n",
      "         [[ 4.2497e-03,  3.5472e-02,  1.0660e-02],\n",
      "          [-3.8692e-02, -6.9532e-04, -2.5870e-02],\n",
      "          [ 3.0756e-02, -1.1261e-01, -1.3764e-01]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3594e-03,  1.7445e-02,  3.5859e-02],\n",
      "          [-6.4116e-03, -3.9719e-02,  2.0034e-02],\n",
      "          [-8.7057e-03, -4.7029e-03,  4.5770e-02]],\n",
      "\n",
      "         [[-2.3271e-02, -4.4331e-02, -2.5916e-02],\n",
      "          [ 3.7768e-02,  1.6029e-03, -3.1717e-02],\n",
      "          [ 2.7714e-02,  9.5663e-04, -3.2902e-03]],\n",
      "\n",
      "         [[ 3.5186e-03,  2.3570e-02,  3.7751e-02],\n",
      "          [ 1.6453e-02,  4.6918e-02,  1.6235e-02],\n",
      "          [-2.2202e-02, -3.5574e-02, -2.1760e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 8.4671e-02,  9.9798e-02, -3.4631e-02],\n",
      "          [ 2.1652e-02, -6.8499e-03, -1.0855e-01],\n",
      "          [-9.4250e-02, -1.4112e-01, -1.2403e-01]],\n",
      "\n",
      "         [[-2.1640e-02, -2.7306e-03,  5.8170e-02],\n",
      "          [ 2.9339e-04,  2.2549e-03,  3.9172e-02],\n",
      "          [ 5.2324e-02,  1.6255e-02,  3.2607e-02]],\n",
      "\n",
      "         [[ 4.6305e-02,  1.3344e-02,  3.6346e-02],\n",
      "          [-2.0821e-02, -4.1408e-02,  7.3979e-03],\n",
      "          [-4.7440e-02, -3.6086e-02,  4.3021e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.9127e-02, -1.8131e-02, -1.0845e-02],\n",
      "          [-3.5178e-02, -3.6390e-03, -5.9385e-03],\n",
      "          [ 1.1040e-03,  2.1560e-02,  1.5273e-02]],\n",
      "\n",
      "         [[-8.5596e-03,  8.9938e-03,  1.0704e-02],\n",
      "          [-2.5252e-02, -7.2110e-03,  8.7028e-03],\n",
      "          [-3.7268e-02, -4.0689e-02, -1.7650e-02]],\n",
      "\n",
      "         [[-2.7670e-03,  1.2703e-03, -1.2960e-02],\n",
      "          [ 1.3118e-02, -7.0554e-03, -6.4435e-03],\n",
      "          [-2.0014e-02, -2.2095e-03,  2.5232e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.5511e-03, -9.4105e-03, -1.2284e-02],\n",
      "          [-6.0696e-03, -6.9287e-03, -4.2682e-03],\n",
      "          [-1.4731e-02,  2.2233e-02,  1.7156e-04]],\n",
      "\n",
      "         [[-1.1327e-02,  4.5776e-03,  3.6964e-02],\n",
      "          [-7.2937e-03,  1.1962e-02,  4.4979e-03],\n",
      "          [ 3.4832e-02,  1.1494e-02,  5.3722e-03]],\n",
      "\n",
      "         [[ 1.7998e-03, -2.1416e-04,  1.0428e-01],\n",
      "          [-2.2719e-02, -3.9411e-05,  5.6883e-02],\n",
      "          [-4.7690e-02,  1.4409e-02,  4.2591e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.8530e-02,  6.7015e-03, -4.1805e-02],\n",
      "          [-7.3272e-03, -8.3859e-02, -8.8657e-03],\n",
      "          [-2.2771e-02, -9.4799e-03,  5.8726e-02]],\n",
      "\n",
      "         [[ 1.7348e-02, -9.3571e-03, -2.7206e-02],\n",
      "          [-3.1980e-02, -4.3509e-02, -4.0321e-02],\n",
      "          [-2.8525e-02, -8.5869e-03, -7.8074e-03]],\n",
      "\n",
      "         [[-9.1290e-03, -1.1818e-02, -2.6971e-02],\n",
      "          [-3.7865e-02, -5.5735e-02, -3.6862e-02],\n",
      "          [-3.0534e-02, -8.9153e-03, -5.6527e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.9669e-02,  4.7047e-03,  4.6741e-03],\n",
      "          [-1.6069e-02, -3.7292e-02, -2.1538e-02],\n",
      "          [-3.7226e-02, -8.9328e-03,  1.7112e-02]],\n",
      "\n",
      "         [[-9.8771e-03, -2.3683e-02, -6.9752e-03],\n",
      "          [ 1.6428e-02,  2.2416e-02,  1.3792e-02],\n",
      "          [-4.0229e-02, -2.6399e-02, -2.5367e-02]],\n",
      "\n",
      "         [[ 4.8203e-02,  5.3353e-02,  3.2025e-02],\n",
      "          [ 9.5945e-03,  1.5847e-02, -3.2708e-03],\n",
      "          [ 7.5457e-02,  6.4065e-02,  1.5522e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.7998e-02,  1.1939e-02,  2.7335e-02],\n",
      "          [ 3.5606e-02,  2.7619e-02,  4.3832e-02],\n",
      "          [ 3.5209e-02,  9.0648e-02,  1.5153e-02]],\n",
      "\n",
      "         [[ 2.9243e-03, -2.4616e-02, -1.7531e-02],\n",
      "          [ 6.3121e-03, -2.8263e-02,  3.4498e-03],\n",
      "          [ 8.6716e-03,  7.3364e-02,  1.4433e-02]],\n",
      "\n",
      "         [[ 1.3337e-02, -2.8684e-02, -1.2062e-02],\n",
      "          [ 2.6960e-02, -6.3316e-02, -5.6392e-02],\n",
      "          [ 3.3833e-02,  2.2693e-02, -3.5738e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.7736e-02, -1.6641e-04, -9.2129e-03],\n",
      "          [-1.7212e-02,  3.4530e-02, -2.2663e-04],\n",
      "          [-5.8318e-04,  9.6958e-03,  7.9647e-03]],\n",
      "\n",
      "         [[-2.5931e-02, -5.8320e-02, -2.9231e-02],\n",
      "          [-7.0365e-03, -1.7478e-03, -2.0184e-02],\n",
      "          [-6.1346e-03, -2.0379e-02, -7.8681e-03]],\n",
      "\n",
      "         [[-5.0835e-03, -2.8388e-02,  3.0332e-02],\n",
      "          [ 6.9590e-02,  3.0608e-02,  5.1760e-02],\n",
      "          [-1.4119e-03, -2.3570e-02, -2.7267e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.4403e-02,  1.0137e-02, -2.4488e-02],\n",
      "          [-1.6242e-02,  4.0776e-02,  5.6440e-03],\n",
      "          [-1.9901e-02, -3.6238e-03, -1.6356e-02]],\n",
      "\n",
      "         [[-8.2006e-03,  2.5443e-02,  4.1471e-03],\n",
      "          [ 3.4240e-02,  1.8149e-02,  5.1736e-02],\n",
      "          [ 7.4599e-02,  8.4090e-02,  9.0386e-02]],\n",
      "\n",
      "         [[-3.5261e-02,  3.5708e-02,  1.2578e-02],\n",
      "          [-5.5746e-02, -9.8234e-03,  8.2836e-03],\n",
      "          [-2.4906e-02, -4.0720e-02, -3.5321e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 3.4065e-02,  3.2067e-02,  4.0460e-03],\n",
      "          [ 2.5930e-02, -2.4252e-03, -2.5528e-02],\n",
      "          [ 4.1217e-02,  2.4947e-02,  2.2697e-02]],\n",
      "\n",
      "         [[ 5.8544e-03,  3.2254e-02,  8.2088e-02],\n",
      "          [-1.2918e-02,  1.9928e-02,  2.9881e-02],\n",
      "          [-2.1111e-02,  2.3109e-02,  1.3713e-02]],\n",
      "\n",
      "         [[-1.2197e-02,  2.5006e-02,  6.3997e-02],\n",
      "          [-6.8529e-02,  3.2531e-03, -1.1971e-02],\n",
      "          [-9.2001e-03,  1.8223e-02, -1.8898e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.0936e-03,  2.1150e-02,  1.1154e-02],\n",
      "          [ 4.6485e-02,  6.5024e-02,  5.3230e-02],\n",
      "          [ 1.0725e-02,  1.0063e-02,  2.7232e-02]],\n",
      "\n",
      "         [[ 3.1234e-03,  2.2433e-02, -3.8585e-03],\n",
      "          [ 2.5227e-02,  1.0106e-01,  3.5853e-02],\n",
      "          [ 1.1844e-02,  2.2210e-02,  3.4320e-03]],\n",
      "\n",
      "         [[ 3.0716e-02,  1.4618e-02,  4.2003e-03],\n",
      "          [-4.9602e-03,  2.1193e-02,  1.7117e-02],\n",
      "          [ 1.3275e-02,  3.1442e-03, -2.4961e-04]]]], device='cuda:0'), 'resnet18.layer2.1.bn1.weight': tensor([0.3298, 0.4566, 0.2919, 0.2720, 0.4292, 0.3258, 0.3775, 0.4438, 0.3506,\n",
      "        0.5516, 0.3170, 0.4225, 0.3456, 0.3314, 0.5190, 0.5104, 0.3834, 0.5184,\n",
      "        0.3739, 0.3279, 0.3240, 0.3576, 0.3650, 0.3038, 0.2614, 0.4430, 0.4045,\n",
      "        0.3376, 0.3926, 0.4104, 0.3323, 0.3390, 0.2336, 0.4145, 0.4263, 0.3243,\n",
      "        0.2486, 0.4025, 0.4572, 0.5042, 0.4377, 0.4242, 0.3497, 0.3823, 0.5087,\n",
      "        0.3571, 0.4531, 0.3122, 0.3677, 0.5134, 0.4546, 0.4615, 0.2443, 0.3841,\n",
      "        0.6062, 0.3917, 0.4098, 0.3007, 0.4191, 0.4204, 0.3620, 0.4436, 0.2460,\n",
      "        0.4502, 0.3311, 0.6235, 0.3955, 0.4819, 0.3775, 0.3117, 0.3292, 0.2892,\n",
      "        0.3128, 0.3963, 0.3249, 0.4666, 0.3485, 0.4268, 0.3309, 0.4169, 0.2997,\n",
      "        0.3290, 0.3345, 0.3477, 0.3079, 0.2680, 0.4871, 0.4872, 0.4566, 0.3560,\n",
      "        0.3174, 0.6109, 0.3344, 0.3922, 0.3625, 0.3274, 0.5219, 0.2418, 0.4888,\n",
      "        0.3812, 0.3261, 0.4417, 0.3320, 0.4137, 0.4420, 0.3019, 0.5678, 0.3589,\n",
      "        0.3250, 0.2973, 0.3317, 0.2518, 0.3586, 0.3150, 0.2893, 0.3610, 0.3030,\n",
      "        0.3542, 0.2547, 0.4565, 0.3885, 0.4435, 0.3902, 0.4465, 0.2930, 0.5228,\n",
      "        0.3942, 0.3081], device='cuda:0'), 'resnet18.layer2.1.bn1.bias': tensor([-0.2181, -0.2342, -0.3431, -0.0190, -0.2336, -0.0410, -0.2088, -0.3592,\n",
      "        -0.1805, -0.2620, -0.2857, -0.3462, -0.2059, -0.2524, -0.2903, -0.3540,\n",
      "        -0.3409, -0.5783, -0.3823, -0.1262, -0.2356, -0.1372, -0.2574, -0.2192,\n",
      "        -0.0482, -0.4298, -0.3013, -0.3475, -0.3082, -0.3436, -0.2046, -0.1135,\n",
      "        -0.1459, -0.6296, -0.1471, -0.1494, -0.1444, -0.3274, -0.2701, -0.6061,\n",
      "        -0.3670, -0.2001, -0.2203, -0.2673, -0.2531, -0.3109, -0.3078, -0.2282,\n",
      "        -0.2243, -0.3414, -0.3130, -0.3140, -0.0554, -0.2548, -0.1817, -0.4118,\n",
      "        -0.3620, -0.1289, -0.1475, -0.3166, -0.2973, -0.2589, -0.0562, -0.1365,\n",
      "        -0.1660, -0.7820, -0.2462, -0.2208, -0.1664, -0.1572, -0.2833, -0.2556,\n",
      "        -0.2043, -0.3673, -0.1948, -0.2976, -0.2456, -0.3137, -0.1790, -0.4188,\n",
      "        -0.2516, -0.1381, -0.2439, -0.1418, -0.2091, -0.0148, -0.2466, -0.4632,\n",
      "        -0.3072, -0.2650, -0.1500, -0.6591, -0.1868, -0.2405, -0.4389, -0.2773,\n",
      "        -0.2417, -0.2419, -0.3001, -0.1602, -0.1767, -0.2781, -0.1390, -0.2135,\n",
      "        -0.1626, -0.3856, -0.2461, -0.0919, -0.0791, -0.2203, -0.2426, -0.2495,\n",
      "        -0.2696, -0.3214, -0.1421, -0.1758, -0.2394, -0.1627, -0.2863, -0.2240,\n",
      "        -0.2870, -0.3825, -0.4450, -0.1837, -0.0885, -0.4938, -0.5962, -0.3888],\n",
      "       device='cuda:0'), 'resnet18.layer2.1.bn1.running_mean': tensor([-8.8612e-01, -7.7362e-01,  3.7098e-01,  1.0117e-01, -1.5821e+00,\n",
      "        -9.5553e-01, -7.6392e-01, -1.1231e+00,  3.2512e-01, -1.4711e+00,\n",
      "        -4.7140e-01, -1.0366e+00, -5.5385e-01, -5.8305e-01, -1.0092e+00,\n",
      "        -1.7682e+00, -6.7495e-01, -9.6366e-01,  4.3596e-01, -5.3115e-01,\n",
      "        -5.6756e-01, -5.0951e-01, -1.1213e+00, -5.4095e-01, -1.1136e+00,\n",
      "        -7.8903e-01, -1.1898e+00, -3.0022e-01, -9.5427e-01, -7.5367e-01,\n",
      "        -8.7808e-01, -1.3208e+00,  7.9152e-01, -1.0164e+00, -7.5471e-01,\n",
      "        -1.7148e+00, -7.2762e-01, -4.5908e-01, -1.4882e+00, -1.0524e-01,\n",
      "        -6.4078e-01, -1.5209e+00, -3.9636e-01, -1.1566e+00, -9.7883e-01,\n",
      "        -4.8239e-01, -1.3670e+00, -4.4535e-01, -7.7881e-01, -1.5001e+00,\n",
      "        -4.8717e-01, -9.2223e-01, -3.3725e-01, -5.9893e-01, -1.7039e+00,\n",
      "        -1.1449e+00, -8.8610e-01, -4.8717e-01, -1.0880e+00, -1.2868e+00,\n",
      "        -5.0141e-01, -6.5336e-01, -6.6400e-01, -9.2926e-01, -6.7261e-01,\n",
      "        -4.5667e-01, -6.1358e-01, -7.2196e-01, -4.7004e-01,  1.0758e-01,\n",
      "        -8.2428e-01,  1.3449e-01, -1.2494e+00, -2.1805e-01, -4.2011e-01,\n",
      "        -7.7898e-01, -4.3753e-01, -5.8059e-01,  5.2193e-03, -7.5311e-01,\n",
      "        -5.6780e-01,  2.4471e-01,  1.9377e-01, -7.3270e-01, -5.6566e-01,\n",
      "        -4.9046e-01, -5.1634e-01, -2.1427e+00, -1.9156e-01,  1.1879e+00,\n",
      "        -3.6110e-01,  4.0253e-01,  1.7535e-02, -4.4795e-01,  3.0540e-01,\n",
      "        -9.1169e-01, -5.4758e-01, -1.3976e-01, -9.8945e-01, -4.2616e-01,\n",
      "        -1.0202e+00, -4.0983e-01, -8.1767e-01, -1.5032e+00, -1.5795e+00,\n",
      "        -7.9509e-01, -1.1332e+00, -5.1961e-01, -1.3880e+00, -5.1294e-01,\n",
      "        -5.1551e-01, -3.6216e-01, -1.0313e+00, -2.1263e-03, -1.3118e-01,\n",
      "        -1.0740e+00, -8.1314e-01,  5.6576e-02, -5.4998e-03, -7.3049e-01,\n",
      "        -5.0649e-01, -8.4372e-01, -1.5414e+00, -5.1170e-01,  4.1820e-01,\n",
      "        -1.0159e+00, -1.2665e+00, -4.1854e-02], device='cuda:0'), 'resnet18.layer2.1.bn1.running_var': tensor([0.5615, 1.0697, 0.3719, 0.6875, 0.8703, 0.8006, 0.6487, 0.6053, 0.6793,\n",
      "        2.3622, 0.3602, 0.9542, 0.7567, 0.3987, 1.4914, 1.1872, 0.7071, 0.7017,\n",
      "        0.2403, 0.6656, 0.3904, 0.6451, 0.5474, 0.2533, 0.6199, 0.5726, 0.6863,\n",
      "        0.2677, 0.6701, 0.5693, 0.4241, 0.9421, 0.3050, 0.4541, 1.0686, 0.9775,\n",
      "        0.3887, 0.6931, 1.4104, 0.3968, 0.7593, 1.2111, 0.4504, 0.6707, 1.5743,\n",
      "        0.8955, 1.1567, 0.4204, 0.6594, 0.9196, 0.9912, 1.0194, 0.5679, 0.9259,\n",
      "        4.2870, 0.4363, 0.8348, 1.0396, 1.1399, 0.5407, 0.5752, 0.6073, 0.9650,\n",
      "        2.5231, 0.7591, 0.4284, 0.5809, 1.4656, 0.6935, 0.6162, 0.3650, 0.2464,\n",
      "        0.5130, 0.4280, 0.5293, 0.9363, 0.5800, 0.4399, 0.4128, 0.5503, 0.8557,\n",
      "        0.6979, 0.5351, 0.7306, 0.4608, 0.6758, 1.7936, 0.4145, 1.0249, 0.6435,\n",
      "        0.6399, 0.5770, 0.4877, 0.5320, 0.6535, 0.4682, 2.2820, 0.1968, 1.3903,\n",
      "        0.6598, 0.6017, 0.9376, 0.7947, 1.0750, 0.9838, 0.2401, 2.3313, 0.6337,\n",
      "        1.3558, 0.5199, 0.7725, 0.2271, 0.6422, 0.3274, 0.5423, 0.7509, 0.5508,\n",
      "        0.8206, 0.2495, 1.0129, 0.3241, 0.8179, 0.4494, 1.4734, 0.6075, 0.8015,\n",
      "        0.3997, 0.2900], device='cuda:0'), 'resnet18.layer2.1.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer2.1.conv2.weight': tensor([[[[ 0.0337,  0.0472,  0.0403],\n",
      "          [ 0.0337,  0.0294,  0.0181],\n",
      "          [ 0.0146,  0.0222,  0.0033]],\n",
      "\n",
      "         [[-0.0369, -0.0023,  0.0381],\n",
      "          [-0.0391,  0.0267,  0.0937],\n",
      "          [-0.0166,  0.0661,  0.0870]],\n",
      "\n",
      "         [[-0.0160, -0.0024,  0.0300],\n",
      "          [-0.0097,  0.0071,  0.0141],\n",
      "          [ 0.0053,  0.0007, -0.0179]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0552,  0.0284,  0.0263],\n",
      "          [ 0.0131, -0.0626, -0.0138],\n",
      "          [-0.0345, -0.0782, -0.0357]],\n",
      "\n",
      "         [[ 0.0119,  0.0209,  0.0284],\n",
      "          [-0.0276, -0.0675, -0.0155],\n",
      "          [ 0.0347,  0.0295,  0.0096]],\n",
      "\n",
      "         [[-0.0155, -0.0007,  0.0252],\n",
      "          [-0.0291, -0.0257,  0.0265],\n",
      "          [ 0.0024,  0.0085,  0.0142]]],\n",
      "\n",
      "\n",
      "        [[[-0.0161,  0.0042,  0.0352],\n",
      "          [ 0.0389,  0.0411,  0.0142],\n",
      "          [ 0.0413,  0.0206, -0.0005]],\n",
      "\n",
      "         [[-0.0130, -0.0099, -0.0347],\n",
      "          [-0.0086, -0.0043, -0.0500],\n",
      "          [-0.0356, -0.0238, -0.0347]],\n",
      "\n",
      "         [[ 0.0230, -0.0048, -0.0230],\n",
      "          [-0.0145,  0.0024,  0.0073],\n",
      "          [-0.0239,  0.0183,  0.0221]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0477, -0.0390, -0.0551],\n",
      "          [-0.0260, -0.0225, -0.0375],\n",
      "          [-0.0162,  0.0047,  0.0052]],\n",
      "\n",
      "         [[ 0.0041,  0.0015, -0.0090],\n",
      "          [ 0.0039,  0.0049, -0.0154],\n",
      "          [-0.0218, -0.0014, -0.0105]],\n",
      "\n",
      "         [[-0.0370, -0.0306, -0.0335],\n",
      "          [-0.0208, -0.0308, -0.0045],\n",
      "          [-0.0257, -0.0392, -0.0275]]],\n",
      "\n",
      "\n",
      "        [[[-0.0777, -0.0616,  0.0443],\n",
      "          [-0.0062,  0.0372,  0.0972],\n",
      "          [ 0.0661,  0.0349, -0.0311]],\n",
      "\n",
      "         [[ 0.0080,  0.0138, -0.0219],\n",
      "          [ 0.0437,  0.0283, -0.0119],\n",
      "          [ 0.0553,  0.0004, -0.0522]],\n",
      "\n",
      "         [[ 0.0618, -0.0141, -0.0544],\n",
      "          [-0.0172, -0.0588, -0.0082],\n",
      "          [-0.0009,  0.0404,  0.0231]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0373, -0.0502, -0.0247],\n",
      "          [-0.0589, -0.0491, -0.0219],\n",
      "          [-0.0798, -0.0843, -0.0594]],\n",
      "\n",
      "         [[ 0.0015,  0.0417,  0.0165],\n",
      "          [-0.0487, -0.0064, -0.0059],\n",
      "          [-0.0300, -0.0231,  0.0100]],\n",
      "\n",
      "         [[-0.0178, -0.0183, -0.0115],\n",
      "          [-0.0444, -0.0036, -0.0120],\n",
      "          [-0.0611, -0.0468, -0.0661]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0044, -0.0117, -0.0400],\n",
      "          [ 0.0111, -0.0391, -0.0367],\n",
      "          [-0.0097, -0.0178,  0.0180]],\n",
      "\n",
      "         [[ 0.0232,  0.0305,  0.0105],\n",
      "          [-0.0084, -0.0095,  0.0321],\n",
      "          [-0.0315, -0.0102,  0.0314]],\n",
      "\n",
      "         [[-0.0192,  0.0180, -0.0259],\n",
      "          [-0.0310,  0.0015,  0.0262],\n",
      "          [-0.0221,  0.0004,  0.0317]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0585, -0.1069, -0.0515],\n",
      "          [-0.0152, -0.0116, -0.0578],\n",
      "          [-0.0246, -0.0449, -0.0238]],\n",
      "\n",
      "         [[-0.0514, -0.0382, -0.0126],\n",
      "          [ 0.0234,  0.0082,  0.0048],\n",
      "          [ 0.0092, -0.0084, -0.0390]],\n",
      "\n",
      "         [[ 0.0118,  0.0040,  0.0126],\n",
      "          [-0.0240, -0.0221, -0.0120],\n",
      "          [-0.0143, -0.0171, -0.0207]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0109, -0.0215, -0.0193],\n",
      "          [-0.0129, -0.0298, -0.0256],\n",
      "          [-0.0178, -0.0353, -0.0216]],\n",
      "\n",
      "         [[-0.0713, -0.0330, -0.0141],\n",
      "          [-0.0599,  0.0031,  0.0337],\n",
      "          [ 0.0052,  0.0295,  0.0180]],\n",
      "\n",
      "         [[-0.0328, -0.0147,  0.0319],\n",
      "          [ 0.0070,  0.0129,  0.0389],\n",
      "          [ 0.0296,  0.0159, -0.0026]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0049,  0.0071,  0.0146],\n",
      "          [ 0.0563,  0.0810,  0.0984],\n",
      "          [ 0.0567,  0.0665,  0.0567]],\n",
      "\n",
      "         [[ 0.0252,  0.0142,  0.0274],\n",
      "          [ 0.0201,  0.0359,  0.0292],\n",
      "          [-0.0055, -0.0041,  0.0111]],\n",
      "\n",
      "         [[ 0.0253,  0.0137,  0.0068],\n",
      "          [ 0.0219,  0.0032, -0.0078],\n",
      "          [ 0.0260,  0.0234,  0.0103]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0519,  0.0483,  0.0170],\n",
      "          [-0.0155, -0.0065, -0.0144],\n",
      "          [-0.0314,  0.0425,  0.0353]],\n",
      "\n",
      "         [[-0.0210, -0.0127,  0.0191],\n",
      "          [-0.0061, -0.0143,  0.0179],\n",
      "          [-0.0050,  0.0336,  0.0315]],\n",
      "\n",
      "         [[-0.0173,  0.0133, -0.0015],\n",
      "          [-0.0090,  0.0017,  0.0238],\n",
      "          [ 0.0205, -0.0148, -0.0059]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0245, -0.0171, -0.0134],\n",
      "          [-0.0022, -0.0192, -0.0098],\n",
      "          [ 0.0034, -0.0483, -0.0395]],\n",
      "\n",
      "         [[-0.0008,  0.0304,  0.0218],\n",
      "          [-0.0265, -0.0272,  0.0050],\n",
      "          [-0.0632, -0.0269, -0.0117]],\n",
      "\n",
      "         [[-0.0358, -0.0243,  0.0149],\n",
      "          [-0.0258,  0.0089, -0.0238],\n",
      "          [-0.0208, -0.0341, -0.0608]]]], device='cuda:0'), 'resnet18.layer2.1.bn2.weight': tensor([0.2655, 0.3704, 0.5084, 0.4618, 0.3581, 0.5892, 0.4359, 0.3244, 0.4509,\n",
      "        0.2610, 0.3328, 0.2630, 0.2703, 0.4015, 0.4438, 0.3685, 0.3416, 0.4742,\n",
      "        0.3078, 0.4074, 0.2775, 0.5993, 0.2668, 0.4800, 0.4437, 0.6073, 0.3888,\n",
      "        0.2058, 0.3707, 0.3532, 0.3172, 0.4372, 0.3401, 0.2238, 0.2324, 0.5217,\n",
      "        0.3825, 0.4762, 0.2825, 0.1502, 0.2039, 0.4618, 0.3386, 0.3015, 0.3793,\n",
      "        0.2335, 0.3986, 0.2258, 0.3816, 0.3940, 0.4090, 0.6184, 0.3422, 0.3576,\n",
      "        0.1514, 0.2294, 0.3147, 0.2784, 0.3768, 0.2728, 0.5829, 0.2776, 0.6809,\n",
      "        0.3471, 0.2014, 0.3112, 0.2112, 0.4382, 0.4190, 0.6108, 0.2938, 0.5832,\n",
      "        0.4839, 0.5435, 0.3517, 0.4537, 0.5617, 0.2951, 0.2085, 0.3262, 0.4320,\n",
      "        0.2641, 0.2386, 0.2981, 0.2288, 0.2580, 0.4817, 0.2616, 0.3936, 0.3285,\n",
      "        0.3416, 0.6528, 0.5190, 0.4065, 0.3241, 0.2845, 0.3315, 0.3057, 0.6270,\n",
      "        0.1779, 0.3256, 0.1321, 0.2944, 0.2916, 0.3651, 0.5224, 0.3667, 0.2332,\n",
      "        0.4488, 0.5119, 0.4528, 0.3585, 0.2987, 0.5129, 0.1647, 0.2815, 0.3459,\n",
      "        0.2990, 0.5713, 0.3536, 0.1789, 0.0538, 0.4845, 0.1609, 0.3872, 0.4721,\n",
      "        0.2723, 0.5091], device='cuda:0'), 'resnet18.layer2.1.bn2.bias': tensor([-0.2003, -0.1697, -0.4742, -0.3375, -0.2938, -0.3234, -0.3581, -0.1294,\n",
      "        -0.2195,  0.0479, -0.3243, -0.2748, -0.1882,  0.0163, -0.1932, -0.1740,\n",
      "        -0.3288, -0.1254, -0.2415, -0.0830, -0.2052, -0.3147, -0.1995, -0.2795,\n",
      "        -0.4160, -0.2082, -0.2875, -0.0714, -0.2021, -0.2286, -0.1617, -0.1523,\n",
      "        -0.3201, -0.1944, -0.3076, -0.3719,  0.1631, -0.0532, -0.0403, -0.0484,\n",
      "        -0.0139, -0.1067, -0.0861,  0.0148, -0.2582, -0.0784, -0.0961, -0.1045,\n",
      "        -0.0372, -0.1729, -0.1281, -0.4303, -0.4433, -0.2915,  0.0496, -0.2071,\n",
      "        -0.3169, -0.1974,  0.5247, -0.1163, -0.0512, -0.2207, -0.3736, -0.1466,\n",
      "        -0.1242, -0.5116,  0.2532,  0.0983, -0.3446, -0.3518, -0.0796, -0.4623,\n",
      "        -0.2519, -0.5991, -0.0691, -0.2591, -0.3765, -0.1657, -0.0532, -0.2205,\n",
      "        -0.3691, -0.0207, -0.1072, -0.2999,  0.1258,  0.0621, -0.1647, -0.0937,\n",
      "        -0.0614, -0.2194, -0.4576, -0.4087, -0.4650, -0.0427, -0.1823, -0.0473,\n",
      "        -0.0484, -0.0328, -0.1248, -0.1163, -0.1958, -0.3050,  0.0591, -0.0861,\n",
      "        -0.1788, -0.2780,  0.0620, -0.2198, -0.2131, -0.1846, -0.2264, -0.1836,\n",
      "        -0.3226, -0.3524, -0.1854, -0.1958, -0.0943, -0.3453, -0.2757, -0.0450,\n",
      "        -0.1159,  0.1751, -0.1756,  0.0518, -0.3969, -0.3668,  0.2201, -0.2114],\n",
      "       device='cuda:0'), 'resnet18.layer2.1.bn2.running_mean': tensor([-0.0925, -0.2606, -0.1968, -0.0607, -0.1198, -0.0620, -0.2101, -0.2988,\n",
      "        -0.1718,  0.0730, -0.1503,  0.0404,  0.0057, -0.3439, -0.1316,  0.1142,\n",
      "        -0.1728,  0.1105, -0.0160, -0.3078, -0.0160, -0.0650,  0.0714, -0.0129,\n",
      "         0.0489, -0.2439, -0.0562, -0.0767, -0.0925, -0.2497, -0.4993, -0.0852,\n",
      "         0.0191, -0.0162, -0.0667, -0.3663, -0.3244, -0.0209, -0.0712,  0.0603,\n",
      "         0.3340, -0.4784, -0.0995, -0.3523, -0.1928, -0.1887, -0.1603,  0.1064,\n",
      "        -0.5908,  0.0305, -0.3135, -0.0899, -0.2949, -0.1508, -0.1737, -0.1429,\n",
      "        -0.2170, -0.0565, -0.0217, -0.0105, -0.9094,  0.0138, -0.1209, -0.1505,\n",
      "        -0.1306, -0.2366, -0.0096, -0.1838,  0.0126, -0.2326, -0.2155, -0.3393,\n",
      "        -0.1345, -0.0047, -0.0812, -0.3091,  0.0520, -0.0040, -0.0978, -0.0773,\n",
      "         0.1921, -0.5705, -0.0205, -0.0183,  0.1753, -0.1242, -0.2668, -0.2653,\n",
      "        -0.5271, -0.0423,  0.2803, -0.2678, -0.1630, -0.0203, -0.1456, -0.2819,\n",
      "        -0.0223, -0.2165, -0.7761,  0.0581, -0.2169, -0.0206, -0.2576, -0.3806,\n",
      "        -0.1156, -0.1486, -0.1599,  0.1053, -0.3168,  0.5101, -0.1762, -0.0760,\n",
      "         0.0046, -0.3546, -0.1825, -0.1433,  0.0439, -0.0666, -0.5737, -0.0518,\n",
      "         0.0399, -0.0483, -0.3420, -0.1208, -0.3485, -0.2214, -0.1802, -0.0358],\n",
      "       device='cuda:0'), 'resnet18.layer2.1.bn2.running_var': tensor([0.1369, 0.0756, 0.1150, 0.0864, 0.1393, 0.1331, 0.0679, 0.2241, 0.1220,\n",
      "        0.0797, 0.1354, 0.0793, 0.0896, 0.1310, 0.1459, 0.1330, 0.1059, 0.2197,\n",
      "        0.1375, 0.1283, 0.0580, 0.2204, 0.0733, 0.1788, 0.1114, 0.2499, 0.1257,\n",
      "        0.0752, 0.0897, 0.1279, 0.1876, 0.1364, 0.1064, 0.0553, 0.0417, 0.1529,\n",
      "        0.2161, 0.1437, 0.1138, 0.0901, 0.1569, 0.2471, 0.1221, 0.1038, 0.0659,\n",
      "        0.1948, 0.1420, 0.0612, 0.2832, 0.1176, 0.1107, 0.1526, 0.1981, 0.0741,\n",
      "        0.0838, 0.0653, 0.1000, 0.0807, 0.2225, 0.0865, 0.2855, 0.1125, 0.2389,\n",
      "        0.1284, 0.1018, 0.1020, 0.1594, 0.2699, 0.1310, 0.1482, 0.1549, 0.1483,\n",
      "        0.2081, 0.1270, 0.1112, 0.1378, 0.1346, 0.1057, 0.0756, 0.1106, 0.0690,\n",
      "        0.2172, 0.1074, 0.0981, 0.1077, 0.1754, 0.1936, 0.1097, 0.1356, 0.0684,\n",
      "        0.0838, 0.2322, 0.0818, 0.0914, 0.0821, 0.1242, 0.1837, 0.1050, 0.2981,\n",
      "        0.1326, 0.1085, 0.0466, 0.1035, 0.1034, 0.1581, 0.2368, 0.2634, 0.0444,\n",
      "        0.1832, 0.1603, 0.2037, 0.1226, 0.0858, 0.1633, 0.0902, 0.0966, 0.1599,\n",
      "        0.0450, 0.1580, 0.1191, 0.0666, 0.0515, 0.1478, 0.0534, 0.1144, 0.1199,\n",
      "        0.1733, 0.1530], device='cuda:0'), 'resnet18.layer2.1.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer3.0.conv1.weight': tensor([[[[-1.2407e-02,  2.0768e-02, -1.8329e-03],\n",
      "          [ 5.5052e-03,  2.5287e-02,  4.0914e-03],\n",
      "          [-2.3508e-03,  3.2592e-03,  3.6008e-03]],\n",
      "\n",
      "         [[-3.4035e-02, -1.9149e-02, -1.5041e-02],\n",
      "          [ 1.1241e-03, -4.0057e-03, -6.7451e-03],\n",
      "          [ 9.6242e-04, -2.8847e-02, -2.3699e-02]],\n",
      "\n",
      "         [[-1.0390e-03, -3.0101e-02, -1.9516e-02],\n",
      "          [-4.3261e-02, -5.3824e-02, -1.6357e-02],\n",
      "          [-4.6987e-02, -2.6886e-02,  1.0504e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1504e-02,  1.6178e-03,  2.5611e-02],\n",
      "          [ 6.2454e-03,  2.7428e-02,  2.5904e-02],\n",
      "          [ 3.2112e-03,  1.7117e-02,  4.0013e-03]],\n",
      "\n",
      "         [[ 4.2241e-03, -1.2516e-02,  1.2565e-02],\n",
      "          [-2.0349e-02, -1.7126e-02, -1.9232e-03],\n",
      "          [ 1.1223e-02,  1.3164e-02,  8.7517e-03]],\n",
      "\n",
      "         [[ 7.3260e-02,  5.0949e-02,  3.6032e-02],\n",
      "          [ 7.1050e-02,  3.7010e-02,  1.4039e-02],\n",
      "          [ 1.9823e-03,  3.6433e-03, -2.1541e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.9885e-02,  7.5738e-04, -2.6346e-02],\n",
      "          [-2.2610e-02,  7.2809e-03, -3.3296e-02],\n",
      "          [-1.3192e-03,  4.2590e-04, -2.5151e-02]],\n",
      "\n",
      "         [[-1.1353e-03,  1.0663e-02, -1.9384e-02],\n",
      "          [-1.2630e-02,  8.8046e-03,  1.3106e-02],\n",
      "          [-2.0785e-02, -2.2037e-02,  1.2811e-03]],\n",
      "\n",
      "         [[ 4.3820e-03,  1.9803e-02,  2.0750e-02],\n",
      "          [ 1.0109e-02,  9.4918e-03,  3.7897e-02],\n",
      "          [-1.3262e-02, -8.4909e-03,  1.1847e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.2423e-04, -3.1111e-03,  1.7745e-02],\n",
      "          [ 1.9618e-02, -1.1069e-02,  2.5930e-03],\n",
      "          [-1.7823e-02, -1.9972e-02, -1.2368e-02]],\n",
      "\n",
      "         [[-5.9530e-03,  1.6295e-03,  8.7723e-03],\n",
      "          [ 8.5228e-03,  2.2428e-03, -1.7487e-02],\n",
      "          [-2.8949e-02, -2.3791e-02, -4.8021e-02]],\n",
      "\n",
      "         [[ 5.3444e-04,  2.4390e-02,  4.8428e-03],\n",
      "          [ 8.1614e-06,  1.7574e-02,  1.4390e-02],\n",
      "          [ 3.7510e-02,  4.4455e-02,  2.0732e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.0039e-02, -4.7134e-02, -2.5694e-02],\n",
      "          [-3.9181e-02, -4.3711e-02, -1.1509e-02],\n",
      "          [-1.3186e-02, -2.1738e-02, -5.4638e-02]],\n",
      "\n",
      "         [[-1.8234e-02, -3.2833e-02, -2.4716e-02],\n",
      "          [-1.1871e-02, -4.4955e-02, -5.5931e-02],\n",
      "          [ 2.0169e-02, -2.0085e-02, -3.2346e-02]],\n",
      "\n",
      "         [[ 4.9941e-02,  6.4885e-02,  4.9047e-03],\n",
      "          [ 4.4630e-02,  5.6599e-02,  3.5683e-02],\n",
      "          [ 2.7415e-02,  5.8410e-02,  2.1724e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.1389e-04,  6.5947e-04,  1.7974e-03],\n",
      "          [-2.4162e-02, -1.4271e-02, -1.4150e-02],\n",
      "          [-2.3889e-02, -3.3920e-02, -4.6196e-02]],\n",
      "\n",
      "         [[-2.7107e-02, -3.9056e-02, -5.6704e-02],\n",
      "          [-2.1932e-04,  1.1615e-02,  1.5034e-02],\n",
      "          [ 1.5949e-02,  2.3846e-02,  4.7026e-03]],\n",
      "\n",
      "         [[-1.7433e-02, -4.2667e-02, -2.7637e-02],\n",
      "          [-2.4709e-02, -2.6877e-02,  6.8735e-03],\n",
      "          [ 4.4336e-03, -2.2673e-02, -4.3368e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 7.9413e-04,  3.3050e-02,  1.9016e-02],\n",
      "          [ 1.1461e-02,  4.4007e-03,  4.5694e-03],\n",
      "          [ 2.1069e-02, -9.3533e-04,  3.2387e-02]],\n",
      "\n",
      "         [[ 1.9016e-03,  6.5864e-03,  4.6961e-03],\n",
      "          [ 1.3343e-03,  5.8405e-03, -3.3907e-04],\n",
      "          [ 7.6576e-03, -1.9324e-02, -2.1695e-02]],\n",
      "\n",
      "         [[-7.8124e-03,  3.1345e-02,  1.1356e-02],\n",
      "          [-1.6513e-03,  5.5211e-02,  2.7423e-02],\n",
      "          [-5.6174e-03,  3.5570e-02,  2.4883e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.7474e-03, -1.7703e-02, -1.0416e-02],\n",
      "          [ 1.1937e-02, -1.2859e-02,  9.9088e-03],\n",
      "          [-2.8358e-03, -4.4476e-03,  1.9594e-02]],\n",
      "\n",
      "         [[-3.5032e-02, -1.3534e-02, -2.9373e-02],\n",
      "          [-3.0219e-02, -1.7782e-02, -2.4450e-02],\n",
      "          [ 1.9272e-02,  6.8578e-02,  5.9025e-02]],\n",
      "\n",
      "         [[-4.7104e-03,  1.6911e-02,  3.2769e-03],\n",
      "          [ 8.0235e-03,  4.1080e-03,  1.2462e-02],\n",
      "          [ 1.8510e-02, -5.0711e-03, -2.8352e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 5.5027e-02,  1.0723e-01,  7.2753e-02],\n",
      "          [ 1.0125e-01,  1.2390e-01,  1.7431e-01],\n",
      "          [ 6.4650e-02,  1.1201e-01,  9.9275e-02]],\n",
      "\n",
      "         [[-2.5414e-02, -1.5959e-03, -7.4522e-03],\n",
      "          [-3.8288e-02, -9.9538e-03,  1.2489e-03],\n",
      "          [ 1.4142e-03, -7.0160e-03, -4.3232e-03]],\n",
      "\n",
      "         [[-3.5639e-02, -5.4075e-02, -5.5979e-02],\n",
      "          [-9.6524e-03, -2.4425e-02, -2.3064e-02],\n",
      "          [-2.2466e-02, -1.4063e-02, -3.3129e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.1332e-02,  6.1912e-03, -5.0671e-02],\n",
      "          [ 2.3272e-04,  1.6874e-02,  3.3363e-03],\n",
      "          [ 1.2978e-02,  2.1854e-02, -1.0246e-02]],\n",
      "\n",
      "         [[ 2.8535e-02, -2.2158e-03,  2.1976e-02],\n",
      "          [-1.7990e-02, -2.3665e-02, -3.3364e-02],\n",
      "          [-4.6564e-02, -8.8115e-02, -3.8337e-02]],\n",
      "\n",
      "         [[-1.6007e-02, -6.2052e-03,  8.7533e-03],\n",
      "          [ 5.1921e-03, -2.5403e-03, -1.7916e-03],\n",
      "          [ 5.1755e-03, -8.9177e-03, -9.2543e-03]]],\n",
      "\n",
      "\n",
      "        [[[-8.1994e-03, -3.2278e-02, -4.4467e-02],\n",
      "          [-2.8994e-02, -1.0243e-02, -5.4726e-02],\n",
      "          [-7.3245e-04, -2.7792e-03, -1.4389e-03]],\n",
      "\n",
      "         [[ 9.9226e-03, -7.0653e-03, -1.6315e-02],\n",
      "          [-1.1194e-02,  8.2508e-04, -1.8458e-02],\n",
      "          [ 1.8944e-02,  1.3884e-02,  2.2766e-03]],\n",
      "\n",
      "         [[-4.7510e-02, -8.6474e-02, -8.4180e-02],\n",
      "          [-6.7392e-02, -8.3216e-02, -9.2507e-02],\n",
      "          [-5.2470e-02, -7.0608e-02, -6.2184e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.0332e-04, -2.2998e-02, -4.6542e-02],\n",
      "          [-4.3100e-02, -3.9999e-02, -1.8795e-02],\n",
      "          [-2.3220e-02,  2.5426e-02, -9.8068e-03]],\n",
      "\n",
      "         [[ 1.4281e-02,  4.3449e-02,  3.3904e-02],\n",
      "          [ 4.1241e-04,  2.5167e-02,  2.5858e-02],\n",
      "          [-1.5896e-02, -2.3517e-02, -4.3033e-02]],\n",
      "\n",
      "         [[ 1.9588e-03,  2.3673e-03, -1.2831e-02],\n",
      "          [-1.1659e-02, -1.7224e-02, -4.7749e-02],\n",
      "          [-2.8304e-02, -4.4779e-02, -4.9721e-02]]]], device='cuda:0'), 'resnet18.layer3.0.bn1.weight': tensor([0.3429, 0.2931, 0.3304, 0.3676, 0.3686, 0.4073, 0.3032, 0.3091, 0.3921,\n",
      "        0.3725, 0.3169, 0.4770, 0.3458, 0.3568, 0.4353, 0.3999, 0.3108, 0.3610,\n",
      "        0.2987, 0.4266, 0.3840, 0.3494, 0.3195, 0.3210, 0.3551, 0.4651, 0.4428,\n",
      "        0.4115, 0.3289, 0.3904, 0.3618, 0.3886, 0.3050, 0.2771, 0.4376, 0.4087,\n",
      "        0.3235, 0.4713, 0.4258, 0.4388, 0.4340, 0.4058, 0.2563, 0.3419, 0.4062,\n",
      "        0.3818, 0.3579, 0.3945, 0.3411, 0.3574, 0.3272, 0.3080, 0.3798, 0.3934,\n",
      "        0.3109, 0.3736, 0.3124, 0.3491, 0.3556, 0.4041, 0.2427, 0.3629, 0.3311,\n",
      "        0.4114, 0.4087, 0.4126, 0.3334, 0.3160, 0.2721, 0.4186, 0.3046, 0.3463,\n",
      "        0.3991, 0.4461, 0.3099, 0.3010, 0.3572, 0.4519, 0.3811, 0.3942, 0.3948,\n",
      "        0.4535, 0.4904, 0.3153, 0.3002, 0.4157, 0.4046, 0.3419, 0.4072, 0.3770,\n",
      "        0.4377, 0.4036, 0.3770, 0.4395, 0.3235, 0.3980, 0.3744, 0.3129, 0.2604,\n",
      "        0.4403, 0.4111, 0.3878, 0.3085, 0.3843, 0.3523, 0.3918, 0.3450, 0.3002,\n",
      "        0.3361, 0.2880, 0.4036, 0.2582, 0.4372, 0.4230, 0.3466, 0.3140, 0.4921,\n",
      "        0.3479, 0.4192, 0.2939, 0.4073, 0.3710, 0.3713, 0.3152, 0.3557, 0.3234,\n",
      "        0.2446, 0.4401, 0.4323, 0.4048, 0.3252, 0.3910, 0.4256, 0.3514, 0.3539,\n",
      "        0.3293, 0.2899, 0.2893, 0.3195, 0.4595, 0.3726, 0.4160, 0.2700, 0.3476,\n",
      "        0.4424, 0.3195, 0.3877, 0.3895, 0.4943, 0.4004, 0.2510, 0.3226, 0.3239,\n",
      "        0.4932, 0.3189, 0.3679, 0.3798, 0.3394, 0.3256, 0.4299, 0.3925, 0.3996,\n",
      "        0.2711, 0.3210, 0.4008, 0.3767, 0.3940, 0.3923, 0.3648, 0.2985, 0.3127,\n",
      "        0.3596, 0.3500, 0.3590, 0.3180, 0.4049, 0.3577, 0.4713, 0.3175, 0.3652,\n",
      "        0.2802, 0.4182, 0.3533, 0.3807, 0.5142, 0.4867, 0.4419, 0.3775, 0.3458,\n",
      "        0.4686, 0.3563, 0.3068, 0.3525, 0.4900, 0.4003, 0.3502, 0.3622, 0.2845,\n",
      "        0.4048, 0.3353, 0.2844, 0.3401, 0.5174, 0.3132, 0.3617, 0.1803, 0.4493,\n",
      "        0.3429, 0.2968, 0.2835, 0.4711, 0.4371, 0.2636, 0.3517, 0.2929, 0.4135,\n",
      "        0.3338, 0.3915, 0.2975, 0.1984, 0.2894, 0.4038, 0.3411, 0.4271, 0.3689,\n",
      "        0.4720, 0.3859, 0.4236, 0.2865, 0.3816, 0.2986, 0.3863, 0.3466, 0.3415,\n",
      "        0.4033, 0.2378, 0.4263, 0.4325, 0.3046, 0.4191, 0.3660, 0.3727, 0.4220,\n",
      "        0.3238, 0.3517, 0.3911, 0.4683, 0.4444, 0.4010, 0.4903, 0.3688, 0.4736,\n",
      "        0.3269, 0.3378, 0.3733, 0.4238], device='cuda:0'), 'resnet18.layer3.0.bn1.bias': tensor([-0.0773, -0.0369, -0.1849, -0.0989, -0.1482, -0.0635, -0.2047, -0.1608,\n",
      "        -0.2082, -0.1282,  0.1004, -0.3124, -0.0311, -0.0817,  0.0034, -0.2174,\n",
      "        -0.1612, -0.1480, -0.1295, -0.1165, -0.3757, -0.2624, -0.1760, -0.1973,\n",
      "        -0.2440, -0.1916, -0.3079, -0.2368, -0.2035, -0.0759, -0.0989, -0.1671,\n",
      "        -0.0968, -0.0400, -0.0211, -0.1663, -0.0822, -0.1419, -0.1091, -0.2300,\n",
      "        -0.3070, -0.1675, -0.2308, -0.0912, -0.3563, -0.1763, -0.1274, -0.2302,\n",
      "        -0.2306, -0.1376, -0.2269, -0.1206, -0.2118,  0.0423, -0.1240, -0.2108,\n",
      "        -0.1847, -0.0976, -0.3736, -0.1995, -0.0156, -0.2429, -0.1657, -0.2253,\n",
      "        -0.3293, -0.2905, -0.0680, -0.1380,  0.1404, -0.3360, -0.1293, -0.1966,\n",
      "        -0.1292, -0.2743, -0.1788, -0.0597, -0.1048, -0.1302, -0.0860, -0.0748,\n",
      "        -0.3983, -0.0198, -0.3452, -0.1008, -0.0263, -0.2509, -0.1694, -0.0905,\n",
      "        -0.1397, -0.2707, -0.2007, -0.2541, -0.0911, -0.3205, -0.1433, -0.0683,\n",
      "        -0.0549,  0.0023,  0.0857, -0.2165, -0.3172, -0.3888, -0.1612, -0.1482,\n",
      "        -0.2402, -0.1399,  0.0268, -0.1342, -0.1161, -0.1560, -0.1914, -0.0281,\n",
      "        -0.2401, -0.3054, -0.1498, -0.1756, -0.3636, -0.1290, -0.2019, -0.1086,\n",
      "        -0.1938, -0.1052, -0.1934, -0.2090, -0.1196, -0.1039, -0.2299, -0.3237,\n",
      "        -0.1192, -0.1613, -0.1779, -0.2922,  0.0234, -0.1949, -0.1343, -0.2417,\n",
      "        -0.1973, -0.0344, -0.1875, -0.2227, -0.3118, -0.0706, -0.1433, -0.2358,\n",
      "        -0.2576, -0.1937, -0.0964, -0.2166, -0.2323, -0.1702,  0.1297, -0.1702,\n",
      "        -0.3582, -0.1908,  0.1285, -0.3223, -0.1432, -0.2016,  0.1603, -0.2629,\n",
      "        -0.1500, -0.0869,  0.0580, -0.1992, -0.0303, -0.2736, -0.3315, -0.1857,\n",
      "        -0.2061, -0.2655,  0.0032, -0.1245, -0.2018, -0.2366, -0.0545, -0.1645,\n",
      "        -0.1929, -0.3159, -0.1999, -0.1117, -0.1200, -0.3301, -0.3230, -0.1048,\n",
      "        -0.2882, -0.3095, -0.0936, -0.2786, -0.2501, -0.4085, -0.2085, -0.1870,\n",
      "        -0.2530, -0.3226, -0.1886,  0.0502, -0.1362, -0.0266, -0.1687, -0.0772,\n",
      "        -0.1705,  0.0007, -0.2665, -0.1413, -0.1560,  0.0301, -0.3806, -0.1078,\n",
      "        -0.0197, -0.0781, -0.2209, -0.1971,  0.1579,  0.0258, -0.0112, -0.3866,\n",
      "        -0.1955, -0.3853, -0.0782, -0.0711, -0.0697, -0.0295,  0.0246, -0.0744,\n",
      "        -0.2407, -0.2038, -0.2582, -0.2041, -0.1997, -0.2147,  0.0006, -0.1438,\n",
      "        -0.0574, -0.2046, -0.0989, -0.0887, -0.1428, -0.1237, -0.0885, -0.1477,\n",
      "        -0.2070, -0.0859, -0.2793, -0.0988, -0.2033, -0.2402, -0.2022, -0.2557,\n",
      "        -0.2507, -0.3402, -0.2498, -0.2103, -0.2098, -0.1175, -0.0620, -0.0476],\n",
      "       device='cuda:0'), 'resnet18.layer3.0.bn1.running_mean': tensor([-0.0705, -0.2239, -0.2774, -0.2176, -0.4159, -0.1442, -0.0722,  0.0262,\n",
      "        -0.1811, -0.1907, -0.2696, -0.1943, -0.5504, -0.4742, -0.6278, -0.2667,\n",
      "         0.0849, -0.3777, -0.0226, -0.1179, -0.2063, -0.2763, -0.0480,  0.0597,\n",
      "        -0.3452, -0.2399, -0.1609, -0.0355, -0.2030, -0.0938, -0.2293, -0.3445,\n",
      "         0.1113, -0.2150, -0.1981, -0.3746, -0.1524, -0.2481, -0.2926, -0.2358,\n",
      "        -0.1513, -0.2623, -0.1807, -0.0399, -0.2704, -0.3462, -0.1389, -0.2267,\n",
      "        -0.2625, -0.4299, -0.2282, -0.1355,  0.0166, -0.3807, -0.2276, -0.3571,\n",
      "        -0.1274, -0.1112,  0.0015,  0.0162, -0.3282, -0.2647, -0.0341, -0.0974,\n",
      "        -0.3463,  0.0314, -0.3036, -0.1431, -0.1385, -0.1818, -0.3141, -0.1953,\n",
      "        -0.3057, -0.5373, -0.1673,  0.0424, -0.2642, -0.1448, -0.0054, -0.2584,\n",
      "         0.0879, -0.2376, -0.2711, -0.0462, -0.0699, -0.3643, -0.1961, -0.0378,\n",
      "        -0.3424, -0.1390, -0.3211, -0.2089,  0.0333, -0.3546, -0.0164, -0.3041,\n",
      "        -0.2395, -0.2480, -0.2797, -0.2023, -0.2891, -0.3129, -0.2879, -0.0871,\n",
      "        -0.3043, -0.2523, -0.2159, -0.3040, -0.0299, -0.1129, -0.2138, -0.3335,\n",
      "        -0.2414, -0.3188,  0.0397,  0.0248, -0.5204, -0.0463,  0.0073, -0.3044,\n",
      "        -0.3854, -0.2661, -0.2081, -0.1921, -0.2052, -0.1631, -0.0235,  0.0578,\n",
      "        -0.1930, -0.2145, -0.0077, -0.3252, -0.3326, -0.1202, -0.4190, -0.0012,\n",
      "        -0.3737, -0.0826,  0.0733, -0.1887, -0.2476, -0.3089, -0.1516, -0.3567,\n",
      "        -0.2217, -0.0487, -0.1782, -0.2225, -0.1833, -0.2688, -0.0910,  0.1879,\n",
      "        -0.1945, -0.2218, -0.1675, -0.1535, -0.0769, -0.0981, -0.0327, -0.3857,\n",
      "        -0.2343, -0.2231, -0.2603, -0.2727, -0.4191, -0.2317, -0.1369, -0.2998,\n",
      "        -0.2759, -0.1875, -0.0264, -0.0167, -0.3498, -0.0683, -0.4996, -0.2912,\n",
      "        -0.1196, -0.2671, -0.1517, -0.1246, -0.3527, -0.3632, -0.3393, -0.1442,\n",
      "        -0.2659, -0.2369,  0.0393, -0.2273, -0.2996, -0.1292, -0.2913,  0.0968,\n",
      "        -0.3616, -0.2055, -0.2751, -0.0828, -0.1939, -0.2844, -0.2344, -0.1411,\n",
      "        -0.3763, -0.4409, -0.0936, -0.0719, -0.2082, -0.1346, -0.2057, -0.1527,\n",
      "        -0.1003, -0.2118, -0.2208, -0.3854, -0.2926, -0.3231, -0.1418, -0.1444,\n",
      "        -0.0742, -0.0466, -0.1272,  0.0722, -0.4281, -0.4211, -0.1683, -0.1545,\n",
      "        -0.2901, -0.3031, -0.3061, -0.3672, -0.1511, -0.2464, -0.2071, -0.0416,\n",
      "        -0.0959, -0.2167, -0.1745, -0.0849, -0.2010, -0.4420, -0.0634, -0.5222,\n",
      "        -0.2991, -0.2185, -0.2681, -0.2386, -0.0831, -0.3104, -0.3780, -0.0121,\n",
      "        -0.3878, -0.2843, -0.0598, -0.1295, -0.3681, -0.1570, -0.3415, -0.2140],\n",
      "       device='cuda:0'), 'resnet18.layer3.0.bn1.running_var': tensor([0.0485, 0.0498, 0.0337, 0.0601, 0.0994, 0.1176, 0.0350, 0.0350, 0.0529,\n",
      "        0.0987, 0.0778, 0.0641, 0.0666, 0.0729, 0.1139, 0.0425, 0.0546, 0.0704,\n",
      "        0.0506, 0.0669, 0.0318, 0.0784, 0.0400, 0.0283, 0.0376, 0.0744, 0.0741,\n",
      "        0.0346, 0.0524, 0.0703, 0.0738, 0.0657, 0.0696, 0.0376, 0.1422, 0.0949,\n",
      "        0.0419, 0.0888, 0.0769, 0.0785, 0.0427, 0.0602, 0.0207, 0.0461, 0.0451,\n",
      "        0.0599, 0.0434, 0.0401, 0.0581, 0.0532, 0.0299, 0.0469, 0.0480, 0.0982,\n",
      "        0.0393, 0.0652, 0.0489, 0.0724, 0.0297, 0.0586, 0.0481, 0.0397, 0.0376,\n",
      "        0.0748, 0.0567, 0.0505, 0.0660, 0.0348, 0.0607, 0.0600, 0.0907, 0.0501,\n",
      "        0.0972, 0.0694, 0.0525, 0.0538, 0.0593, 0.0948, 0.0468, 0.0688, 0.0314,\n",
      "        0.1770, 0.0471, 0.0327, 0.0467, 0.0675, 0.0887, 0.0505, 0.0639, 0.0573,\n",
      "        0.0673, 0.0600, 0.0685, 0.0547, 0.0438, 0.1602, 0.0885, 0.0660, 0.0914,\n",
      "        0.0953, 0.0471, 0.0379, 0.0663, 0.0650, 0.0680, 0.0684, 0.1031, 0.0529,\n",
      "        0.0390, 0.0493, 0.0516, 0.0418, 0.0564, 0.0568, 0.0403, 0.0413, 0.0632,\n",
      "        0.0309, 0.0667, 0.0397, 0.0655, 0.0551, 0.0935, 0.0521, 0.0361, 0.0391,\n",
      "        0.0206, 0.0648, 0.0870, 0.0579, 0.0449, 0.0534, 0.1300, 0.0292, 0.0758,\n",
      "        0.0375, 0.0367, 0.0471, 0.0464, 0.1062, 0.0386, 0.1062, 0.0338, 0.0409,\n",
      "        0.0629, 0.0376, 0.0972, 0.0427, 0.0955, 0.0673, 0.0772, 0.0458, 0.0461,\n",
      "        0.0706, 0.1206, 0.0428, 0.0572, 0.0512, 0.1239, 0.0660, 0.0641, 0.0874,\n",
      "        0.0628, 0.0517, 0.0662, 0.0421, 0.0424, 0.0597, 0.0474, 0.0334, 0.0903,\n",
      "        0.0541, 0.0675, 0.0274, 0.0553, 0.0590, 0.0417, 0.0683, 0.0292, 0.0723,\n",
      "        0.0420, 0.0538, 0.0409, 0.0538, 0.0849, 0.0633, 0.1111, 0.0507, 0.0563,\n",
      "        0.0516, 0.0526, 0.0304, 0.0448, 0.0511, 0.0477, 0.0747, 0.0409, 0.0394,\n",
      "        0.1183, 0.0759, 0.0732, 0.0755, 0.0937, 0.0495, 0.0495, 0.0507, 0.0455,\n",
      "        0.0684, 0.0918, 0.0468, 0.0984, 0.0825, 0.0891, 0.1023, 0.0679, 0.0279,\n",
      "        0.0449, 0.0459, 0.0407, 0.0359, 0.0510, 0.0929, 0.0420, 0.0978, 0.0499,\n",
      "        0.1051, 0.0562, 0.0809, 0.0329, 0.0691, 0.0446, 0.0923, 0.0736, 0.0474,\n",
      "        0.1168, 0.0344, 0.0652, 0.0784, 0.0407, 0.0499, 0.0509, 0.0805, 0.0579,\n",
      "        0.0392, 0.0282, 0.0575, 0.0943, 0.0684, 0.0596, 0.0452, 0.0440, 0.0860,\n",
      "        0.0642, 0.0602, 0.0840, 0.2058], device='cuda:0'), 'resnet18.layer3.0.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer3.0.conv2.weight': tensor([[[[ 5.7323e-03, -5.2230e-03, -1.6263e-02],\n",
      "          [-4.4714e-02, -7.3166e-02, -6.9207e-02],\n",
      "          [-5.0946e-02, -7.9218e-02, -8.5786e-02]],\n",
      "\n",
      "         [[-3.0872e-02,  6.8574e-03, -2.0908e-02],\n",
      "          [ 6.2256e-03,  3.3319e-02, -7.6926e-03],\n",
      "          [-2.2355e-02,  5.7224e-03,  5.3638e-03]],\n",
      "\n",
      "         [[ 2.3865e-02,  4.6185e-02,  2.7661e-02],\n",
      "          [ 2.9821e-02,  1.0867e-02, -1.1334e-02],\n",
      "          [ 1.3612e-02, -9.2577e-03, -2.5699e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.8802e-02, -9.5961e-03, -3.2247e-03],\n",
      "          [ 2.0618e-03, -1.5048e-02, -1.8243e-02],\n",
      "          [ 3.1559e-02,  1.8087e-02,  6.8729e-03]],\n",
      "\n",
      "         [[-1.2725e-02,  8.4941e-03,  4.8410e-02],\n",
      "          [ 6.5151e-03,  2.8022e-02,  2.8839e-02],\n",
      "          [ 1.4725e-02,  6.5244e-02,  5.8115e-02]],\n",
      "\n",
      "         [[-5.1638e-02,  1.2624e-02, -3.1093e-03],\n",
      "          [-6.0102e-02,  1.2728e-02,  5.3470e-02],\n",
      "          [-3.2008e-02,  2.0382e-02,  4.1525e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 4.3716e-02,  6.0306e-02,  2.9366e-02],\n",
      "          [ 4.8244e-02,  3.1278e-02,  1.4498e-02],\n",
      "          [ 3.1658e-02,  9.6207e-03, -1.8694e-02]],\n",
      "\n",
      "         [[-4.1271e-03, -3.9399e-02, -5.7205e-02],\n",
      "          [-4.1254e-02, -5.5214e-02, -6.2597e-02],\n",
      "          [-3.2751e-02, -5.7343e-02, -7.5304e-02]],\n",
      "\n",
      "         [[ 4.1407e-03,  5.6381e-02,  1.4893e-03],\n",
      "          [ 1.0547e-02,  3.0548e-02,  2.1067e-02],\n",
      "          [-6.4922e-03,  1.8884e-03, -5.2787e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.7101e-02, -2.8207e-02,  6.0032e-03],\n",
      "          [-1.6704e-02, -4.1552e-02, -4.1876e-03],\n",
      "          [-3.6166e-02, -7.3283e-02, -4.6515e-02]],\n",
      "\n",
      "         [[ 3.6353e-02, -1.8232e-02,  2.7260e-02],\n",
      "          [ 3.4627e-03, -3.4915e-02, -4.4231e-02],\n",
      "          [-6.1187e-03, -3.9834e-02, -4.8753e-02]],\n",
      "\n",
      "         [[ 3.5221e-02,  2.4972e-03,  4.0606e-02],\n",
      "          [ 4.8186e-03, -4.9904e-02, -1.1774e-02],\n",
      "          [-3.3502e-02, -4.5095e-02, -3.0747e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 3.2028e-02,  2.5485e-02,  1.2431e-02],\n",
      "          [ 2.0328e-02,  2.8242e-02,  7.9727e-03],\n",
      "          [-1.1981e-02,  1.6093e-02,  1.9368e-02]],\n",
      "\n",
      "         [[ 4.5275e-02,  5.4860e-02,  6.0678e-02],\n",
      "          [ 9.3057e-03, -3.0122e-02, -1.3660e-03],\n",
      "          [ 2.0589e-02, -1.4207e-02,  4.6842e-03]],\n",
      "\n",
      "         [[ 1.5304e-02,  2.9692e-02,  1.8780e-02],\n",
      "          [ 1.6295e-02, -2.2487e-02,  1.5238e-02],\n",
      "          [ 2.0267e-02, -3.3131e-02, -2.1599e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.4398e-02,  5.6855e-03,  3.8956e-02],\n",
      "          [-9.2416e-03,  4.7608e-02,  7.8761e-02],\n",
      "          [ 1.1860e-02,  6.7930e-02,  6.6229e-02]],\n",
      "\n",
      "         [[ 6.4791e-02,  3.5275e-03,  1.2673e-02],\n",
      "          [ 2.3247e-02,  1.0245e-02, -5.7764e-03],\n",
      "          [ 7.7347e-03, -1.8423e-02,  1.1154e-02]],\n",
      "\n",
      "         [[ 1.5004e-02,  2.9144e-02, -1.4761e-02],\n",
      "          [ 7.6538e-03,  1.3026e-02, -2.1042e-02],\n",
      "          [-2.6425e-02,  2.4236e-03, -5.3613e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.2630e-02,  1.5069e-02,  7.5675e-02],\n",
      "          [ 3.5944e-03, -5.9183e-02, -4.0988e-02],\n",
      "          [-8.2685e-02, -7.3511e-02, -9.6244e-02]],\n",
      "\n",
      "         [[ 4.3080e-02,  5.9002e-02,  5.9638e-02],\n",
      "          [ 4.1521e-02,  4.2959e-02,  2.2659e-02],\n",
      "          [-2.7013e-02, -4.6002e-02, -3.1371e-02]],\n",
      "\n",
      "         [[-1.3642e-02,  1.9995e-02,  5.6949e-03],\n",
      "          [ 1.6320e-02,  4.3598e-02,  3.9946e-02],\n",
      "          [-2.7270e-02, -4.5848e-03,  8.2567e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.2708e-02,  6.6214e-02,  1.5427e-02],\n",
      "          [-7.6712e-03, -2.9745e-03, -3.9741e-03],\n",
      "          [ 1.0198e-02,  8.7687e-03, -3.9227e-03]],\n",
      "\n",
      "         [[ 6.5890e-04,  1.1981e-02,  8.0539e-03],\n",
      "          [-1.1500e-02,  4.5805e-02,  4.2372e-03],\n",
      "          [ 1.2033e-02, -5.7891e-03, -8.4284e-03]],\n",
      "\n",
      "         [[ 3.3883e-02,  3.0512e-02,  1.5114e-02],\n",
      "          [ 3.5083e-02,  1.9036e-03,  9.4227e-03],\n",
      "          [-5.6410e-03, -7.2894e-03, -2.7379e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 3.2075e-02,  1.9580e-02,  5.6234e-03],\n",
      "          [ 1.1897e-02, -1.8818e-02, -1.4365e-02],\n",
      "          [-1.1944e-02, -5.1617e-02, -3.7677e-02]],\n",
      "\n",
      "         [[ 2.5404e-03,  5.8863e-02,  3.6355e-02],\n",
      "          [ 1.1655e-02,  1.1455e-02, -3.2665e-03],\n",
      "          [-3.6431e-02, -1.8682e-02, -4.0609e-02]],\n",
      "\n",
      "         [[-2.9197e-02, -4.7222e-03, -5.8291e-03],\n",
      "          [-4.7636e-03,  1.6675e-03, -1.3389e-02],\n",
      "          [-1.3260e-02, -1.5829e-02, -1.4190e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.6393e-03,  2.8235e-02,  4.9866e-02],\n",
      "          [-1.6090e-02, -7.6531e-03, -4.2809e-03],\n",
      "          [-5.2641e-02, -5.3786e-02, -4.9630e-02]],\n",
      "\n",
      "         [[ 2.2724e-03,  1.6757e-02, -4.7819e-03],\n",
      "          [ 1.4642e-02,  2.4261e-02,  3.8093e-05],\n",
      "          [ 1.1774e-02,  3.1839e-02, -1.4379e-02]],\n",
      "\n",
      "         [[ 1.1341e-02, -4.2170e-02, -4.7873e-02],\n",
      "          [ 3.7402e-02,  8.3944e-03, -7.6416e-03],\n",
      "          [-1.7252e-02, -3.1459e-02, -8.1183e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 5.0695e-03,  2.0188e-03, -8.4685e-03],\n",
      "          [ 1.2061e-02,  3.4718e-02, -1.0917e-02],\n",
      "          [-2.4080e-04, -1.3463e-03, -5.4402e-02]],\n",
      "\n",
      "         [[-6.2033e-04,  5.8505e-03,  1.1864e-02],\n",
      "          [ 1.9780e-02,  4.3992e-02,  3.4873e-02],\n",
      "          [-2.3571e-02,  8.6965e-03,  2.1020e-02]],\n",
      "\n",
      "         [[-2.2688e-02, -1.6068e-02, -1.0812e-02],\n",
      "          [ 9.7797e-03, -2.5476e-02,  2.1015e-02],\n",
      "          [-2.1680e-02, -2.3552e-02,  1.4224e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.9980e-02,  1.4046e-02,  1.0614e-02],\n",
      "          [ 4.8506e-03, -2.8358e-03,  2.4459e-02],\n",
      "          [-2.7283e-02,  2.1696e-02, -1.0908e-02]],\n",
      "\n",
      "         [[-1.8413e-03, -4.8814e-02,  8.9639e-03],\n",
      "          [ 2.9477e-02,  3.3805e-02,  4.6653e-02],\n",
      "          [ 7.7915e-03,  7.3020e-02,  2.8807e-03]],\n",
      "\n",
      "         [[-5.0926e-03,  1.4764e-02,  7.6072e-04],\n",
      "          [ 1.1659e-02, -9.4874e-03, -1.3839e-02],\n",
      "          [-7.7222e-03,  4.9313e-03, -1.1437e-02]]]], device='cuda:0'), 'resnet18.layer3.0.bn2.weight': tensor([0.5172, 0.3487, 0.3713, 0.4466, 0.4680, 0.3531, 0.3835, 0.4638, 0.3858,\n",
      "        0.3688, 0.3604, 0.4010, 0.4909, 0.6058, 0.4187, 0.4359, 0.3177, 0.4661,\n",
      "        0.6016, 0.4310, 0.4311, 0.3797, 0.4232, 0.6150, 0.3948, 0.4901, 0.4194,\n",
      "        0.5658, 0.4562, 0.5853, 0.4339, 0.5065, 0.4182, 0.2542, 0.3981, 0.4581,\n",
      "        0.5247, 0.4671, 0.3623, 0.5024, 0.3850, 0.4155, 0.4285, 0.3377, 0.3397,\n",
      "        0.2695, 0.3688, 0.4570, 0.4458, 0.5763, 0.3935, 0.5417, 0.4839, 0.5264,\n",
      "        0.4584, 0.4726, 0.3851, 0.3818, 0.3381, 0.4775, 0.4714, 0.3671, 0.4614,\n",
      "        0.4462, 0.6313, 0.4213, 0.5995, 0.3889, 0.3663, 0.5012, 0.4512, 0.2760,\n",
      "        0.3704, 0.3693, 0.4693, 0.4653, 0.4958, 0.4135, 0.5533, 0.4615, 0.3957,\n",
      "        0.3503, 0.5145, 0.3608, 0.3436, 0.3585, 0.6498, 0.4219, 0.5221, 0.5160,\n",
      "        0.3970, 0.4248, 0.5088, 0.2537, 0.2795, 0.2913, 0.3719, 0.5614, 0.3912,\n",
      "        0.5407, 0.4941, 0.4564, 0.3642, 0.2624, 0.3999, 0.5297, 0.4228, 0.5881,\n",
      "        0.5251, 0.2773, 0.4132, 0.3975, 0.3889, 0.4307, 0.4587, 0.3314, 0.4773,\n",
      "        0.9395, 0.5966, 0.4263, 0.5446, 0.5128, 0.4667, 0.3573, 0.4709, 0.3617,\n",
      "        0.4376, 0.4995, 0.5036, 0.2325, 0.3523, 0.4256, 0.2958, 0.4505, 0.3815,\n",
      "        0.5163, 0.4077, 0.5907, 0.4073, 0.3981, 0.5149, 0.4501, 0.2974, 0.4256,\n",
      "        0.3461, 0.5730, 0.4163, 0.4192, 0.5336, 0.6133, 0.5508, 0.2903, 0.4302,\n",
      "        0.4880, 0.3180, 0.3753, 0.3784, 0.3460, 0.3303, 0.3544, 0.4873, 0.4067,\n",
      "        0.3886, 0.3550, 0.3983, 0.4398, 0.4628, 0.4222, 0.4240, 0.5116, 0.4818,\n",
      "        0.3775, 0.3611, 0.5229, 0.4531, 0.5251, 0.3639, 0.5606, 0.5522, 0.5844,\n",
      "        0.4355, 0.4649, 0.4143, 0.5972, 0.3536, 0.4388, 0.4952, 0.4802, 0.3194,\n",
      "        0.4251, 0.2542, 0.3245, 0.4165, 0.4822, 0.3321, 0.3761, 0.4052, 0.2493,\n",
      "        0.4702, 0.4525, 0.4477, 0.4446, 0.3606, 0.4479, 0.5809, 0.5517, 0.1953,\n",
      "        0.4339, 0.3619, 0.3737, 0.3573, 0.3809, 0.3436, 0.5686, 0.6050, 0.5427,\n",
      "        0.3005, 0.2697, 0.4883, 0.4833, 0.3198, 0.3822, 0.3526, 0.4830, 0.6349,\n",
      "        0.5305, 0.5466, 0.4767, 0.3804, 0.5538, 0.4216, 0.3004, 0.4750, 0.4440,\n",
      "        0.4690, 0.2967, 0.4372, 0.4331, 0.3159, 0.3796, 0.2612, 0.5415, 0.4457,\n",
      "        0.5051, 0.3110, 0.3276, 0.6194, 0.4702, 0.5220, 0.4290, 0.4811, 0.4151,\n",
      "        0.5346, 0.5019, 0.4799, 0.4448], device='cuda:0'), 'resnet18.layer3.0.bn2.bias': tensor([-7.6554e-02,  1.1326e-01, -4.9904e-02, -1.3274e-01,  1.3645e-02,\n",
      "        -3.0261e-02, -1.0751e-01,  1.5495e-03, -9.0330e-02,  1.5100e-03,\n",
      "         4.1884e-02, -4.8384e-02, -9.0442e-02, -2.8302e-02, -5.5188e-02,\n",
      "        -1.0034e-01, -1.3541e-01, -2.6931e-01, -1.2719e-01,  4.3343e-02,\n",
      "        -1.8299e-01, -6.9352e-02,  2.1347e-01, -2.5120e-01, -1.0675e-01,\n",
      "        -1.2822e-01, -1.1659e-01, -1.5743e-01, -2.8231e-02, -1.9701e-01,\n",
      "        -1.2404e-01, -1.4478e-01, -1.2623e-01,  1.3158e-01, -9.2639e-02,\n",
      "        -6.4511e-02, -1.5181e-01, -7.1768e-02, -4.1447e-02, -1.4138e-01,\n",
      "        -1.2864e-01, -1.1303e-02,  3.4327e-02, -5.7536e-02, -1.1551e-01,\n",
      "        -5.9831e-02, -2.0807e-02, -1.7915e-01, -2.0957e-03, -1.5778e-01,\n",
      "        -5.4005e-02, -1.5059e-01, -3.1110e-02, -3.4000e-02, -6.2811e-02,\n",
      "        -2.8719e-02, -1.9785e-01, -7.6531e-02, -3.6535e-02, -7.3109e-02,\n",
      "        -1.8355e-01, -1.5427e-02, -1.4561e-01,  7.1023e-03, -9.8972e-02,\n",
      "        -1.3526e-01, -1.8433e-01,  1.0944e-01,  1.4599e-03, -2.3552e-01,\n",
      "        -5.5530e-02, -4.3146e-02, -3.4446e-02, -6.6323e-02, -1.6559e-01,\n",
      "        -1.1994e-01, -1.9952e-01, -8.7160e-02, -1.6147e-01, -9.7478e-02,\n",
      "        -1.5454e-01, -1.0785e-01, -9.7403e-02, -1.0336e-01, -3.8344e-02,\n",
      "        -7.6569e-02, -3.6809e-01, -1.5330e-02, -1.9353e-01, -1.2385e-01,\n",
      "        -2.8334e-02, -9.4155e-02, -2.5839e-01,  1.1838e-01,  8.5930e-02,\n",
      "         6.6508e-02, -7.5765e-02, -8.1833e-03,  5.1521e-02, -2.3498e-02,\n",
      "        -2.5784e-01, -7.6305e-02, -1.1861e-01,  1.5759e-02,  5.3511e-04,\n",
      "        -1.3918e-01,  4.8636e-02, -2.1906e-01, -1.9689e-01,  1.4575e-01,\n",
      "         6.0080e-02, -6.9674e-02, -1.3015e-01, -1.2131e-01, -1.9656e-01,\n",
      "         1.1065e-01, -1.6656e-01, -5.5941e-01, -7.3083e-02, -2.2295e-01,\n",
      "        -3.0442e-01, -1.7587e-03, -1.9765e-01, -4.9652e-02, -4.7905e-02,\n",
      "         1.7064e-02, -6.0595e-02, -2.3933e-01, -1.4799e-01, -4.9529e-02,\n",
      "        -6.5994e-02, -1.2904e-01,  9.6456e-02, -8.5961e-02, -1.7780e-01,\n",
      "        -7.6060e-02, -1.5591e-02, -3.7288e-01, -1.1755e-02, -1.3992e-01,\n",
      "        -1.6289e-01, -3.0300e-01,  4.9184e-02, -6.8450e-02,  4.2490e-02,\n",
      "        -7.1552e-02, -1.0900e-01, -1.9631e-02, -5.1479e-02, -2.4709e-01,\n",
      "        -2.1035e-01,  1.5157e-02, -2.0716e-02, -1.2043e-01, -4.8012e-02,\n",
      "        -7.2375e-02, -1.3906e-01, -6.2635e-02,  1.1974e-01, -1.0318e-02,\n",
      "        -7.8402e-02, -6.8271e-02, -1.8463e-01, -1.3940e-01,  7.4049e-02,\n",
      "        -6.9378e-02, -2.6714e-01, -1.2464e-01, -1.3393e-01,  3.8615e-02,\n",
      "        -3.1645e-01, -7.9600e-02, -5.0805e-02, -2.7360e-01, -1.7989e-01,\n",
      "        -1.8295e-01, -8.6326e-02, -6.0505e-02, -1.6617e-01, -8.1081e-02,\n",
      "        -1.5434e-01, -1.4697e-01, -1.1989e-01,  3.3387e-02, -1.3315e-01,\n",
      "        -2.2824e-02, -1.4915e-01, -6.5042e-02, -1.5106e-01, -1.9439e-01,\n",
      "        -1.4341e-04,  8.8373e-03, -8.6373e-02, -1.6387e-01, -1.9063e-02,\n",
      "        -1.7307e-01, -1.4011e-01,  9.7597e-02, -2.4703e-01, -1.7615e-01,\n",
      "        -2.2738e-02, -1.3433e-01, -6.1043e-02, -1.5367e-01, -2.4720e-01,\n",
      "        -1.1344e-01,  6.7859e-02, -5.8125e-02, -7.0660e-02, -9.8361e-02,\n",
      "         7.8158e-03, -1.3786e-01, -3.9851e-02, -5.7183e-02, -2.1847e-01,\n",
      "         7.0735e-02,  1.1034e-01,  9.7409e-02, -1.4923e-01, -9.7220e-02,\n",
      "        -4.4259e-02, -6.4641e-02, -2.1635e-02, -5.3174e-02, -3.6914e-02,\n",
      "        -2.3380e-01, -2.3737e-01, -1.2329e-01, -1.1358e-01, -1.4653e-01,\n",
      "        -1.8366e-02, -1.2178e-01, -6.9120e-02, -1.7890e-01,  7.7878e-02,\n",
      "         5.7358e-02, -8.9992e-02, -2.6051e-02,  1.0062e-02, -2.5135e-02,\n",
      "         1.0000e-01, -2.3726e-01, -1.1164e-01, -1.0963e-01,  9.0585e-03,\n",
      "         7.0305e-02, -2.5591e-01, -1.4213e-01, -2.0356e-01, -1.1478e-01,\n",
      "        -1.8483e-01,  1.5058e-02, -9.7973e-02, -2.4227e-02, -9.8542e-02,\n",
      "        -9.5827e-02], device='cuda:0'), 'resnet18.layer3.0.bn2.running_mean': tensor([-0.2184, -0.9653,  0.1767, -0.3231, -0.7841, -0.4272, -0.0098, -0.0165,\n",
      "        -0.0598, -0.9526, -0.4228, -0.2658, -0.5369, -0.4846, -0.2055,  0.0361,\n",
      "        -0.3111, -0.6027, -0.4932, -0.8286, -0.2523, -0.8190, -0.1816, -0.3336,\n",
      "        -0.6758, -0.2645, -0.2464, -0.4485, -0.8508, -0.6414, -0.2086, -0.3904,\n",
      "        -0.4520, -0.9438, -0.0951, -0.1763, -0.4841, -0.3252,  0.1051, -0.5153,\n",
      "         0.0555,  0.0503, -0.3097, -0.4961, -0.0961, -0.3461,  0.1809, -0.4768,\n",
      "        -0.6346, -0.2667, -0.3937, -0.3503, -0.3423, -0.3785, -0.2326, -0.5174,\n",
      "        -0.1330,  0.0561, -0.5437, -0.3020, -0.0116, -0.2611, -0.6127, -0.7111,\n",
      "        -0.6199,  0.0749, -0.5346, -0.3610, -0.4054, -0.9652, -0.8300,  0.0886,\n",
      "        -0.1296, -0.7156, -0.3688, -0.2888, -0.4201, -0.7402, -0.2349, -0.1250,\n",
      "         0.2868,  0.2361, -0.1870, -0.2919, -0.2488, -0.5197, -0.6468, -0.3320,\n",
      "        -0.4454,  0.2272, -0.5915,  0.1585, -0.8582,  0.0549, -0.3732, -0.2810,\n",
      "        -0.3628, -0.3301, -0.4488,  0.0330, -0.5722, -0.4975,  0.3166, -0.1533,\n",
      "        -0.5445, -0.0779, -0.6873, -0.6216, -0.4708, -0.2434, -0.8650, -0.3332,\n",
      "        -0.9983, -0.1605, -0.1113,  0.1343, -0.6569, -1.2608, -0.1392,  0.0304,\n",
      "        -0.5081, -0.6971, -0.6243, -0.4411, -0.2006, -0.5880, -0.3087, -0.2315,\n",
      "        -0.2208, -0.3412, -0.1477, -0.0566, -0.5692, -0.2313,  0.4072, -0.1788,\n",
      "        -0.3488, -0.1594, -0.1796,  0.0338, -0.5194, -0.0596, -0.3280, -0.0248,\n",
      "        -0.2919, -0.5969, -0.0032, -0.5159, -0.4325, -0.5487, -0.2052,  0.1254,\n",
      "        -0.2899, -0.6574, -0.4579, -0.3585, -0.1062,  0.0243, -0.4795, -0.4706,\n",
      "        -0.5443, -1.0893, -0.3531, -0.1659, -0.3830, -0.4923, -0.2805, -0.2133,\n",
      "        -0.3933, -0.1400, -0.2055, -0.0117, -0.6097, -0.5874, -0.5517, -0.2858,\n",
      "        -0.3326, -0.7572, -0.6307, -0.2315, -0.3195, -0.7940, -0.3291, -0.7475,\n",
      "        -0.3468, -0.5412, -0.3476, -0.2097,  0.1287, -0.4359, -0.4330, -0.5865,\n",
      "        -0.1701, -0.0982, -0.2407, -0.0503,  0.3458, -0.8397, -0.7837, -0.5179,\n",
      "         0.6521,  0.0694,  0.2504, -0.7154, -0.5700, -0.2892,  0.1222, -0.2258,\n",
      "        -0.5236, -0.4325, -0.6598,  0.0150,  0.1013, -0.5525, -0.4527, -0.5854,\n",
      "        -0.0651, -0.7579, -0.3753, -0.1578,  0.2071, -0.4718,  0.0708, -0.3730,\n",
      "        -0.4035, -0.4091, -0.5665, -0.2398, -0.1553, -0.5675, -0.2897, -0.0544,\n",
      "        -0.4570, -0.0080,  0.0657,  0.0462, -0.7294, -0.3110, -0.0023,  0.2899,\n",
      "         0.0929, -0.1354, -0.4152, -0.5189, -0.0821, -0.3073, -0.3989, -0.4701,\n",
      "        -0.7933, -0.1232, -0.6477, -0.5408,  0.1441, -0.3013, -0.4711, -0.4930],\n",
      "       device='cuda:0'), 'resnet18.layer3.0.bn2.running_var': tensor([0.6340, 0.3444, 0.3109, 0.2853, 0.7017, 0.3201, 0.2685, 0.3622, 0.2768,\n",
      "        0.4255, 0.3442, 0.3628, 0.5917, 1.3905, 0.4596, 0.4196, 0.1916, 0.2480,\n",
      "        0.4638, 0.5780, 0.3664, 0.3213, 1.1606, 0.4382, 0.3292, 0.6184, 0.2640,\n",
      "        0.3722, 0.8188, 0.8451, 0.2803, 0.6854, 0.3378, 0.3731, 0.3092, 0.4111,\n",
      "        0.3087, 0.5028, 0.2874, 0.3391, 0.2251, 0.4470, 0.4418, 0.2072, 0.1869,\n",
      "        0.2272, 0.3510, 0.3981, 0.7127, 0.4439, 0.3612, 0.4397, 0.5901, 0.7681,\n",
      "        0.4274, 0.4738, 0.2644, 0.3639, 0.2189, 1.1145, 0.3698, 0.4991, 0.3543,\n",
      "        0.6141, 1.0017, 0.2634, 0.4918, 0.6773, 0.4824, 0.3545, 0.5164, 0.2782,\n",
      "        0.5412, 0.3938, 0.2451, 0.4097, 0.3055, 0.3161, 0.4646, 0.3502, 0.2529,\n",
      "        0.3279, 0.4239, 0.2550, 0.3598, 0.4885, 0.3468, 0.3553, 0.3477, 0.6647,\n",
      "        0.4797, 0.2674, 0.3333, 0.2838, 0.3635, 0.3764, 0.3427, 0.8047, 0.4943,\n",
      "        0.9073, 0.3089, 0.3186, 0.3754, 0.2622, 0.3654, 0.4022, 0.5461, 0.4351,\n",
      "        0.3544, 0.3942, 0.5582, 0.3886, 0.4028, 0.3805, 0.1744, 0.3846, 0.2977,\n",
      "        0.5150, 0.3969, 0.2928, 0.2882, 0.7939, 0.3206, 0.2625, 0.6587, 0.3944,\n",
      "        0.3980, 0.4015, 0.3615, 0.1433, 0.2273, 0.3163, 0.3897, 0.3120, 0.2271,\n",
      "        0.4651, 0.4851, 0.1904, 0.5119, 0.3317, 0.3370, 0.2610, 0.2411, 0.3737,\n",
      "        0.3272, 0.5416, 0.2302, 0.7882, 0.6297, 0.3765, 0.3714, 0.2042, 0.5862,\n",
      "        0.3711, 0.2098, 0.3717, 0.1702, 0.3141, 0.6562, 0.3166, 0.4379, 0.4959,\n",
      "        0.2891, 0.2160, 0.5468, 0.5203, 0.2983, 0.2634, 0.3523, 0.8796, 0.1918,\n",
      "        0.3536, 0.2154, 0.2296, 0.3247, 0.5976, 0.2592, 0.7287, 0.4737, 0.7197,\n",
      "        0.2678, 0.5743, 0.2549, 0.9446, 0.2841, 0.4163, 0.2648, 0.6593, 0.2043,\n",
      "        0.3168, 0.2326, 0.4156, 0.5064, 0.2807, 0.2339, 0.2544, 0.2759, 0.3774,\n",
      "        0.3089, 0.3426, 0.4139, 0.2323, 0.2750, 0.3578, 0.4400, 0.5283, 0.2820,\n",
      "        0.5312, 0.3813, 0.3358, 0.3510, 0.1715, 0.3059, 0.9494, 0.3264, 1.1436,\n",
      "        0.4724, 0.2519, 0.4255, 0.3558, 0.2875, 0.2822, 0.2486, 0.3248, 0.8441,\n",
      "        0.2386, 0.3127, 0.4885, 0.2198, 0.3606, 0.6496, 0.1309, 0.4993, 0.2831,\n",
      "        0.6090, 0.2938, 0.2999, 0.3257, 0.2802, 0.2896, 0.3847, 0.4698, 0.4440,\n",
      "        0.6710, 0.2912, 0.3967, 0.4431, 0.3173, 0.3138, 0.2398, 0.3789, 0.6510,\n",
      "        0.5056, 0.5995, 0.6573, 0.3290], device='cuda:0'), 'resnet18.layer3.0.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer3.0.downsample.0.weight': tensor([[[[ 0.0206]],\n",
      "\n",
      "         [[ 0.0101]],\n",
      "\n",
      "         [[-0.0376]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0153]],\n",
      "\n",
      "         [[-0.0160]],\n",
      "\n",
      "         [[-0.0321]]],\n",
      "\n",
      "\n",
      "        [[[-0.0016]],\n",
      "\n",
      "         [[-0.0388]],\n",
      "\n",
      "         [[-0.0095]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0280]],\n",
      "\n",
      "         [[ 0.0255]],\n",
      "\n",
      "         [[ 0.0227]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0043]],\n",
      "\n",
      "         [[-0.0030]],\n",
      "\n",
      "         [[-0.0217]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0276]],\n",
      "\n",
      "         [[-0.0031]],\n",
      "\n",
      "         [[ 0.0222]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0188]],\n",
      "\n",
      "         [[-0.0533]],\n",
      "\n",
      "         [[ 0.0125]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0282]],\n",
      "\n",
      "         [[ 0.0365]],\n",
      "\n",
      "         [[-0.0260]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0097]],\n",
      "\n",
      "         [[ 0.0112]],\n",
      "\n",
      "         [[-0.0331]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0068]],\n",
      "\n",
      "         [[ 0.0333]],\n",
      "\n",
      "         [[-0.0256]]],\n",
      "\n",
      "\n",
      "        [[[-0.0071]],\n",
      "\n",
      "         [[-0.0067]],\n",
      "\n",
      "         [[ 0.0140]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0325]],\n",
      "\n",
      "         [[ 0.0223]],\n",
      "\n",
      "         [[-0.0224]]]], device='cuda:0'), 'resnet18.layer3.0.downsample.1.weight': tensor([ 1.0730e-01,  7.1071e-02,  7.1149e-02,  1.5363e-01,  3.1145e-02,\n",
      "         2.5874e-02,  1.2138e-01,  7.9849e-02,  3.2768e-02,  4.3402e-02,\n",
      "         7.0815e-02,  9.5611e-02,  8.2271e-02,  1.3803e-01,  1.0435e-01,\n",
      "         2.0585e-02,  1.2418e-01,  2.7976e-01,  1.0491e-01,  3.2848e-02,\n",
      "         1.7981e-01,  2.1140e-02,  4.8405e-02,  8.3100e-02,  2.0074e-01,\n",
      "         1.3225e-01,  1.2955e-01,  7.1462e-02,  3.5155e-02,  7.6076e-02,\n",
      "         9.1357e-02,  1.2948e-01,  3.6013e-02,  5.4739e-02,  5.6733e-02,\n",
      "         1.1402e-01,  7.0614e-02,  9.5850e-02,  1.3321e-01,  1.5543e-01,\n",
      "         4.7862e-02,  5.9566e-02,  6.0139e-02,  2.0565e-02,  1.5192e-01,\n",
      "         1.9309e-02,  3.6761e-02,  1.1530e-01,  5.0027e-02,  1.0611e-01,\n",
      "         1.0789e-01,  1.5971e-01,  1.1516e-01,  1.5201e-01,  8.7253e-02,\n",
      "         1.2110e-01,  1.2405e-01,  1.4196e-01,  4.8129e-02,  5.0026e-02,\n",
      "         1.3526e-01,  7.4234e-02,  1.0025e-01,  1.4995e-01,  7.9438e-02,\n",
      "         1.1863e-01,  3.6350e-02,  2.6307e-02,  5.3018e-02,  8.6939e-02,\n",
      "         1.0592e-01,  5.2789e-02,  1.8683e-01,  1.9467e-01,  1.7602e-01,\n",
      "         7.5650e-02,  1.1700e-01,  5.4438e-02,  8.6954e-02,  1.1585e-01,\n",
      "         1.5293e-01,  1.0290e-01,  7.1835e-02,  1.4680e-01,  9.0789e-02,\n",
      "         1.3272e-01,  1.0197e-01,  1.7991e-01,  3.6886e-02,  1.0300e-01,\n",
      "         3.2099e-02,  1.1842e-01,  2.7254e-02,  4.2140e-02,  4.8263e-02,\n",
      "         1.5803e-02,  9.4676e-02,  1.1486e-01,  6.1059e-02, -1.6678e-02,\n",
      "         5.8777e-02,  6.7499e-02,  8.6576e-02,  1.7210e-02,  6.8506e-02,\n",
      "         5.4508e-02,  1.0779e-01,  4.5914e-02,  9.1834e-02,  5.7704e-02,\n",
      "         4.0757e-02,  1.1730e-01,  3.7527e-02,  1.3860e-01,  4.8711e-02,\n",
      "         5.6245e-02,  9.2293e-02,  2.5809e-01,  8.9565e-02,  6.9523e-02,\n",
      "         9.0508e-02,  7.2113e-02,  1.2394e-01,  1.0458e-01,  4.6813e-02,\n",
      "         1.9417e-02,  7.9591e-02,  9.5335e-02,  9.9240e-02,  4.5186e-02,\n",
      "         3.8459e-02,  2.4045e-01,  1.1489e-01,  1.0706e-01,  8.1934e-02,\n",
      "         1.1380e-01,  8.1883e-02,  2.2806e-01,  1.3770e-01,  4.9226e-02,\n",
      "         1.4692e-01,  7.9447e-02,  1.0759e-01,  2.9889e-02,  8.3167e-02,\n",
      "         7.7431e-02,  6.9177e-02,  1.9315e-01,  5.4807e-02,  2.8308e-02,\n",
      "         1.2304e-01,  2.0738e-02, -1.0218e-02,  2.3326e-02,  3.8500e-02,\n",
      "         3.9334e-02,  7.6429e-02,  5.1597e-02, -8.4393e-06,  2.5901e-02,\n",
      "         5.7895e-02,  9.9716e-02,  1.7246e-01,  3.3099e-02,  8.1461e-02,\n",
      "         8.1790e-02,  1.7605e-01,  8.8572e-02,  9.5345e-02,  1.3566e-01,\n",
      "         1.0824e-01,  1.0427e-02,  5.7771e-02,  9.2681e-02,  1.5734e-01,\n",
      "         1.2006e-01,  6.2612e-02,  2.4124e-02,  1.3831e-01, -9.5357e-03,\n",
      "         4.0225e-02,  9.9495e-02,  1.9702e-01,  5.4262e-02,  1.7536e-01,\n",
      "         8.7410e-02,  4.1302e-02,  4.7410e-02,  2.7291e-02,  1.3082e-01,\n",
      "         1.3274e-01, -2.6901e-02,  5.1583e-02,  5.0249e-02,  2.9423e-02,\n",
      "         6.0153e-02,  3.6293e-02,  3.7152e-02,  3.1285e-02,  5.2713e-02,\n",
      "         5.3515e-02,  1.6208e-01,  6.7420e-02,  1.7332e-01,  6.7930e-02,\n",
      "         6.0952e-02,  1.2550e-02,  3.1469e-02,  6.9608e-02,  1.6390e-01,\n",
      "         6.5653e-02,  3.5535e-02,  1.4220e-01,  1.4042e-01,  5.2935e-02,\n",
      "         1.1779e-02,  4.0494e-02,  4.8202e-02,  5.1905e-02,  5.9956e-02,\n",
      "         6.6528e-02,  1.2375e-01,  1.0647e-01,  4.0954e-02,  1.0707e-02,\n",
      "         8.8518e-02,  1.4632e-01,  6.4747e-02,  1.8701e-01,  1.5484e-01,\n",
      "         3.4660e-02,  5.1875e-02,  8.4275e-02,  9.0796e-02, -1.6018e-02,\n",
      "         1.0289e-01,  3.2324e-02,  3.4602e-02,  4.1453e-02,  5.3441e-02,\n",
      "         6.5303e-02,  1.3852e-01,  9.2217e-02,  9.4702e-02,  1.0861e-01,\n",
      "        -4.1045e-03,  1.5203e-01,  1.5431e-01,  3.1402e-02,  5.8623e-02,\n",
      "         1.0830e-01,  1.4411e-01,  6.1280e-02,  4.8060e-02,  1.0978e-01,\n",
      "         1.6287e-01], device='cuda:0'), 'resnet18.layer3.0.downsample.1.bias': tensor([-7.6554e-02,  1.1326e-01, -4.9904e-02, -1.3274e-01,  1.3645e-02,\n",
      "        -3.0261e-02, -1.0751e-01,  1.5495e-03, -9.0330e-02,  1.5100e-03,\n",
      "         4.1884e-02, -4.8384e-02, -9.0442e-02, -2.8302e-02, -5.5188e-02,\n",
      "        -1.0034e-01, -1.3541e-01, -2.6931e-01, -1.2719e-01,  4.3343e-02,\n",
      "        -1.8299e-01, -6.9352e-02,  2.1347e-01, -2.5120e-01, -1.0675e-01,\n",
      "        -1.2822e-01, -1.1659e-01, -1.5743e-01, -2.8231e-02, -1.9701e-01,\n",
      "        -1.2404e-01, -1.4478e-01, -1.2623e-01,  1.3158e-01, -9.2639e-02,\n",
      "        -6.4511e-02, -1.5181e-01, -7.1768e-02, -4.1447e-02, -1.4138e-01,\n",
      "        -1.2864e-01, -1.1303e-02,  3.4327e-02, -5.7536e-02, -1.1551e-01,\n",
      "        -5.9831e-02, -2.0807e-02, -1.7915e-01, -2.0957e-03, -1.5778e-01,\n",
      "        -5.4005e-02, -1.5059e-01, -3.1110e-02, -3.4000e-02, -6.2811e-02,\n",
      "        -2.8719e-02, -1.9785e-01, -7.6531e-02, -3.6535e-02, -7.3109e-02,\n",
      "        -1.8355e-01, -1.5427e-02, -1.4561e-01,  7.1023e-03, -9.8972e-02,\n",
      "        -1.3526e-01, -1.8433e-01,  1.0944e-01,  1.4599e-03, -2.3552e-01,\n",
      "        -5.5530e-02, -4.3146e-02, -3.4446e-02, -6.6323e-02, -1.6559e-01,\n",
      "        -1.1994e-01, -1.9952e-01, -8.7160e-02, -1.6147e-01, -9.7478e-02,\n",
      "        -1.5454e-01, -1.0785e-01, -9.7403e-02, -1.0336e-01, -3.8344e-02,\n",
      "        -7.6569e-02, -3.6809e-01, -1.5330e-02, -1.9353e-01, -1.2385e-01,\n",
      "        -2.8334e-02, -9.4155e-02, -2.5839e-01,  1.1838e-01,  8.5930e-02,\n",
      "         6.6508e-02, -7.5765e-02, -8.1833e-03,  5.1521e-02, -2.3498e-02,\n",
      "        -2.5784e-01, -7.6305e-02, -1.1861e-01,  1.5759e-02,  5.3511e-04,\n",
      "        -1.3918e-01,  4.8636e-02, -2.1906e-01, -1.9689e-01,  1.4575e-01,\n",
      "         6.0080e-02, -6.9674e-02, -1.3015e-01, -1.2131e-01, -1.9656e-01,\n",
      "         1.1065e-01, -1.6656e-01, -5.5941e-01, -7.3083e-02, -2.2295e-01,\n",
      "        -3.0442e-01, -1.7587e-03, -1.9765e-01, -4.9652e-02, -4.7905e-02,\n",
      "         1.7064e-02, -6.0595e-02, -2.3933e-01, -1.4799e-01, -4.9529e-02,\n",
      "        -6.5994e-02, -1.2904e-01,  9.6456e-02, -8.5961e-02, -1.7780e-01,\n",
      "        -7.6060e-02, -1.5591e-02, -3.7288e-01, -1.1755e-02, -1.3992e-01,\n",
      "        -1.6289e-01, -3.0300e-01,  4.9184e-02, -6.8450e-02,  4.2490e-02,\n",
      "        -7.1552e-02, -1.0900e-01, -1.9631e-02, -5.1479e-02, -2.4709e-01,\n",
      "        -2.1035e-01,  1.5157e-02, -2.0716e-02, -1.2043e-01, -4.8012e-02,\n",
      "        -7.2375e-02, -1.3906e-01, -6.2635e-02,  1.1974e-01, -1.0318e-02,\n",
      "        -7.8402e-02, -6.8271e-02, -1.8463e-01, -1.3940e-01,  7.4049e-02,\n",
      "        -6.9378e-02, -2.6714e-01, -1.2464e-01, -1.3393e-01,  3.8615e-02,\n",
      "        -3.1645e-01, -7.9600e-02, -5.0805e-02, -2.7360e-01, -1.7989e-01,\n",
      "        -1.8295e-01, -8.6326e-02, -6.0505e-02, -1.6617e-01, -8.1081e-02,\n",
      "        -1.5434e-01, -1.4697e-01, -1.1989e-01,  3.3387e-02, -1.3315e-01,\n",
      "        -2.2824e-02, -1.4915e-01, -6.5042e-02, -1.5106e-01, -1.9439e-01,\n",
      "        -1.4341e-04,  8.8373e-03, -8.6373e-02, -1.6387e-01, -1.9063e-02,\n",
      "        -1.7307e-01, -1.4011e-01,  9.7597e-02, -2.4703e-01, -1.7615e-01,\n",
      "        -2.2738e-02, -1.3433e-01, -6.1043e-02, -1.5367e-01, -2.4720e-01,\n",
      "        -1.1344e-01,  6.7859e-02, -5.8125e-02, -7.0660e-02, -9.8361e-02,\n",
      "         7.8158e-03, -1.3786e-01, -3.9851e-02, -5.7183e-02, -2.1847e-01,\n",
      "         7.0735e-02,  1.1034e-01,  9.7409e-02, -1.4923e-01, -9.7220e-02,\n",
      "        -4.4259e-02, -6.4641e-02, -2.1635e-02, -5.3174e-02, -3.6914e-02,\n",
      "        -2.3380e-01, -2.3737e-01, -1.2329e-01, -1.1358e-01, -1.4653e-01,\n",
      "        -1.8366e-02, -1.2178e-01, -6.9120e-02, -1.7890e-01,  7.7878e-02,\n",
      "         5.7358e-02, -8.9992e-02, -2.6051e-02,  1.0062e-02, -2.5135e-02,\n",
      "         1.0000e-01, -2.3726e-01, -1.1164e-01, -1.0963e-01,  9.0585e-03,\n",
      "         7.0305e-02, -2.5591e-01, -1.4213e-01, -2.0356e-01, -1.1478e-01,\n",
      "        -1.8483e-01,  1.5058e-02, -9.7973e-02, -2.4227e-02, -9.8542e-02,\n",
      "        -9.5827e-02], device='cuda:0'), 'resnet18.layer3.0.downsample.1.running_mean': tensor([-0.0534, -0.0613, -0.0232, -0.0570, -0.0104, -0.0218, -0.0489, -0.0522,\n",
      "        -0.0175,  0.0400, -0.0204, -0.0104, -0.0599, -0.1045,  0.0343, -0.0248,\n",
      "        -0.0544, -0.0044, -0.0376, -0.0098, -0.1046,  0.0059, -0.0132, -0.0639,\n",
      "        -0.0373, -0.0433, -0.0163, -0.0060, -0.0256, -0.0790, -0.0373, -0.0030,\n",
      "        -0.0239, -0.0008, -0.0015, -0.0513, -0.0748, -0.0566, -0.0011, -0.0069,\n",
      "        -0.0403, -0.0155, -0.0668, -0.0140,  0.0195,  0.0174, -0.0091,  0.0082,\n",
      "        -0.0650, -0.0695,  0.0113, -0.0608, -0.1035, -0.0934, -0.0349,  0.0217,\n",
      "         0.0261, -0.0549, -0.0956,  0.0010, -0.1365, -0.0823, -0.0620, -0.0698,\n",
      "        -0.0288, -0.0346, -0.0222, -0.0052, -0.0240, -0.0332, -0.0393,  0.0586,\n",
      "        -0.0413, -0.0658, -0.0321, -0.0431, -0.0917,  0.0350, -0.0487, -0.0649,\n",
      "         0.0122, -0.0087, -0.0207, -0.0049, -0.0357, -0.0102,  0.0054, -0.0620,\n",
      "         0.0028,  0.0052, -0.0057, -0.0701, -0.1121,  0.0092, -0.0049, -0.0045,\n",
      "        -0.0324, -0.0666, -0.0478, -0.0124, -0.0018, -0.0498, -0.0301, -0.0235,\n",
      "        -0.0360, -0.0659, -0.0221, -0.0461, -0.0335,  0.0019, -0.0472,  0.0065,\n",
      "         0.0100, -0.0603, -0.0065,  0.0111, -0.0390,  0.0777, -0.0377, -0.0808,\n",
      "        -0.0593, -0.0283,  0.0103, -0.0160, -0.0308, -0.0347, -0.0031, -0.1037,\n",
      "        -0.0287,  0.0051, -0.0353, -0.0387, -0.0921, -0.0544,  0.0011, -0.0190,\n",
      "        -0.0365, -0.0388, -0.0536, -0.0120, -0.0529,  0.0107, -0.0268, -0.0150,\n",
      "        -0.0062, -0.0561, -0.0757, -0.0148, -0.0248, -0.0206, -0.0615, -0.0050,\n",
      "        -0.0013, -0.0949,  0.0185, -0.0083, -0.0615,  0.0069, -0.0266,  0.0038,\n",
      "        -0.0360, -0.0512, -0.1041, -0.0157,  0.0133, -0.0411, -0.0315, -0.0344,\n",
      "         0.0146, -0.1051, -0.0332, -0.0120, -0.0071, -0.0606, -0.0234, -0.0557,\n",
      "        -0.0336, -0.0077, -0.0498, -0.0241, -0.0395, -0.0830, -0.1145, -0.0281,\n",
      "        -0.0211, -0.0414, -0.0526, -0.0446, -0.0171, -0.0731,  0.0328, -0.0217,\n",
      "        -0.0179, -0.0091, -0.0384, -0.0167, -0.0062, -0.0344, -0.0111, -0.0726,\n",
      "        -0.0045,  0.0042,  0.0076, -0.0665, -0.0500, -0.0505,  0.0613, -0.0613,\n",
      "        -0.0427, -0.0633, -0.0194,  0.0145, -0.0073, -0.0281, -0.0093,  0.0046,\n",
      "         0.0009, -0.0056, -0.0415, -0.0246, -0.0028, -0.0170, -0.0119, -0.0495,\n",
      "        -0.0013, -0.0537, -0.1058, -0.0655, -0.0775, -0.0263, -0.0095,  0.0180,\n",
      "        -0.0288,  0.0255, -0.0502, -0.1081,  0.0037, -0.0516,  0.0232, -0.0317,\n",
      "        -0.0336, -0.0504,  0.0081, -0.0084,  0.0074, -0.0380, -0.0955, -0.0690,\n",
      "        -0.0610, -0.0019, -0.0615, -0.0859, -0.0279, -0.0039, -0.0308, -0.0554],\n",
      "       device='cuda:0'), 'resnet18.layer3.0.downsample.1.running_var': tensor([0.0046, 0.0021, 0.0020, 0.0036, 0.0030, 0.0013, 0.0041, 0.0022, 0.0012,\n",
      "        0.0018, 0.0015, 0.0037, 0.0032, 0.0075, 0.0052, 0.0007, 0.0032, 0.0027,\n",
      "        0.0020, 0.0010, 0.0045, 0.0008, 0.0059, 0.0028, 0.0056, 0.0062, 0.0035,\n",
      "        0.0011, 0.0016, 0.0027, 0.0027, 0.0055, 0.0008, 0.0023, 0.0020, 0.0031,\n",
      "        0.0015, 0.0019, 0.0036, 0.0031, 0.0021, 0.0020, 0.0026, 0.0011, 0.0028,\n",
      "        0.0009, 0.0018, 0.0045, 0.0031, 0.0026, 0.0035, 0.0038, 0.0041, 0.0056,\n",
      "        0.0032, 0.0038, 0.0036, 0.0052, 0.0014, 0.0061, 0.0045, 0.0028, 0.0039,\n",
      "        0.0048, 0.0045, 0.0045, 0.0013, 0.0012, 0.0017, 0.0028, 0.0029, 0.0021,\n",
      "        0.0079, 0.0061, 0.0045, 0.0017, 0.0034, 0.0017, 0.0022, 0.0020, 0.0029,\n",
      "        0.0021, 0.0031, 0.0038, 0.0031, 0.0037, 0.0025, 0.0038, 0.0015, 0.0030,\n",
      "        0.0020, 0.0035, 0.0023, 0.0015, 0.0021, 0.0013, 0.0024, 0.0033, 0.0015,\n",
      "        0.0018, 0.0017, 0.0019, 0.0036, 0.0008, 0.0017, 0.0015, 0.0024, 0.0033,\n",
      "        0.0030, 0.0027, 0.0024, 0.0027, 0.0010, 0.0025, 0.0008, 0.0029, 0.0025,\n",
      "        0.0053, 0.0026, 0.0016, 0.0024, 0.0018, 0.0024, 0.0023, 0.0023, 0.0013,\n",
      "        0.0028, 0.0020, 0.0020, 0.0016, 0.0010, 0.0047, 0.0041, 0.0038, 0.0017,\n",
      "        0.0029, 0.0020, 0.0027, 0.0042, 0.0012, 0.0049, 0.0017, 0.0028, 0.0008,\n",
      "        0.0016, 0.0022, 0.0016, 0.0075, 0.0025, 0.0010, 0.0031, 0.0011, 0.0013,\n",
      "        0.0019, 0.0016, 0.0019, 0.0014, 0.0012, 0.0013, 0.0013, 0.0022, 0.0032,\n",
      "        0.0048, 0.0004, 0.0025, 0.0016, 0.0032, 0.0019, 0.0037, 0.0047, 0.0020,\n",
      "        0.0014, 0.0028, 0.0022, 0.0036, 0.0057, 0.0014, 0.0012, 0.0029, 0.0009,\n",
      "        0.0011, 0.0035, 0.0045, 0.0017, 0.0042, 0.0026, 0.0023, 0.0022, 0.0006,\n",
      "        0.0033, 0.0046, 0.0009, 0.0014, 0.0017, 0.0015, 0.0018, 0.0014, 0.0022,\n",
      "        0.0011, 0.0023, 0.0020, 0.0030, 0.0018, 0.0039, 0.0022, 0.0036, 0.0015,\n",
      "        0.0021, 0.0013, 0.0070, 0.0020, 0.0012, 0.0035, 0.0051, 0.0016, 0.0015,\n",
      "        0.0027, 0.0029, 0.0023, 0.0012, 0.0010, 0.0034, 0.0040, 0.0013, 0.0012,\n",
      "        0.0014, 0.0043, 0.0023, 0.0039, 0.0031, 0.0023, 0.0006, 0.0021, 0.0026,\n",
      "        0.0012, 0.0028, 0.0013, 0.0007, 0.0014, 0.0024, 0.0024, 0.0050, 0.0032,\n",
      "        0.0051, 0.0029, 0.0009, 0.0033, 0.0031, 0.0017, 0.0015, 0.0029, 0.0053,\n",
      "        0.0018, 0.0021, 0.0047, 0.0044], device='cuda:0'), 'resnet18.layer3.0.downsample.1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer3.1.conv1.weight': tensor([[[[ 0.0180,  0.0485,  0.0535],\n",
      "          [ 0.0648,  0.0694,  0.0927],\n",
      "          [ 0.0908,  0.0635,  0.0564]],\n",
      "\n",
      "         [[ 0.0240,  0.0092,  0.0186],\n",
      "          [-0.0098, -0.0183,  0.0070],\n",
      "          [-0.0460, -0.0833, -0.0483]],\n",
      "\n",
      "         [[-0.0176, -0.0177, -0.0224],\n",
      "          [-0.0244, -0.0199, -0.0420],\n",
      "          [-0.0167, -0.0150, -0.0405]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0925, -0.0627, -0.0826],\n",
      "          [ 0.0153,  0.0750,  0.0757],\n",
      "          [-0.0019,  0.0331,  0.0317]],\n",
      "\n",
      "         [[-0.0497, -0.0687, -0.0638],\n",
      "          [-0.0640, -0.0609, -0.0336],\n",
      "          [-0.0412, -0.0258, -0.0252]],\n",
      "\n",
      "         [[ 0.0107,  0.0432,  0.0358],\n",
      "          [-0.0500,  0.0092,  0.0299],\n",
      "          [-0.0417, -0.0159, -0.0250]]],\n",
      "\n",
      "\n",
      "        [[[-0.0361, -0.0302, -0.0216],\n",
      "          [-0.0249, -0.0100, -0.0243],\n",
      "          [-0.0202,  0.0206,  0.0148]],\n",
      "\n",
      "         [[-0.0532, -0.0577, -0.0608],\n",
      "          [-0.0132, -0.0146, -0.0281],\n",
      "          [ 0.0686,  0.0721,  0.0505]],\n",
      "\n",
      "         [[-0.0596, -0.0679, -0.0642],\n",
      "          [-0.0038,  0.0032, -0.0107],\n",
      "          [ 0.0650,  0.0759,  0.0279]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0550, -0.0742, -0.0442],\n",
      "          [-0.0170, -0.0076, -0.0308],\n",
      "          [-0.0039, -0.0238, -0.0159]],\n",
      "\n",
      "         [[ 0.0417,  0.0425,  0.0214],\n",
      "          [-0.0099, -0.0016,  0.0010],\n",
      "          [-0.0185, -0.0098, -0.0077]],\n",
      "\n",
      "         [[ 0.0091, -0.0025, -0.0040],\n",
      "          [ 0.0243,  0.0232,  0.0089],\n",
      "          [-0.0417, -0.0296, -0.0234]]],\n",
      "\n",
      "\n",
      "        [[[-0.0006,  0.0175, -0.0073],\n",
      "          [-0.0211, -0.0086, -0.0136],\n",
      "          [-0.0066, -0.0247, -0.0020]],\n",
      "\n",
      "         [[-0.0418, -0.0266, -0.0028],\n",
      "          [-0.0286, -0.0329, -0.0137],\n",
      "          [-0.0326, -0.0258, -0.0187]],\n",
      "\n",
      "         [[-0.0170, -0.0353, -0.0483],\n",
      "          [-0.0317, -0.0484, -0.0469],\n",
      "          [-0.0082, -0.0221, -0.0182]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0174, -0.0018,  0.0165],\n",
      "          [ 0.0156,  0.0040,  0.0278],\n",
      "          [ 0.0032, -0.0197,  0.0063]],\n",
      "\n",
      "         [[-0.0066, -0.0156, -0.0109],\n",
      "          [-0.0113, -0.0046, -0.0123],\n",
      "          [ 0.0149,  0.0248,  0.0123]],\n",
      "\n",
      "         [[-0.0077, -0.0136,  0.0136],\n",
      "          [ 0.0117, -0.0178, -0.0012],\n",
      "          [ 0.0486,  0.0441,  0.0362]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0421,  0.0205, -0.0164],\n",
      "          [ 0.0238,  0.0117, -0.0232],\n",
      "          [-0.0083,  0.0119, -0.0199]],\n",
      "\n",
      "         [[-0.0273, -0.0238, -0.0028],\n",
      "          [ 0.0089,  0.0179, -0.0026],\n",
      "          [-0.0141, -0.0033, -0.0158]],\n",
      "\n",
      "         [[ 0.0117,  0.0327,  0.0291],\n",
      "          [-0.0027,  0.0064,  0.0423],\n",
      "          [ 0.0168,  0.0067,  0.0335]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0095, -0.0182, -0.0284],\n",
      "          [-0.0851,  0.0006, -0.0201],\n",
      "          [-0.0450, -0.0353, -0.0183]],\n",
      "\n",
      "         [[-0.0178,  0.0114,  0.0132],\n",
      "          [-0.0608,  0.0063,  0.0382],\n",
      "          [-0.0280, -0.0007,  0.0314]],\n",
      "\n",
      "         [[ 0.0088,  0.0159,  0.0415],\n",
      "          [-0.0055, -0.0014, -0.0019],\n",
      "          [-0.0073, -0.0067, -0.0362]]],\n",
      "\n",
      "\n",
      "        [[[-0.0232, -0.0880, -0.0675],\n",
      "          [-0.0378, -0.0863, -0.0462],\n",
      "          [ 0.0606,  0.0464,  0.0699]],\n",
      "\n",
      "         [[ 0.0192,  0.0354,  0.0103],\n",
      "          [-0.0194,  0.0217, -0.0113],\n",
      "          [-0.0400, -0.0371, -0.0502]],\n",
      "\n",
      "         [[-0.0029,  0.0425,  0.0463],\n",
      "          [-0.0253,  0.0274,  0.0419],\n",
      "          [-0.0421, -0.0378, -0.0158]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0164, -0.0373, -0.0356],\n",
      "          [-0.0102, -0.0172, -0.0423],\n",
      "          [ 0.0454,  0.0319,  0.0077]],\n",
      "\n",
      "         [[-0.0362, -0.0506, -0.0345],\n",
      "          [ 0.0128,  0.0011,  0.0105],\n",
      "          [-0.0151,  0.0008,  0.0009]],\n",
      "\n",
      "         [[ 0.0089,  0.0164,  0.0085],\n",
      "          [-0.0472, -0.0632, -0.0444],\n",
      "          [-0.0170, -0.0320, -0.0222]]],\n",
      "\n",
      "\n",
      "        [[[-0.0105,  0.0011, -0.0158],\n",
      "          [ 0.0551,  0.1041,  0.0595],\n",
      "          [ 0.0151,  0.0319,  0.0037]],\n",
      "\n",
      "         [[ 0.0172, -0.0048, -0.0156],\n",
      "          [ 0.0632,  0.0704,  0.0360],\n",
      "          [-0.0307, -0.0198, -0.0156]],\n",
      "\n",
      "         [[ 0.0218,  0.0334,  0.0242],\n",
      "          [ 0.0057,  0.0072,  0.0199],\n",
      "          [-0.0083, -0.0122,  0.0121]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0669,  0.0496,  0.0608],\n",
      "          [ 0.0095,  0.0283,  0.0357],\n",
      "          [-0.0344, -0.0472, -0.0079]],\n",
      "\n",
      "         [[ 0.0530,  0.1022,  0.0424],\n",
      "          [-0.0224,  0.0038, -0.0263],\n",
      "          [-0.0367, -0.0238, -0.0532]],\n",
      "\n",
      "         [[ 0.0362, -0.0312, -0.0167],\n",
      "          [-0.0019, -0.0132, -0.0319],\n",
      "          [-0.0094,  0.0109,  0.0293]]]], device='cuda:0'), 'resnet18.layer3.1.bn1.weight': tensor([0.4068, 0.3524, 0.3179, 0.4513, 0.4058, 0.3640, 0.4687, 0.3678, 0.3959,\n",
      "        0.3862, 0.4120, 0.4760, 0.3275, 0.3288, 0.4327, 0.3043, 0.3795, 0.3842,\n",
      "        0.4043, 0.4733, 0.4626, 0.2949, 0.3527, 0.4000, 0.4327, 0.3876, 0.3175,\n",
      "        0.4506, 0.5619, 0.4193, 0.3876, 0.3885, 0.4312, 0.4109, 0.4897, 0.4145,\n",
      "        0.3381, 0.3677, 0.3211, 0.2908, 0.4647, 0.6161, 0.3852, 0.3467, 0.4106,\n",
      "        0.4220, 0.3747, 0.4120, 0.4497, 0.2917, 0.4855, 0.4331, 0.3738, 0.4023,\n",
      "        0.3155, 0.3841, 0.3629, 0.3965, 0.3234, 0.3685, 0.4650, 0.3428, 0.3054,\n",
      "        0.3259, 0.4137, 0.4714, 0.4618, 0.3821, 0.5692, 0.5304, 0.4427, 0.3141,\n",
      "        0.3640, 0.3289, 0.3041, 0.3594, 0.3950, 0.4260, 0.3951, 0.3052, 0.4193,\n",
      "        0.3743, 0.4618, 0.4250, 0.3695, 0.3755, 0.4420, 0.4094, 0.4458, 0.4305,\n",
      "        0.4149, 0.3598, 0.4592, 0.4229, 0.4630, 0.4131, 0.4152, 0.3985, 0.4622,\n",
      "        0.3106, 0.4511, 0.3941, 0.4046, 0.3236, 0.3777, 0.3324, 0.3899, 0.4345,\n",
      "        0.4091, 0.4703, 0.4511, 0.4166, 0.4343, 0.3920, 0.4198, 0.4694, 0.4239,\n",
      "        0.4251, 0.4941, 0.4082, 0.4286, 0.3764, 0.3828, 0.3621, 0.3871, 0.4177,\n",
      "        0.3090, 0.3315, 0.4978, 0.4163, 0.3699, 0.3551, 0.3891, 0.3967, 0.3764,\n",
      "        0.3622, 0.4839, 0.5116, 0.3926, 0.4019, 0.3884, 0.3409, 0.4683, 0.3558,\n",
      "        0.3975, 0.3775, 0.4040, 0.4896, 0.4144, 0.4475, 0.4077, 0.3865, 0.3093,\n",
      "        0.3353, 0.4027, 0.3721, 0.4179, 0.2944, 0.3440, 0.3903, 0.4140, 0.5065,\n",
      "        0.3726, 0.3654, 0.3538, 0.3915, 0.4136, 0.4056, 0.6084, 0.3705, 0.3778,\n",
      "        0.3554, 0.4111, 0.4082, 0.3932, 0.4704, 0.4093, 0.3925, 0.4705, 0.3044,\n",
      "        0.3894, 0.3367, 0.4443, 0.5275, 0.2954, 0.4763, 0.4045, 0.2941, 0.4106,\n",
      "        0.3642, 0.3987, 0.4177, 0.4755, 0.3927, 0.3920, 0.4474, 0.4367, 0.4065,\n",
      "        0.3694, 0.3827, 0.4179, 0.4208, 0.3832, 0.3138, 0.3714, 0.5143, 0.3852,\n",
      "        0.3903, 0.3778, 0.3953, 0.3710, 0.4441, 0.4061, 0.3601, 0.5094, 0.4020,\n",
      "        0.4643, 0.3999, 0.4142, 0.4769, 0.4516, 0.4440, 0.3343, 0.3726, 0.4941,\n",
      "        0.4493, 0.4141, 0.4299, 0.4669, 0.4235, 0.3747, 0.4866, 0.4427, 0.4913,\n",
      "        0.2776, 0.4707, 0.4200, 0.4089, 0.4304, 0.4381, 0.4479, 0.4341, 0.4744,\n",
      "        0.3815, 0.4531, 0.4501, 0.3919, 0.3878, 0.4293, 0.3428, 0.3910, 0.3357,\n",
      "        0.3726, 0.4485, 0.2568, 0.4445], device='cuda:0'), 'resnet18.layer3.1.bn1.bias': tensor([-0.3121, -0.2413, -0.5037, -0.3207, -0.3973, -0.2161, -0.4098, -0.2774,\n",
      "        -0.2647, -0.4067, -0.3196, -0.3653, -0.3557, -0.3497, -0.3764, -0.2418,\n",
      "        -0.4110, -0.3574, -0.3011, -0.4973, -0.3020, -0.0530, -0.2463, -0.2668,\n",
      "        -0.3241, -0.2828, -0.3027, -0.5257, -0.4878, -0.4768, -0.2948, -0.1829,\n",
      "        -0.4121, -0.3571, -0.3058, -0.3820, -0.4293, -0.2575, -0.3522, -0.2239,\n",
      "        -0.5578, -0.6048, -0.2230, -0.2012, -0.5156, -0.2961, -0.4144, -0.3205,\n",
      "        -0.4698, -0.2021, -0.2928, -0.5391, -0.3520, -0.2962, -0.0112, -0.1963,\n",
      "        -0.2807, -0.2102, -0.3396, -0.3308, -0.4403, -0.3840, -0.2536, -0.3701,\n",
      "        -0.4362, -0.4347, -0.4183, -0.2102, -0.7521, -0.5875, -0.2799, -0.3002,\n",
      "        -0.4010, -0.3745, -0.2150, -0.0966, -0.1795, -0.5195, -0.3709, -0.3091,\n",
      "        -0.3724, -0.2540, -0.2561, -0.2562, -0.2992, -0.2796, -0.2852, -0.4547,\n",
      "        -0.5464, -0.4630, -0.3827, -0.2558, -0.3385, -0.3747, -0.3657, -0.3609,\n",
      "        -0.3676, -0.3501, -0.4030, -0.0457, -0.2783, -0.3907, -0.3656, -0.2568,\n",
      "        -0.2929, -0.1768, -0.3081, -0.3430, -0.3239, -0.3165, -0.4112, -0.1955,\n",
      "        -0.3204, -0.3697, -0.3872, -0.3579, -0.3112, -0.4083, -0.4127, -0.3386,\n",
      "        -0.4269, -0.4696, -0.3330, -0.3197, -0.3793, -0.2295, -0.2214, -0.3674,\n",
      "        -0.5760, -0.2954, -0.2846, -0.3407, -0.2216, -0.2548, -0.3432, -0.2553,\n",
      "        -0.4469, -0.4664, -0.3130, -0.3398, -0.2871, -0.2886, -0.4993, -0.2027,\n",
      "        -0.4069, -0.4612, -0.3149, -0.5066, -0.4332, -0.3006, -0.3814, -0.3421,\n",
      "        -0.3639, -0.1605, -0.1606, -0.3351, -0.4963,  0.0431, -0.4013, -0.2288,\n",
      "        -0.4299, -0.5243, -0.3040, -0.1043, -0.3477, -0.2107, -0.3218, -0.5071,\n",
      "        -0.4408, -0.4574, -0.1876, -0.4640, -0.6123, -0.4265, -0.4852, -0.4190,\n",
      "        -0.1965, -0.3444, -0.4332, -0.2475, -0.3122, -0.3191, -0.3392, -0.5816,\n",
      "         0.0951, -0.3231, -0.6431, -0.4790, -0.4134, -0.1907, -0.2413, -0.5876,\n",
      "        -0.7087, -0.2845, -0.2505, -0.4689, -0.3945, -0.2197, -0.4553, -0.3318,\n",
      "        -0.3045, -0.2820, -0.1936, -0.2539, -0.3167, -0.7847, -0.2897, -0.3408,\n",
      "        -0.2841, -0.2356, -0.3728, -0.3764, -0.2328, -0.3226, -0.5821, -0.3027,\n",
      "        -0.6438, -0.3231, -0.2952, -0.3564, -0.3544, -0.4860, -0.1993, -0.3142,\n",
      "        -0.4936, -0.3735, -0.4728, -0.2290, -0.5019, -0.2412, -0.2673, -0.5381,\n",
      "        -0.4283, -0.4518, -0.3972, -0.4973, -0.3677, -0.3202, -0.2899, -0.2705,\n",
      "        -0.4693, -0.4370, -0.5185, -0.4239, -0.5137, -0.4207, -0.3611, -0.3686,\n",
      "        -0.5356, -0.2997, -0.2513, -0.1297, -0.1856, -0.4616,  0.0867, -0.3348],\n",
      "       device='cuda:0'), 'resnet18.layer3.1.bn1.running_mean': tensor([-0.1680, -0.5888, -0.2016, -1.1869, -0.6859, -0.9135, -0.8097, -1.2574,\n",
      "        -1.2803, -0.7163, -0.4595, -1.2634, -0.9161, -1.0127, -0.8811, -0.2698,\n",
      "        -0.7936, -1.0686, -1.1508, -1.4388, -1.4135, -1.1819, -0.7744, -0.9744,\n",
      "        -0.8479, -0.1632,  0.0091, -0.0613, -1.7032, -1.6453, -0.9763, -0.3944,\n",
      "        -1.2965, -0.6852, -0.7023, -1.4733, -0.6434, -1.0707,  0.1599, -1.0190,\n",
      "        -1.3174, -1.0117, -0.8564, -0.1172,  0.5799, -1.0239, -0.5864, -1.0832,\n",
      "        -0.5761, -0.1902, -1.1305, -0.8514, -0.6426, -0.5199, -0.2204, -0.8633,\n",
      "        -1.9531, -1.5280, -1.0531, -1.3887, -0.3024, -0.2263, -0.3049, -0.8962,\n",
      "        -0.6708, -0.7626, -1.1593, -1.5209, -1.8878, -1.5790, -1.0279, -0.4921,\n",
      "        -1.0755, -0.9627, -0.5529, -0.8391, -0.9023, -0.4944, -0.7916, -0.4729,\n",
      "        -1.7409, -0.6370, -1.5835, -1.3535, -0.1601, -1.7012, -0.9572, -1.4463,\n",
      "        -1.0052,  0.3665, -1.0441, -0.6377, -2.3555, -0.5732, -1.6861, -1.0718,\n",
      "        -0.6276, -0.7739, -0.9321, -0.0652,  0.3005, -0.9398, -0.2560,  0.0210,\n",
      "        -1.1488, -1.0961, -0.0144, -0.8668, -0.9872, -1.2628, -0.8292, -1.2332,\n",
      "        -0.5029, -0.2084, -0.7507, -0.9887, -1.1125, -0.8337, -2.1628, -0.6167,\n",
      "        -0.8925, -0.4247,  0.4589, -1.2633, -1.2944, -0.2725, -0.5875, -0.0738,\n",
      "        -1.0792, -0.9114, -0.6341,  0.1051, -0.9274, -0.8936, -0.4852, -1.4241,\n",
      "        -1.0776, -1.2498, -0.7207, -0.9811, -0.9772, -1.0249, -0.7728, -0.7105,\n",
      "        -0.9867, -0.5836, -0.6170, -1.8764, -1.3409, -0.3057, -1.5100, -0.9096,\n",
      "         0.2918, -0.8504, -1.5544, -0.4059, -0.8515, -1.5489,  0.6334, -0.2232,\n",
      "        -1.0570, -0.6442, -0.5951,  0.1428, -0.6855, -0.9464, -0.6885, -0.6258,\n",
      "        -0.8278, -0.3556, -0.6952, -0.0343, -0.4365, -1.9629,  0.0905, -0.6352,\n",
      "        -1.2642, -0.8752, -1.6905, -1.0273, -0.9291, -1.2483, -0.3430, -1.0086,\n",
      "        -0.2010, -0.8080, -0.5392,  0.4670, -1.1070,  0.5273, -1.2333, -1.6757,\n",
      "        -0.7483, -1.0698, -1.0455, -0.5006, -0.7413, -0.5515, -0.2967, -0.2086,\n",
      "         1.1469, -0.2897, -0.0780, -0.5901, -0.1258, -0.8763, -0.6326, -1.1307,\n",
      "         1.4506, -0.1782, -1.5004, -1.0704, -1.0325, -0.9475, -1.3932, -0.4655,\n",
      "        -1.5050, -0.6201, -0.6070, -0.9656, -1.4819, -1.0631, -0.2976, -0.5045,\n",
      "        -1.7037, -1.4478,  0.5789, -0.5939, -1.5254, -0.6057,  0.1873, -1.5035,\n",
      "        -1.3500, -1.2566, -0.4319, -2.2435, -0.3532,  0.2019, -1.7163, -0.7743,\n",
      "        -0.9071, -1.6127, -0.0388, -0.1517, -0.8069, -1.5700, -1.0056, -0.6902,\n",
      "        -1.2255, -1.7969, -0.8431, -0.3691, -0.2849, -0.7546, -1.3189, -0.6036],\n",
      "       device='cuda:0'), 'resnet18.layer3.1.bn1.running_var': tensor([0.7830, 1.0322, 0.2962, 0.6242, 0.5923, 0.6425, 0.9713, 0.6102, 0.7258,\n",
      "        0.6091, 0.9570, 1.0355, 0.4731, 0.3216, 0.7061, 0.3359, 0.6191, 0.5190,\n",
      "        0.6139, 0.4202, 0.7374, 0.9783, 0.4217, 0.9194, 0.8126, 0.7231, 0.4418,\n",
      "        0.5683, 1.2695, 0.5408, 0.9158, 0.7662, 0.5806, 0.7659, 1.1764, 0.7283,\n",
      "        0.3499, 0.4674, 0.5573, 0.3253, 0.6200, 0.8561, 0.8580, 0.6423, 0.6327,\n",
      "        0.7045, 0.3629, 1.1091, 0.4567, 0.3110, 1.1270, 0.4411, 0.3561, 0.7125,\n",
      "        0.6634, 0.5184, 0.7118, 1.2644, 0.4106, 0.4602, 0.8580, 0.4957, 0.5800,\n",
      "        0.5455, 0.6832, 0.6939, 1.0991, 1.2357, 0.5346, 0.7212, 0.6625, 0.2745,\n",
      "        0.4064, 0.4069, 0.6416, 0.8181, 1.2216, 0.4054, 0.4838, 0.3651, 0.5269,\n",
      "        0.6116, 1.0187, 1.0804, 0.5586, 0.9449, 1.1925, 0.5847, 0.4876, 0.6140,\n",
      "        0.7816, 0.5880, 0.7727, 0.3920, 0.9916, 0.6310, 0.5998, 0.7179, 0.9173,\n",
      "        1.1473, 1.4552, 0.4454, 0.4993, 0.4379, 1.0406, 0.7375, 0.4978, 0.6622,\n",
      "        0.6865, 1.2462, 0.8978, 0.8906, 1.0207, 0.5866, 0.7079, 0.8691, 0.6689,\n",
      "        0.7655, 0.7016, 0.7914, 0.7766, 0.3317, 0.3859, 0.5345, 0.8807, 1.4308,\n",
      "        0.7663, 0.2520, 0.7772, 0.9460, 0.6586, 0.2850, 1.0033, 1.0616, 0.6886,\n",
      "        1.0319, 0.8512, 1.1104, 0.7930, 0.7162, 0.6190, 0.6094, 0.5465, 0.4496,\n",
      "        0.6408, 0.5823, 0.7573, 0.5874, 0.7415, 0.9434, 0.5997, 0.7044, 0.2967,\n",
      "        0.9188, 1.1922, 0.3320, 0.5585, 1.0879, 0.4091, 0.8485, 0.6826, 0.8981,\n",
      "        0.4958, 1.1794, 0.5604, 1.4135, 0.6366, 0.4551, 1.2263, 0.5478, 0.5814,\n",
      "        0.3443, 0.5781, 0.8108, 0.4468, 0.6270, 1.9362, 0.5833, 1.0271, 0.4438,\n",
      "        0.5283, 0.6879, 0.9169, 0.8996, 0.9395, 0.8706, 0.4354, 0.2231, 0.6831,\n",
      "        0.9134, 0.7316, 0.7057, 0.8366, 0.7328, 0.8725, 0.5919, 0.8768, 1.6740,\n",
      "        0.5481, 0.5633, 0.9466, 0.8509, 0.8200, 0.4676, 0.6915, 0.6558, 1.2463,\n",
      "        0.8260, 0.7734, 0.6455, 0.4462, 0.7538, 1.3536, 0.7372, 0.5291, 0.6560,\n",
      "        0.9193, 0.6023, 1.1182, 0.9458, 0.8644, 0.5701, 0.7529, 0.6205, 0.7768,\n",
      "        0.7786, 0.3796, 0.9934, 0.3892, 0.8254, 0.8068, 0.7233, 0.7015, 0.7213,\n",
      "        0.2211, 0.8176, 0.6770, 0.7803, 1.1224, 0.9126, 0.5871, 0.7782, 0.5179,\n",
      "        0.4803, 0.5003, 0.8582, 0.4701, 0.5303, 0.4183, 0.6922, 0.9362, 0.6587,\n",
      "        0.8239, 0.8677, 0.8378, 1.1603], device='cuda:0'), 'resnet18.layer3.1.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer3.1.conv2.weight': tensor([[[[-0.0388, -0.0185, -0.0132],\n",
      "          [-0.0261,  0.0055,  0.0150],\n",
      "          [-0.0170,  0.0102,  0.0240]],\n",
      "\n",
      "         [[-0.0154, -0.0217, -0.0372],\n",
      "          [-0.0432, -0.0169, -0.0124],\n",
      "          [ 0.0017,  0.0322,  0.0395]],\n",
      "\n",
      "         [[ 0.0576,  0.0630,  0.0756],\n",
      "          [ 0.0612,  0.0763,  0.0634],\n",
      "          [ 0.0376,  0.0518,  0.0343]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0204,  0.0133, -0.0191],\n",
      "          [ 0.0032,  0.0267, -0.0002],\n",
      "          [-0.0208,  0.0119, -0.0020]],\n",
      "\n",
      "         [[-0.0790, -0.0572, -0.0354],\n",
      "          [ 0.0167,  0.0432,  0.0100],\n",
      "          [ 0.0435,  0.0480,  0.0026]],\n",
      "\n",
      "         [[ 0.0583,  0.0324,  0.0408],\n",
      "          [ 0.0184, -0.0085,  0.0400],\n",
      "          [ 0.0659,  0.0561,  0.0890]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0195, -0.0050, -0.0161],\n",
      "          [ 0.0163, -0.0203, -0.0274],\n",
      "          [ 0.0359,  0.0010, -0.0031]],\n",
      "\n",
      "         [[ 0.0044, -0.0016,  0.0127],\n",
      "          [-0.0054, -0.0124, -0.0089],\n",
      "          [-0.0370, -0.0352, -0.0533]],\n",
      "\n",
      "         [[-0.0086, -0.0165, -0.0235],\n",
      "          [-0.0075, -0.0022, -0.0034],\n",
      "          [ 0.0002, -0.0015, -0.0125]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0135, -0.0324, -0.0165],\n",
      "          [-0.0128, -0.0077, -0.0009],\n",
      "          [-0.0007, -0.0137, -0.0284]],\n",
      "\n",
      "         [[-0.0614, -0.0719, -0.0615],\n",
      "          [ 0.0363,  0.0296,  0.0126],\n",
      "          [ 0.0108,  0.0089, -0.0220]],\n",
      "\n",
      "         [[ 0.0032, -0.0009, -0.0163],\n",
      "          [ 0.0230,  0.0131, -0.0216],\n",
      "          [ 0.0039,  0.0315, -0.0127]]],\n",
      "\n",
      "\n",
      "        [[[-0.0152, -0.0235, -0.0188],\n",
      "          [-0.0052, -0.0073, -0.0233],\n",
      "          [ 0.0396,  0.0253, -0.0068]],\n",
      "\n",
      "         [[-0.0073, -0.0064, -0.0046],\n",
      "          [ 0.0090,  0.0344,  0.0517],\n",
      "          [ 0.0655,  0.0876,  0.0884]],\n",
      "\n",
      "         [[ 0.0315,  0.0131,  0.0048],\n",
      "          [ 0.0225,  0.0035, -0.0003],\n",
      "          [ 0.0099, -0.0102, -0.0189]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0187, -0.0214, -0.0142],\n",
      "          [-0.0046,  0.0106, -0.0107],\n",
      "          [ 0.0008,  0.0057,  0.0050]],\n",
      "\n",
      "         [[-0.0327, -0.0334, -0.0032],\n",
      "          [ 0.0097,  0.0008,  0.0327],\n",
      "          [ 0.0201,  0.0085,  0.0123]],\n",
      "\n",
      "         [[ 0.0226,  0.0353,  0.0133],\n",
      "          [ 0.0356,  0.0274, -0.0054],\n",
      "          [ 0.0218,  0.0381,  0.0127]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0215, -0.0229, -0.0119],\n",
      "          [ 0.0639,  0.0558,  0.0562],\n",
      "          [ 0.0683,  0.0547,  0.0528]],\n",
      "\n",
      "         [[ 0.0231,  0.0011, -0.0006],\n",
      "          [-0.0346, -0.0741, -0.0444],\n",
      "          [-0.0156, -0.0383, -0.0376]],\n",
      "\n",
      "         [[-0.0114, -0.0360, -0.0444],\n",
      "          [ 0.0100,  0.0174,  0.0051],\n",
      "          [ 0.0195,  0.0234,  0.0260]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0222, -0.0142, -0.0068],\n",
      "          [ 0.0651,  0.0300,  0.0055],\n",
      "          [ 0.0129, -0.0423, -0.0301]],\n",
      "\n",
      "         [[-0.0295, -0.0740, -0.0268],\n",
      "          [-0.0091, -0.0310, -0.0058],\n",
      "          [-0.0052, -0.0508, -0.0271]],\n",
      "\n",
      "         [[ 0.0258,  0.0251,  0.0038],\n",
      "          [ 0.0714,  0.1025,  0.0682],\n",
      "          [ 0.0629,  0.0737,  0.0550]]],\n",
      "\n",
      "\n",
      "        [[[-0.0443, -0.0391, -0.0485],\n",
      "          [-0.0365, -0.0230, -0.0182],\n",
      "          [-0.0050,  0.0280,  0.0408]],\n",
      "\n",
      "         [[ 0.0685,  0.0490,  0.0224],\n",
      "          [-0.0124, -0.0344, -0.0301],\n",
      "          [-0.0131,  0.0016, -0.0014]],\n",
      "\n",
      "         [[-0.0109, -0.0010, -0.0401],\n",
      "          [-0.0323, -0.0169, -0.0275],\n",
      "          [-0.0112, -0.0053, -0.0095]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0363,  0.0134, -0.0113],\n",
      "          [-0.0159, -0.0310, -0.0288],\n",
      "          [ 0.0221,  0.0102, -0.0025]],\n",
      "\n",
      "         [[-0.0416, -0.0413, -0.0576],\n",
      "          [-0.0412, -0.0322, -0.0596],\n",
      "          [-0.0526, -0.0268, -0.0550]],\n",
      "\n",
      "         [[ 0.0032,  0.0541,  0.0851],\n",
      "          [-0.0311,  0.0051,  0.0302],\n",
      "          [-0.0272, -0.0082,  0.0013]]],\n",
      "\n",
      "\n",
      "        [[[-0.0222, -0.0171, -0.0359],\n",
      "          [-0.0380, -0.0141, -0.0116],\n",
      "          [ 0.0199,  0.0472,  0.0547]],\n",
      "\n",
      "         [[-0.0460, -0.0109, -0.0202],\n",
      "          [-0.0236, -0.0214, -0.0286],\n",
      "          [ 0.0041,  0.0020, -0.0211]],\n",
      "\n",
      "         [[-0.0330,  0.0338,  0.0152],\n",
      "          [-0.0283,  0.0036, -0.0194],\n",
      "          [ 0.0088,  0.0025, -0.0173]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0045, -0.0159,  0.0002],\n",
      "          [-0.0277, -0.0322, -0.0329],\n",
      "          [-0.0324, -0.0132, -0.0291]],\n",
      "\n",
      "         [[ 0.0168, -0.0002,  0.0354],\n",
      "          [ 0.0168,  0.0405,  0.0521],\n",
      "          [ 0.0105,  0.0295, -0.0130]],\n",
      "\n",
      "         [[-0.0134, -0.0567, -0.0235],\n",
      "          [-0.0400, -0.0592, -0.0450],\n",
      "          [-0.0076, -0.0268, -0.0294]]]], device='cuda:0'), 'resnet18.layer3.1.bn2.weight': tensor([0.2571, 0.2636, 0.1693, 0.2956, 0.3106, 0.2708, 0.4035, 0.2639, 0.3704,\n",
      "        0.2520, 0.2109, 0.1995, 0.3621, 0.3444, 0.5181, 0.3753, 0.4190, 0.4637,\n",
      "        0.4230, 0.3593, 0.4945, 0.6572, 0.3742, 0.4551, 0.3368, 0.4420, 0.5232,\n",
      "        0.5898, 0.2229, 0.3996, 0.3124, 0.3006, 0.2999, 0.1180, 0.3467, 0.3500,\n",
      "        0.3189, 0.1542, 0.1784, 0.2364, 0.3969, 0.3332, 0.1278, 0.3391, 0.3456,\n",
      "        0.3201, 0.1685, 0.4773, 0.3774, 0.4952, 0.3493, 0.5656, 0.2602, 0.3568,\n",
      "        0.3492, 0.3396, 0.3227, 0.2278, 0.4226, 0.2732, 0.2562, 0.1492, 0.4282,\n",
      "        0.4351, 0.4235, 0.4192, 0.5611, 0.3935, 0.1979, 0.4523, 0.2948, 0.1695,\n",
      "        0.3135, 0.3668, 0.4020, 0.3930, 0.3697, 0.4808, 0.3105, 0.2669, 0.4359,\n",
      "        0.3513, 0.4042, 0.4563, 0.4720, 0.0843, 0.6485, 0.3278, 0.5628, 0.2289,\n",
      "        0.1995, 0.4011, 0.5309, 0.2549, 0.4260, 0.2080, 0.4365, 0.2830, 0.2868,\n",
      "        0.2748, 0.6647, 0.3534, 0.3652, 0.2890, 0.2640, 0.3444, 0.1367, 0.4045,\n",
      "        0.5360, 0.0898, 0.2033, 0.1328, 0.5155, 0.4509, 0.6148, 0.2528, 0.2949,\n",
      "        0.4774, 0.3841, 0.4854, 0.5045, 0.3423, 0.5085, 0.3148, 0.4219, 0.3398,\n",
      "        0.4485, 0.3721, 0.5281, 0.0615, 0.2024, 0.3466, 0.1502, 0.2987, 0.3469,\n",
      "        0.4933, 0.3339, 0.5083, 0.3497, 0.4048, 0.2288, 0.6169, 0.3426, 0.3373,\n",
      "        0.5210, 0.4812, 0.3345, 0.3507, 0.2470, 0.4966, 0.5446, 0.1988, 0.2358,\n",
      "        0.4561, 0.4816, 0.4973, 0.3352, 0.3654, 0.4018, 0.1759, 0.4051, 0.3526,\n",
      "        0.4229, 0.6023, 0.3827, 0.4440, 0.4167, 0.5847, 0.3529, 0.4564, 0.5877,\n",
      "        0.1698, 0.4455, 0.4969, 0.4376, 0.4158, 0.4454, 0.4124, 0.4711, 0.4656,\n",
      "        0.5804, 0.6336, 0.4734, 0.4062, 0.4054, 0.3761, 0.3271, 0.5110, 0.5881,\n",
      "        0.4720, 0.2988, 0.3208, 0.3519, 0.4078, 0.3916, 0.3322, 0.5674, 0.2438,\n",
      "        0.5635, 0.4863, 0.5320, 0.3318, 0.3635, 0.4219, 0.5519, 0.6680, 0.3258,\n",
      "        0.4654, 0.1918, 0.3338, 0.1427, 0.3378, 0.2550, 0.3613, 0.5731, 0.5064,\n",
      "        0.3077, 0.1852, 0.3834, 0.4325, 0.4427, 0.4032, 0.3668, 0.4078, 0.3660,\n",
      "        0.6196, 0.4895, 0.2848, 0.3068, 0.5402, 0.1706, 0.4098, 0.4236, 0.4657,\n",
      "        0.4123, 0.3239, 0.3889, 0.2568, 0.2196, 0.2069, 0.2856, 0.3638, 0.4773,\n",
      "        0.1780, 0.2537, 0.3267, 0.5513, 0.3999, 0.7010, 0.1124, 0.5224, 0.2160,\n",
      "        0.6004, 0.3322, 0.3222, 0.3685], device='cuda:0'), 'resnet18.layer3.1.bn2.bias': tensor([-0.0667, -0.2802, -0.0902, -0.2767, -0.2108, -0.0763, -0.3462, -0.2436,\n",
      "        -0.1979, -0.1571, -0.1492, -0.1293, -0.1398, -0.2855, -0.2567,  0.1387,\n",
      "        -0.3855, -0.2907, -0.2369, -0.1227, -0.3091, -0.2952, -0.2205, -0.3340,\n",
      "        -0.3129, -0.4565, -0.2539, -0.4451,  0.0969, -0.1135, -0.0966, -0.1931,\n",
      "         0.0726,  0.0737, -0.2797, -0.3844, -0.3349, -0.0058,  0.0225, -0.2027,\n",
      "        -0.3404, -0.2823, -0.0708, -0.1830, -0.3087, -0.1477, -0.0328, -0.3103,\n",
      "        -0.4446, -0.3554, -0.3611, -0.4350,  0.2051, -0.0241, -0.2274, -0.3806,\n",
      "        -0.1035,  0.0755, -0.3445,  0.0741,  0.0705,  0.0019, -0.3428, -0.2913,\n",
      "        -0.2349, -0.3232, -0.4957, -0.4762, -0.0347, -0.3139, -0.1772,  0.0243,\n",
      "        -0.1608, -0.2141, -0.3621, -0.1983, -0.2935, -0.2983, -0.2205, -0.1521,\n",
      "        -0.2777, -0.3020, -0.1990, -0.2263, -0.4420,  0.0824, -0.5314, -0.2388,\n",
      "        -0.3613,  0.1219,  0.0468, -0.4446, -0.2773, -0.2272, -0.1730, -0.0825,\n",
      "        -0.3560, -0.0798, -0.1488, -0.0543, -0.4514, -0.2400, -0.2489, -0.0266,\n",
      "        -0.2143, -0.3851, -0.0922, -0.2336, -0.3798,  0.0480, -0.0971,  0.1170,\n",
      "        -0.2872, -0.2695, -0.3621, -0.1163, -0.2228, -0.2518, -0.3338, -0.1850,\n",
      "        -0.2742, -0.2280, -0.4599, -0.2493, -0.2464, -0.0326, -0.1568, -0.2363,\n",
      "        -0.6375, -0.2032, -0.2577, -0.2178, -0.0102, -0.2952, -0.2171, -0.3572,\n",
      "        -0.0419, -0.5746, -0.2368, -0.3935, -0.0170, -0.5429, -0.2025, -0.2150,\n",
      "        -0.2767, -0.3937,  0.1159, -0.2497, -0.2827, -0.5108, -0.4395, -0.1179,\n",
      "        -0.0541, -0.4047, -0.2895, -0.2355, -0.2330, -0.2575,  0.0694,  0.1497,\n",
      "        -0.3689, -0.3498, -0.1296, -0.1054, -0.3478, -0.4578, -0.2561, -0.5231,\n",
      "        -0.4030, -0.2747, -0.6879,  0.0480, -0.3128, -0.1437, -0.3072, -0.2467,\n",
      "        -0.3080, -0.2197, -0.3760, -0.2214, -0.3252, -0.3961, -0.2591, -0.4754,\n",
      "        -0.2935, -0.2390, -0.3040, -0.2300, -0.1028, -0.2453, -0.1476, -0.1736,\n",
      "         0.0103, -0.2850, -0.2242, -0.2240, -0.1727,  0.0485, -0.3311,  0.0583,\n",
      "        -0.2148, -0.3111, -0.1940, -0.5010, -0.4165, -0.6951,  0.0390, -0.2742,\n",
      "         0.0250, -0.3290,  0.0193, -0.3443, -0.0587, -0.3012, -0.6296, -0.3499,\n",
      "        -0.2037,  0.0263, -0.2302, -0.2388, -0.0249, -0.2827, -0.2664, -0.3977,\n",
      "        -0.4181, -0.4380, -0.6010, -0.2386, -0.2645, -0.4142, -0.1757, -0.2407,\n",
      "        -0.3524, -0.2638, -0.4495, -0.1549, -0.2942, -0.3213, -0.0595, -0.0826,\n",
      "        -0.1990, -0.3345, -0.2301,  0.0347, -0.0219, -0.2185, -0.4984, -0.1456,\n",
      "        -0.6117, -0.0502, -0.3387, -0.1741, -0.2149, -0.3019, -0.0692, -0.2656],\n",
      "       device='cuda:0'), 'resnet18.layer3.1.bn2.running_mean': tensor([-9.5141e-02, -1.6781e-01,  9.9093e-03, -2.2517e-01, -1.8072e-01,\n",
      "        -2.3469e-01, -2.3998e-01, -1.4204e-01,  1.7441e-01,  6.1605e-04,\n",
      "        -4.7492e-02,  5.7719e-02, -2.2179e-01, -3.1018e-01, -2.1568e-01,\n",
      "         3.9541e-01, -2.5319e-03, -2.2993e-01, -3.5459e-01, -5.1460e-01,\n",
      "        -1.0931e-01, -1.0446e+00,  1.1800e-02, -3.8761e-01, -2.6060e-01,\n",
      "        -4.3101e-02, -6.4322e-01, -6.9006e-02, -4.7229e-03, -6.1818e-01,\n",
      "        -7.9749e-02, -2.9562e-01, -2.8626e-01, -8.9184e-02, -1.9293e-01,\n",
      "        -2.8596e-01, -2.3369e-01, -1.7527e-01, -2.2291e-01, -1.0192e-01,\n",
      "        -2.5332e-01, -1.6840e-01,  5.5706e-02, -5.8952e-02, -1.1118e-01,\n",
      "        -2.9089e-01,  8.1355e-02, -4.7259e-01, -2.5730e-01, -1.9081e-01,\n",
      "        -1.1370e-01, -2.0039e-01,  5.8172e-02,  1.0616e+00, -1.3071e-01,\n",
      "        -8.4623e-02, -3.7048e-01, -2.6149e-01, -1.3479e-02, -3.2554e-01,\n",
      "        -1.5256e-01, -2.3815e-01, -2.1069e-01, -1.1968e-01, -2.8455e-01,\n",
      "        -1.4789e-01, -3.6088e-01, -1.5262e-01, -1.9168e-01, -4.6557e-01,\n",
      "        -2.3736e-01, -2.5768e-01, -4.5041e-01, -2.9911e-01, -1.8406e-01,\n",
      "         7.7528e-03, -1.2218e-01, -6.8138e-01, -3.7314e-01, -2.3177e-01,\n",
      "         6.1767e-02, -1.6696e-01, -3.2476e-01, -5.7503e-01, -1.5641e-01,\n",
      "         2.8858e-02, -7.0307e-01, -3.2737e-01, -2.6079e-01,  1.5788e-02,\n",
      "        -3.7103e-01,  5.8857e-02, -2.7665e-01, -2.0230e-01, -2.5217e-01,\n",
      "         6.9598e-02, -1.5665e-01, -1.8285e-01, -9.0817e-02, -2.7527e-01,\n",
      "        -4.8589e-01, -1.9747e-01, -1.9220e-01, -1.6452e-01, -7.0244e-02,\n",
      "        -1.9802e-01, -2.7676e-01, -2.7399e-01, -1.5082e-01, -3.7080e-01,\n",
      "         8.4582e-02, -3.0618e-01, -5.9160e-03, -3.8265e-01, -2.1431e-01,\n",
      "        -5.5763e-01, -3.9171e-01,  2.1888e-01, -3.1099e-01, -4.6067e-01,\n",
      "        -4.3049e-01, -2.8805e-01, -5.4341e-01, -2.5625e-01, -4.1530e-01,\n",
      "        -2.6653e-01, -3.2898e-01, -2.2042e-01, -3.1403e-02,  1.6870e-02,\n",
      "        -1.6949e-02, -2.0773e-01,  3.1892e-02, -1.5143e-01,  1.9846e-01,\n",
      "        -4.4479e-01, -3.1977e-01, -2.2729e-01, -3.0057e-01, -2.8698e-01,\n",
      "        -1.1992e-01, -2.2696e-01, -1.8743e-01, -2.4966e-01, -9.5940e-01,\n",
      "         3.6227e-02, -3.3404e-01, -1.1276e-01, -1.7207e-01, -3.5009e-01,\n",
      "        -2.1510e-01, -1.0347e-01, -1.6199e-01, -1.8757e-02, -1.8097e-01,\n",
      "        -2.5404e-01, -2.2552e-01,  1.0275e-01, -3.1352e-01,  1.2386e-01,\n",
      "        -2.7982e-01, -8.8059e-02, -3.1494e-02, -9.8340e-01, -3.4697e-01,\n",
      "        -1.2351e-01, -3.2501e-01, -5.3789e-01, -4.0499e-01, -4.1602e-01,\n",
      "         3.4121e-02, -2.9758e-01, -5.3408e-01, -8.2470e-01, -9.3154e-02,\n",
      "        -2.5212e-01, -2.6816e-01, -2.2216e-01, -1.6224e-01, -2.0867e-01,\n",
      "        -7.3487e-01,  7.0409e-01, -8.1756e-02, -5.3906e-01, -5.5964e-01,\n",
      "         9.6462e-02, -1.9396e-01, -3.4080e-01, -5.3364e-01, -4.8915e-01,\n",
      "        -1.9212e-01, -3.2250e-01, -1.1311e-01, -1.7075e-01, -1.8971e-01,\n",
      "        -1.1299e-01, -5.5799e-01, -2.2349e-01, -4.7265e-01, -3.1571e-01,\n",
      "        -3.4623e-01, -2.6463e-01, -9.7225e-02, -2.6448e-01, -1.6677e-01,\n",
      "        -6.9492e-01, -1.8081e-01, -4.0142e-01, -4.1780e-01,  2.4031e-02,\n",
      "        -3.2816e-01,  1.5651e-02, -1.7155e-01, -3.7087e-01, -3.7369e-01,\n",
      "        -5.3808e-01, -5.2248e-01,  8.6383e-02, -3.1286e-01, -1.4198e-01,\n",
      "        -7.0323e-01, -1.2559e-01, -3.5961e-01, -2.0192e-01, -2.0648e-01,\n",
      "        -2.5897e-01, -3.0289e-01, -1.8500e-01, -2.4837e-01, -3.6976e-01,\n",
      "        -3.1558e-01, -4.8163e-01, -2.0888e-01, -3.8198e-01, -3.0175e-01,\n",
      "        -2.2568e-02, -2.5523e-01, -2.7066e-01, -1.2077e-01, -3.6055e-01,\n",
      "         6.3230e-02, -2.0746e-01, -4.5036e-01, -2.3451e-01, -2.8035e-01,\n",
      "        -2.2464e-01, -1.7222e-01, -2.1424e-01, -5.9736e-01, -1.3524e-01,\n",
      "        -2.5795e-01, -2.9526e-01, -8.4917e-01, -8.5178e-02, -5.3418e-01,\n",
      "        -2.7330e-01], device='cuda:0'), 'resnet18.layer3.1.bn2.running_var': tensor([0.1517, 0.1028, 0.0609, 0.0919, 0.1788, 0.1115, 0.1440, 0.1186, 0.1045,\n",
      "        0.1112, 0.0852, 0.0780, 0.1909, 0.1505, 0.2072, 0.2342, 0.1377, 0.1513,\n",
      "        0.1339, 0.2279, 0.1682, 0.4388, 0.2806, 0.1860, 0.1264, 0.1131, 0.2321,\n",
      "        0.2035, 0.1352, 0.2202, 0.1152, 0.1407, 0.1344, 0.0676, 0.0800, 0.0960,\n",
      "        0.0618, 0.0837, 0.0945, 0.0632, 0.1476, 0.1263, 0.0674, 0.0944, 0.0865,\n",
      "        0.1217, 0.0646, 0.3881, 0.1675, 0.2295, 0.1165, 0.1565, 0.1516, 0.2648,\n",
      "        0.1545, 0.1253, 0.1297, 0.1041, 0.1751, 0.2069, 0.2156, 0.0986, 0.1315,\n",
      "        0.1436, 0.1971, 0.1061, 0.2005, 0.1554, 0.0795, 0.1644, 0.1151, 0.0687,\n",
      "        0.1194, 0.1605, 0.1177, 0.1281, 0.1051, 0.2540, 0.1108, 0.0784, 0.1461,\n",
      "        0.1251, 0.1809, 0.1469, 0.1572, 0.0710, 0.2535, 0.0796, 0.2713, 0.1671,\n",
      "        0.0975, 0.1066, 0.3137, 0.1229, 0.2024, 0.0993, 0.1761, 0.1590, 0.1500,\n",
      "        0.1759, 0.2219, 0.1234, 0.1462, 0.1169, 0.1201, 0.0803, 0.0998, 0.1704,\n",
      "        0.1748, 0.0802, 0.1045, 0.0582, 0.1973, 0.1440, 0.1889, 0.1025, 0.0981,\n",
      "        0.1967, 0.1172, 0.2151, 0.2542, 0.1511, 0.1542, 0.1115, 0.1582, 0.1643,\n",
      "        0.2137, 0.1280, 0.1232, 0.0166, 0.0600, 0.1036, 0.1072, 0.0858, 0.1129,\n",
      "        0.1566, 0.1658, 0.1212, 0.1376, 0.1695, 0.0844, 0.2126, 0.1059, 0.1336,\n",
      "        0.2351, 0.2076, 0.1695, 0.1529, 0.0878, 0.1455, 0.1949, 0.0858, 0.0724,\n",
      "        0.1635, 0.1666, 0.3153, 0.0741, 0.1224, 0.3921, 0.0854, 0.1447, 0.1350,\n",
      "        0.1502, 0.4159, 0.1801, 0.1811, 0.1436, 0.1727, 0.1050, 0.2950, 0.1395,\n",
      "        0.0990, 0.1362, 0.2879, 0.1539, 0.2805, 0.1163, 0.1629, 0.1527, 0.2653,\n",
      "        0.2055, 0.4065, 0.1325, 0.1415, 0.1703, 0.1452, 0.0815, 0.1745, 0.3416,\n",
      "        0.1814, 0.1223, 0.1754, 0.1986, 0.1290, 0.1389, 0.1470, 0.2666, 0.1531,\n",
      "        0.2743, 0.4103, 0.2699, 0.0621, 0.1270, 0.1093, 0.1842, 0.2669, 0.1715,\n",
      "        0.2585, 0.0795, 0.1364, 0.0742, 0.0652, 0.0812, 0.1362, 0.2038, 0.3321,\n",
      "        0.2059, 0.1165, 0.1056, 0.1292, 0.2232, 0.1478, 0.1199, 0.1098, 0.1222,\n",
      "        0.1995, 0.1498, 0.0950, 0.0850, 0.1363, 0.1088, 0.1167, 0.1323, 0.1643,\n",
      "        0.1888, 0.1084, 0.1416, 0.0714, 0.1183, 0.0920, 0.1322, 0.1427, 0.1691,\n",
      "        0.1072, 0.1059, 0.1190, 0.2229, 0.1909, 0.3497, 0.0373, 0.2658, 0.1085,\n",
      "        0.3642, 0.1391, 0.1716, 0.1339], device='cuda:0'), 'resnet18.layer3.1.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer4.0.conv1.weight': tensor([[[[-0.0353, -0.0391, -0.0578],\n",
      "          [-0.0476, -0.0199, -0.0446],\n",
      "          [ 0.0110, -0.0031,  0.0181]],\n",
      "\n",
      "         [[-0.0174,  0.0164, -0.0176],\n",
      "          [-0.0094, -0.0013, -0.0347],\n",
      "          [-0.0044,  0.0096,  0.0119]],\n",
      "\n",
      "         [[-0.0159, -0.0160, -0.0256],\n",
      "          [-0.0467, -0.0239, -0.0180],\n",
      "          [-0.0367, -0.0444, -0.0152]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0465, -0.0364, -0.0515],\n",
      "          [-0.0044, -0.0304, -0.0306],\n",
      "          [-0.0055,  0.0165, -0.0111]],\n",
      "\n",
      "         [[ 0.0313,  0.0163,  0.0444],\n",
      "          [ 0.0176, -0.0013,  0.0055],\n",
      "          [ 0.0365,  0.0035, -0.0048]],\n",
      "\n",
      "         [[ 0.0368,  0.0108,  0.0153],\n",
      "          [ 0.0157, -0.0054, -0.0105],\n",
      "          [-0.0169, -0.0171, -0.0117]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0202,  0.0284,  0.0667],\n",
      "          [ 0.0228,  0.0471,  0.0549],\n",
      "          [-0.0082,  0.0073,  0.0319]],\n",
      "\n",
      "         [[-0.0251, -0.0457, -0.0134],\n",
      "          [-0.0323, -0.0265,  0.0021],\n",
      "          [-0.0501, -0.0207, -0.0018]],\n",
      "\n",
      "         [[-0.0100,  0.0389,  0.0190],\n",
      "          [-0.0057,  0.0221,  0.0068],\n",
      "          [-0.0138,  0.0128,  0.0200]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0114, -0.0192, -0.0162],\n",
      "          [-0.0472, -0.0012, -0.0546],\n",
      "          [-0.0340, -0.0428, -0.0756]],\n",
      "\n",
      "         [[-0.0174, -0.0157, -0.0333],\n",
      "          [ 0.0016,  0.0106, -0.0318],\n",
      "          [ 0.0279, -0.0031, -0.0393]],\n",
      "\n",
      "         [[ 0.0554,  0.0530,  0.0341],\n",
      "          [ 0.0828,  0.0801,  0.0536],\n",
      "          [ 0.0541,  0.0514,  0.0433]]],\n",
      "\n",
      "\n",
      "        [[[-0.0034,  0.0352,  0.0123],\n",
      "          [ 0.0329,  0.0068,  0.0182],\n",
      "          [ 0.0302,  0.0264,  0.0064]],\n",
      "\n",
      "         [[-0.0131,  0.0115, -0.0027],\n",
      "          [-0.0227,  0.0019,  0.0214],\n",
      "          [-0.0398, -0.0208,  0.0471]],\n",
      "\n",
      "         [[ 0.0007, -0.0083,  0.0079],\n",
      "          [-0.0196, -0.0194,  0.0120],\n",
      "          [-0.0387, -0.0407, -0.0166]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0518,  0.0596,  0.0357],\n",
      "          [ 0.0392,  0.0246,  0.0067],\n",
      "          [ 0.0491,  0.0164, -0.0183]],\n",
      "\n",
      "         [[ 0.0654,  0.0645,  0.0658],\n",
      "          [ 0.0135,  0.0185,  0.0261],\n",
      "          [ 0.0014,  0.0082, -0.0085]],\n",
      "\n",
      "         [[-0.0380, -0.0335, -0.0032],\n",
      "          [-0.0117, -0.0154, -0.0057],\n",
      "          [-0.0052, -0.0166, -0.0058]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0159,  0.0243,  0.0121],\n",
      "          [ 0.0441,  0.0367,  0.0054],\n",
      "          [ 0.0188,  0.0160,  0.0332]],\n",
      "\n",
      "         [[-0.0026,  0.0175,  0.0468],\n",
      "          [ 0.0295,  0.0375,  0.0455],\n",
      "          [ 0.0157,  0.0460,  0.0518]],\n",
      "\n",
      "         [[ 0.0057, -0.0031,  0.0079],\n",
      "          [-0.0271, -0.0010, -0.0080],\n",
      "          [-0.0265, -0.0262, -0.0268]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0389,  0.0446,  0.0267],\n",
      "          [ 0.0044, -0.0025, -0.0074],\n",
      "          [-0.0524, -0.0453, -0.0121]],\n",
      "\n",
      "         [[ 0.0003, -0.0089, -0.0313],\n",
      "          [-0.0272, -0.0007, -0.0322],\n",
      "          [-0.0637, -0.0539, -0.0544]],\n",
      "\n",
      "         [[ 0.0648,  0.0072,  0.0619],\n",
      "          [ 0.0710,  0.0364,  0.0247],\n",
      "          [ 0.0494, -0.0050, -0.0345]]],\n",
      "\n",
      "\n",
      "        [[[-0.0096,  0.0301,  0.0022],\n",
      "          [-0.0143,  0.0384,  0.0361],\n",
      "          [-0.0210, -0.0035,  0.0228]],\n",
      "\n",
      "         [[-0.0355, -0.0388, -0.0335],\n",
      "          [-0.0018,  0.0067, -0.0213],\n",
      "          [-0.0216, -0.0246, -0.0108]],\n",
      "\n",
      "         [[-0.0258, -0.0104, -0.0180],\n",
      "          [-0.0298, -0.0050, -0.0150],\n",
      "          [-0.0133, -0.0054, -0.0178]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0226,  0.0458,  0.0398],\n",
      "          [-0.0571, -0.0341, -0.0106],\n",
      "          [-0.0241, -0.0469, -0.0429]],\n",
      "\n",
      "         [[-0.0335, -0.0401, -0.0206],\n",
      "          [-0.0487, -0.0692, -0.0056],\n",
      "          [-0.0133, -0.0205,  0.0110]],\n",
      "\n",
      "         [[-0.0007, -0.0332, -0.0149],\n",
      "          [ 0.0115,  0.0163,  0.0041],\n",
      "          [ 0.0187,  0.0233,  0.0056]]],\n",
      "\n",
      "\n",
      "        [[[-0.0003, -0.0028,  0.0002],\n",
      "          [-0.0126, -0.0172, -0.0102],\n",
      "          [-0.0686, -0.0147,  0.0012]],\n",
      "\n",
      "         [[-0.0192, -0.0238, -0.0108],\n",
      "          [-0.0336, -0.0189,  0.0102],\n",
      "          [-0.0279,  0.0153,  0.0492]],\n",
      "\n",
      "         [[-0.0303, -0.0249, -0.0214],\n",
      "          [-0.0088, -0.0249, -0.0482],\n",
      "          [-0.0119, -0.0405, -0.0191]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0207,  0.0226,  0.0080],\n",
      "          [-0.0218,  0.0263, -0.0095],\n",
      "          [-0.0341,  0.0386,  0.0109]],\n",
      "\n",
      "         [[ 0.0138,  0.0007, -0.0517],\n",
      "          [-0.0171, -0.0408, -0.0463],\n",
      "          [-0.0620, -0.0299,  0.0484]],\n",
      "\n",
      "         [[-0.0193, -0.0187, -0.0465],\n",
      "          [-0.0038, -0.0049, -0.0170],\n",
      "          [-0.0016,  0.0160,  0.0067]]]], device='cuda:0'), 'resnet18.layer4.0.bn1.weight': tensor([0.3436, 0.3599, 0.3377, 0.3709, 0.3259, 0.3787, 0.3737, 0.4481, 0.4528,\n",
      "        0.3531, 0.3487, 0.3443, 0.3379, 0.3991, 0.3651, 0.3769, 0.4416, 0.3861,\n",
      "        0.3852, 0.3946, 0.2617, 0.3859, 0.3813, 0.3655, 0.3628, 0.3300, 0.3710,\n",
      "        0.3009, 0.3504, 0.3932, 0.3996, 0.4060, 0.3692, 0.4079, 0.4046, 0.3584,\n",
      "        0.4631, 0.4153, 0.3217, 0.3715, 0.3538, 0.4043, 0.3968, 0.3496, 0.3629,\n",
      "        0.3487, 0.4235, 0.3910, 0.3788, 0.3197, 0.4144, 0.3989, 0.3417, 0.3917,\n",
      "        0.3805, 0.3201, 0.3673, 0.4167, 0.3361, 0.3452, 0.3589, 0.3279, 0.4397,\n",
      "        0.3349, 0.3845, 0.3567, 0.4070, 0.3044, 0.3786, 0.4328, 0.4128, 0.4169,\n",
      "        0.3445, 0.4056, 0.4065, 0.3883, 0.4119, 0.4195, 0.3625, 0.3641, 0.3579,\n",
      "        0.3963, 0.3376, 0.3574, 0.3883, 0.3716, 0.4013, 0.3634, 0.3958, 0.3551,\n",
      "        0.3873, 0.3927, 0.4054, 0.4211, 0.3543, 0.3624, 0.3594, 0.4064, 0.4054,\n",
      "        0.3475, 0.3599, 0.4097, 0.3441, 0.4540, 0.3891, 0.3521, 0.4418, 0.3700,\n",
      "        0.3930, 0.3403, 0.4104, 0.3538, 0.3576, 0.3734, 0.3228, 0.4055, 0.3435,\n",
      "        0.4235, 0.4370, 0.4080, 0.4605, 0.3340, 0.4303, 0.4221, 0.4041, 0.3395,\n",
      "        0.4160, 0.3318, 0.3854, 0.4208, 0.3510, 0.3687, 0.3574, 0.3292, 0.3790,\n",
      "        0.3717, 0.3532, 0.3890, 0.3409, 0.3475, 0.3431, 0.3576, 0.3592, 0.3146,\n",
      "        0.3589, 0.4096, 0.3933, 0.2932, 0.3871, 0.3658, 0.3601, 0.4064, 0.3819,\n",
      "        0.3615, 0.3734, 0.3754, 0.3834, 0.3171, 0.4481, 0.3819, 0.4143, 0.3679,\n",
      "        0.4355, 0.3851, 0.3284, 0.3523, 0.4080, 0.4103, 0.4193, 0.3802, 0.2885,\n",
      "        0.3885, 0.4008, 0.3404, 0.4644, 0.3852, 0.3690, 0.3895, 0.3531, 0.3969,\n",
      "        0.3413, 0.4034, 0.3554, 0.3688, 0.3311, 0.3573, 0.2714, 0.4008, 0.3816,\n",
      "        0.3799, 0.3462, 0.4152, 0.3291, 0.3310, 0.3631, 0.3743, 0.4059, 0.4568,\n",
      "        0.4031, 0.3924, 0.3710, 0.3952, 0.3720, 0.3722, 0.4070, 0.3800, 0.3582,\n",
      "        0.3518, 0.3331, 0.4605, 0.3696, 0.4349, 0.4200, 0.3436, 0.3668, 0.4277,\n",
      "        0.3244, 0.3386, 0.3894, 0.3415, 0.4104, 0.3448, 0.4086, 0.4117, 0.3516,\n",
      "        0.3819, 0.3446, 0.3562, 0.3953, 0.3395, 0.4366, 0.3115, 0.3920, 0.3769,\n",
      "        0.3941, 0.3990, 0.3577, 0.3688, 0.3070, 0.3449, 0.3742, 0.3395, 0.3618,\n",
      "        0.3024, 0.3610, 0.3993, 0.3819, 0.3902, 0.3011, 0.3299, 0.3255, 0.3574,\n",
      "        0.3414, 0.3797, 0.4027, 0.3718, 0.3489, 0.4846, 0.3207, 0.3905, 0.2376,\n",
      "        0.4175, 0.3807, 0.2748, 0.3913, 0.3721, 0.4083, 0.3542, 0.3145, 0.3771,\n",
      "        0.3660, 0.3554, 0.4280, 0.3787, 0.3827, 0.4001, 0.4022, 0.3699, 0.3293,\n",
      "        0.3872, 0.3672, 0.4289, 0.4072, 0.3549, 0.3887, 0.3694, 0.3980, 0.3326,\n",
      "        0.4038, 0.3760, 0.2844, 0.3907, 0.3847, 0.3505, 0.4232, 0.3458, 0.3891,\n",
      "        0.3698, 0.3641, 0.3763, 0.4078, 0.3601, 0.3706, 0.3770, 0.3718, 0.4246,\n",
      "        0.3732, 0.4234, 0.4013, 0.3180, 0.4170, 0.3429, 0.3894, 0.3606, 0.4276,\n",
      "        0.3314, 0.3705, 0.3746, 0.3670, 0.3172, 0.3636, 0.3442, 0.4193, 0.4473,\n",
      "        0.3438, 0.3360, 0.4126, 0.4195, 0.4285, 0.3818, 0.4245, 0.3649, 0.4045,\n",
      "        0.3662, 0.3623, 0.3860, 0.3443, 0.4066, 0.3700, 0.4174, 0.4565, 0.4129,\n",
      "        0.4054, 0.3724, 0.4025, 0.4077, 0.3507, 0.3678, 0.3427, 0.4199, 0.4264,\n",
      "        0.4746, 0.4559, 0.3339, 0.3949, 0.3625, 0.3652, 0.3908, 0.3624, 0.3286,\n",
      "        0.3724, 0.4345, 0.4270, 0.3569, 0.3861, 0.3546, 0.4622, 0.2693, 0.3697,\n",
      "        0.3646, 0.3322, 0.3660, 0.3998, 0.3371, 0.3577, 0.3659, 0.3565, 0.3847,\n",
      "        0.4088, 0.4332, 0.3476, 0.3795, 0.3792, 0.3780, 0.3317, 0.3706, 0.3635,\n",
      "        0.4437, 0.3373, 0.3943, 0.2818, 0.3372, 0.3578, 0.4120, 0.4234, 0.3044,\n",
      "        0.3475, 0.3262, 0.3770, 0.3929, 0.3687, 0.3261, 0.3077, 0.3839, 0.3925,\n",
      "        0.3444, 0.4239, 0.2810, 0.4030, 0.3675, 0.3837, 0.3923, 0.3003, 0.3780,\n",
      "        0.4330, 0.3958, 0.3369, 0.3178, 0.3996, 0.3191, 0.3453, 0.3864, 0.3536,\n",
      "        0.3339, 0.4062, 0.3279, 0.3705, 0.3597, 0.3555, 0.3399, 0.3719, 0.3840,\n",
      "        0.3912, 0.3211, 0.3683, 0.3767, 0.3516, 0.4444, 0.4369, 0.3542, 0.3910,\n",
      "        0.4160, 0.3560, 0.3846, 0.4270, 0.3719, 0.4985, 0.4447, 0.4295, 0.3514,\n",
      "        0.3896, 0.4641, 0.3962, 0.3557, 0.3864, 0.3720, 0.3168, 0.3527, 0.3984,\n",
      "        0.4001, 0.3822, 0.4173, 0.3968, 0.4140, 0.3693, 0.3498, 0.4028, 0.4065,\n",
      "        0.3640, 0.3708, 0.3314, 0.3426, 0.2913, 0.3595, 0.3391, 0.3863, 0.4012,\n",
      "        0.3108, 0.3942, 0.3647, 0.3788, 0.2352, 0.4007, 0.4101, 0.3915, 0.3977,\n",
      "        0.4158, 0.3506, 0.3155, 0.3875, 0.4019, 0.3320, 0.3134, 0.3679, 0.3599,\n",
      "        0.3485, 0.3490, 0.2757, 0.3837, 0.3173, 0.4217, 0.4113, 0.3458, 0.4290,\n",
      "        0.3104, 0.4293, 0.3241, 0.3916, 0.3544, 0.4201, 0.3597, 0.3172],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn1.bias': tensor([-0.2535, -0.3227, -0.3320, -0.2534, -0.2652, -0.3949, -0.2725, -0.3966,\n",
      "        -0.3974, -0.4279, -0.2425, -0.1261, -0.2479, -0.4785, -0.2951, -0.4103,\n",
      "        -0.3719, -0.2978, -0.3183, -0.2107, -0.1629, -0.2155, -0.4465, -0.3990,\n",
      "        -0.3490, -0.3819, -0.4405, -0.3024, -0.1746, -0.3535, -0.2566, -0.4665,\n",
      "        -0.3531, -0.4353, -0.4067, -0.3549, -0.2755, -0.4800, -0.1761, -0.4617,\n",
      "        -0.1717, -0.3737, -0.3664, -0.2359, -0.4095, -0.2959, -0.3521, -0.2896,\n",
      "        -0.3549, -0.1399, -0.3173, -0.3188, -0.3591, -0.2531, -0.2864, -0.3597,\n",
      "        -0.3882, -0.4267, -0.2293, -0.3708, -0.3064, -0.0980, -0.3745, -0.2837,\n",
      "        -0.2755, -0.2987, -0.2968, -0.1584, -0.2581, -0.4183, -0.3891, -0.4751,\n",
      "        -0.2220, -0.2810, -0.4694, -0.3061, -0.5293, -0.3631, -0.4410, -0.3672,\n",
      "        -0.2240, -0.3109, -0.3740, -0.4028, -0.3208, -0.3166, -0.3971, -0.4277,\n",
      "        -0.4888, -0.3441, -0.3247, -0.1827, -0.2837, -0.3320, -0.3135, -0.3957,\n",
      "        -0.2570, -0.4112, -0.3772, -0.2333, -0.4542, -0.2367, -0.3096, -0.4409,\n",
      "        -0.4103, -0.3301, -0.3885, -0.3172, -0.3463, -0.3354, -0.3003, -0.3036,\n",
      "        -0.3036, -0.4763, -0.3124, -0.3720, -0.1929, -0.3223, -0.2680, -0.4054,\n",
      "        -0.3750, -0.2348, -0.4520, -0.3894, -0.2822, -0.2820, -0.4518, -0.3395,\n",
      "        -0.4922, -0.3965, -0.4828, -0.2573, -0.2959, -0.1780, -0.3417, -0.3046,\n",
      "        -0.2900, -0.2954, -0.2429, -0.3535, -0.2518, -0.2500, -0.2776, -0.1792,\n",
      "        -0.2972, -0.2516, -0.3396, -0.1544, -0.3889, -0.2587, -0.2819, -0.3496,\n",
      "        -0.2934, -0.2813, -0.4117, -0.3137, -0.4196, -0.2342, -0.3738, -0.2335,\n",
      "        -0.2521, -0.2654, -0.4472, -0.3567, -0.4422, -0.3276, -0.3920, -0.4229,\n",
      "        -0.3834, -0.2590, -0.1564, -0.3334, -0.4376, -0.3988, -0.3895, -0.3228,\n",
      "        -0.4012, -0.2192, -0.3759, -0.2213, -0.2353, -0.2958, -0.2474, -0.3295,\n",
      "        -0.3106, -0.2525, -0.1932, -0.2577, -0.2930, -0.3293, -0.2605, -0.4365,\n",
      "        -0.2967, -0.3283, -0.2003, -0.2455, -0.3952, -0.3645, -0.4232, -0.2868,\n",
      "        -0.1632, -0.3652, -0.2432, -0.4084, -0.4629, -0.3206, -0.3462, -0.3067,\n",
      "        -0.2387, -0.4735, -0.4091, -0.3442, -0.4295, -0.3333, -0.3887, -0.4144,\n",
      "        -0.1857, -0.1999, -0.3097, -0.2872, -0.3856, -0.3040, -0.2563, -0.4162,\n",
      "        -0.2297, -0.3547, -0.2750, -0.2506, -0.3706, -0.2528, -0.4084, -0.2434,\n",
      "        -0.2717, -0.4777, -0.3420, -0.3539, -0.2517, -0.3457, -0.3843, -0.3644,\n",
      "        -0.3192, -0.1975, -0.2115, -0.2943, -0.3265, -0.5005, -0.2909, -0.3459,\n",
      "        -0.2787, -0.2906, -0.3280, -0.2193, -0.2740, -0.3624, -0.3480, -0.3554,\n",
      "        -0.3258, -0.3703, -0.3592, -0.3233,  0.0179, -0.5143, -0.2915, -0.2169,\n",
      "        -0.2705, -0.3808, -0.3839, -0.2647, -0.2748, -0.3290, -0.3472, -0.3453,\n",
      "        -0.3488, -0.3192, -0.4276, -0.3805, -0.3803, -0.3267, -0.2347, -0.3579,\n",
      "        -0.2841, -0.3329, -0.4806, -0.2523, -0.3462, -0.2159, -0.4550, -0.5295,\n",
      "        -0.2713, -0.2598, -0.2508, -0.2743, -0.3412, -0.2540, -0.4639, -0.2740,\n",
      "        -0.2422, -0.2465, -0.3278, -0.2929, -0.4420, -0.3844, -0.4565, -0.3745,\n",
      "        -0.2897, -0.3993, -0.2884, -0.2955, -0.3661, -0.1848, -0.3068, -0.2015,\n",
      "        -0.2884, -0.2873, -0.3078, -0.3742, -0.4049, -0.3390, -0.3814, -0.3645,\n",
      "        -0.3200, -0.3484, -0.3736, -0.4445, -0.3115, -0.3833, -0.5532, -0.4142,\n",
      "        -0.5259, -0.2994, -0.3919, -0.3499, -0.4201, -0.4253, -0.3725, -0.3281,\n",
      "        -0.3028, -0.1987, -0.2027, -0.3807, -0.2939, -0.4026, -0.4292, -0.4271,\n",
      "        -0.3514, -0.2974, -0.2985, -0.2367, -0.3026, -0.3828, -0.4240, -0.3558,\n",
      "        -0.4831, -0.3010, -0.3347, -0.2427, -0.2934, -0.3108, -0.1950, -0.2595,\n",
      "        -0.2708, -0.4888, -0.4868, -0.4228, -0.4086, -0.1727, -0.3591, -0.0063,\n",
      "        -0.2694, -0.5013, -0.3909, -0.1497, -0.3747, -0.2741, -0.2732, -0.3429,\n",
      "        -0.3608, -0.2978, -0.3784, -0.4439, -0.2298, -0.2979, -0.3463, -0.2848,\n",
      "        -0.2312, -0.3318, -0.2340, -0.4883, -0.2262, -0.4037, -0.0431, -0.2558,\n",
      "        -0.3950, -0.4410, -0.4296, -0.2382, -0.3082, -0.2541, -0.2975, -0.4467,\n",
      "        -0.2480, -0.3181, -0.3358, -0.2937, -0.4817, -0.3878, -0.4605, -0.0874,\n",
      "        -0.2089, -0.3241, -0.3327, -0.3420, -0.1248, -0.3059, -0.4583, -0.4174,\n",
      "        -0.4144, -0.3296, -0.3369, -0.3108, -0.1718, -0.3322, -0.1762, -0.1284,\n",
      "        -0.3406, -0.2565, -0.3670, -0.2626, -0.3148, -0.2063, -0.3619, -0.3816,\n",
      "        -0.3622, -0.1704, -0.2560, -0.2262, -0.2983, -0.4225, -0.3150, -0.4089,\n",
      "        -0.4371, -0.3763, -0.4254, -0.4592, -0.3674, -0.2591, -0.3836, -0.3132,\n",
      "        -0.3515, -0.3833, -0.3619, -0.4458, -0.3338, -0.3429, -0.2263, -0.1743,\n",
      "        -0.2913, -0.3819, -0.4616, -0.4451, -0.3331, -0.3843, -0.3483, -0.3855,\n",
      "        -0.5311, -0.2221, -0.3280, -0.4060, -0.3689, -0.2946, -0.3001, -0.1597,\n",
      "        -0.1135, -0.2380, -0.1801, -0.3014, -0.4906, -0.1961, -0.3472, -0.2302,\n",
      "        -0.2230, -0.2024, -0.3796, -0.3623, -0.3109, -0.2862, -0.4064, -0.3601,\n",
      "        -0.2774, -0.4592, -0.3111, -0.2885, -0.2576, -0.3175, -0.2953, -0.2894,\n",
      "        -0.3207, -0.2981, -0.3575, -0.1694, -0.3409, -0.3192, -0.1691, -0.5046,\n",
      "        -0.1937, -0.4334, -0.1720, -0.4676, -0.2081, -0.4181, -0.3737, -0.1742],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn1.running_mean': tensor([-0.0105, -0.2612,  0.0029, -0.4277, -0.1984, -0.1879, -0.2712, -0.2438,\n",
      "        -0.2202, -0.3527, -0.3632, -0.2029, -0.0682, -0.0448, -0.2777, -0.2499,\n",
      "        -0.1823, -0.1864, -0.2842, -0.4103, -0.2631, -0.3848, -0.2396, -0.2103,\n",
      "        -0.0693, -0.1613, -0.0364, -0.1792, -0.1764, -0.5181, -0.2209, -0.2288,\n",
      "        -0.2047, -0.2075, -0.1171, -0.1536, -0.1951,  0.0051, -0.1067, -0.3145,\n",
      "        -0.5281, -0.4981, -0.2799, -0.2924, -0.2500, -0.3002, -0.1719, -0.2382,\n",
      "        -0.2757, -0.3156, -0.2150, -0.4490, -0.2495, -0.2439, -0.2404, -0.0519,\n",
      "        -0.2740, -0.2998, -0.3160, -0.1699, -0.0348, -0.0616, -0.1080, -0.2270,\n",
      "        -0.1584, -0.1292, -0.4004, -0.2323, -0.2052, -0.1931, -0.3954, -0.1666,\n",
      "        -0.2234, -0.3513, -0.1659, -0.2616, -0.4792, -0.2650, -0.2950, -0.2662,\n",
      "        -0.3718, -0.2737, -0.2242, -0.0968, -0.1791, -0.3260, -0.4624, -0.4013,\n",
      "        -0.2327, -0.2048, -0.1775, -0.1047, -0.0487, -0.2389, -0.3275, -0.1632,\n",
      "        -0.3482, -0.2105, -0.4741, -0.3993, -0.2375, -0.3616,  0.0245, -0.3918,\n",
      "        -0.1862, -0.3262, -0.1371, -0.3613, -0.2787, -0.3232, -0.4209, -0.0185,\n",
      "        -0.3154, -0.1550, -0.0506, -0.2864, -0.2995, -0.3112, -0.2106, -0.1919,\n",
      "        -0.3888, -0.4000, -0.4132, -0.3617, -0.2843, -0.1668, -0.4322, -0.0859,\n",
      "        -0.3693, -0.1151, -0.1987, -0.3871, -0.2458, -0.3203, -0.3379, -0.2561,\n",
      "        -0.2235, -0.2422, -0.4761, -0.2577, -0.2292, -0.3264, -0.0922, -0.3058,\n",
      "        -0.1734, -0.1972, -0.2252, -0.2133, -0.1658, -0.1038, -0.1295, -0.1521,\n",
      "        -0.1243, -0.2744, -0.2515, -0.1781, -0.3323, -0.3599, -0.4440, -0.2681,\n",
      "        -0.1732, -0.2753, -0.3508, -0.2463, -0.2262, -0.2061, -0.1950, -0.4398,\n",
      "        -0.5954, -0.3154, -0.2350, -0.1408, -0.0144, -0.2197, -0.2248, -0.3873,\n",
      "        -0.1518, -0.2569, -0.5088, -0.3176, -0.3638, -0.5759, -0.3051, -0.3711,\n",
      "        -0.2642, -0.2951, -0.3919, -0.2844, -0.1722, -0.2720, -0.1561, -0.3020,\n",
      "        -0.2187, -0.1290, -0.4616, -0.2760, -0.0215, -0.3173, -0.0819, -0.3059,\n",
      "        -0.2854, -0.3450, -0.3181, -0.2068, -0.2469, -0.3104, -0.1917, -0.3431,\n",
      "        -0.2093, -0.5435, -0.2683, -0.3246, -0.2695, -0.0799, -0.2287, -0.1923,\n",
      "        -0.1762, -0.3349, -0.2095, -0.2611, -0.2310, -0.1920, -0.1848, -0.2316,\n",
      "        -0.2869, -0.2618, -0.1966, -0.4200, -0.0941, -0.2709, -0.1765, -0.3520,\n",
      "        -0.1746, -0.1601, -0.2229, -0.2878, -0.2671, -0.2014, -0.2563, -0.1635,\n",
      "        -0.1930, -0.3031, -0.2588, -0.0526, -0.4085, -0.3024, -0.1367, -0.2148,\n",
      "        -0.1093, -0.1422, -0.3225, -0.2025, -0.2109, -0.2352, -0.0208, -0.3335,\n",
      "        -0.2255, -0.1016, -0.0648, -0.3269,  0.0176, -0.2015, -0.3287, -0.0784,\n",
      "        -0.2549, -0.1442, -0.2784, -0.2872, -0.0704, -0.2584, -0.4467, -0.2404,\n",
      "        -0.2862, -0.3481, -0.2602, -0.2416, -0.2695, -0.3204, -0.2957, -0.3866,\n",
      "        -0.2770, -0.5895, -0.3751, -0.2129,  0.1578, -0.2586, -0.1595,  0.0022,\n",
      "        -0.2900, -0.2781, -0.3817, -0.1690, -0.2773, -0.3054, -0.4313, -0.2805,\n",
      "        -0.0222, -0.2859, -0.1907, -0.3081, -0.3707, -0.2060, -0.2648, -0.1133,\n",
      "        -0.2171, -0.2216, -0.3464, -0.2179,  0.0298, -0.0380, -0.2733, -0.2497,\n",
      "        -0.4325, -0.2986, -0.2240, -0.1463, -0.3640, -0.2924, -0.2134, -0.1755,\n",
      "        -0.1412, -0.4130, -0.4464, -0.1280, -0.1552, -0.2435, -0.2530, -0.4551,\n",
      "        -0.1060, -0.2440, -0.2868, -0.1841, -0.1884, -0.2716, -0.3520, -0.1632,\n",
      "        -0.3012, -0.3400, -0.3858, -0.3141, -0.2719, -0.2657, -0.2075, -0.2847,\n",
      "        -0.1778, -0.3106, -0.3706, -0.4472, -0.0719, -0.2163, -0.2692, -0.1545,\n",
      "        -0.2887, -0.0143, -0.2069, -0.2975, -0.3564, -0.2686, -0.3714, -0.2317,\n",
      "        -0.2854, -0.2529, -0.2935, -0.3470, -0.4065, -0.2567, -0.1996, -0.1281,\n",
      "        -0.3886, -0.3587, -0.0610, -0.2274, -0.0623, -0.3724, -0.3334, -0.1241,\n",
      "        -0.3817, -0.2203, -0.1476, -0.0872, -0.2156, -0.1680, -0.2402, -0.2893,\n",
      "        -0.3436, -0.3147, -0.0970, -0.0894, -0.2123, -0.2514, -0.1596, -0.0582,\n",
      "        -0.3038, -0.3321, -0.1491, -0.3870, -0.2843, -0.1921, -0.1238, -0.2112,\n",
      "        -0.2163, -0.2617, -0.3162, -0.3782, -0.2985, -0.1098, -0.2813, -0.3222,\n",
      "        -0.3849, -0.1611, -0.3517, -0.1826, -0.1505, -0.0795, -0.3023, -0.2348,\n",
      "        -0.1443, -0.1573, -0.3152,  0.0198, -0.3139, -0.3132, -0.0447, -0.2212,\n",
      "        -0.1647, -0.0873, -0.2440, -0.1794, -0.3054, -0.2415, -0.1216, -0.3934,\n",
      "        -0.4566, -0.2806, -0.2107, -0.4060, -0.2088, -0.3645, -0.4487, -0.2260,\n",
      "        -0.0705, -0.3155, -0.2524, -0.1968, -0.1342, -0.1851, -0.3206, -0.3216,\n",
      "        -0.3155, -0.1803, -0.2368, -0.2355, -0.2950, -0.2819, -0.3444, -0.2559,\n",
      "        -0.2742, -0.2849, -0.0808, -0.2316, -0.1863, -0.4270, -0.3506, -0.3415,\n",
      "        -0.2219, -0.2456, -0.1735, -0.4988, -0.1251, -0.2383, -0.2592, -0.2353,\n",
      "        -0.2387, -0.4021, -0.2894, -0.3970, -0.0802, -0.2334, -0.2960, -0.3518,\n",
      "        -0.5156,  0.3513, -0.1656,  0.0152, -0.1192, -0.3196, -0.4151, -0.1411,\n",
      "        -0.2728, -0.1971, -0.2006, -0.1614, -0.1576, -0.0388, -0.2632, -0.4086,\n",
      "        -0.3557, -0.2084, -0.3651, -0.3257, -0.3206, -0.2082, -0.3902, -0.2833,\n",
      "        -0.1996, -0.1554, -0.1744, -0.2982, -0.2363, -0.2840, -0.2105, -0.2594],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn1.running_var': tensor([0.0567, 0.0555, 0.0608, 0.0698, 0.0521, 0.0428, 0.0691, 0.0534, 0.0789,\n",
      "        0.0502, 0.0796, 0.0958, 0.0333, 0.0707, 0.0461, 0.0646, 0.0724, 0.0489,\n",
      "        0.0610, 0.1096, 0.0374, 0.0723, 0.0619, 0.0611, 0.0759, 0.0326, 0.0735,\n",
      "        0.0333, 0.0864, 0.0754, 0.0630, 0.0637, 0.0461, 0.0742, 0.0569, 0.0650,\n",
      "        0.0833, 0.0514, 0.0300, 0.0677, 0.0510, 0.0623, 0.0623, 0.0525, 0.0817,\n",
      "        0.0558, 0.0523, 0.0545, 0.0528, 0.0652, 0.0758, 0.0624, 0.0394, 0.0622,\n",
      "        0.0437, 0.0659, 0.0655, 0.0700, 0.0633, 0.0517, 0.0845, 0.0958, 0.0829,\n",
      "        0.0521, 0.0508, 0.0574, 0.1100, 0.0492, 0.0701, 0.0574, 0.0576, 0.0569,\n",
      "        0.0650, 0.0640, 0.0538, 0.0475, 0.0745, 0.0463, 0.0398, 0.0660, 0.0694,\n",
      "        0.0553, 0.0529, 0.0389, 0.0556, 0.0618, 0.0523, 0.0759, 0.0533, 0.0513,\n",
      "        0.0632, 0.0649, 0.0590, 0.0583, 0.0508, 0.0654, 0.0556, 0.0540, 0.0772,\n",
      "        0.0740, 0.0345, 0.0706, 0.0597, 0.0663, 0.0572, 0.0577, 0.0702, 0.0676,\n",
      "        0.0497, 0.0477, 0.0661, 0.0453, 0.0809, 0.0531, 0.0419, 0.0743, 0.0606,\n",
      "        0.0809, 0.0590, 0.0553, 0.0917, 0.0490, 0.0714, 0.0787, 0.0670, 0.0660,\n",
      "        0.0798, 0.0325, 0.0503, 0.0771, 0.0512, 0.0590, 0.0475, 0.0721, 0.0570,\n",
      "        0.0612, 0.0504, 0.0487, 0.0611, 0.0493, 0.0486, 0.0935, 0.0930, 0.0389,\n",
      "        0.0569, 0.0509, 0.0565, 0.0503, 0.0474, 0.0679, 0.0626, 0.0522, 0.0628,\n",
      "        0.0675, 0.0376, 0.0497, 0.0584, 0.0633, 0.1119, 0.0714, 0.0660, 0.0595,\n",
      "        0.0780, 0.0567, 0.0378, 0.0584, 0.0606, 0.0781, 0.0822, 0.0777, 0.0502,\n",
      "        0.0591, 0.0686, 0.0735, 0.0813, 0.0501, 0.0498, 0.0885, 0.0788, 0.0837,\n",
      "        0.0510, 0.0708, 0.0607, 0.0538, 0.0373, 0.0698, 0.0663, 0.0623, 0.0444,\n",
      "        0.0455, 0.0597, 0.0710, 0.0555, 0.0406, 0.0950, 0.0608, 0.0583, 0.0696,\n",
      "        0.0557, 0.0799, 0.0776, 0.0663, 0.0827, 0.0672, 0.0581, 0.0666, 0.0497,\n",
      "        0.0595, 0.0497, 0.0932, 0.0725, 0.0526, 0.0668, 0.0632, 0.0545, 0.0710,\n",
      "        0.0316, 0.0657, 0.0468, 0.0361, 0.0631, 0.0555, 0.0829, 0.0675, 0.0833,\n",
      "        0.0640, 0.0705, 0.0751, 0.0435, 0.0394, 0.0539, 0.0463, 0.0722, 0.0644,\n",
      "        0.0668, 0.0654, 0.0736, 0.0474, 0.0641, 0.0517, 0.0491, 0.0463, 0.0484,\n",
      "        0.0301, 0.0593, 0.0642, 0.0514, 0.0518, 0.0358, 0.0341, 0.0705, 0.0657,\n",
      "        0.0764, 0.0427, 0.0705, 0.0476, 0.0411, 0.0721, 0.0475, 0.0755, 0.0771,\n",
      "        0.0524, 0.0570, 0.0278, 0.0497, 0.0485, 0.0703, 0.0694, 0.0481, 0.0603,\n",
      "        0.0608, 0.0533, 0.0431, 0.0989, 0.0531, 0.0523, 0.0500, 0.0430, 0.0693,\n",
      "        0.0692, 0.0617, 0.0638, 0.0692, 0.0494, 0.0756, 0.0575, 0.0622, 0.0395,\n",
      "        0.0961, 0.0509, 0.0458, 0.0493, 0.0603, 0.0496, 0.0568, 0.0468, 0.0942,\n",
      "        0.0675, 0.0392, 0.0482, 0.0565, 0.0699, 0.0632, 0.0654, 0.0334, 0.0548,\n",
      "        0.0672, 0.0676, 0.0772, 0.0611, 0.0607, 0.0441, 0.0538, 0.0595, 0.0793,\n",
      "        0.0495, 0.0720, 0.0567, 0.0527, 0.0458, 0.0641, 0.0604, 0.0791, 0.0735,\n",
      "        0.0784, 0.0298, 0.0584, 0.0953, 0.0536, 0.0757, 0.0734, 0.0427, 0.0817,\n",
      "        0.0525, 0.0660, 0.0440, 0.0654, 0.0715, 0.0680, 0.0425, 0.0794, 0.0678,\n",
      "        0.0798, 0.0654, 0.0657, 0.0791, 0.0589, 0.0624, 0.0506, 0.0374, 0.0838,\n",
      "        0.0543, 0.0726, 0.0472, 0.0730, 0.0660, 0.0718, 0.0578, 0.1106, 0.0773,\n",
      "        0.0866, 0.0637, 0.0408, 0.0532, 0.0707, 0.0879, 0.0606, 0.0643, 0.0584,\n",
      "        0.0470, 0.0511, 0.0852, 0.0491, 0.0645, 0.0598, 0.0505, 0.0558, 0.0456,\n",
      "        0.0589, 0.0572, 0.0500, 0.0546, 0.0726, 0.0643, 0.0412, 0.0753, 0.0453,\n",
      "        0.0585, 0.0594, 0.0476, 0.0983, 0.0396, 0.0558, 0.0968, 0.0738, 0.0544,\n",
      "        0.0567, 0.0482, 0.0599, 0.0581, 0.0557, 0.0624, 0.0460, 0.0521, 0.0512,\n",
      "        0.0677, 0.0584, 0.0420, 0.0686, 0.0419, 0.0559, 0.0706, 0.0547, 0.0653,\n",
      "        0.0698, 0.0445, 0.0441, 0.0347, 0.0673, 0.0348, 0.0334, 0.0609, 0.0804,\n",
      "        0.1090, 0.0541, 0.0622, 0.0614, 0.0714, 0.0625, 0.0605, 0.0667, 0.0605,\n",
      "        0.0507, 0.0519, 0.0725, 0.0660, 0.0495, 0.0777, 0.0595, 0.0580, 0.0607,\n",
      "        0.0641, 0.0577, 0.0690, 0.0605, 0.0604, 0.1096, 0.1050, 0.0862, 0.0629,\n",
      "        0.0635, 0.0943, 0.0537, 0.0634, 0.0580, 0.0683, 0.0399, 0.0589, 0.0560,\n",
      "        0.0492, 0.0468, 0.0813, 0.0660, 0.0582, 0.0525, 0.0702, 0.0518, 0.0591,\n",
      "        0.0424, 0.0597, 0.0386, 0.0630, 0.0552, 0.0822, 0.0686, 0.0710, 0.0457,\n",
      "        0.0446, 0.0765, 0.0650, 0.0636, 0.0414, 0.0660, 0.0529, 0.0465, 0.0564,\n",
      "        0.0638, 0.0608, 0.0466, 0.0368, 0.0645, 0.0714, 0.0373, 0.0348, 0.0553,\n",
      "        0.0653, 0.0672, 0.0322, 0.0633, 0.0460, 0.0607, 0.0841, 0.0559, 0.0629,\n",
      "        0.0660, 0.0441, 0.0632, 0.0700, 0.0463, 0.0854, 0.0378, 0.0415],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer4.0.conv2.weight': tensor([[[[ 0.0180, -0.0202, -0.0340],\n",
      "          [-0.0412, -0.0307, -0.0605],\n",
      "          [ 0.0235,  0.0289,  0.0314]],\n",
      "\n",
      "         [[ 0.0300,  0.0414,  0.0717],\n",
      "          [ 0.0166,  0.0177,  0.0021],\n",
      "          [ 0.0148, -0.0316, -0.0357]],\n",
      "\n",
      "         [[-0.0244, -0.0636, -0.0255],\n",
      "          [-0.0264, -0.0344, -0.0105],\n",
      "          [-0.0091, -0.0091, -0.0027]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0194, -0.0209, -0.0415],\n",
      "          [-0.0391, -0.0247, -0.0226],\n",
      "          [-0.0367, -0.0193, -0.0067]],\n",
      "\n",
      "         [[-0.0269, -0.0410, -0.0421],\n",
      "          [-0.0098,  0.0289, -0.0083],\n",
      "          [-0.0389, -0.0455, -0.0343]],\n",
      "\n",
      "         [[ 0.0370, -0.0197,  0.0196],\n",
      "          [ 0.0186,  0.0033,  0.0246],\n",
      "          [ 0.0214, -0.0051,  0.0191]]],\n",
      "\n",
      "\n",
      "        [[[-0.0159, -0.0264, -0.0051],\n",
      "          [-0.0375, -0.0045, -0.0230],\n",
      "          [-0.0331, -0.0234, -0.0770]],\n",
      "\n",
      "         [[ 0.0084, -0.0130, -0.0444],\n",
      "          [ 0.0401,  0.0137,  0.0058],\n",
      "          [-0.0345, -0.0284, -0.0032]],\n",
      "\n",
      "         [[-0.0194, -0.0141,  0.0287],\n",
      "          [-0.0055, -0.0516, -0.0455],\n",
      "          [ 0.0169, -0.0114, -0.0266]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0325, -0.0309,  0.0025],\n",
      "          [-0.0271, -0.0055,  0.0092],\n",
      "          [ 0.0094, -0.0140, -0.0194]],\n",
      "\n",
      "         [[-0.0202, -0.0192, -0.0261],\n",
      "          [-0.0257, -0.0602, -0.0451],\n",
      "          [-0.0083, -0.0343, -0.0296]],\n",
      "\n",
      "         [[-0.0359, -0.0223,  0.0034],\n",
      "          [-0.0084,  0.0110,  0.0204],\n",
      "          [-0.0293,  0.0264,  0.0172]]],\n",
      "\n",
      "\n",
      "        [[[-0.0017,  0.0048, -0.0030],\n",
      "          [ 0.0119, -0.0065,  0.0282],\n",
      "          [ 0.0725,  0.0127,  0.0367]],\n",
      "\n",
      "         [[-0.0256, -0.0340, -0.0289],\n",
      "          [-0.0033,  0.0092, -0.0046],\n",
      "          [-0.0149,  0.0072, -0.0159]],\n",
      "\n",
      "         [[ 0.0006, -0.0380, -0.0091],\n",
      "          [ 0.0151, -0.0194, -0.0027],\n",
      "          [-0.0188, -0.0176, -0.0119]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0571,  0.0691,  0.0561],\n",
      "          [ 0.0147,  0.0348,  0.0423],\n",
      "          [-0.0358,  0.0074,  0.0056]],\n",
      "\n",
      "         [[-0.0104, -0.0063, -0.0014],\n",
      "          [-0.0297, -0.0384, -0.0288],\n",
      "          [ 0.0093,  0.0053,  0.0107]],\n",
      "\n",
      "         [[ 0.0007, -0.0314, -0.0066],\n",
      "          [-0.0006,  0.0129, -0.0102],\n",
      "          [-0.0378, -0.0184, -0.0237]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-0.0014,  0.0019,  0.0088],\n",
      "          [-0.0101, -0.0225, -0.0050],\n",
      "          [ 0.0608,  0.0632,  0.0318]],\n",
      "\n",
      "         [[ 0.0123, -0.0033, -0.0380],\n",
      "          [ 0.0295, -0.0018, -0.0100],\n",
      "          [ 0.0118,  0.0194,  0.0302]],\n",
      "\n",
      "         [[-0.0169, -0.0244,  0.0055],\n",
      "          [-0.0386, -0.0191,  0.0009],\n",
      "          [ 0.0034,  0.0163,  0.0177]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0338, -0.0412, -0.0002],\n",
      "          [-0.0122, -0.0766, -0.0041],\n",
      "          [-0.0044, -0.0203, -0.0163]],\n",
      "\n",
      "         [[-0.0109,  0.0054,  0.0007],\n",
      "          [ 0.0191, -0.0091,  0.0178],\n",
      "          [ 0.0440, -0.0069,  0.0329]],\n",
      "\n",
      "         [[ 0.0078,  0.0060, -0.0196],\n",
      "          [-0.0175, -0.0189, -0.0262],\n",
      "          [ 0.0057, -0.0232, -0.0243]]],\n",
      "\n",
      "\n",
      "        [[[-0.0348, -0.0560, -0.0299],\n",
      "          [-0.0363, -0.0666, -0.0433],\n",
      "          [-0.0723, -0.0811, -0.0235]],\n",
      "\n",
      "         [[-0.0007, -0.0159,  0.0170],\n",
      "          [-0.0159, -0.0421, -0.0071],\n",
      "          [ 0.0030,  0.0088,  0.0157]],\n",
      "\n",
      "         [[-0.0117,  0.0174, -0.0067],\n",
      "          [-0.0140, -0.0218, -0.0384],\n",
      "          [ 0.0371,  0.0139,  0.0081]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0107, -0.0191, -0.0260],\n",
      "          [-0.0050, -0.0180, -0.0080],\n",
      "          [ 0.0152, -0.0211, -0.0101]],\n",
      "\n",
      "         [[ 0.0252,  0.0217, -0.0018],\n",
      "          [-0.0068, -0.0261, -0.0249],\n",
      "          [-0.0346, -0.0096, -0.0119]],\n",
      "\n",
      "         [[-0.0372, -0.0139, -0.0261],\n",
      "          [-0.0191, -0.0197, -0.0258],\n",
      "          [-0.0358, -0.0210,  0.0229]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0059, -0.0283,  0.0417],\n",
      "          [ 0.0199, -0.0305, -0.0012],\n",
      "          [ 0.0077, -0.0014, -0.0223]],\n",
      "\n",
      "         [[-0.0079, -0.0541, -0.0129],\n",
      "          [ 0.0065, -0.0647, -0.0260],\n",
      "          [ 0.0062, -0.0059,  0.0011]],\n",
      "\n",
      "         [[ 0.0031,  0.0118,  0.0306],\n",
      "          [-0.0290, -0.0327, -0.0164],\n",
      "          [-0.0262, -0.0179, -0.0104]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0023, -0.0234, -0.0302],\n",
      "          [-0.0151,  0.0039,  0.0484],\n",
      "          [-0.0556, -0.0897, -0.0119]],\n",
      "\n",
      "         [[-0.0123, -0.0133,  0.0018],\n",
      "          [ 0.0288, -0.0079,  0.0142],\n",
      "          [ 0.0154,  0.0024,  0.0028]],\n",
      "\n",
      "         [[ 0.0225, -0.0093, -0.0208],\n",
      "          [-0.0390, -0.0459,  0.0103],\n",
      "          [ 0.0037, -0.0071,  0.0215]]]], device='cuda:0'), 'resnet18.layer4.0.bn2.weight': tensor([0.4649, 0.4971, 0.4570, 0.4252, 0.4026, 0.4704, 0.4551, 0.4399, 0.5967,\n",
      "        0.5499, 0.4616, 0.4368, 0.3885, 0.3872, 0.3761, 0.3960, 0.4587, 0.5386,\n",
      "        0.4032, 0.4025, 0.4590, 0.4589, 0.4069, 0.4283, 0.4606, 0.5251, 0.3934,\n",
      "        0.3804, 0.4112, 0.5420, 0.4320, 0.4673, 0.4804, 0.4508, 0.4219, 0.4662,\n",
      "        0.4571, 0.4341, 0.4458, 0.4550, 0.4538, 0.4112, 0.4661, 0.3706, 0.4563,\n",
      "        0.5346, 0.4383, 0.4919, 0.4632, 0.5270, 0.4447, 0.4182, 0.4715, 0.5513,\n",
      "        0.4741, 0.5265, 0.4326, 0.4649, 0.4863, 0.5015, 0.4358, 0.4129, 0.4378,\n",
      "        0.5551, 0.4873, 0.3763, 0.5631, 0.5238, 0.4478, 0.4543, 0.4331, 0.5262,\n",
      "        0.4393, 0.5346, 0.3372, 0.5168, 0.5099, 0.3550, 0.4054, 0.5005, 0.5195,\n",
      "        0.4113, 0.4516, 0.4965, 0.5419, 0.5068, 0.4744, 0.4225, 0.5327, 0.4978,\n",
      "        0.4639, 0.5052, 0.4615, 0.4686, 0.4581, 0.4752, 0.4581, 0.4744, 0.5138,\n",
      "        0.5186, 0.5010, 0.5097, 0.4518, 0.3796, 0.4422, 0.4899, 0.4827, 0.4667,\n",
      "        0.5575, 0.4264, 0.4214, 0.5604, 0.4886, 0.4655, 0.4903, 0.4898, 0.4456,\n",
      "        0.4834, 0.3706, 0.4318, 0.4970, 0.5326, 0.4445, 0.4313, 0.4941, 0.4959,\n",
      "        0.4843, 0.5118, 0.4448, 0.4885, 0.5400, 0.5518, 0.4873, 0.4177, 0.4514,\n",
      "        0.4112, 0.5319, 0.4276, 0.4683, 0.4634, 0.4825, 0.4403, 0.3980, 0.5167,\n",
      "        0.4726, 0.4678, 0.4106, 0.4367, 0.4686, 0.4496, 0.4675, 0.5011, 0.4341,\n",
      "        0.5572, 0.5131, 0.5397, 0.4086, 0.4796, 0.5495, 0.4810, 0.5994, 0.4879,\n",
      "        0.5019, 0.2822, 0.5012, 0.4673, 0.4516, 0.4661, 0.5503, 0.4266, 0.5418,\n",
      "        0.4636, 0.4082, 0.5045, 0.4473, 0.4235, 0.4917, 0.5046, 0.5766, 0.4792,\n",
      "        0.4656, 0.4993, 0.4012, 0.5586, 0.3908, 0.4530, 0.4468, 0.5069, 0.5052,\n",
      "        0.4353, 0.4509, 0.4722, 0.5001, 0.4374, 0.4843, 0.4662, 0.4198, 0.4760,\n",
      "        0.4420, 0.4899, 0.4399, 0.4798, 0.5158, 0.4761, 0.5209, 0.4586, 0.4585,\n",
      "        0.3511, 0.4895, 0.4179, 0.4520, 0.4519, 0.5710, 0.4322, 0.4430, 0.5095,\n",
      "        0.4332, 0.4281, 0.4492, 0.4795, 0.3753, 0.4405, 0.4665, 0.4307, 0.4605,\n",
      "        0.4885, 0.4602, 0.4163, 0.4054, 0.4363, 0.4008, 0.4173, 0.4769, 0.4878,\n",
      "        0.4458, 0.4718, 0.4785, 0.4631, 0.4033, 0.5056, 0.4822, 0.5843, 0.5198,\n",
      "        0.4327, 0.5662, 0.7185, 0.3991, 0.4812, 0.4744, 0.4949, 0.5210, 0.4434,\n",
      "        0.4516, 0.4444, 0.4165, 0.5093, 0.4568, 0.5263, 0.4559, 0.4886, 0.4272,\n",
      "        0.4842, 0.3710, 0.4000, 0.5022, 0.4591, 0.4439, 0.4791, 0.3665, 0.5990,\n",
      "        0.5034, 0.5335, 0.4800, 0.5334, 0.6365, 0.4545, 0.4818, 0.4868, 0.4344,\n",
      "        0.5000, 0.4792, 0.5077, 0.4355, 0.3955, 0.3673, 0.4541, 0.4179, 0.5056,\n",
      "        0.4675, 0.4872, 0.4131, 0.4729, 0.4123, 0.4565, 0.4373, 0.4645, 0.4992,\n",
      "        0.4178, 0.4611, 0.4925, 0.4898, 0.4756, 0.5128, 0.4727, 0.5520, 0.3575,\n",
      "        0.4155, 0.4786, 0.4765, 0.4915, 0.4784, 0.5346, 0.4989, 0.3676, 0.4949,\n",
      "        0.4384, 0.4493, 0.4316, 0.5746, 0.4035, 0.5047, 0.4400, 0.5122, 0.5485,\n",
      "        0.4986, 0.4094, 0.4608, 0.4049, 0.4634, 0.5544, 0.5047, 0.5066, 0.4353,\n",
      "        0.5247, 0.4892, 0.4395, 0.4699, 0.3945, 0.3904, 0.4907, 0.4741, 0.3550,\n",
      "        0.4159, 0.5563, 0.4932, 0.4855, 0.5539, 0.4492, 0.4428, 0.4682, 0.4533,\n",
      "        0.4463, 0.4595, 0.5211, 0.4779, 0.4273, 0.5056, 0.4785, 0.4438, 0.4094,\n",
      "        0.4309, 0.5345, 0.4792, 0.4319, 0.4826, 0.4480, 0.4990, 0.4259, 0.4385,\n",
      "        0.4833, 0.5273, 0.5152, 0.3954, 0.5459, 0.5044, 0.4827, 0.4767, 0.3963,\n",
      "        0.5451, 0.4691, 0.4670, 0.4259, 0.5515, 0.4077, 0.3979, 0.4935, 0.3468,\n",
      "        0.4425, 0.4882, 0.4288, 0.4498, 0.5006, 0.4205, 0.5102, 0.4086, 0.4961,\n",
      "        0.4414, 0.4646, 0.4504, 0.4268, 0.5097, 0.4173, 0.4693, 0.4596, 0.5305,\n",
      "        0.4701, 0.4856, 0.5182, 0.4368, 0.4826, 0.5214, 0.5273, 0.3891, 0.4736,\n",
      "        0.4561, 0.4535, 0.4537, 0.4998, 0.5813, 0.4670, 0.4791, 0.4759, 0.4468,\n",
      "        0.4932, 0.4190, 0.4977, 0.5166, 0.5198, 0.3785, 0.4476, 0.6511, 0.4780,\n",
      "        0.3206, 0.5106, 0.4836, 0.5037, 0.4934, 0.4661, 0.4327, 0.4952, 0.5515,\n",
      "        0.4820, 0.5263, 0.4492, 0.4816, 0.4763, 0.4928, 0.4780, 0.4694, 0.4619,\n",
      "        0.3933, 0.4280, 0.4935, 0.4911, 0.4570, 0.5481, 0.4646, 0.4390, 0.4428,\n",
      "        0.4924, 0.4657, 0.4187, 0.4905, 0.5044, 0.3584, 0.5033, 0.4539, 0.4319,\n",
      "        0.4925, 0.5115, 0.5206, 0.4142, 0.5016, 0.4652, 0.4648, 0.5196, 0.5322,\n",
      "        0.5290, 0.4816, 0.5688, 0.4203, 0.4729, 0.4501, 0.3979, 0.5573, 0.4388,\n",
      "        0.3767, 0.3974, 0.4839, 0.5553, 0.4265, 0.3489, 0.5024, 0.4471, 0.4997,\n",
      "        0.5115, 0.5466, 0.5199, 0.4484, 0.4704, 0.4164, 0.4739, 0.4285, 0.4914,\n",
      "        0.4857, 0.4778, 0.4061, 0.4382, 0.4545, 0.4634, 0.5231, 0.4669],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn2.bias': tensor([-0.3070, -0.3373, -0.3404, -0.2221, -0.3233, -0.3619, -0.3045, -0.2987,\n",
      "        -0.1747, -0.3250, -0.1874, -0.2691, -0.3193, -0.0629, -0.2656, -0.2394,\n",
      "        -0.2893, -0.2580, -0.2513, -0.3089, -0.2429, -0.3414, -0.2002, -0.2445,\n",
      "        -0.2282, -0.2731, -0.2052, -0.2062, -0.2710, -0.3480, -0.2615, -0.3304,\n",
      "        -0.3057, -0.2611, -0.3485, -0.3532, -0.2496, -0.2786, -0.3193, -0.3326,\n",
      "        -0.2396, -0.1927, -0.4240, -0.2162, -0.3273, -0.2552, -0.2845, -0.2142,\n",
      "        -0.2890, -0.2949, -0.1822, -0.3656, -0.3683, -0.3689, -0.2366, -0.3201,\n",
      "        -0.3306, -0.3890, -0.2803, -0.0885, -0.2477, -0.3061, -0.1905, -0.3739,\n",
      "        -0.2215, -0.2913, -0.3100, -0.3976, -0.4285, -0.3079, -0.2588, -0.2626,\n",
      "        -0.2628, -0.2994, -0.2600, -0.3483, -0.3786, -0.1493, -0.2634, -0.3214,\n",
      "        -0.3933, -0.2761, -0.2149, -0.2433, -0.3502, -0.2485, -0.2334, -0.2925,\n",
      "        -0.2089, -0.3596, -0.2743, -0.3162, -0.2333, -0.3130, -0.2048, -0.2698,\n",
      "        -0.2770, -0.3114, -0.2657, -0.3293, -0.3117, -0.3035, -0.2711, -0.1374,\n",
      "        -0.2947, -0.2839, -0.2654, -0.3099, -0.4009, -0.3563, -0.3297, -0.2978,\n",
      "        -0.2954, -0.3932, -0.3751, -0.2199, -0.2171, -0.3571, -0.2870, -0.2209,\n",
      "        -0.2661, -0.2477, -0.2361, -0.2484, -0.2804, -0.3978, -0.3897, -0.2897,\n",
      "        -0.2337, -0.2602, -0.4061, -0.2851, -0.3104, -0.2429, -0.2933, -0.3381,\n",
      "        -0.2471, -0.2892, -0.2474, -0.3062, -0.3134, -0.3741, -0.1640, -0.3225,\n",
      "        -0.2730, -0.2982, -0.3658, -0.2201, -0.2687, -0.2409, -0.1984, -0.2786,\n",
      "        -0.3418, -0.4498, -0.4061, -0.2979, -0.2186, -0.3546, -0.2582, -0.2706,\n",
      "        -0.4031, -0.3255, -0.2802, -0.1218, -0.3268, -0.1965, -0.3072, -0.2601,\n",
      "        -0.3967, -0.2826, -0.3611, -0.2320, -0.3576, -0.3530, -0.3141, -0.2245,\n",
      "        -0.2768, -0.3305, -0.2376, -0.3416, -0.3696, -0.3808, -0.2581, -0.2640,\n",
      "        -0.2643, -0.2317, -0.2663, -0.2614, -0.3839, -0.3403, -0.2337, -0.3906,\n",
      "        -0.2662, -0.3108, -0.3090, -0.4726, -0.3066, -0.2532, -0.2704, -0.3889,\n",
      "        -0.2583, -0.3369, -0.3696, -0.2697, -0.3420, -0.2743, -0.3170, -0.3316,\n",
      "        -0.2267, -0.2490, -0.3280, -0.3138, -0.4052, -0.2007, -0.2143, -0.3315,\n",
      "        -0.2586, -0.2857, -0.2940, -0.3570, -0.3052, -0.3542, -0.3611, -0.2686,\n",
      "        -0.2971, -0.3484, -0.2224, -0.3761, -0.2729, -0.2116, -0.3005, -0.2516,\n",
      "        -0.3363, -0.3442, -0.2863, -0.3481, -0.2909, -0.4177, -0.2340, -0.1847,\n",
      "        -0.2995, -0.3352, -0.4240, -0.3510, -0.4440, -0.5478, -0.2502, -0.2573,\n",
      "        -0.3169, -0.1401, -0.2933, -0.3210, -0.3286, -0.3501, -0.1533, -0.2454,\n",
      "        -0.2804, -0.2473, -0.2589, -0.3177, -0.2155, -0.3562, -0.1883, -0.1844,\n",
      "        -0.3271, -0.2271, -0.3291, -0.1835, -0.2644, -0.4583, -0.1550, -0.4384,\n",
      "        -0.3162, -0.3820, -0.4886, -0.3019, -0.2397, -0.2601, -0.2444, -0.2714,\n",
      "        -0.3443, -0.3309, -0.3265, -0.1970,  0.0068, -0.3268, -0.2772, -0.3235,\n",
      "        -0.1649, -0.4164, -0.2915, -0.2846, -0.2474, -0.2800, -0.2643, -0.4079,\n",
      "        -0.2507, -0.2420, -0.2563, -0.3439, -0.2598, -0.3654, -0.2649, -0.3502,\n",
      "        -0.2883, -0.1598, -0.1636, -0.2423, -0.2566, -0.2620, -0.3026, -0.3046,\n",
      "        -0.2359, -0.1818, -0.3377, -0.2048, -0.1254, -0.3094, -0.2126, -0.0346,\n",
      "        -0.2473, -0.3571, -0.3311, -0.3447, -0.3093, -0.3202, -0.2325, -0.3363,\n",
      "        -0.2139, -0.3781, -0.2041, -0.2736, -0.3576, -0.3882, -0.3246, -0.2737,\n",
      "        -0.0723, -0.3067, -0.2658, -0.2689, -0.3031, -0.0376, -0.2203, -0.2175,\n",
      "        -0.3095, -0.4142, -0.3246, -0.2658, -0.1646, -0.0719, -0.2665, -0.3427,\n",
      "        -0.2673, -0.3249, -0.3172, -0.2652, -0.3178, -0.2652, -0.2776, -0.3495,\n",
      "        -0.2052, -0.3759, -0.2085, -0.3232, -0.2705, -0.3434, -0.3377, -0.2192,\n",
      "        -0.2518, -0.2461, -0.2294, -0.3151, -0.2193, -0.3695, -0.3620, -0.2492,\n",
      "        -0.2859, -0.3696, -0.3180, -0.3258, -0.1749, -0.3211, -0.2748, -0.2913,\n",
      "        -0.2780, -0.3016, -0.1954, -0.3230, -0.1979, -0.2910, -0.3175, -0.3105,\n",
      "        -0.3198, -0.1774, -0.2503, -0.3968, -0.2416, -0.3330, -0.2741, -0.2239,\n",
      "        -0.3574, -0.1775, -0.2663, -0.3024, -0.3052, -0.2058, -0.4624, -0.3791,\n",
      "        -0.2706, -0.2792, -0.2883, -0.3444, -0.2609, -0.2321, -0.3461, -0.3296,\n",
      "        -0.2697, -0.3565, -0.4251, -0.3079, -0.2946, -0.3639, -0.2528, -0.3199,\n",
      "        -0.1858, -0.4255, -0.3358, -0.1998, -0.1641, -0.2525, -0.3875, -0.2672,\n",
      "        -0.2862, -0.3259, -0.3236, -0.3240, -0.2351, -0.3156, -0.3057, -0.2195,\n",
      "        -0.2795, -0.2974, -0.3655, -0.2727, -0.1797, -0.3057, -0.2203, -0.2573,\n",
      "        -0.3220, -0.2664, -0.2497, -0.3571, -0.3399, -0.3040, -0.2673, -0.2484,\n",
      "        -0.2671, -0.2649, -0.3368, -0.3617, -0.3388, -0.1803, -0.2886, -0.3035,\n",
      "        -0.2656, -0.3710, -0.3250, -0.2537, -0.2603, -0.3328, -0.3020, -0.2240,\n",
      "        -0.2837, -0.3766, -0.2752, -0.3075, -0.3869, -0.3216, -0.2915, -0.3607,\n",
      "        -0.2935, -0.2567, -0.2534, -0.1491, -0.2403, -0.2623, -0.2324, -0.2672,\n",
      "        -0.3488, -0.3828, -0.3401, -0.1902, -0.3372, -0.3347, -0.3788, -0.3490,\n",
      "        -0.3306, -0.3578, -0.2621, -0.3206, -0.2577, -0.2513, -0.3182, -0.3233,\n",
      "        -0.3309, -0.2387, -0.1763, -0.3281, -0.2489, -0.2227, -0.4316, -0.2833],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn2.running_mean': tensor([-4.0241e-01, -3.4215e-01, -3.1724e-01, -2.2261e-01,  1.3734e-02,\n",
      "        -3.9348e-01, -3.0110e-01, -4.0146e-01, -4.2781e-01, -4.3425e-01,\n",
      "        -3.8350e-01, -2.4469e-01, -2.1284e-01, -3.9029e-01, -2.8786e-01,\n",
      "        -3.5691e-01, -4.5122e-01, -4.0178e-01, -3.3737e-01, -3.5552e-01,\n",
      "        -3.4830e-01, -2.7038e-01, -4.1959e-01, -5.1746e-01, -1.7881e-01,\n",
      "        -2.7659e-01, -3.6991e-01, -3.9536e-01, -3.5035e-01, -3.7601e-01,\n",
      "        -3.6955e-01, -1.3732e-01, -4.1235e-01, -4.6139e-01, -4.9905e-01,\n",
      "        -2.2594e-01, -5.4487e-01, -1.8970e-01, -3.5327e-01, -3.3266e-01,\n",
      "        -3.7705e-01, -5.0737e-01, -3.3508e-01, -5.3774e-01, -3.4049e-01,\n",
      "        -5.4645e-01, -2.7774e-01, -2.5488e-01, -2.7852e-01, -4.8023e-01,\n",
      "        -3.5869e-01, -2.6414e-01, -3.0848e-01, -4.9391e-01, -3.1792e-01,\n",
      "        -5.1127e-01, -2.0547e-01, -1.8236e-01, -3.9468e-01, -2.8425e-01,\n",
      "        -3.3322e-01, -2.7654e-01, -3.6204e-01, -4.0190e-01, -3.7989e-01,\n",
      "        -6.3728e-02, -4.6104e-01, -4.4919e-01, -3.2628e-01, -5.0664e-01,\n",
      "        -4.9076e-01, -3.6286e-01, -3.3561e-01, -3.9673e-01, -2.3233e-01,\n",
      "        -4.1324e-01, -2.1619e-01, -1.8939e-01, -3.1382e-01, -3.9235e-01,\n",
      "        -4.0201e-01, -2.2401e-01, -2.4127e-01, -2.8252e-01, -6.6617e-01,\n",
      "        -7.0759e-01, -4.0449e-01, -2.8566e-01, -3.8578e-01, -3.4923e-01,\n",
      "        -3.6815e-01, -4.5105e-01, -4.2085e-01, -3.8066e-01, -3.0649e-01,\n",
      "        -2.1781e-01, -2.0298e-01, -2.4860e-01, -4.3942e-01, -4.5696e-01,\n",
      "        -4.4044e-01, -4.2176e-01, -2.2802e-01, -1.9384e-01, -1.4165e-01,\n",
      "        -1.9472e-01, -3.2659e-01, -3.5670e-01, -5.5595e-01, -1.2833e-01,\n",
      "        -2.5542e-01, -3.5033e-01, -3.0603e-01, -5.2487e-01, -3.6842e-01,\n",
      "        -3.2138e-01, -7.7590e-01, -1.8946e-01, -2.9542e-01, -2.2401e-01,\n",
      "        -5.2305e-01, -3.0143e-01, -3.7848e-01, -2.6606e-01, -4.0654e-01,\n",
      "        -6.9510e-01, -4.2447e-01, -1.5471e-01, -2.6623e-01, -3.3388e-01,\n",
      "        -4.8881e-01, -4.1687e-01, -3.9519e-01, -1.4072e-01, -4.4264e-01,\n",
      "        -3.6994e-01, -2.8734e-01, -3.5768e-01, -3.3159e-01, -3.7473e-01,\n",
      "        -1.7896e-01, -1.4598e-01, -2.6566e-01, -1.7002e-01, -4.7991e-01,\n",
      "        -3.3849e-01, -1.7426e-02, -3.2973e-01, -3.4474e-01, -3.3548e-01,\n",
      "        -5.4921e-01, -4.3143e-01, -3.7234e-01, -2.0933e-01, -3.9222e-01,\n",
      "        -4.7783e-01, -4.8142e-01, -2.7905e-02, -7.4779e-01, -4.2531e-01,\n",
      "        -5.0136e-01, -9.7892e-02, -3.1847e-01, -3.1476e-01, -4.3150e-01,\n",
      "        -4.4130e-01, -1.4193e-01, -1.8307e-01, -2.8910e-01, -7.3497e-01,\n",
      "        -4.1607e-01, -4.1627e-01, -1.7094e-01, -3.2584e-01, -2.4768e-01,\n",
      "        -2.8907e-01, -3.7321e-01, -6.0993e-01, -3.8653e-01, -4.7050e-01,\n",
      "        -3.1992e-01, -2.5414e-01, -2.7869e-01, -6.3611e-01, -2.7799e-01,\n",
      "        -2.1016e-01, -5.0804e-01, -3.6858e-02, -4.4676e-01, -3.3349e-01,\n",
      "        -4.5789e-01, -2.3917e-01, -5.2146e-01, -2.4155e-01, -1.3960e-01,\n",
      "        -3.8481e-01, -4.2005e-01, -3.7084e-01, -1.7738e-01, -1.6315e-01,\n",
      "        -6.2381e-01, -4.7766e-01, -3.4646e-01, -1.7189e-01, -1.8819e-01,\n",
      "        -4.6737e-01, -3.5847e-01, -1.4440e-01, -3.3623e-01, -1.7879e-01,\n",
      "        -4.4161e-01, -1.4427e-01, -6.6920e-01, -3.3335e-01, -3.3048e-01,\n",
      "        -2.5035e-01, -5.6641e-01, -1.9491e-01, -3.4220e-01, -2.3261e-01,\n",
      "        -3.5507e-01, -3.6770e-01, -7.4280e-02, -3.2067e-01, -4.4493e-01,\n",
      "        -2.7272e-01, -1.3555e-01, -2.1057e-01, -3.8766e-02, -6.3366e-01,\n",
      "        -4.4779e-01, -3.2317e-01, -3.8789e-01,  3.8725e-01, -3.6899e-01,\n",
      "        -3.3479e-01, -3.8687e-01,  4.0075e-01, -2.6569e-01, -4.5141e-01,\n",
      "        -4.0695e-01, -5.6967e-01, -2.7946e-01, -2.6008e-01, -3.2365e-01,\n",
      "        -5.2000e-01, -2.1630e-01, -3.1817e-01, -2.8842e-01, -5.6974e-01,\n",
      "        -5.1657e-01, -3.7404e-01, -1.8831e-01, -2.5500e-01, -3.6269e-01,\n",
      "        -3.9604e-01, -1.4405e-01, -3.5152e-01, -1.3490e-01, -3.6836e-01,\n",
      "        -2.9659e-01, -1.5917e-01, -3.9670e-01, -2.7491e-01, -2.2555e-01,\n",
      "        -1.2436e-01, -3.1992e-01, -4.8269e-01, -3.0691e-01, -1.4540e-01,\n",
      "        -2.4071e-01, -4.5885e-01, -2.6332e-01, -1.9779e-01, -5.3120e-01,\n",
      "        -4.1916e-01, -4.1850e-01, -5.6777e-01, -3.4944e-01, -4.1691e-01,\n",
      "        -1.9903e-01, -4.8263e-01, -3.3148e-01, -2.7335e-01, -3.1455e-01,\n",
      "        -2.5783e-01, -4.6187e-01, -9.5873e-02, -5.8346e-01, -5.1129e-01,\n",
      "        -5.5299e-01, -9.7992e-02, -2.6842e-01, -4.6325e-01, -2.1923e-01,\n",
      "        -2.4896e-01, -3.0742e-01, -1.2383e-01, -5.7565e-01, -3.3492e-01,\n",
      "        -1.7653e-01, -4.1819e-01, -5.4884e-01, -2.5548e-01, -2.8294e-01,\n",
      "        -2.4418e-01, -3.2413e-01, -2.9663e-01, -1.9711e-01, -5.3656e-01,\n",
      "        -1.7308e-01, -7.0654e-01, -6.6839e-01, -2.2637e-01, -2.3998e-01,\n",
      "        -3.6298e-01, -4.9295e-01, -3.7031e-01, -2.9345e-01, -3.1392e-01,\n",
      "        -3.3268e-01, -1.3283e-01, -2.6143e-01, -3.8617e-01, -4.2803e-01,\n",
      "        -3.0826e-01, -3.7628e-01, -5.4398e-01, -2.3489e-01, -4.4257e-01,\n",
      "        -3.5875e-01, -6.8784e-01, -5.5035e-01, -3.3500e-01, -3.1410e-01,\n",
      "        -5.4685e-01, -5.8195e-01, -4.7748e-01, -3.6354e-01, -1.9791e-01,\n",
      "        -3.9104e-01, -4.2020e-01, -2.4211e-01, -5.1418e-01, -4.2517e-01,\n",
      "        -3.7215e-01, -4.4080e-01, -2.5009e-01, -5.9559e-03, -3.2644e-01,\n",
      "        -3.6756e-01, -4.1627e-02, -4.8474e-01, -4.2066e-01, -2.4218e-01,\n",
      "        -3.1138e-01, -4.3628e-01, -2.2869e-01, -1.2772e-01, -1.2408e-01,\n",
      "        -6.5320e-01, -4.8917e-01, -4.1549e-01, -3.9777e-01, -3.6134e-01,\n",
      "        -2.1792e-01, -2.9194e-01, -3.0086e-01, -8.2613e-05, -1.8513e-01,\n",
      "        -3.2974e-01, -5.0811e-01, -9.4631e-01, -4.8041e-01, -2.9689e-01,\n",
      "        -3.0677e-01, -4.6923e-01, -3.5095e-01, -3.1100e-01, -1.5520e-01,\n",
      "        -4.7513e-01, -3.5822e-01, -7.9806e-02, -2.9742e-01, -3.6810e-01,\n",
      "        -3.3195e-01, -4.0125e-01, -2.4111e-01, -4.9247e-01, -3.6344e-01,\n",
      "        -3.4006e-01, -3.2329e-01, -2.8571e-01, -2.8167e-01, -2.7959e-01,\n",
      "        -4.6364e-01, -1.7066e-01, -3.3760e-01, -2.8983e-01, -3.5716e-01,\n",
      "        -2.2840e-01, -4.1589e-01, -4.4115e-01, -3.9628e-01, -1.3638e-01,\n",
      "        -4.3232e-01, -3.9492e-01, -3.2806e-01, -2.2617e-01, -3.0736e-01,\n",
      "        -5.1830e-01, -2.7191e-01, -1.6440e-01, -5.1154e-01, -2.5247e-01,\n",
      "        -3.9418e-01, -4.3156e-01, -4.5237e-01, -5.3458e-01, -1.4444e-01,\n",
      "        -4.7392e-01, -2.8291e-01, -2.1651e-01, -9.6862e-02, -4.4710e-01,\n",
      "        -2.3617e-01, -3.8068e-01, -3.5940e-01, -4.4746e-01, -3.2647e-01,\n",
      "        -4.6712e-01, -3.4194e-01, -3.6333e-01, -4.9363e-01, -3.0513e-01,\n",
      "        -2.6220e-01, -4.8766e-01, -3.1452e-01, -4.3924e-01, -3.7628e-01,\n",
      "        -4.7121e-01, -5.4461e-01, -3.4331e-01, -4.4085e-01, -2.9962e-01,\n",
      "        -3.5928e-01, -3.8493e-01, -5.0188e-01, -4.2759e-01, -2.2534e-01,\n",
      "        -3.7187e-01, -6.5165e-01, -3.0188e-01, -2.2607e-01, -1.9188e-01,\n",
      "        -5.0175e-01, -2.9375e-01, -3.2665e-01, -2.1089e-01, -1.6681e-01,\n",
      "        -2.8056e-01, -4.5830e-01, -3.6347e-01, -3.2967e-01, -2.9244e-01,\n",
      "        -4.5923e-01, -2.7928e-01, -3.1781e-01, -5.0647e-01, -2.6433e-01,\n",
      "        -4.6839e-01, -4.3034e-01, -5.6555e-01, -4.3040e-01, -4.1743e-01,\n",
      "        -2.6619e-01, -3.6515e-01, -4.6906e-01, -3.1416e-01, -2.7036e-01,\n",
      "        -2.1293e-01, -1.3621e-01, -4.2787e-01, -4.5854e-01, -2.6410e-01,\n",
      "        -3.4816e-01, -1.0144e-01, -4.0503e-01, -3.3491e-01, -3.1811e-01,\n",
      "        -1.7484e-01, -4.5644e-01, -4.2884e-01, -4.5685e-01, -2.9162e-01,\n",
      "        -2.7605e-01, -8.9868e-02, -4.2431e-01, -5.2648e-01, -4.2223e-01,\n",
      "        -5.4413e-01, -3.4355e-01,  5.1734e-02, -2.2783e-01, -1.9046e-01,\n",
      "        -4.3235e-01, -2.9525e-01, -2.4021e-01, -2.2263e-01, -2.8576e-01,\n",
      "        -2.3317e-01, -3.0492e-01], device='cuda:0'), 'resnet18.layer4.0.bn2.running_var': tensor([0.1648, 0.1290, 0.1114, 0.0811, 0.1696, 0.1792, 0.1530, 0.1135, 0.2383,\n",
      "        0.1842, 0.1976, 0.1632, 0.1062, 0.3156, 0.1011, 0.1277, 0.1382, 0.1724,\n",
      "        0.1176, 0.1081, 0.1578, 0.0994, 0.1134, 0.1477, 0.1166, 0.1892, 0.1049,\n",
      "        0.1239, 0.1301, 0.1887, 0.1144, 0.1359, 0.1373, 0.1355, 0.1601, 0.1228,\n",
      "        0.1506, 0.1349, 0.1237, 0.1369, 0.1278, 0.1327, 0.1727, 0.1121, 0.1703,\n",
      "        0.2280, 0.1428, 0.1477, 0.1204, 0.1641, 0.1496, 0.1602, 0.1347, 0.1973,\n",
      "        0.1185, 0.1872, 0.1266, 0.1274, 0.1139, 0.2216, 0.1254, 0.1028, 0.1013,\n",
      "        0.1299, 0.1885, 0.1187, 0.1692, 0.1611, 0.1014, 0.1194, 0.1535, 0.1726,\n",
      "        0.1241, 0.2486, 0.0994, 0.2061, 0.1349, 0.1117, 0.0958, 0.1269, 0.1442,\n",
      "        0.1160, 0.1482, 0.2283, 0.1517, 0.1706, 0.1409, 0.1059, 0.1964, 0.1728,\n",
      "        0.1509, 0.1693, 0.1492, 0.1023, 0.1476, 0.1391, 0.1267, 0.1206, 0.1498,\n",
      "        0.1557, 0.1463, 0.1819, 0.1355, 0.0777, 0.1480, 0.1086, 0.1320, 0.1433,\n",
      "        0.1983, 0.1030, 0.1277, 0.1873, 0.1509, 0.1782, 0.1391, 0.1355, 0.2107,\n",
      "        0.1229, 0.0817, 0.1101, 0.1797, 0.1765, 0.1306, 0.1475, 0.1464, 0.1968,\n",
      "        0.1380, 0.1765, 0.1195, 0.1943, 0.1186, 0.1629, 0.1830, 0.1216, 0.1380,\n",
      "        0.1152, 0.2150, 0.1232, 0.1543, 0.1083, 0.1465, 0.1165, 0.1328, 0.1502,\n",
      "        0.1135, 0.1140, 0.1375, 0.1207, 0.2056, 0.1027, 0.2297, 0.1545, 0.1146,\n",
      "        0.1642, 0.1122, 0.1619, 0.1244, 0.2158, 0.2251, 0.1702, 0.1858, 0.1520,\n",
      "        0.1193, 0.0573, 0.1457, 0.1539, 0.1372, 0.1342, 0.1341, 0.1765, 0.1671,\n",
      "        0.1328, 0.1061, 0.1035, 0.1371, 0.1121, 0.1268, 0.1553, 0.1889, 0.1636,\n",
      "        0.1393, 0.1633, 0.1402, 0.1873, 0.1299, 0.1017, 0.1344, 0.1558, 0.1677,\n",
      "        0.1299, 0.1252, 0.0946, 0.1270, 0.1423, 0.1886, 0.0924, 0.0950, 0.1276,\n",
      "        0.1289, 0.2242, 0.1830, 0.1330, 0.1857, 0.2164, 0.1575, 0.1048, 0.1425,\n",
      "        0.0923, 0.1745, 0.1083, 0.1218, 0.1590, 0.2063, 0.1637, 0.1222, 0.1696,\n",
      "        0.1859, 0.1218, 0.1570, 0.1034, 0.0780, 0.1381, 0.1074, 0.1121, 0.1351,\n",
      "        0.1266, 0.1651, 0.1450, 0.0938, 0.1720, 0.1367, 0.1157, 0.1450, 0.3099,\n",
      "        0.1289, 0.1353, 0.1586, 0.2173, 0.1046, 0.1999, 0.1819, 0.1562, 0.1624,\n",
      "        0.0994, 0.1536, 0.3206, 0.1231, 0.1346, 0.1146, 0.1945, 0.1914, 0.1261,\n",
      "        0.1261, 0.1434, 0.1726, 0.1657, 0.1316, 0.1600, 0.1773, 0.1491, 0.0926,\n",
      "        0.1806, 0.1541, 0.1151, 0.1581, 0.1538, 0.1136, 0.1895, 0.0652, 0.1941,\n",
      "        0.2080, 0.1568, 0.1241, 0.1402, 0.2652, 0.1640, 0.1538, 0.1616, 0.1566,\n",
      "        0.1889, 0.1466, 0.1815, 0.1191, 0.1190, 0.2538, 0.1588, 0.1866, 0.1283,\n",
      "        0.1335, 0.1322, 0.1224, 0.1097, 0.1496, 0.1266, 0.0851, 0.1230, 0.1587,\n",
      "        0.1406, 0.1075, 0.1743, 0.1295, 0.1334, 0.2137, 0.1043, 0.1725, 0.1019,\n",
      "        0.1396, 0.1546, 0.1291, 0.1340, 0.1382, 0.2049, 0.1870, 0.1192, 0.1749,\n",
      "        0.1596, 0.1575, 0.1157, 0.1449, 0.2791, 0.1471, 0.1347, 0.1195, 0.1678,\n",
      "        0.1252, 0.1104, 0.1697, 0.1478, 0.1394, 0.1414, 0.1998, 0.1749, 0.1124,\n",
      "        0.1440, 0.1220, 0.1429, 0.2733, 0.1344, 0.0927, 0.1171, 0.1512, 0.4336,\n",
      "        0.0992, 0.1762, 0.1453, 0.1665, 0.1927, 0.0935, 0.1619, 0.3180, 0.1500,\n",
      "        0.1291, 0.1415, 0.1474, 0.1447, 0.1140, 0.1142, 0.1536, 0.1300, 0.0854,\n",
      "        0.1640, 0.1481, 0.1535, 0.1092, 0.1540, 0.1207, 0.1293, 0.1149, 0.1118,\n",
      "        0.1329, 0.1450, 0.1497, 0.2835, 0.1920, 0.1567, 0.1195, 0.1202, 0.1339,\n",
      "        0.1633, 0.1394, 0.1612, 0.0920, 0.1632, 0.1166, 0.1211, 0.1513, 0.1056,\n",
      "        0.0940, 0.1527, 0.1367, 0.1587, 0.1177, 0.0885, 0.1923, 0.1091, 0.1192,\n",
      "        0.1324, 0.1185, 0.1689, 0.1260, 0.1218, 0.1723, 0.1170, 0.1388, 0.1301,\n",
      "        0.1573, 0.1606, 0.1319, 0.1197, 0.1665, 0.1490, 0.1438, 0.0868, 0.1671,\n",
      "        0.1419, 0.1554, 0.1122, 0.1686, 0.2310, 0.1060, 0.1438, 0.1335, 0.1319,\n",
      "        0.1253, 0.1779, 0.1748, 0.1621, 0.1633, 0.1760, 0.1803, 0.2252, 0.1478,\n",
      "        0.0708, 0.1828, 0.1176, 0.0960, 0.1521, 0.1252, 0.1024, 0.1489, 0.2928,\n",
      "        0.1742, 0.1242, 0.1408, 0.1648, 0.1466, 0.1440, 0.2012, 0.1297, 0.1145,\n",
      "        0.1124, 0.1545, 0.1611, 0.1398, 0.1375, 0.1582, 0.1203, 0.1824, 0.1188,\n",
      "        0.1328, 0.1054, 0.1591, 0.1533, 0.1875, 0.0951, 0.1481, 0.1499, 0.1208,\n",
      "        0.1993, 0.1360, 0.1415, 0.1444, 0.1485, 0.1175, 0.1616, 0.1943, 0.1493,\n",
      "        0.2068, 0.0938, 0.2617, 0.0889, 0.1890, 0.1656, 0.1719, 0.1534, 0.1517,\n",
      "        0.1088, 0.0897, 0.1167, 0.1848, 0.1270, 0.1044, 0.1762, 0.1313, 0.1990,\n",
      "        0.1498, 0.1831, 0.1758, 0.1631, 0.1444, 0.1060, 0.2063, 0.1232, 0.1676,\n",
      "        0.1459, 0.1262, 0.1235, 0.1147, 0.1441, 0.1580, 0.1192, 0.1429],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer4.0.downsample.0.weight': tensor([[[[ 0.0230]],\n",
      "\n",
      "         [[ 0.0199]],\n",
      "\n",
      "         [[ 0.0130]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0085]],\n",
      "\n",
      "         [[ 0.0106]],\n",
      "\n",
      "         [[-0.0189]]],\n",
      "\n",
      "\n",
      "        [[[-0.0349]],\n",
      "\n",
      "         [[-0.0296]],\n",
      "\n",
      "         [[ 0.0639]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0343]],\n",
      "\n",
      "         [[-0.0353]],\n",
      "\n",
      "         [[ 0.0330]]],\n",
      "\n",
      "\n",
      "        [[[-0.0333]],\n",
      "\n",
      "         [[-0.0258]],\n",
      "\n",
      "         [[ 0.0469]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0370]],\n",
      "\n",
      "         [[-0.0386]],\n",
      "\n",
      "         [[-0.0097]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 0.0558]],\n",
      "\n",
      "         [[-0.0161]],\n",
      "\n",
      "         [[-0.0394]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 0.0226]],\n",
      "\n",
      "         [[ 0.0241]],\n",
      "\n",
      "         [[-0.0773]]],\n",
      "\n",
      "\n",
      "        [[[ 0.0043]],\n",
      "\n",
      "         [[ 0.0243]],\n",
      "\n",
      "         [[-0.0630]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0284]],\n",
      "\n",
      "         [[ 0.0345]],\n",
      "\n",
      "         [[-0.0072]]],\n",
      "\n",
      "\n",
      "        [[[-0.0237]],\n",
      "\n",
      "         [[ 0.0049]],\n",
      "\n",
      "         [[ 0.0153]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-0.0139]],\n",
      "\n",
      "         [[-0.0302]],\n",
      "\n",
      "         [[-0.0335]]]], device='cuda:0'), 'resnet18.layer4.0.downsample.1.weight': tensor([ 0.0606,  0.1490,  0.1638,  0.2061,  0.1483,  0.1003,  0.2036,  0.2697,\n",
      "         0.1031,  0.1894,  0.0922,  0.0711,  0.1850,  0.0657,  0.1756,  0.1617,\n",
      "         0.1728,  0.1903,  0.1365,  0.1532,  0.0829,  0.1043,  0.2812,  0.2176,\n",
      "         0.2368,  0.0775,  0.1930,  0.1693,  0.1998,  0.1244,  0.1529,  0.2532,\n",
      "         0.1001,  0.1487,  0.1362,  0.2533,  0.1304,  0.1793,  0.1725,  0.1806,\n",
      "         0.1198,  0.1831,  0.2294,  0.2661,  0.1199,  0.1039,  0.1258,  0.2331,\n",
      "         0.1566,  0.1570,  0.1127,  0.2825,  0.1454,  0.1908,  0.1949,  0.2086,\n",
      "         0.1844,  0.1920,  0.1478,  0.1017,  0.1642,  0.2779,  0.0926,  0.1237,\n",
      "         0.1117,  0.1852,  0.1877,  0.1113,  0.2311,  0.2034,  0.1718,  0.0665,\n",
      "         0.1123,  0.0319,  0.2036,  0.1299,  0.1947,  0.2256,  0.1500,  0.1247,\n",
      "         0.1144,  0.2320,  0.1004,  0.0751,  0.0983,  0.0870,  0.2437,  0.1971,\n",
      "         0.0589,  0.1149,  0.0913,  0.0959,  0.1751,  0.2101,  0.1147,  0.1134,\n",
      "         0.2447,  0.1424,  0.1704,  0.1045,  0.1585,  0.1820,  0.1549,  0.2415,\n",
      "         0.2416,  0.1940,  0.1176,  0.1614,  0.1072,  0.2033,  0.2421,  0.1383,\n",
      "         0.1544,  0.2072,  0.2348,  0.1843,  0.1330,  0.2337,  0.2331,  0.1590,\n",
      "         0.0663,  0.0889,  0.0202,  0.1294,  0.0926,  0.1718,  0.1417,  0.1206,\n",
      "         0.1889,  0.1267,  0.2476,  0.1238,  0.1128,  0.1801,  0.2050,  0.1825,\n",
      "         0.0222,  0.1697,  0.1291,  0.1785,  0.1156,  0.2308,  0.1325,  0.1374,\n",
      "         0.1896,  0.2472,  0.2055,  0.1877,  0.0523,  0.2087,  0.0928,  0.0689,\n",
      "         0.2339,  0.1965,  0.1640,  0.1417,  0.1664,  0.1424,  0.1315,  0.1679,\n",
      "         0.1624,  0.1649,  0.2010,  0.1614,  0.2711,  0.0710,  0.1684,  0.1793,\n",
      "         0.2380,  0.1290,  0.1754,  0.2250,  0.1425,  0.1956,  0.2103,  0.2267,\n",
      "         0.1745,  0.1115,  0.1915,  0.1045,  0.1737,  0.1129,  0.1257,  0.1048,\n",
      "         0.2490,  0.1903,  0.1993,  0.1097,  0.1230,  0.1102,  0.1621,  0.2776,\n",
      "         0.2444,  0.2965,  0.1193,  0.2297,  0.1413,  0.1685,  0.1521,  0.1295,\n",
      "         0.1124,  0.1548,  0.1904,  0.1451,  0.1144,  0.2373,  0.1155,  0.2676,\n",
      "         0.1343,  0.2211,  0.1738,  0.1125,  0.0997,  0.1412,  0.1713,  0.0669,\n",
      "         0.1070,  0.1778,  0.1265,  0.1418,  0.2887,  0.2574,  0.2182,  0.1380,\n",
      "         0.1695,  0.3137,  0.1170,  0.1101,  0.1728,  0.1578,  0.0727,  0.1415,\n",
      "         0.1496,  0.0600,  0.1825,  0.2322,  0.1308,  0.1397,  0.2030,  0.0242,\n",
      "         0.1136,  0.0738,  0.2118,  0.1667,  0.1697,  0.3416,  0.1706,  0.1867,\n",
      "         0.1249,  0.0758,  0.1481,  0.2223,  0.2120,  0.2032,  0.1001,  0.2084,\n",
      "         0.2043,  0.1053,  0.0665,  0.1692,  0.1368,  0.1460,  0.0597,  0.1014,\n",
      "         0.1597,  0.1149,  0.1329,  0.1419,  0.2765,  0.0916,  0.1015,  0.1784,\n",
      "         0.1502,  0.1584,  0.2590,  0.1307,  0.1101,  0.1235,  0.1056,  0.1262,\n",
      "         0.1296,  0.1541,  0.1182,  0.2202, -0.0168,  0.1487,  0.1749,  0.1409,\n",
      "         0.0667,  0.1782,  0.1676,  0.2083,  0.1368,  0.1573,  0.1365,  0.2650,\n",
      "         0.1916,  0.2009,  0.1228,  0.0387,  0.2066,  0.1330,  0.1118,  0.2002,\n",
      "         0.2126,  0.1994,  0.0456,  0.1165,  0.0608,  0.1686,  0.1984,  0.1032,\n",
      "         0.2173,  0.2228,  0.1246,  0.1265,  0.0846,  0.1990,  0.1919,  0.0010,\n",
      "         0.1166,  0.1322,  0.2235,  0.1854,  0.2107,  0.1621,  0.0836,  0.1848,\n",
      "         0.1301,  0.1538,  0.0800,  0.1682,  0.1948,  0.1787,  0.1975,  0.2059,\n",
      "         0.1763,  0.1492,  0.2051,  0.1004,  0.0782,  0.0060,  0.1510,  0.1389,\n",
      "         0.1318,  0.1158,  0.1193,  0.1517,  0.0908,  0.0345,  0.1771,  0.1142,\n",
      "         0.1734,  0.1877,  0.2193,  0.1924,  0.1440,  0.2157,  0.2549,  0.2147,\n",
      "         0.0724,  0.2049,  0.0751,  0.1301,  0.1696,  0.1896,  0.1269,  0.2215,\n",
      "         0.2355,  0.0672,  0.1384,  0.0535,  0.0822,  0.0898,  0.1465,  0.1040,\n",
      "         0.2404,  0.1978,  0.1841,  0.2043,  0.0592,  0.1775,  0.1467,  0.1295,\n",
      "         0.2081,  0.1593,  0.1848,  0.2321,  0.1436,  0.1676,  0.1932,  0.2068,\n",
      "         0.2340,  0.0792,  0.2531,  0.1706,  0.1547,  0.1952,  0.1470,  0.1818,\n",
      "         0.2190,  0.1817,  0.1302,  0.1420,  0.1524,  0.1056,  0.1162,  0.1239,\n",
      "         0.1781,  0.0617,  0.1247,  0.1146,  0.2286,  0.0510,  0.1182,  0.2473,\n",
      "         0.1939,  0.1019,  0.0817,  0.1516,  0.1100,  0.1665,  0.0729,  0.1555,\n",
      "         0.0858,  0.1681,  0.1247,  0.1540,  0.0110,  0.1428,  0.1734,  0.0576,\n",
      "         0.2436,  0.0886,  0.2392,  0.2622,  0.1309,  0.1787,  0.1610,  0.0964,\n",
      "         0.0545,  0.1540,  0.1611,  0.1599,  0.1620,  0.1656,  0.0802,  0.1630,\n",
      "         0.1678,  0.2156,  0.2833,  0.2056,  0.1422,  0.1955,  0.1536,  0.0281,\n",
      "         0.2054,  0.1001,  0.2633,  0.1134,  0.1880,  0.0728,  0.1092,  0.1060,\n",
      "         0.3057,  0.1410,  0.1912,  0.2015,  0.0682,  0.1253,  0.0615,  0.1654,\n",
      "         0.1936,  0.1693,  0.1269,  0.1776,  0.1970,  0.1167,  0.1764,  0.1424,\n",
      "         0.2190,  0.0913,  0.1355,  0.0877,  0.1177,  0.0226,  0.2033,  0.2186,\n",
      "         0.2266,  0.0241,  0.2253,  0.2569,  0.1701,  0.1572,  0.1071,  0.2052,\n",
      "         0.1405,  0.1450,  0.1920,  0.1654,  0.2472,  0.1038,  0.1825,  0.1175,\n",
      "         0.1607,  0.1888,  0.1486,  0.1980,  0.1550,  0.2506,  0.1501,  0.1359],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.downsample.1.bias': tensor([-0.3070, -0.3373, -0.3404, -0.2221, -0.3233, -0.3619, -0.3045, -0.2987,\n",
      "        -0.1747, -0.3250, -0.1874, -0.2691, -0.3193, -0.0629, -0.2656, -0.2394,\n",
      "        -0.2893, -0.2580, -0.2513, -0.3089, -0.2429, -0.3414, -0.2002, -0.2445,\n",
      "        -0.2282, -0.2731, -0.2052, -0.2062, -0.2710, -0.3480, -0.2615, -0.3304,\n",
      "        -0.3057, -0.2611, -0.3485, -0.3532, -0.2496, -0.2786, -0.3193, -0.3326,\n",
      "        -0.2396, -0.1927, -0.4240, -0.2162, -0.3273, -0.2552, -0.2845, -0.2142,\n",
      "        -0.2890, -0.2949, -0.1822, -0.3656, -0.3683, -0.3689, -0.2366, -0.3201,\n",
      "        -0.3306, -0.3890, -0.2803, -0.0885, -0.2477, -0.3061, -0.1905, -0.3739,\n",
      "        -0.2215, -0.2913, -0.3100, -0.3976, -0.4285, -0.3079, -0.2588, -0.2626,\n",
      "        -0.2628, -0.2994, -0.2600, -0.3483, -0.3786, -0.1493, -0.2634, -0.3214,\n",
      "        -0.3933, -0.2761, -0.2149, -0.2433, -0.3502, -0.2485, -0.2334, -0.2925,\n",
      "        -0.2089, -0.3596, -0.2743, -0.3162, -0.2333, -0.3130, -0.2048, -0.2698,\n",
      "        -0.2770, -0.3114, -0.2657, -0.3293, -0.3117, -0.3035, -0.2711, -0.1374,\n",
      "        -0.2947, -0.2839, -0.2654, -0.3099, -0.4009, -0.3563, -0.3297, -0.2978,\n",
      "        -0.2954, -0.3932, -0.3751, -0.2199, -0.2171, -0.3571, -0.2870, -0.2209,\n",
      "        -0.2661, -0.2477, -0.2361, -0.2484, -0.2804, -0.3978, -0.3897, -0.2897,\n",
      "        -0.2337, -0.2602, -0.4061, -0.2851, -0.3104, -0.2429, -0.2933, -0.3381,\n",
      "        -0.2471, -0.2892, -0.2474, -0.3062, -0.3134, -0.3741, -0.1640, -0.3225,\n",
      "        -0.2730, -0.2982, -0.3658, -0.2201, -0.2687, -0.2409, -0.1984, -0.2786,\n",
      "        -0.3418, -0.4498, -0.4061, -0.2979, -0.2186, -0.3546, -0.2582, -0.2706,\n",
      "        -0.4031, -0.3255, -0.2802, -0.1218, -0.3268, -0.1965, -0.3072, -0.2601,\n",
      "        -0.3967, -0.2826, -0.3611, -0.2320, -0.3576, -0.3530, -0.3141, -0.2245,\n",
      "        -0.2768, -0.3305, -0.2376, -0.3416, -0.3696, -0.3808, -0.2581, -0.2640,\n",
      "        -0.2643, -0.2317, -0.2663, -0.2614, -0.3839, -0.3403, -0.2337, -0.3906,\n",
      "        -0.2662, -0.3108, -0.3090, -0.4726, -0.3066, -0.2532, -0.2704, -0.3889,\n",
      "        -0.2583, -0.3369, -0.3696, -0.2697, -0.3420, -0.2743, -0.3170, -0.3316,\n",
      "        -0.2267, -0.2490, -0.3280, -0.3138, -0.4052, -0.2007, -0.2143, -0.3315,\n",
      "        -0.2586, -0.2857, -0.2940, -0.3570, -0.3052, -0.3542, -0.3611, -0.2686,\n",
      "        -0.2971, -0.3484, -0.2224, -0.3761, -0.2729, -0.2116, -0.3005, -0.2516,\n",
      "        -0.3363, -0.3442, -0.2863, -0.3481, -0.2909, -0.4177, -0.2340, -0.1847,\n",
      "        -0.2995, -0.3352, -0.4240, -0.3510, -0.4440, -0.5478, -0.2502, -0.2573,\n",
      "        -0.3169, -0.1401, -0.2933, -0.3210, -0.3286, -0.3501, -0.1533, -0.2454,\n",
      "        -0.2804, -0.2473, -0.2589, -0.3177, -0.2155, -0.3562, -0.1883, -0.1844,\n",
      "        -0.3271, -0.2271, -0.3291, -0.1835, -0.2644, -0.4583, -0.1550, -0.4384,\n",
      "        -0.3162, -0.3820, -0.4886, -0.3019, -0.2397, -0.2601, -0.2444, -0.2714,\n",
      "        -0.3443, -0.3309, -0.3265, -0.1970,  0.0068, -0.3268, -0.2772, -0.3235,\n",
      "        -0.1649, -0.4164, -0.2915, -0.2846, -0.2474, -0.2800, -0.2643, -0.4079,\n",
      "        -0.2507, -0.2420, -0.2563, -0.3439, -0.2598, -0.3654, -0.2649, -0.3502,\n",
      "        -0.2883, -0.1598, -0.1636, -0.2423, -0.2566, -0.2620, -0.3026, -0.3046,\n",
      "        -0.2359, -0.1818, -0.3377, -0.2048, -0.1254, -0.3094, -0.2126, -0.0346,\n",
      "        -0.2473, -0.3571, -0.3311, -0.3447, -0.3093, -0.3202, -0.2325, -0.3363,\n",
      "        -0.2139, -0.3781, -0.2041, -0.2736, -0.3576, -0.3882, -0.3246, -0.2737,\n",
      "        -0.0723, -0.3067, -0.2658, -0.2689, -0.3031, -0.0376, -0.2203, -0.2175,\n",
      "        -0.3095, -0.4142, -0.3246, -0.2658, -0.1646, -0.0719, -0.2665, -0.3427,\n",
      "        -0.2673, -0.3249, -0.3172, -0.2652, -0.3178, -0.2652, -0.2776, -0.3495,\n",
      "        -0.2052, -0.3759, -0.2085, -0.3232, -0.2705, -0.3434, -0.3377, -0.2192,\n",
      "        -0.2518, -0.2461, -0.2294, -0.3151, -0.2193, -0.3695, -0.3620, -0.2492,\n",
      "        -0.2859, -0.3696, -0.3180, -0.3258, -0.1749, -0.3211, -0.2748, -0.2913,\n",
      "        -0.2780, -0.3016, -0.1954, -0.3230, -0.1979, -0.2910, -0.3175, -0.3105,\n",
      "        -0.3198, -0.1774, -0.2503, -0.3968, -0.2416, -0.3330, -0.2741, -0.2239,\n",
      "        -0.3574, -0.1775, -0.2663, -0.3024, -0.3052, -0.2058, -0.4624, -0.3791,\n",
      "        -0.2706, -0.2792, -0.2883, -0.3444, -0.2609, -0.2321, -0.3461, -0.3296,\n",
      "        -0.2697, -0.3565, -0.4251, -0.3079, -0.2946, -0.3639, -0.2528, -0.3199,\n",
      "        -0.1858, -0.4255, -0.3358, -0.1998, -0.1641, -0.2525, -0.3875, -0.2672,\n",
      "        -0.2862, -0.3259, -0.3236, -0.3240, -0.2351, -0.3156, -0.3057, -0.2195,\n",
      "        -0.2795, -0.2974, -0.3655, -0.2727, -0.1797, -0.3057, -0.2203, -0.2573,\n",
      "        -0.3220, -0.2664, -0.2497, -0.3571, -0.3399, -0.3040, -0.2673, -0.2484,\n",
      "        -0.2671, -0.2649, -0.3368, -0.3617, -0.3388, -0.1803, -0.2886, -0.3035,\n",
      "        -0.2656, -0.3710, -0.3250, -0.2537, -0.2603, -0.3328, -0.3020, -0.2240,\n",
      "        -0.2837, -0.3766, -0.2752, -0.3075, -0.3869, -0.3216, -0.2915, -0.3607,\n",
      "        -0.2935, -0.2567, -0.2534, -0.1491, -0.2403, -0.2623, -0.2324, -0.2672,\n",
      "        -0.3488, -0.3828, -0.3401, -0.1902, -0.3372, -0.3347, -0.3788, -0.3490,\n",
      "        -0.3306, -0.3578, -0.2621, -0.3206, -0.2577, -0.2513, -0.3182, -0.3233,\n",
      "        -0.3309, -0.2387, -0.1763, -0.3281, -0.2489, -0.2227, -0.4316, -0.2833],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.downsample.1.running_mean': tensor([-2.7505e-03, -7.7882e-02, -3.8967e-02,  4.0405e-02, -3.0188e-02,\n",
      "        -3.6224e-02, -7.3239e-02, -1.3326e-01,  2.3308e-02, -9.4332e-02,\n",
      "        -3.5124e-02, -1.7722e-02,  5.4604e-02, -1.0615e-02, -3.6443e-02,\n",
      "        -6.2424e-02, -3.5044e-02, -9.1103e-02, -5.6738e-03, -5.1400e-02,\n",
      "        -3.3097e-02, -6.5045e-02, -6.0422e-02, -1.0258e-01,  7.6423e-03,\n",
      "         1.8010e-02, -5.6749e-02, -1.2385e-02, -7.0491e-02, -3.4979e-02,\n",
      "         1.9282e-02, -3.7152e-02, -4.5961e-02, -3.7717e-02, -2.2975e-02,\n",
      "        -5.0724e-02, -2.7484e-02, -6.9198e-02,  5.9302e-03, -2.1058e-02,\n",
      "        -9.7859e-04, -6.6023e-03, -4.2224e-02, -4.6978e-02, -4.2214e-02,\n",
      "        -2.5471e-02,  5.2791e-04,  3.5376e-02, -1.1588e-02, -4.1852e-02,\n",
      "        -6.0554e-02, -1.3004e-01, -1.6393e-02,  6.8750e-03, -2.9387e-02,\n",
      "        -4.4063e-02, -3.1915e-02, -4.9172e-02, -3.6257e-02, -4.3019e-02,\n",
      "        -9.6404e-02, -3.8375e-02,  7.5128e-03,  2.4538e-02, -3.1585e-02,\n",
      "        -4.2609e-02,  3.0014e-02, -3.8759e-02, -1.5218e-02, -4.9124e-02,\n",
      "        -3.2085e-02, -2.1406e-02, -5.3077e-02, -4.2018e-02, -2.5251e-02,\n",
      "        -5.3829e-02, -4.2736e-02, -6.7850e-02, -5.2883e-02, -2.5203e-02,\n",
      "        -4.8408e-02, -2.0711e-02, -3.0980e-02, -6.4347e-02, -1.7304e-02,\n",
      "         6.4034e-03, -5.2412e-02, -5.7697e-02, -5.6243e-02, -8.0860e-02,\n",
      "        -4.6409e-03, -4.9420e-02, -3.1108e-02, -3.0471e-02, -4.7695e-02,\n",
      "        -7.1987e-02, -2.6075e-02, -5.7682e-02, -1.2989e-02, -5.2739e-02,\n",
      "         1.0358e-03, -6.3793e-02, -3.6047e-02, -2.0740e-02,  2.2539e-03,\n",
      "         1.9097e-02, -5.1907e-02,  3.5925e-02, -2.2741e-02,  2.3688e-02,\n",
      "        -5.3581e-02, -3.3220e-02, -3.2159e-02, -1.0244e-01, -3.4691e-02,\n",
      "        -4.4451e-02, -2.1062e-02, -2.5195e-02, -5.9994e-03, -2.8924e-02,\n",
      "         1.8538e-02, -1.2157e-02,  2.4717e-02, -2.5558e-02, -3.3799e-02,\n",
      "        -1.0174e-01,  5.2165e-03, -9.0589e-03, -2.5385e-02,  1.9227e-02,\n",
      "         9.7782e-03, -1.9848e-02, -6.1361e-02, -2.5801e-02, -7.1241e-02,\n",
      "        -5.9422e-02, -2.6787e-02, -2.7011e-02, -1.5921e-03, -7.8160e-02,\n",
      "        -3.7967e-02, -9.5928e-02, -4.3329e-02, -1.3962e-03,  7.6040e-03,\n",
      "        -8.9664e-03, -2.9734e-02,  8.0442e-02, -2.7258e-02, -8.1684e-02,\n",
      "         1.7160e-02,  1.7504e-02, -2.2314e-02, -7.7640e-02, -1.0243e-01,\n",
      "        -5.3253e-02,  5.9573e-04, -1.3485e-01, -3.0220e-02, -4.6422e-02,\n",
      "         1.1003e-02, -8.1136e-02, -1.0108e-02,  1.8499e-02, -1.0720e-02,\n",
      "        -3.5143e-02, -5.7091e-02, -4.7746e-02, -2.0589e-02, -4.0003e-02,\n",
      "        -5.0659e-02, -2.3547e-02, -2.1600e-02, -7.7173e-02, -3.4575e-02,\n",
      "        -3.9029e-02, -2.9831e-03, -4.4976e-02,  1.0694e-02, -2.5667e-03,\n",
      "        -6.1037e-02, -5.4310e-02, -4.0739e-02, -4.8553e-02,  2.4318e-02,\n",
      "        -3.2266e-02, -1.0592e-01, -3.7042e-02, -1.1849e-02, -1.0142e-01,\n",
      "         7.0164e-03,  2.6767e-02,  2.0396e-02, -7.9937e-02,  1.0502e-02,\n",
      "        -3.1051e-02, -5.0595e-02, -4.5344e-02,  9.5161e-03, -4.7412e-02,\n",
      "        -1.1159e-02, -1.1575e-02, -5.5796e-02,  2.0460e-02, -5.2409e-02,\n",
      "        -4.0438e-02,  3.3213e-03, -1.6897e-01, -4.7822e-02, -3.8783e-02,\n",
      "         9.0358e-03, -1.1945e-02, -8.6097e-02, -2.2671e-02, -6.2684e-02,\n",
      "        -1.5208e-02, -5.1636e-03, -1.2686e-02,  4.9466e-02, -3.4335e-02,\n",
      "         3.3583e-02, -1.0260e-01, -2.7810e-02,  5.0324e-02, -2.7840e-02,\n",
      "        -5.1148e-03, -5.5206e-03, -1.8178e-02, -9.5984e-02, -1.8944e-02,\n",
      "         1.6200e-02, -3.8313e-02, -5.9738e-02, -5.8900e-02, -8.6967e-02,\n",
      "        -1.1019e-02, -6.5278e-02, -3.9677e-02,  8.2306e-03, -4.2612e-02,\n",
      "        -1.4891e-02, -3.1108e-02, -2.3172e-02,  2.8650e-02, -2.7783e-02,\n",
      "        -4.5133e-03, -6.0912e-02, -3.2319e-02, -7.6388e-02, -7.7413e-02,\n",
      "        -3.7581e-02, -5.8362e-02, -1.5992e-03, -8.1970e-02, -2.0873e-02,\n",
      "        -3.6308e-02, -6.4205e-02,  6.5610e-02, -5.5915e-02, -1.6808e-02,\n",
      "        -1.5672e-02, -6.3941e-02, -5.9211e-02, -2.2165e-02, -3.0906e-02,\n",
      "        -7.0345e-03, -5.2930e-02,  4.5111e-02,  3.2876e-02,  9.4073e-03,\n",
      "         3.5938e-02, -4.3613e-02, -2.1182e-02, -9.6039e-02, -7.3348e-02,\n",
      "        -3.1766e-02,  1.8223e-03,  3.0677e-02, -5.5932e-02,  3.9324e-02,\n",
      "        -9.3607e-02, -5.0126e-02, -5.5142e-02, -3.1258e-02,  6.2219e-02,\n",
      "         3.9868e-02, -6.8331e-02, -2.6297e-02, -1.9490e-02, -2.7696e-02,\n",
      "        -2.8609e-02,  3.2365e-02, -8.2892e-02,  5.2861e-02, -1.1495e-02,\n",
      "        -4.6512e-02, -4.4878e-03, -5.2766e-02, -5.5043e-02, -6.0652e-02,\n",
      "         6.2645e-02, -8.1407e-02, -6.8216e-02, -1.5163e-02, -5.2282e-02,\n",
      "        -3.2284e-02, -1.7964e-02, -4.5688e-02, -4.0810e-02, -2.0087e-02,\n",
      "        -6.7105e-02, -5.9619e-02, -8.2715e-02, -8.0599e-02, -7.0928e-02,\n",
      "        -1.6102e-02, -1.2560e-02, -8.8648e-02,  1.3998e-02,  5.5757e-02,\n",
      "         1.4991e-02, -5.6925e-02,  4.7388e-02, -4.2550e-02, -8.5792e-02,\n",
      "        -9.9663e-02, -3.9223e-02, -9.8582e-02, -4.5333e-02, -1.5617e-02,\n",
      "        -5.4285e-03, -1.6683e-02, -3.6095e-02, -5.0606e-03, -1.3322e-02,\n",
      "         5.5874e-02, -7.2200e-02, -8.3182e-03, -5.8479e-02,  9.7265e-03,\n",
      "        -4.7157e-03, -5.2608e-02, -7.1803e-02,  1.8746e-02, -3.2014e-02,\n",
      "        -2.3697e-02, -3.4217e-03,  1.0758e-02, -3.0365e-03, -3.0294e-02,\n",
      "         3.1125e-03, -7.9668e-02, -4.5572e-02, -2.1022e-02,  2.0874e-02,\n",
      "        -8.6903e-02,  4.4891e-02, -3.6944e-02, -3.9828e-02, -3.2612e-02,\n",
      "         1.3424e-02, -3.9551e-03, -1.0641e-02,  2.8674e-05, -6.2342e-03,\n",
      "         1.6721e-02, -3.1204e-02,  1.2151e-02,  5.5323e-03, -7.0009e-03,\n",
      "         6.8937e-03, -6.6337e-02,  5.1068e-02, -8.7490e-04, -1.1133e-01,\n",
      "        -5.6231e-02, -2.2533e-02,  4.2434e-02, -8.5336e-02, -6.3658e-02,\n",
      "        -9.5318e-03, -3.3318e-02,  6.8014e-03, -5.6661e-02, -1.3478e-02,\n",
      "        -3.7901e-02, -5.5583e-02, -2.6142e-02, -8.4839e-03, -4.9087e-02,\n",
      "        -4.6468e-02, -3.7997e-02, -8.8560e-02, -1.0042e-01, -4.6574e-02,\n",
      "         8.0875e-02, -1.9752e-02,  3.4002e-03, -3.5781e-02, -7.8877e-02,\n",
      "        -8.6503e-02, -5.7444e-02, -4.6620e-03,  4.7924e-02,  7.3501e-02,\n",
      "        -6.8955e-02,  3.0729e-02, -4.7935e-02,  2.4729e-02, -5.3649e-02,\n",
      "        -3.4778e-02, -7.2481e-02,  2.1138e-02, -2.3683e-02, -3.3082e-02,\n",
      "        -6.2625e-02, -5.0280e-02, -1.8781e-02, -4.9390e-02,  2.9179e-02,\n",
      "        -5.7206e-02, -2.6642e-02, -1.0759e-02, -2.1679e-02, -4.5070e-02,\n",
      "        -2.8082e-02, -2.2423e-02, -3.4159e-03, -4.1171e-02, -4.6822e-02,\n",
      "         4.4644e-02,  8.4840e-03, -6.0613e-02, -5.6175e-02, -6.4498e-02,\n",
      "         6.5963e-02, -3.4391e-02, -1.0241e-02, -3.2669e-02, -2.1103e-02,\n",
      "        -1.9050e-02, -7.3629e-02,  5.7587e-02, -7.5170e-02, -3.9215e-02,\n",
      "        -2.2425e-02,  1.3189e-02, -5.6680e-02, -4.8796e-02, -7.2956e-03,\n",
      "        -6.6399e-02, -6.2979e-02, -4.5924e-03, -3.5311e-02, -6.2154e-02,\n",
      "        -3.6152e-02,  2.5160e-02, -7.7513e-02, -6.3591e-02, -3.8686e-02,\n",
      "        -2.8006e-02, -4.9228e-02, -2.5106e-02, -2.9010e-02, -1.1864e-01,\n",
      "         2.7766e-02, -9.7107e-02,  3.2441e-02, -4.7440e-02, -6.7944e-03,\n",
      "        -9.2115e-03, -7.1324e-02, -3.0098e-02, -5.3170e-02, -4.1684e-02,\n",
      "        -2.8936e-02,  1.6217e-02, -5.7382e-02, -8.4587e-02, -6.1565e-02,\n",
      "         7.5994e-03, -1.0112e-01, -7.4000e-05, -6.1187e-02,  1.1932e-02,\n",
      "        -4.4811e-02, -6.3356e-03, -1.9411e-02, -6.0059e-02, -4.9934e-03,\n",
      "        -9.6539e-02,  2.8664e-02, -3.9503e-02, -1.8169e-02,  3.0634e-02,\n",
      "         1.1771e-02, -1.0562e-01, -7.1845e-02, -9.5290e-03, -3.5889e-02,\n",
      "        -2.3520e-02, -9.6630e-02,  2.3260e-02, -3.9270e-02, -5.0106e-02,\n",
      "         6.0704e-03, -5.9670e-02, -1.0970e-01, -4.5169e-02, -1.3620e-02,\n",
      "        -4.7679e-02,  5.5375e-03], device='cuda:0'), 'resnet18.layer4.0.downsample.1.running_var': tensor([0.0029, 0.0040, 0.0040, 0.0064, 0.0031, 0.0031, 0.0063, 0.0059, 0.0038,\n",
      "        0.0039, 0.0023, 0.0036, 0.0047, 0.0018, 0.0042, 0.0042, 0.0070, 0.0063,\n",
      "        0.0039, 0.0045, 0.0030, 0.0044, 0.0068, 0.0072, 0.0042, 0.0019, 0.0060,\n",
      "        0.0049, 0.0057, 0.0040, 0.0027, 0.0068, 0.0032, 0.0042, 0.0047, 0.0057,\n",
      "        0.0027, 0.0040, 0.0057, 0.0045, 0.0030, 0.0048, 0.0081, 0.0067, 0.0046,\n",
      "        0.0038, 0.0033, 0.0069, 0.0040, 0.0050, 0.0037, 0.0104, 0.0050, 0.0050,\n",
      "        0.0038, 0.0070, 0.0047, 0.0043, 0.0042, 0.0029, 0.0036, 0.0072, 0.0020,\n",
      "        0.0035, 0.0025, 0.0048, 0.0044, 0.0035, 0.0052, 0.0047, 0.0037, 0.0033,\n",
      "        0.0036, 0.0023, 0.0054, 0.0055, 0.0052, 0.0071, 0.0036, 0.0035, 0.0048,\n",
      "        0.0037, 0.0046, 0.0027, 0.0027, 0.0031, 0.0042, 0.0056, 0.0034, 0.0032,\n",
      "        0.0038, 0.0032, 0.0048, 0.0056, 0.0029, 0.0039, 0.0057, 0.0034, 0.0037,\n",
      "        0.0031, 0.0043, 0.0036, 0.0038, 0.0043, 0.0071, 0.0055, 0.0026, 0.0038,\n",
      "        0.0023, 0.0075, 0.0056, 0.0039, 0.0049, 0.0074, 0.0046, 0.0056, 0.0037,\n",
      "        0.0061, 0.0054, 0.0044, 0.0021, 0.0026, 0.0007, 0.0046, 0.0033, 0.0053,\n",
      "        0.0051, 0.0032, 0.0039, 0.0039, 0.0044, 0.0030, 0.0031, 0.0058, 0.0068,\n",
      "        0.0065, 0.0026, 0.0043, 0.0039, 0.0032, 0.0044, 0.0081, 0.0041, 0.0034,\n",
      "        0.0045, 0.0053, 0.0067, 0.0061, 0.0020, 0.0053, 0.0028, 0.0021, 0.0055,\n",
      "        0.0048, 0.0037, 0.0036, 0.0046, 0.0050, 0.0042, 0.0048, 0.0049, 0.0044,\n",
      "        0.0045, 0.0053, 0.0064, 0.0016, 0.0042, 0.0037, 0.0053, 0.0053, 0.0047,\n",
      "        0.0042, 0.0033, 0.0046, 0.0054, 0.0049, 0.0056, 0.0043, 0.0048, 0.0023,\n",
      "        0.0068, 0.0040, 0.0028, 0.0032, 0.0071, 0.0049, 0.0061, 0.0028, 0.0052,\n",
      "        0.0038, 0.0043, 0.0059, 0.0057, 0.0079, 0.0029, 0.0046, 0.0050, 0.0048,\n",
      "        0.0053, 0.0054, 0.0021, 0.0048, 0.0061, 0.0043, 0.0051, 0.0042, 0.0027,\n",
      "        0.0064, 0.0049, 0.0061, 0.0039, 0.0034, 0.0033, 0.0046, 0.0036, 0.0030,\n",
      "        0.0049, 0.0044, 0.0043, 0.0030, 0.0048, 0.0084, 0.0031, 0.0034, 0.0056,\n",
      "        0.0051, 0.0035, 0.0038, 0.0048, 0.0055, 0.0026, 0.0040, 0.0033, 0.0055,\n",
      "        0.0039, 0.0076, 0.0023, 0.0044, 0.0050, 0.0014, 0.0034, 0.0016, 0.0071,\n",
      "        0.0047, 0.0050, 0.0068, 0.0043, 0.0045, 0.0034, 0.0023, 0.0052, 0.0080,\n",
      "        0.0062, 0.0065, 0.0022, 0.0053, 0.0062, 0.0042, 0.0025, 0.0060, 0.0025,\n",
      "        0.0056, 0.0013, 0.0044, 0.0070, 0.0037, 0.0042, 0.0045, 0.0067, 0.0056,\n",
      "        0.0033, 0.0042, 0.0048, 0.0052, 0.0091, 0.0045, 0.0038, 0.0033, 0.0032,\n",
      "        0.0029, 0.0041, 0.0045, 0.0039, 0.0061, 0.0016, 0.0032, 0.0061, 0.0037,\n",
      "        0.0015, 0.0048, 0.0049, 0.0059, 0.0048, 0.0037, 0.0031, 0.0049, 0.0048,\n",
      "        0.0051, 0.0031, 0.0023, 0.0059, 0.0031, 0.0040, 0.0041, 0.0061, 0.0053,\n",
      "        0.0009, 0.0041, 0.0021, 0.0028, 0.0044, 0.0039, 0.0059, 0.0074, 0.0034,\n",
      "        0.0040, 0.0025, 0.0058, 0.0038, 0.0009, 0.0028, 0.0029, 0.0053, 0.0073,\n",
      "        0.0043, 0.0049, 0.0020, 0.0068, 0.0035, 0.0028, 0.0020, 0.0043, 0.0051,\n",
      "        0.0047, 0.0042, 0.0064, 0.0059, 0.0044, 0.0041, 0.0025, 0.0025, 0.0022,\n",
      "        0.0053, 0.0032, 0.0030, 0.0029, 0.0043, 0.0040, 0.0035, 0.0011, 0.0042,\n",
      "        0.0034, 0.0057, 0.0032, 0.0048, 0.0064, 0.0038, 0.0072, 0.0084, 0.0039,\n",
      "        0.0030, 0.0049, 0.0020, 0.0032, 0.0057, 0.0045, 0.0029, 0.0058, 0.0055,\n",
      "        0.0022, 0.0033, 0.0019, 0.0049, 0.0022, 0.0037, 0.0033, 0.0066, 0.0061,\n",
      "        0.0055, 0.0053, 0.0032, 0.0038, 0.0047, 0.0048, 0.0053, 0.0051, 0.0049,\n",
      "        0.0049, 0.0063, 0.0041, 0.0064, 0.0041, 0.0042, 0.0034, 0.0069, 0.0065,\n",
      "        0.0047, 0.0048, 0.0049, 0.0050, 0.0059, 0.0060, 0.0028, 0.0036, 0.0058,\n",
      "        0.0032, 0.0054, 0.0035, 0.0034, 0.0030, 0.0053, 0.0034, 0.0051, 0.0021,\n",
      "        0.0035, 0.0071, 0.0053, 0.0028, 0.0034, 0.0045, 0.0025, 0.0056, 0.0030,\n",
      "        0.0043, 0.0042, 0.0062, 0.0039, 0.0026, 0.0014, 0.0040, 0.0065, 0.0012,\n",
      "        0.0050, 0.0023, 0.0060, 0.0044, 0.0048, 0.0048, 0.0031, 0.0027, 0.0018,\n",
      "        0.0046, 0.0040, 0.0045, 0.0047, 0.0044, 0.0030, 0.0048, 0.0042, 0.0057,\n",
      "        0.0058, 0.0068, 0.0034, 0.0043, 0.0048, 0.0010, 0.0039, 0.0046, 0.0065,\n",
      "        0.0043, 0.0052, 0.0020, 0.0025, 0.0036, 0.0094, 0.0040, 0.0054, 0.0051,\n",
      "        0.0038, 0.0032, 0.0015, 0.0051, 0.0036, 0.0037, 0.0059, 0.0054, 0.0055,\n",
      "        0.0051, 0.0032, 0.0051, 0.0046, 0.0037, 0.0036, 0.0030, 0.0035, 0.0014,\n",
      "        0.0047, 0.0052, 0.0044, 0.0022, 0.0070, 0.0082, 0.0046, 0.0044, 0.0030,\n",
      "        0.0063, 0.0041, 0.0037, 0.0071, 0.0042, 0.0066, 0.0049, 0.0048, 0.0042,\n",
      "        0.0064, 0.0048, 0.0028, 0.0045, 0.0041, 0.0080, 0.0034, 0.0027],\n",
      "       device='cuda:0'), 'resnet18.layer4.0.downsample.1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer4.1.conv1.weight': tensor([[[[-1.6785e-02, -3.9189e-03,  2.2095e-04],\n",
      "          [ 6.3284e-03, -5.1311e-03, -7.6226e-03],\n",
      "          [-1.1620e-02,  7.9425e-03,  5.9044e-03]],\n",
      "\n",
      "         [[-7.1333e-03,  7.5531e-05,  1.4927e-03],\n",
      "          [-1.3658e-02, -2.0389e-02, -1.5426e-02],\n",
      "          [-9.9166e-03, -6.6811e-03, -7.1802e-03]],\n",
      "\n",
      "         [[-7.6127e-03, -1.5598e-02, -8.4699e-05],\n",
      "          [-1.9403e-02, -1.5593e-02, -7.1263e-03],\n",
      "          [-3.1431e-02, -3.2829e-02, -2.7864e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.8162e-02, -1.5941e-02, -2.0490e-02],\n",
      "          [ 3.5492e-03,  6.8881e-03,  1.8008e-02],\n",
      "          [-8.5668e-03, -9.3764e-03, -1.5023e-02]],\n",
      "\n",
      "         [[ 1.9991e-03,  9.5598e-03, -1.0421e-02],\n",
      "          [-2.0367e-02, -2.0284e-03, -2.0239e-02],\n",
      "          [-1.6050e-02,  6.9157e-03, -8.2135e-03]],\n",
      "\n",
      "         [[ 1.7537e-02,  3.3886e-02,  5.0042e-02],\n",
      "          [ 2.3157e-02,  4.9839e-02,  5.2237e-02],\n",
      "          [ 2.6193e-02,  2.2148e-02,  5.8707e-04]]],\n",
      "\n",
      "\n",
      "        [[[-1.8842e-02, -1.3554e-04, -2.1842e-02],\n",
      "          [-2.7694e-03,  1.4714e-02, -7.0752e-03],\n",
      "          [-1.7662e-02, -3.4802e-03, -1.1567e-02]],\n",
      "\n",
      "         [[-4.1622e-02, -3.1381e-02, -1.8254e-02],\n",
      "          [-4.5262e-02, -2.4120e-02, -1.9224e-02],\n",
      "          [-4.1038e-02, -3.2239e-02, -2.4638e-02]],\n",
      "\n",
      "         [[ 3.7394e-02,  2.6809e-02,  6.3247e-03],\n",
      "          [-2.9406e-04,  3.9777e-03, -1.0996e-02],\n",
      "          [-2.0639e-02, -1.6078e-02, -1.4971e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.1979e-03, -1.4640e-02,  1.5446e-02],\n",
      "          [-1.7437e-02, -3.0405e-02, -4.5971e-03],\n",
      "          [ 2.2616e-02,  6.4421e-03,  2.0299e-02]],\n",
      "\n",
      "         [[-2.1515e-02, -2.1678e-02, -2.3012e-02],\n",
      "          [-2.2632e-02, -2.5408e-02, -2.6415e-02],\n",
      "          [-2.6639e-02, -3.5878e-02, -3.0388e-02]],\n",
      "\n",
      "         [[-4.5885e-02, -2.9383e-03,  3.5379e-02],\n",
      "          [-2.2748e-03, -7.1928e-03, -1.6730e-03],\n",
      "          [ 4.8602e-03, -1.1056e-02, -1.7333e-02]]],\n",
      "\n",
      "\n",
      "        [[[-4.6479e-02, -2.6562e-02, -6.2649e-02],\n",
      "          [-2.9778e-02, -1.6562e-02, -5.6575e-02],\n",
      "          [-1.3247e-02, -8.1114e-04, -4.4816e-02]],\n",
      "\n",
      "         [[ 1.4474e-02,  8.8601e-03,  5.1433e-02],\n",
      "          [-2.1104e-02, -3.6330e-02, -1.8583e-02],\n",
      "          [-1.7262e-02, -2.6508e-02, -1.0998e-02]],\n",
      "\n",
      "         [[-1.3659e-02, -2.4181e-02, -1.5978e-02],\n",
      "          [ 1.7437e-02, -7.0563e-03, -5.3617e-03],\n",
      "          [-4.4883e-05, -9.9096e-03,  1.3577e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5350e-02, -7.6751e-02, -5.0767e-02],\n",
      "          [-2.4452e-02, -7.1941e-02, -5.2093e-02],\n",
      "          [-8.8779e-03, -2.6681e-02, -5.0485e-02]],\n",
      "\n",
      "         [[-3.8770e-02, -1.0333e-02,  5.5604e-03],\n",
      "          [-4.4533e-02, -3.5244e-02, -1.6883e-02],\n",
      "          [-6.9236e-03, -2.3403e-02, -2.6465e-02]],\n",
      "\n",
      "         [[ 2.1360e-02, -1.1806e-02, -5.2388e-02],\n",
      "          [-3.5363e-03, -4.9178e-03, -2.7316e-02],\n",
      "          [-1.0406e-03,  2.6058e-02,  3.5993e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-2.5460e-02, -2.0121e-02, -3.1787e-02],\n",
      "          [-2.3479e-02, -2.2525e-02, -3.3897e-02],\n",
      "          [-4.8906e-02, -4.7642e-02, -4.5689e-02]],\n",
      "\n",
      "         [[-1.4159e-02, -1.1416e-02,  2.2766e-05],\n",
      "          [-8.2585e-03, -1.0683e-02, -7.9761e-03],\n",
      "          [-1.5127e-02, -1.3272e-02, -1.0117e-02]],\n",
      "\n",
      "         [[ 8.0061e-03,  1.3075e-02,  2.6240e-02],\n",
      "          [ 1.1788e-02,  2.9836e-03,  1.5518e-02],\n",
      "          [ 1.2820e-02,  2.2590e-02,  1.8309e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.4032e-02, -4.1957e-03, -1.5677e-02],\n",
      "          [-3.3960e-02, -1.9039e-02, -3.3250e-02],\n",
      "          [-2.4372e-02, -2.8762e-03, -3.1845e-02]],\n",
      "\n",
      "         [[ 1.9612e-02,  1.4003e-02,  6.3399e-03],\n",
      "          [ 5.7027e-03, -1.0593e-02, -1.1145e-02],\n",
      "          [ 8.7920e-03, -2.7374e-02, -1.6495e-02]],\n",
      "\n",
      "         [[-3.4309e-02, -2.5805e-02,  8.1238e-04],\n",
      "          [-3.4481e-03, -4.4712e-03,  6.9514e-03],\n",
      "          [ 1.1170e-02, -1.4502e-02, -7.6738e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 3.1056e-02,  4.6206e-02,  2.3206e-02],\n",
      "          [-1.2887e-02, -7.0170e-03, -1.7775e-02],\n",
      "          [-3.6428e-02, -3.2168e-02, -4.2772e-02]],\n",
      "\n",
      "         [[-1.1436e-02, -1.4530e-02, -2.4734e-02],\n",
      "          [-1.5633e-02, -9.8973e-03, -1.7397e-02],\n",
      "          [-1.3540e-02, -8.6288e-03, -1.0627e-02]],\n",
      "\n",
      "         [[-2.5694e-03, -6.4219e-03,  3.4773e-03],\n",
      "          [-8.6442e-03, -1.1098e-02, -5.1406e-03],\n",
      "          [ 3.5958e-03, -9.8994e-03, -2.0402e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.1909e-02, -1.3477e-02, -1.2803e-02],\n",
      "          [ 2.8678e-02,  2.6938e-02,  2.4640e-02],\n",
      "          [ 4.6583e-02,  3.0736e-02,  1.7897e-02]],\n",
      "\n",
      "         [[-8.2493e-04,  1.1355e-02,  4.5154e-02],\n",
      "          [-1.4852e-02, -5.5917e-03,  1.6989e-02],\n",
      "          [-2.3567e-02, -1.0966e-02, -1.4261e-02]],\n",
      "\n",
      "         [[-1.9720e-03, -7.7518e-03, -8.2068e-03],\n",
      "          [ 6.7832e-03,  1.0108e-02, -1.6727e-02],\n",
      "          [-8.4561e-03, -6.9319e-03, -4.9856e-04]]],\n",
      "\n",
      "\n",
      "        [[[-3.6729e-02, -2.1464e-02,  1.1622e-02],\n",
      "          [-1.7582e-02, -1.1489e-02,  5.3485e-03],\n",
      "          [-3.7140e-02, -2.7480e-02, -4.6152e-02]],\n",
      "\n",
      "         [[ 5.2435e-03,  2.6339e-02, -6.7110e-03],\n",
      "          [ 3.6858e-03,  1.2464e-02,  3.9481e-02],\n",
      "          [-1.6189e-02, -2.2129e-02,  2.7250e-02]],\n",
      "\n",
      "         [[-2.3799e-02, -1.4561e-02, -1.8819e-02],\n",
      "          [-3.8334e-02, -4.3674e-02, -3.4335e-02],\n",
      "          [-3.3618e-02, -2.0000e-02, -2.6239e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.7362e-03, -3.0957e-02, -2.9016e-02],\n",
      "          [ 6.4223e-03, -1.8383e-04,  1.3447e-03],\n",
      "          [ 2.9987e-02,  2.9967e-02,  1.6234e-02]],\n",
      "\n",
      "         [[-7.4306e-03,  2.6000e-02,  2.7237e-02],\n",
      "          [ 3.9918e-02,  2.4756e-02,  2.7661e-02],\n",
      "          [ 3.2453e-02,  2.3545e-02,  1.1709e-02]],\n",
      "\n",
      "         [[-6.1632e-03,  4.0970e-03,  3.9182e-03],\n",
      "          [ 7.0406e-03,  5.5161e-02,  2.7220e-02],\n",
      "          [-3.7294e-03,  1.0526e-03, -2.2746e-02]]]], device='cuda:0'), 'resnet18.layer4.1.bn1.weight': tensor([ 0.2579,  0.3337,  0.3448,  0.3078,  0.2812,  0.3647,  0.3343,  0.3867,\n",
      "         0.3819,  0.2844,  0.3694,  0.3791,  0.2923,  0.3454,  0.3632,  0.4029,\n",
      "         0.3693,  0.4008,  0.2315,  0.3877,  0.3110,  0.3270,  0.3434,  0.4773,\n",
      "         0.4464,  0.3551,  0.3829,  0.3610,  0.3944,  0.4607,  0.3211,  0.3491,\n",
      "         0.3653,  0.3768,  0.3631,  0.3702,  0.4016,  0.3634,  0.2770,  0.5142,\n",
      "         0.3352,  0.3833,  0.2321,  0.4153,  0.3700,  0.3627,  0.3926,  0.3118,\n",
      "         0.3561,  0.4095,  0.3683,  0.2790,  0.3744,  0.3260,  0.4273,  0.3143,\n",
      "         0.3525,  0.3553,  0.4346,  0.3164,  0.3798,  0.4183,  0.3262,  0.3752,\n",
      "         0.3633,  0.3409,  0.2720,  0.3916,  0.3835,  0.4127,  0.4078,  0.4267,\n",
      "         0.3995,  0.3583,  0.4512,  0.3264,  0.3264,  0.3963,  0.3438,  0.3908,\n",
      "         0.3039,  0.3358,  0.3943,  0.4458,  0.3460,  0.3617,  0.3848,  0.4516,\n",
      "         0.3625,  0.2730,  0.3608,  0.4051,  0.4333,  0.3287,  0.3216,  0.3006,\n",
      "         0.3436,  0.4940,  0.3469,  0.2586,  0.3529,  0.2567,  0.3723,  0.3461,\n",
      "         0.3848,  0.3603,  0.3399,  0.3359,  0.4723,  0.3227,  0.6006,  0.2970,\n",
      "         0.3652,  0.3806,  0.3315,  0.3322,  0.3447,  0.3203,  0.3628,  0.3613,\n",
      "         0.4227,  0.2893,  0.3965,  0.4290,  0.2565,  0.3733,  0.3164,  0.3488,\n",
      "         0.2974,  0.3970,  0.2218,  0.3576,  0.3042,  0.2666,  0.3502,  0.4181,\n",
      "         0.3937,  0.3342,  0.3086,  0.3554,  0.2775,  0.3841,  0.3968,  0.3669,\n",
      "         0.3577,  0.4211,  0.4093,  0.3553,  0.3403,  0.3245,  0.3131,  0.2929,\n",
      "         0.3689,  0.3420,  0.3356,  0.3612,  0.3351,  0.4084,  0.3269,  0.4010,\n",
      "         0.3390,  0.3101,  0.3952,  0.3803,  0.2810,  0.3970,  0.2580,  0.4037,\n",
      "         0.4064,  0.3939,  0.3059,  0.3120,  0.3360,  0.3168,  0.3553,  0.3930,\n",
      "         0.4502,  0.3099,  0.5098,  0.2461,  0.4405,  0.3629,  0.4771,  0.3692,\n",
      "         0.3922,  0.3078,  0.3385,  0.3698,  0.2971,  0.4547,  0.3172,  0.5068,\n",
      "         0.4261,  0.3037,  0.3563,  0.3618, -0.0006,  0.2518,  0.3406,  0.4157,\n",
      "         0.2196,  0.3296,  0.3664,  0.3345,  0.3661,  0.3883,  0.3422,  0.4140,\n",
      "         0.3892,  0.3905,  0.3236,  0.2945,  0.3563,  0.4165,  0.3566,  0.3940,\n",
      "         0.3508,  0.2650,  0.3736,  0.3699,  0.3260,  0.3496,  0.4049,  0.3863,\n",
      "         0.2877,  0.4058,  0.3167,  0.3574,  0.4808,  0.3306,  0.3413,  0.3200,\n",
      "         0.4056,  0.2256,  0.3850,  0.4593,  0.4090,  0.2572,  0.3983,  0.3398,\n",
      "         0.3032,  0.2027,  0.2964,  0.3738,  0.3964,  0.2829,  0.4083,  0.3850,\n",
      "         0.4043,  0.3551,  0.4718,  0.3690,  0.4104,  0.4266,  0.4233,  0.3099,\n",
      "         0.3767,  0.3375,  0.3419,  0.2954,  0.2590,  0.4757,  0.2757,  0.3146,\n",
      "         0.4515,  0.3709,  0.3927,  0.3253,  0.3905,  0.2801,  0.3835,  0.3811,\n",
      "         0.4109,  0.3718,  0.3355,  0.3520,  0.3182,  0.4193,  0.3681,  0.3785,\n",
      "         0.4875,  0.2991,  0.4085,  0.4215,  0.3370,  0.3753,  0.3243,  0.3489,\n",
      "         0.2897,  0.3937,  0.3373,  0.2171,  0.4354,  0.3926,  0.3753,  0.3053,\n",
      "         0.3620,  0.3410,  0.3183,  0.3227,  0.3257,  0.4512,  0.4219,  0.3120,\n",
      "         0.3825,  0.2845,  0.3711,  0.3882,  0.3968,  0.3580,  0.4326,  0.4409,\n",
      "         0.3330,  0.4180,  0.3189,  0.2980,  0.2942,  0.3666,  0.3406,  0.4007,\n",
      "         0.4227,  0.3478,  0.3382,  0.2678,  0.2939,  0.3859,  0.0187,  0.3822,\n",
      "         0.3788,  0.3932,  0.3847,  0.3539,  0.3197,  0.3261,  0.3786,  0.3364,\n",
      "         0.2878,  0.3502,  0.4348,  0.3493,  0.2626,  0.4370,  0.3289,  0.3781,\n",
      "         0.2750,  0.3965,  0.3552,  0.3885,  0.3415,  0.3829,  0.3626,  0.3225,\n",
      "         0.3448,  0.3708,  0.4074,  0.2913,  0.3435,  0.3808,  0.3276,  0.3277,\n",
      "         0.3447,  0.4447,  0.4563,  0.3435,  0.3283,  0.3412,  0.3084,  0.3113,\n",
      "         0.3153,  0.3912,  0.3791,  0.3756,  0.4068,  0.3515,  0.3318,  0.2171,\n",
      "         0.4080,  0.3130,  0.3165,  0.3370,  0.2325,  0.3100,  0.2880,  0.4444,\n",
      "         0.2795,  0.3591,  0.3793,  0.4064,  0.3950,  0.3692,  0.3494,  0.4414,\n",
      "         0.3797,  0.5064,  0.3597,  0.3541,  0.2735,  0.2242,  0.4524,  0.3397,\n",
      "         0.2420,  0.3239,  0.4090,  0.2140,  0.3777,  0.4424,  0.4829,  0.2934,\n",
      "         0.3813,  0.2658,  0.2823,  0.3630,  0.3582,  0.2597,  0.3706,  0.3814,\n",
      "         0.2286,  0.3918,  0.2793,  0.3891,  0.3530,  0.3804,  0.3280,  0.4296,\n",
      "         0.4833,  0.3602,  0.2974,  0.3112,  0.3721,  0.3236,  0.3774,  0.4120,\n",
      "         0.3352,  0.4218,  0.1692,  0.2188,  0.3309,  0.3715,  0.2741,  0.2787,\n",
      "         0.3477,  0.2590,  0.3968,  0.3345,  0.4142,  0.3265,  0.3621,  0.2756,\n",
      "         0.3663,  0.2991,  0.3042,  0.3573,  0.3031,  0.3326,  0.4505,  0.3599,\n",
      "         0.4080,  0.4063,  0.3298,  0.2954,  0.3548,  0.1465,  0.2508,  0.2362,\n",
      "         0.3638,  0.4677,  0.3632,  0.2956,  0.3865,  0.2549,  0.2989,  0.3498,\n",
      "         0.3525,  0.2324,  0.2803,  0.4043,  0.4716,  0.3263,  0.2834,  0.3630,\n",
      "         0.3587,  0.3255,  0.3798,  0.3054,  0.3644,  0.3578,  0.4197,  0.3675,\n",
      "         0.3388,  0.3761,  0.2863,  0.4802,  0.3858,  0.2865,  0.3140,  0.4273,\n",
      "         0.3745,  0.3679,  0.4220,  0.2719,  0.3384,  0.3405,  0.3354,  0.3198,\n",
      "         0.3616,  0.3587,  0.3370,  0.3543,  0.3977,  0.3176,  0.3052,  0.4295],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn1.bias': tensor([-0.3229, -0.3902, -0.3955, -0.3240, -0.3617, -0.4045, -0.4347, -0.4373,\n",
      "        -0.4199, -0.3162, -0.3656, -0.5276, -0.3012, -0.3732, -0.5083, -0.4775,\n",
      "        -0.5386, -0.6003, -0.2124, -0.5734, -0.3812, -0.3359, -0.4397, -0.5615,\n",
      "        -0.4989, -0.4304, -0.6446, -0.3906, -0.5888, -0.7407, -0.4037, -0.3472,\n",
      "        -0.4026, -0.4481, -0.5060, -0.4411, -0.5332, -0.3866, -0.2567, -0.4841,\n",
      "        -0.4060, -0.4587, -0.2496, -0.5025, -0.3825, -0.4477, -0.3184, -0.4071,\n",
      "        -0.5465, -0.5090, -0.4507, -0.2431, -0.3971, -0.4610, -0.5153, -0.2584,\n",
      "        -0.3142, -0.4034, -0.6030, -0.4635, -0.5295, -0.4011, -0.3497, -0.5470,\n",
      "        -0.5840, -0.3613, -0.3202, -0.5000, -0.4560, -0.5258, -0.5912, -0.5245,\n",
      "        -0.4377, -0.5121, -0.6169, -0.3638, -0.3502, -0.5307, -0.3881, -0.5489,\n",
      "        -0.4023, -0.4392, -0.5615, -0.6000, -0.3883, -0.5646, -0.4781, -0.6775,\n",
      "        -0.3895, -0.2641, -0.3668, -0.5934, -0.6100, -0.4183, -0.4326, -0.3240,\n",
      "        -0.4279, -0.6146, -0.5247, -0.2725, -0.4898, -0.2933, -0.5397, -0.4832,\n",
      "        -0.4557, -0.4366, -0.3337, -0.4580, -0.5410, -0.3148, -0.8291, -0.3137,\n",
      "        -0.4279, -0.3624, -0.3655, -0.3426, -0.3869, -0.4364, -0.4461, -0.5131,\n",
      "        -0.5184, -0.0555, -0.4270, -0.5407, -0.1313, -0.4740, -0.3814, -0.6007,\n",
      "        -0.4185, -0.5138, -0.2029, -0.5628, -0.3886, -0.3287, -0.4464, -0.5747,\n",
      "        -0.5483, -0.4374, -0.3882, -0.4193, -0.3716, -0.4415, -0.5737, -0.3832,\n",
      "        -0.3708, -0.5876, -0.4816, -0.4578, -0.3258, -0.4139, -0.1338, -0.2917,\n",
      "        -0.4983, -0.4029, -0.3826, -0.5242, -0.3424, -0.5672, -0.3809, -0.5064,\n",
      "        -0.3318, -0.3501, -0.5722, -0.5516, -0.3380, -0.4939, -0.2363, -0.5469,\n",
      "        -0.5219, -0.4513, -0.3149, -0.3939, -0.3688, -0.3184, -0.4961, -0.3993,\n",
      "        -0.5586, -0.4264, -0.5383, -0.2601, -0.5782, -0.4010, -0.6706, -0.3381,\n",
      "        -0.6190, -0.2971, -0.2784, -0.5059, -0.2255, -0.5880, -0.4306, -0.6141,\n",
      "        -0.5454, -0.3895, -0.4267, -0.4541, -0.0056, -0.3187, -0.4882, -0.5755,\n",
      "        -0.2255, -0.3730, -0.4167, -0.4158, -0.4564, -0.4541, -0.3624, -0.4843,\n",
      "        -0.5648, -0.4609, -0.3610, -0.3425, -0.5314, -0.4939, -0.5975, -0.5573,\n",
      "        -0.4038, -0.2566, -0.3928, -0.3145, -0.3661, -0.4454, -0.5668, -0.4735,\n",
      "        -0.3190, -0.5465, -0.3017, -0.4968, -0.7392, -0.4767, -0.3549, -0.4181,\n",
      "        -0.5126, -0.2940, -0.6300, -0.5447, -0.5451, -0.1479, -0.4713, -0.4119,\n",
      "        -0.4493, -0.1879, -0.2895, -0.4851, -0.5633, -0.3750, -0.6067, -0.5022,\n",
      "        -0.4999, -0.4041, -0.5016, -0.4338, -0.4085, -0.5965, -0.4501, -0.4284,\n",
      "        -0.4487, -0.4625, -0.3930, -0.2379, -0.2919, -0.6601, -0.3780, -0.4323,\n",
      "        -0.5852, -0.5433, -0.4983, -0.3409, -0.5887, -0.3508, -0.4693, -0.3162,\n",
      "        -0.5584, -0.4372, -0.3807, -0.4581, -0.4004, -0.5189, -0.3980, -0.5167,\n",
      "        -0.6447, -0.3454, -0.6565, -0.4905, -0.4427, -0.5229, -0.3845, -0.4325,\n",
      "        -0.3957, -0.4885, -0.4497, -0.2538, -0.5424, -0.5316, -0.4538, -0.3254,\n",
      "        -0.4357, -0.3775, -0.4028, -0.3860, -0.2970, -0.5760, -0.6086, -0.1879,\n",
      "        -0.3854, -0.1942, -0.5300, -0.5042, -0.4554, -0.3813, -0.6632, -0.4461,\n",
      "        -0.3827, -0.4522, -0.2758, -0.2523, -0.3576, -0.5058, -0.4250, -0.6227,\n",
      "        -0.6047, -0.3586, -0.4013, -0.3177, -0.3440, -0.5808, -0.0692, -0.3848,\n",
      "        -0.5173, -0.5616, -0.4692, -0.4401, -0.2576, -0.4099, -0.5861, -0.5316,\n",
      "        -0.3296, -0.4520, -0.7024, -0.3530, -0.2629, -0.6259, -0.5168, -0.5025,\n",
      "        -0.2972, -0.4822, -0.3450, -0.4832, -0.4576, -0.5760, -0.5109, -0.3756,\n",
      "        -0.4615, -0.4112, -0.4858, -0.2808, -0.3806, -0.4091, -0.2089, -0.4015,\n",
      "        -0.5510, -0.4750, -0.6045, -0.4344, -0.4475, -0.1019, -0.3753, -0.3223,\n",
      "        -0.2840, -0.6242, -0.5397, -0.5423, -0.5088, -0.4818, -0.3750, -0.1937,\n",
      "        -0.4334, -0.2839, -0.3771, -0.4337, -0.2651, -0.4867, -0.3896, -0.6312,\n",
      "        -0.2541, -0.4613, -0.4412, -0.4676, -0.5154, -0.3892, -0.2970, -0.5392,\n",
      "        -0.4806, -0.5605, -0.3859, -0.3555, -0.3110, -0.2555, -0.6703, -0.3857,\n",
      "         0.1653, -0.3646, -0.5833, -0.1463, -0.5959, -0.5166, -0.5699, -0.3323,\n",
      "        -0.4882, -0.0591, -0.2548, -0.4425, -0.4984, -0.2627, -0.4751, -0.4767,\n",
      "        -0.2805, -0.4696, -0.3699, -0.4738, -0.3971, -0.6372, -0.2771, -0.5931,\n",
      "        -0.6390, -0.4753, -0.4535, -0.4615, -0.4181, -0.3154, -0.5042, -0.5283,\n",
      "        -0.3539, -0.5071, -0.2690, -0.1363, -0.3767, -0.4096, -0.2284, -0.3823,\n",
      "        -0.5304, -0.2854, -0.4293, -0.3789, -0.5600, -0.4622, -0.4005, -0.3314,\n",
      "        -0.4537, -0.3652, -0.3108, -0.4756, -0.4303, -0.3511, -0.5319, -0.3652,\n",
      "        -0.5876, -0.5120, -0.4198, -0.3659, -0.4938, -0.0666, -0.3267, -0.2338,\n",
      "        -0.4070, -0.4961, -0.4526, -0.3227, -0.3793, -0.2399, -0.3699, -0.5159,\n",
      "        -0.4722, -0.1776, -0.3881, -0.5542, -0.5962, -0.4378, -0.3784, -0.4246,\n",
      "        -0.4653, -0.4011, -0.4154, -0.3840, -0.5074, -0.3839, -0.5292, -0.5115,\n",
      "        -0.3905, -0.4066, -0.4088, -0.6442, -0.5060, -0.3173, -0.2893, -0.6064,\n",
      "        -0.4677, -0.4561, -0.5302, -0.2634, -0.4011, -0.4018, -0.3614, -0.4813,\n",
      "        -0.3384, -0.4736, -0.3419, -0.5063, -0.5196, -0.2462, -0.3223, -0.5420],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn1.running_mean': tensor([-0.5131, -0.4862, -0.5405, -0.6041, -0.5522, -0.6508, -0.5217, -0.3948,\n",
      "        -0.4688, -0.7005, -0.8257, -0.4934, -0.4884, -0.4716, -0.4448, -0.7843,\n",
      "        -0.5396, -0.5747, -0.5126, -0.6428, -0.5295, -0.4838, -0.6068, -0.8001,\n",
      "        -0.7798, -0.5763, -0.4976, -0.3584, -0.7875, -0.6006, -0.5529, -0.5318,\n",
      "        -0.5791, -0.8821, -0.7251, -0.7908, -0.4926, -0.4060, -0.4062, -0.9662,\n",
      "        -0.4793, -0.5557, -0.2835, -0.7197, -0.5748, -0.4747, -0.5846, -0.3375,\n",
      "        -0.5994, -1.0042, -0.7930, -0.8346, -0.5728, -0.6072, -0.8655, -0.6046,\n",
      "        -0.6994, -0.7551, -0.8503, -0.4857, -0.6623, -0.8132, -0.6735, -0.9082,\n",
      "        -0.5871, -0.3366, -0.3725, -0.6030, -0.8971, -0.4318, -0.6405, -0.8929,\n",
      "        -0.5898, -0.6725, -0.7785, -0.6912, -0.5698, -0.8723, -0.5580, -0.5356,\n",
      "        -0.5321, -0.6626, -0.5738, -0.6766, -0.5410, -0.5223, -0.7430, -0.9784,\n",
      "        -0.4451, -0.5406, -0.7029, -0.7810, -0.9247, -0.5146, -0.5175, -0.5025,\n",
      "        -0.5105, -0.9000, -0.3063, -0.5244, -0.7493, -0.5694, -0.6608, -0.4438,\n",
      "        -0.6535, -0.6579, -0.4850, -0.6610, -0.7874, -0.5602, -1.2213, -0.5389,\n",
      "        -0.5677, -0.8397, -0.5324,  1.1432, -0.5470, -0.4713, -0.7610, -0.5795,\n",
      "        -0.3695, -0.6859, -0.7111, -0.4632, -0.6574, -0.5846, -0.4066, -0.6510,\n",
      "        -0.3990, -0.7181, -0.3046, -0.6782, -0.3787, -0.2783, -0.5804, -0.7164,\n",
      "        -0.7606, -0.6531, -0.5974, -0.3767, -0.4571, -0.7274, -0.6436, -0.6998,\n",
      "        -0.5380, -0.9791, -0.6665, -0.6888, -0.2835, -0.5202, -0.4851, -0.2997,\n",
      "        -0.5633, -0.5966, -0.4846, -0.6088, -0.2963, -0.8002, -0.4989, -0.6322,\n",
      "        -0.5917, -0.5382, -0.6372, -0.5035, -0.4940, -0.7717, -0.2792, -0.6752,\n",
      "        -0.4894, -0.3988, -0.3803, -0.6100, -0.3679, -0.6718, -0.4179, -0.7251,\n",
      "        -0.8161, -0.4855, -0.7199, -0.3939, -0.6338, -0.7077, -0.9581, -0.5816,\n",
      "        -0.6259, -0.8556, -0.2909, -0.6996, -0.6352, -0.7886, -0.5762, -0.9417,\n",
      "        -0.7524, -0.4336, -0.3584, -0.5769,  0.1163, -0.3514, -0.9100, -0.6608,\n",
      "        -0.3637, -0.6096, -0.5097, -0.9258, -0.7073, -0.6328, -0.5037, -0.6005,\n",
      "        -0.5556, -0.3658, -0.4759, -0.5367, -0.7837, -0.7279, -0.6572, -0.5664,\n",
      "        -0.4485, -0.4502, -0.6272, -0.6262, -0.5242, -0.6481, -0.7280, -0.2943,\n",
      "        -0.6684, -0.5853, -0.6559, -0.5068, -0.7011, -0.3965, -0.5881, -0.6156,\n",
      "        -0.7535, -0.5111, -0.7983, -0.8655, -1.0223, -0.2740, -0.5736, -0.5764,\n",
      "        -0.5679, -0.3709, -0.6780, -0.9736, -0.5013, -0.4922, -0.5975, -0.6593,\n",
      "        -0.7422, -0.6981, -0.6738, -0.5185, -0.5570, -0.7693, -0.4446, -0.5216,\n",
      "        -0.4749, -0.5032, -0.2918, -0.2087, -0.4568, -0.6565, -0.5595, -0.3942,\n",
      "        -0.9978, -0.6683, -0.6313, -0.6832, -0.6174, -0.3482, -0.7062, -0.6550,\n",
      "        -0.6627, -0.7705, -0.6108, -0.7401, -0.4558, -0.6341, -0.6029, -0.7133,\n",
      "        -1.0105, -0.6482, -0.6340, -0.6576, -0.6134, -0.5688, -0.2246, -0.5749,\n",
      "        -0.3796, -0.8415, -0.4470, -0.4402, -0.7704, -0.5616, -0.7560, -0.2816,\n",
      "        -0.4455, -0.5643, -0.6461, -0.7505, -0.9047, -0.6768, -0.5019, -0.6418,\n",
      "        -0.7464, -0.3259, -0.7495, -0.6645, -0.6059, -0.4239, -0.7095, -0.8023,\n",
      "        -0.7592, -0.5518, -0.3162, -0.5133, -0.8215, -0.7117, -0.3839, -0.2894,\n",
      "        -0.7099, -0.3987, -0.4261, -0.4984, -0.6456, -0.6339, -0.2922, -0.8043,\n",
      "        -0.4861, -0.5570, -0.5126, -0.7011, -0.6436, -0.4672, -0.8055, -0.5584,\n",
      "        -0.4024, -0.4244, -0.6261, -0.5426, -0.4531, -0.4445, -0.4121, -0.6573,\n",
      "        -0.2049, -0.7702, -0.4444, -0.8023, -0.6368, -0.6106, -0.4760, -0.4977,\n",
      "        -0.4314, -0.5514, -0.7351, -0.3922, -0.7999, -0.5480, -0.5013, -0.7741,\n",
      "        -0.6597, -0.7224, -0.7872, -0.6263, -0.4608, -0.4085, -0.4035, -0.7197,\n",
      "        -0.5349, -0.6048, -0.4214, -0.5772, -0.7470, -0.4653, -0.6030, -0.5886,\n",
      "        -0.7601, -0.5747, -0.5309, -0.3111, -0.5013, -0.5572, -0.3672, -0.5945,\n",
      "        -0.4735, -0.8206, -0.4581, -0.6853, -0.8017, -0.5272, -0.4139, -0.6859,\n",
      "        -0.5765, -0.7952, -0.4009, -0.6742, -0.2696, -0.2329, -0.7379, -0.6479,\n",
      "         0.0807, -0.5338, -0.5142, -0.5570, -0.7036, -0.8271, -0.8143, -0.4404,\n",
      "        -0.4588, -0.2652, -0.6090, -0.3354, -0.4136,  0.2790, -0.3222, -0.7500,\n",
      "        -0.2706, -0.6707, -0.5853, -0.4575, -0.4369, -0.6907, -0.4203, -0.9322,\n",
      "        -0.7978, -0.5603, -0.4591, -0.3983, -0.5432, -0.5957, -0.5256, -0.8167,\n",
      "        -0.6398, -0.5377, -0.3931, -0.1685, -0.4525, -0.7206, -0.2298, -0.6487,\n",
      "        -0.2862, -0.5087, -0.7533, -0.5174, -0.7952, -0.6280, -0.7106, -0.4699,\n",
      "        -0.5626, -0.6212, -0.6474, -0.4233, -0.4936, -0.5960, -0.6606, -0.6852,\n",
      "        -0.4736, -0.7167, -0.5843, -0.5397, -0.4774, -0.1000, -0.2999, -0.4118,\n",
      "        -0.6005, -0.9438, -0.7439, -0.5704, -0.5988, -0.4015, -0.5261, -0.4639,\n",
      "        -0.4583, -0.5101, -0.5190, -0.7903, -0.8476, -0.4988, -0.6369, -0.5897,\n",
      "        -0.4283, -0.5071, -0.7014, -0.4265, -0.4502, -0.4953, -0.5708, -0.3082,\n",
      "        -0.5346, -1.0078, -0.5342, -0.8452, -0.6932, -0.7621, -0.4967, -0.5083,\n",
      "        -0.7850, -0.7621, -0.8276, -0.3869, -0.5182, -0.7721, -0.3699, -0.6815,\n",
      "        -0.2557, -0.6445, -0.7090, -0.5092, -0.6539, -0.5739, -0.5903, -0.7372],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn1.running_var': tensor([0.0954, 0.1032, 0.1640, 0.1221, 0.1180, 0.1641, 0.1371, 0.1554, 0.1552,\n",
      "        0.1274, 0.2111, 0.1950, 0.1195, 0.1080, 0.1522, 0.2307, 0.1917, 0.1596,\n",
      "        0.1292, 0.1746, 0.1534, 0.1250, 0.1461, 0.3278, 0.1533, 0.1556, 0.1370,\n",
      "        0.1332, 0.2046, 0.2232, 0.1051, 0.1486, 0.1649, 0.2015, 0.1387, 0.1696,\n",
      "        0.1505, 0.2234, 0.0770, 0.2353, 0.1532, 0.1866, 0.0702, 0.2079, 0.1719,\n",
      "        0.1268, 0.2492, 0.0948, 0.1640, 0.2519, 0.1561, 0.2241, 0.1295, 0.1204,\n",
      "        0.2607, 0.1051, 0.2018, 0.1629, 0.2542, 0.1305, 0.1709, 0.3329, 0.1213,\n",
      "        0.2044, 0.1517, 0.1068, 0.0968, 0.2154, 0.1901, 0.2121, 0.1538, 0.3111,\n",
      "        0.1436, 0.1525, 0.2213, 0.1655, 0.0967, 0.1979, 0.1508, 0.1594, 0.1466,\n",
      "        0.1330, 0.1367, 0.2575, 0.1496, 0.2488, 0.1896, 0.2826, 0.1119, 0.1019,\n",
      "        0.2069, 0.2349, 0.2448, 0.1352, 0.0838, 0.1581, 0.1362, 0.3165, 0.1359,\n",
      "        0.1024, 0.1715, 0.1006, 0.1575, 0.1542, 0.1920, 0.1743, 0.1280, 0.1432,\n",
      "        0.1723, 0.1487, 0.4096, 0.0949, 0.1532, 0.3328, 0.1335, 0.3029, 0.1129,\n",
      "        0.1371, 0.1737, 0.1774, 0.1905, 0.2086, 0.1639, 0.1994, 0.1138, 0.1400,\n",
      "        0.0872, 0.1532, 0.1207, 0.1889, 0.0694, 0.1699, 0.1259, 0.0655, 0.1704,\n",
      "        0.2019, 0.1867, 0.1430, 0.1635, 0.1426, 0.1335, 0.1411, 0.1173, 0.2047,\n",
      "        0.1225, 0.2704, 0.1750, 0.1621, 0.1200, 0.1525, 0.2663, 0.1084, 0.1573,\n",
      "        0.1653, 0.1300, 0.1321, 0.1057, 0.2453, 0.1303, 0.1417, 0.1388, 0.1128,\n",
      "        0.1641, 0.1794, 0.1390, 0.1597, 0.0771, 0.2003, 0.1737, 0.1597, 0.1490,\n",
      "        0.1478, 0.1273, 0.1379, 0.1342, 0.2109, 0.2126, 0.0826, 0.1988, 0.0751,\n",
      "        0.1848, 0.1638, 0.2413, 0.1459, 0.1631, 0.2246, 0.1147, 0.1842, 0.1414,\n",
      "        0.2173, 0.1371, 0.3393, 0.1647, 0.1016, 0.1148, 0.1679, 0.0421, 0.1123,\n",
      "        0.2034, 0.2029, 0.0734, 0.1243, 0.2102, 0.1762, 0.1647, 0.1625, 0.1025,\n",
      "        0.1813, 0.1594, 0.1890, 0.1086, 0.1059, 0.1842, 0.2220, 0.1743, 0.2300,\n",
      "        0.1290, 0.0978, 0.1417, 0.1781, 0.1076, 0.1277, 0.1974, 0.2111, 0.1350,\n",
      "        0.2117, 0.1102, 0.2248, 0.2462, 0.1485, 0.1499, 0.1229, 0.1534, 0.0672,\n",
      "        0.1980, 0.2112, 0.2448, 0.1117, 0.1969, 0.1447, 0.1358, 0.0948, 0.1316,\n",
      "        0.2357, 0.1746, 0.0981, 0.2174, 0.1715, 0.1887, 0.1760, 0.3001, 0.1949,\n",
      "        0.1900, 0.2511, 0.1709, 0.1424, 0.1507, 0.1496, 0.1507, 0.1185, 0.0919,\n",
      "        0.3167, 0.0999, 0.1088, 0.3681, 0.1827, 0.1413, 0.1420, 0.1680, 0.1145,\n",
      "        0.2018, 0.2413, 0.1861, 0.1498, 0.1602, 0.1776, 0.1254, 0.2520, 0.1785,\n",
      "        0.1544, 0.3059, 0.1135, 0.1781, 0.2114, 0.1194, 0.1843, 0.1091, 0.1917,\n",
      "        0.0940, 0.2251, 0.1321, 0.0805, 0.3217, 0.1628, 0.1749, 0.0975, 0.1272,\n",
      "        0.1636, 0.1162, 0.1532, 0.1959, 0.2038, 0.1910, 0.1465, 0.2050, 0.1170,\n",
      "        0.1967, 0.1510, 0.1665, 0.1433, 0.2107, 0.2326, 0.2134, 0.1758, 0.1328,\n",
      "        0.1261, 0.1296, 0.1459, 0.1583, 0.1538, 0.2340, 0.1393, 0.1883, 0.0860,\n",
      "        0.1041, 0.1801, 0.0632, 0.1643, 0.1709, 0.1639, 0.1782, 0.1665, 0.1657,\n",
      "        0.1407, 0.1985, 0.0823, 0.0867, 0.1448, 0.1967, 0.1729, 0.1080, 0.1765,\n",
      "        0.1153, 0.1921, 0.1043, 0.2114, 0.1562, 0.1580, 0.1960, 0.1531, 0.1559,\n",
      "        0.1272, 0.1360, 0.1393, 0.1954, 0.1077, 0.1487, 0.2145, 0.2187, 0.1684,\n",
      "        0.1547, 0.2178, 0.3396, 0.1843, 0.1327, 0.2053, 0.0923, 0.1571, 0.1212,\n",
      "        0.1702, 0.1824, 0.1792, 0.1767, 0.1521, 0.1361, 0.1437, 0.1669, 0.1730,\n",
      "        0.0947, 0.1337, 0.0862, 0.1213, 0.1030, 0.1817, 0.1097, 0.1720, 0.1290,\n",
      "        0.2203, 0.1671, 0.1554, 0.1581, 0.2363, 0.1699, 0.3227, 0.1250, 0.1598,\n",
      "        0.1304, 0.0613, 0.2107, 0.1325, 0.5665, 0.1232, 0.1934, 0.0839, 0.1981,\n",
      "        0.1810, 0.3431, 0.1111, 0.1218, 0.3567, 0.1252, 0.1334, 0.1395, 0.0991,\n",
      "        0.1931, 0.1775, 0.0778, 0.1578, 0.0869, 0.1828, 0.1297, 0.2142, 0.1466,\n",
      "        0.3105, 0.2636, 0.1673, 0.1232, 0.1300, 0.1633, 0.1240, 0.1527, 0.1942,\n",
      "        0.1445, 0.1754, 0.0584, 0.1059, 0.1199, 0.1478, 0.0965, 0.1125, 0.1428,\n",
      "        0.0932, 0.2243, 0.1376, 0.2079, 0.1201, 0.1625, 0.1118, 0.1422, 0.1199,\n",
      "        0.1430, 0.1255, 0.1110, 0.1464, 0.2230, 0.1841, 0.1775, 0.1889, 0.1096,\n",
      "        0.1153, 0.1314, 0.0650, 0.0709, 0.0850, 0.1395, 0.2793, 0.2128, 0.1051,\n",
      "        0.1913, 0.0855, 0.1090, 0.1725, 0.1711, 0.0853, 0.1051, 0.1720, 0.1756,\n",
      "        0.1452, 0.1050, 0.1332, 0.1398, 0.1238, 0.1727, 0.0981, 0.1564, 0.1555,\n",
      "        0.1844, 0.1469, 0.1391, 0.3220, 0.1270, 0.2899, 0.2158, 0.1780, 0.1476,\n",
      "        0.1970, 0.1837, 0.1870, 0.1898, 0.1182, 0.1089, 0.1541, 0.1192, 0.1079,\n",
      "        0.1074, 0.1536, 0.1605, 0.1048, 0.1967, 0.1316, 0.1303, 0.2117],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn1.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.layer4.1.conv2.weight': tensor([[[[-5.7378e-03,  4.5242e-03, -1.0317e-02],\n",
      "          [-4.0918e-04,  5.5285e-03, -7.9701e-03],\n",
      "          [ 2.5643e-04,  9.4860e-03,  3.0197e-03]],\n",
      "\n",
      "         [[-1.9653e-02, -2.6527e-02, -2.0100e-02],\n",
      "          [-1.6462e-02, -1.1380e-02, -7.0029e-03],\n",
      "          [-1.7693e-02, -2.0343e-02, -2.0190e-02]],\n",
      "\n",
      "         [[ 1.7609e-03,  2.7910e-02,  1.3855e-02],\n",
      "          [-3.0834e-03, -1.1518e-02, -8.1563e-03],\n",
      "          [-6.0551e-03, -5.9035e-03, -9.2154e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7712e-02, -1.4345e-02, -1.9947e-02],\n",
      "          [-1.7474e-02, -1.7122e-02, -2.3075e-02],\n",
      "          [-8.8318e-03, -8.8536e-04, -1.1575e-02]],\n",
      "\n",
      "         [[ 9.4523e-03, -2.4772e-04, -4.9303e-03],\n",
      "          [ 3.7204e-02,  3.4586e-02,  3.4138e-02],\n",
      "          [ 2.3639e-02,  2.8292e-02,  2.3220e-02]],\n",
      "\n",
      "         [[-2.7936e-02, -2.1739e-02, -2.3213e-02],\n",
      "          [-2.2894e-02, -1.6653e-02, -1.3164e-02],\n",
      "          [ 6.8862e-03,  1.1638e-02,  9.5715e-05]]],\n",
      "\n",
      "\n",
      "        [[[-1.1998e-03, -1.3229e-03, -6.6158e-03],\n",
      "          [ 3.7381e-03,  1.5432e-03, -1.0824e-03],\n",
      "          [-1.8102e-03, -5.4249e-03, -9.3537e-03]],\n",
      "\n",
      "         [[ 1.4441e-03, -8.8322e-04,  1.7841e-03],\n",
      "          [ 1.1410e-02,  4.6710e-03, -2.1969e-03],\n",
      "          [ 9.1764e-04, -7.3261e-03, -8.4866e-03]],\n",
      "\n",
      "         [[ 3.6991e-02,  1.9145e-02,  2.1384e-02],\n",
      "          [ 9.1279e-03,  2.2656e-03,  1.2136e-02],\n",
      "          [ 2.7222e-02,  1.0387e-02, -1.3449e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9739e-02,  1.0518e-02,  2.3781e-02],\n",
      "          [ 1.6181e-02,  8.8470e-03,  2.2136e-02],\n",
      "          [ 1.7848e-02,  8.1376e-03,  1.0422e-02]],\n",
      "\n",
      "         [[ 6.5823e-03,  7.2791e-03,  9.7868e-03],\n",
      "          [ 2.1721e-02,  1.6805e-02,  2.2235e-02],\n",
      "          [ 2.2374e-02,  1.6539e-02,  1.7822e-02]],\n",
      "\n",
      "         [[ 2.3993e-02,  2.6117e-02,  3.5946e-02],\n",
      "          [ 1.6215e-02,  1.2655e-02,  2.1393e-02],\n",
      "          [ 2.3850e-02,  2.3188e-02,  2.6208e-02]]],\n",
      "\n",
      "\n",
      "        [[[-2.6331e-03,  2.3893e-03,  8.4413e-04],\n",
      "          [ 1.5097e-02,  1.1744e-02,  2.1367e-02],\n",
      "          [ 1.5077e-02,  9.7025e-03,  1.4067e-02]],\n",
      "\n",
      "         [[-6.6563e-04,  4.0297e-03,  2.9486e-03],\n",
      "          [ 8.9024e-04,  4.3360e-03,  1.6039e-02],\n",
      "          [-1.0672e-02, -6.2562e-03,  1.2895e-02]],\n",
      "\n",
      "         [[-2.5932e-02, -3.1395e-02, -2.5470e-02],\n",
      "          [-3.5209e-02, -2.8100e-02, -2.3883e-02],\n",
      "          [-1.9854e-03, -3.7190e-03, -1.4178e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0464e-02, -1.9692e-02, -2.1228e-02],\n",
      "          [-1.6906e-02, -2.6172e-02, -1.7437e-02],\n",
      "          [-7.6251e-03, -4.4480e-03, -2.5941e-03]],\n",
      "\n",
      "         [[ 5.2172e-03,  3.7908e-04, -5.1023e-04],\n",
      "          [-4.6291e-03, -7.4467e-03, -2.5027e-03],\n",
      "          [-9.9037e-03, -1.6230e-02, -1.6758e-02]],\n",
      "\n",
      "         [[-1.1495e-02,  7.6378e-03,  1.1482e-02],\n",
      "          [-1.4618e-02, -1.6760e-02, -7.7788e-03],\n",
      "          [-1.4812e-02, -1.3328e-02, -1.3914e-02]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 3.1081e-03,  1.2963e-03, -5.2303e-04],\n",
      "          [-5.4043e-03, -1.5389e-03, -4.3725e-03],\n",
      "          [-7.7108e-03, -3.8615e-03, -3.8450e-03]],\n",
      "\n",
      "         [[ 4.4102e-03,  2.7182e-03,  2.7973e-04],\n",
      "          [ 8.2320e-03,  7.3312e-03,  7.2693e-03],\n",
      "          [ 1.2791e-02,  1.0265e-02,  8.4703e-03]],\n",
      "\n",
      "         [[-5.3169e-03, -1.3700e-02, -5.9392e-03],\n",
      "          [-4.0266e-03, -4.5759e-03, -1.2593e-02],\n",
      "          [-7.4027e-03, -1.3093e-02, -1.4781e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.4820e-02, -2.1894e-02, -2.3454e-02],\n",
      "          [-2.1622e-02, -2.1825e-02, -2.1277e-02],\n",
      "          [-1.7665e-02, -2.0170e-02, -1.5401e-02]],\n",
      "\n",
      "         [[ 2.4166e-03,  3.7935e-03, -2.1454e-03],\n",
      "          [ 1.1910e-03,  3.7685e-03, -3.7446e-03],\n",
      "          [-4.9183e-03,  5.7927e-04, -5.7268e-03]],\n",
      "\n",
      "         [[-5.8025e-03, -1.6803e-02, -1.3565e-02],\n",
      "          [-6.5997e-03, -9.5613e-03, -8.0499e-03],\n",
      "          [-6.8117e-03, -3.6908e-03, -4.4104e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.1041e-02, -2.0175e-02, -2.6074e-02],\n",
      "          [-2.5774e-02, -1.3792e-02, -2.4516e-02],\n",
      "          [-9.7671e-03, -2.0890e-04, -1.0847e-02]],\n",
      "\n",
      "         [[ 4.6055e-03,  7.4491e-03,  1.0344e-02],\n",
      "          [ 1.1491e-02, -3.0193e-04,  8.3996e-03],\n",
      "          [ 1.5770e-02,  1.0334e-02,  9.6883e-03]],\n",
      "\n",
      "         [[ 1.0606e-02, -5.7019e-03,  9.8777e-03],\n",
      "          [-4.4526e-03, -5.4833e-03,  5.6092e-03],\n",
      "          [ 1.5490e-02,  1.0917e-02,  1.9095e-02]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.3771e-03,  3.1770e-03,  1.0990e-02],\n",
      "          [ 3.4544e-03,  3.3741e-03,  6.7069e-03],\n",
      "          [-2.1067e-03, -5.9221e-03,  3.7105e-03]],\n",
      "\n",
      "         [[ 2.8612e-03,  2.1061e-03, -9.1089e-03],\n",
      "          [-1.1826e-04, -5.3659e-03, -8.7058e-03],\n",
      "          [-7.2771e-03, -1.7145e-02, -2.2552e-02]],\n",
      "\n",
      "         [[ 1.5947e-02,  8.4123e-03,  3.3091e-04],\n",
      "          [ 2.4975e-02, -2.9636e-03, -1.4015e-02],\n",
      "          [ 8.0565e-03,  1.0470e-02, -2.1816e-02]]],\n",
      "\n",
      "\n",
      "        [[[ 7.0821e-03,  2.8781e-03,  1.0009e-03],\n",
      "          [ 2.1834e-03, -4.4960e-03, -1.1539e-02],\n",
      "          [-7.1830e-03, -7.5049e-03, -6.9736e-03]],\n",
      "\n",
      "         [[-3.8389e-03, -7.8271e-03, -1.6678e-02],\n",
      "          [-9.1181e-03,  7.1597e-03,  2.6051e-03],\n",
      "          [-6.0125e-03,  5.5157e-03, -4.3745e-04]],\n",
      "\n",
      "         [[ 9.8326e-03,  1.8754e-02,  2.6318e-02],\n",
      "          [ 1.2385e-02,  1.5620e-03,  5.0227e-03],\n",
      "          [ 1.7063e-02, -1.3471e-03,  1.4524e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.8528e-02, -5.3410e-03, -2.4851e-03],\n",
      "          [-6.8498e-03, -3.6602e-03, -7.6481e-03],\n",
      "          [-7.3583e-03, -1.1082e-02, -1.9130e-02]],\n",
      "\n",
      "         [[-4.4007e-03, -2.7637e-03,  3.9091e-03],\n",
      "          [ 5.7760e-03, -4.1782e-03,  1.8367e-03],\n",
      "          [ 3.7946e-03, -6.1729e-03, -5.7975e-03]],\n",
      "\n",
      "         [[-5.1899e-03, -1.7720e-02, -1.8323e-02],\n",
      "          [-1.0677e-02, -1.3613e-02, -9.8120e-03],\n",
      "          [ 3.9129e-03, -4.3759e-03, -1.1317e-02]]]], device='cuda:0'), 'resnet18.layer4.1.bn2.weight': tensor([1.6831, 1.5747, 1.5301, 1.5952, 1.6916, 1.6262, 1.6968, 1.9733, 1.5265,\n",
      "        1.6680, 1.5128, 1.5357, 1.6700, 1.5374, 1.6251, 1.6370, 1.6166, 1.9960,\n",
      "        1.5589, 1.4858, 1.5947, 1.8143, 1.6459, 1.6623, 1.6200, 1.7138, 1.5781,\n",
      "        1.5492, 1.8243, 1.5909, 1.5725, 1.7148, 1.7145, 1.5567, 1.6448, 1.5420,\n",
      "        1.6991, 1.5867, 1.4989, 1.4458, 1.5616, 1.4550, 1.5524, 1.6296, 1.5678,\n",
      "        1.6576, 1.7589, 1.8228, 1.6387, 1.6269, 1.5985, 1.6338, 1.4983, 1.6526,\n",
      "        1.4270, 1.7070, 1.8369, 1.7040, 1.6986, 1.6504, 1.6196, 1.6627, 1.7031,\n",
      "        1.7635, 1.5116, 1.6501, 1.5104, 1.7884, 1.7612, 1.8149, 1.6974, 1.7304,\n",
      "        1.5241, 1.6692, 1.6158, 1.5563, 1.5873, 1.5609, 1.5019, 1.5434, 1.6596,\n",
      "        1.5958, 1.6045, 1.9210, 1.5403, 1.5958, 1.6953, 1.4995, 1.5342, 1.5508,\n",
      "        1.4230, 1.6228, 1.7425, 1.6556, 1.4853, 1.5999, 1.5113, 1.5778, 1.6981,\n",
      "        1.5289, 1.8302, 1.6730, 1.6906, 1.5465, 1.5248, 1.4220, 1.7125, 1.6469,\n",
      "        1.6057, 1.7264, 1.5557, 1.5909, 1.5919, 1.5682, 1.5628, 1.5967, 1.4441,\n",
      "        1.8581, 1.6297, 1.6470, 1.6132, 1.6512, 1.4822, 1.4143, 1.6555, 1.7019,\n",
      "        1.6516, 1.7669, 1.4606, 1.7997, 1.7140, 1.6411, 1.6813, 1.5868, 1.7340,\n",
      "        1.7977, 1.5802, 1.6355, 1.6076, 1.6055, 1.4908, 1.6828, 1.5630, 1.7230,\n",
      "        1.6772, 1.6455, 1.6425, 1.7469, 1.6370, 1.6730, 1.5265, 1.5066, 1.7571,\n",
      "        1.5843, 1.4698, 1.6550, 1.7213, 1.7712, 1.5490, 1.5688, 1.5618, 1.7946,\n",
      "        1.6807, 2.0267, 1.7584, 1.7439, 1.5431, 1.6354, 1.7270, 1.5695, 1.6484,\n",
      "        1.5867, 1.6741, 1.7035, 1.5921, 1.4461, 1.6683, 1.6370, 1.6853, 1.5751,\n",
      "        1.6590, 1.4878, 1.8828, 1.6718, 1.5220, 1.6774, 1.7326, 1.6748, 1.5997,\n",
      "        1.5485, 1.6786, 1.5554, 1.7122, 1.6944, 1.5946, 1.6082, 1.5594, 1.4971,\n",
      "        1.5060, 1.5659, 1.6502, 1.6731, 1.7862, 1.5083, 1.7036, 1.6404, 1.6010,\n",
      "        1.6079, 1.5522, 1.6862, 1.5482, 1.5713, 1.6556, 1.5706, 1.7450, 1.6402,\n",
      "        1.5470, 1.6683, 1.5298, 1.7651, 1.7131, 1.6530, 1.6279, 1.5788, 1.5076,\n",
      "        1.6403, 1.5521, 1.7072, 1.5638, 1.5898, 1.6717, 1.5956, 1.6462, 1.6294,\n",
      "        1.6146, 1.5511, 1.5574, 1.7792, 1.4671, 1.6615, 1.5992, 1.5887, 1.9743,\n",
      "        1.4171, 1.5858, 1.8601, 1.5837, 1.5026, 1.5810, 1.6943, 1.8051, 1.6487,\n",
      "        1.5900, 1.7058, 1.5902, 1.9209, 1.5822, 1.8246, 1.8972, 1.5863, 1.6272,\n",
      "        1.7262, 1.5520, 1.6478, 1.6189, 1.5165, 1.7632, 1.5310, 1.5430, 1.6596,\n",
      "        1.5503, 1.6899, 1.6299, 1.4951, 1.7949, 1.5860, 1.7421, 1.5884, 1.6827,\n",
      "        1.5705, 2.1633, 1.5289, 1.5430, 1.4975, 1.6565, 1.5924, 1.6176, 1.5320,\n",
      "        1.7385, 1.7988, 1.4855, 1.5238, 1.6187, 1.7797, 1.6245, 1.6574, 1.6226,\n",
      "        1.7109, 1.5399, 1.4427, 1.6629, 1.7045, 1.5726, 1.4525, 1.7069, 1.5515,\n",
      "        1.7079, 1.5810, 1.5414, 1.6304, 1.6312, 1.6702, 1.7341, 1.5239, 1.5431,\n",
      "        1.6141, 1.7600, 1.5179, 1.6602, 1.6539, 1.5075, 1.6806, 1.6343, 1.6972,\n",
      "        1.6633, 1.5256, 1.5936, 1.7204, 1.5936, 1.6511, 1.5214, 1.8221, 1.6911,\n",
      "        1.6944, 1.6283, 1.5077, 1.4574, 1.5644, 1.5903, 1.6661, 1.6237, 1.6155,\n",
      "        1.5492, 1.5948, 1.4678, 1.7522, 1.7488, 1.4833, 1.5640, 1.6204, 1.6688,\n",
      "        1.5301, 1.5764, 1.5738, 1.7690, 1.4805, 1.6366, 1.6575, 1.5059, 1.5265,\n",
      "        1.6693, 1.7042, 1.7150, 1.6365, 1.6604, 1.6034, 1.6449, 1.5737, 1.6285,\n",
      "        1.7423, 1.5827, 1.7014, 1.7357, 1.5142, 1.5540, 1.6668, 1.5525, 1.5819,\n",
      "        1.8010, 1.5918, 1.7286, 1.5332, 1.5587, 1.6481, 1.6199, 1.6554, 1.5417,\n",
      "        1.7838, 1.6333, 1.5058, 1.6752, 1.5969, 1.6094, 1.5711, 1.5950, 1.5426,\n",
      "        1.4450, 1.5421, 1.6695, 1.7609, 1.8674, 1.6479, 1.6149, 1.5214, 1.5492,\n",
      "        1.5850, 1.6274, 1.6743, 1.5590, 1.5782, 1.6887, 1.6184, 1.5219, 1.6003,\n",
      "        1.5899, 1.7632, 1.5022, 1.6508, 1.7024, 1.6687, 1.5562, 1.6326, 1.6129,\n",
      "        1.6131, 1.6142, 1.7652, 1.6592, 1.8557, 1.6226, 1.6793, 1.6792, 1.7054,\n",
      "        1.6198, 1.6190, 1.7438, 1.8173, 1.5894, 1.5222, 1.6005, 1.4988, 1.6561,\n",
      "        1.6952, 1.6344, 1.5116, 1.5664, 1.8604, 1.6535, 1.6860, 1.7584, 1.4831,\n",
      "        1.6599, 1.7136, 1.6077, 1.5841, 1.4735, 1.6358, 1.5190, 1.7179, 1.6047,\n",
      "        1.6676, 1.7613, 1.7099, 1.7036, 1.7565, 1.5946, 1.6207, 1.7543, 1.5782,\n",
      "        1.8680, 1.7375, 1.6015, 1.6269, 1.4993, 1.6215, 1.6644, 1.6460, 1.6692,\n",
      "        1.5558, 1.6772, 1.5066, 1.6048, 1.6290, 1.4620, 1.5688, 1.6283, 1.7308,\n",
      "        1.6025, 1.6999, 1.7214, 1.6101, 1.7040, 1.6237, 1.7461, 1.6592, 1.6622,\n",
      "        1.5977, 1.5123, 1.6695, 1.6637, 1.7291, 1.6368, 1.4134, 1.6605, 1.5216,\n",
      "        1.6562, 1.3458, 1.6605, 1.7140, 1.5325, 1.5219, 1.8365, 1.6936],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn2.bias': tensor([ 0.0766,  0.2186,  0.2598,  0.3860,  0.1737,  0.1679,  0.1287,  0.3118,\n",
      "         0.2541,  0.1082,  0.1019,  0.1088,  0.1802,  0.1036,  0.1760,  0.2463,\n",
      "         0.1826,  0.5234,  0.2138,  0.0921,  0.1342,  0.2376,  0.1893,  0.2831,\n",
      "         0.1189,  0.1675,  0.1677,  0.3208, -0.0440,  0.0425,  0.2554,  0.0348,\n",
      "         0.1519,  0.1128,  0.0271,  0.0321,  0.0851,  0.2638,  0.2390,  0.1205,\n",
      "         0.1473,  0.1044,  0.1452,  0.2240,  0.1099,  0.1681,  0.0502,  0.3927,\n",
      "         0.2182,  0.1031,  0.2757,  0.1690,  0.1013,  0.1937,  0.1265,  0.1399,\n",
      "         0.1338,  0.1007,  0.2813,  0.2369,  0.1415,  0.2095,  0.1857,  0.0451,\n",
      "         0.1655,  0.3411,  0.2019,  0.0029,  0.2494,  0.0926,  0.0518, -0.0044,\n",
      "         0.2466, -0.0114,  0.2034,  0.0648,  0.0767,  0.1467,  0.0463,  0.1086,\n",
      "         0.0808,  0.2421,  0.3874,  0.4311,  0.0508,  0.2870,  0.2302,  0.1588,\n",
      "         0.2951,  0.2102,  0.1640,  0.2110,  0.0430,  0.1706,  0.2158,  0.1158,\n",
      "         0.2515,  0.1845,  0.2036,  0.1384,  0.1902,  0.2427,  0.2338,  0.3167,\n",
      "         0.1411,  0.2043,  0.0838,  0.0564, -0.0386,  0.2075,  0.1743,  0.2658,\n",
      "         0.1823,  0.2364,  0.0882,  0.2367,  0.1496, -0.0726,  0.2426,  0.2502,\n",
      "         0.3439,  0.1310,  0.0921,  0.2472,  0.2035,  0.0415,  0.1183,  0.2021,\n",
      "         0.2194,  0.1617,  0.0171,  0.1595,  0.0010,  0.0313,  0.2954,  0.1721,\n",
      "         0.1210,  0.2063,  0.1489,  0.2116,  0.2561,  0.0488,  0.2211,  0.0723,\n",
      "         0.1639,  0.1295, -0.0263,  0.3559,  0.1523,  0.3267,  0.1532,  0.1419,\n",
      "         0.0023,  0.1857,  0.1368,  0.0593,  0.2175,  0.1486,  0.1618,  0.1424,\n",
      "         0.1432,  0.3532,  0.2071,  0.3072,  0.1632,  0.1705,  0.2395,  0.0499,\n",
      "         0.1529,  0.1644,  0.1305,  0.1654,  0.0869, -0.0181,  0.2338,  0.2444,\n",
      "         0.1604,  0.0791,  0.2183,  0.1511,  0.1039,  0.1141,  0.1796,  0.1574,\n",
      "         0.2206,  0.2430,  0.0882,  0.2347,  0.0098,  0.1438,  0.1174,  0.1438,\n",
      "         0.3009,  0.2229,  0.1185,  0.1137,  0.2788,  0.1491,  0.1116,  0.1876,\n",
      "         0.1460,  0.2025,  0.2337,  0.1005,  0.1629,  0.1676,  0.1495, -0.0043,\n",
      "         0.1470,  0.3138, -0.0157,  0.1710,  0.1797,  0.2566,  0.2234,  0.1987,\n",
      "         0.2226,  0.0098,  0.1255,  0.1913,  0.1410,  0.2513,  0.0443,  0.1469,\n",
      "         0.2340,  0.0196,  0.1280,  0.1370,  0.3384,  0.2334,  0.1725,  0.1936,\n",
      "         0.0739,  0.2875,  0.1420,  0.2787,  0.1617,  0.1720,  0.1225,  0.1450,\n",
      "         0.0864,  0.0754, -0.0455,  0.1334,  0.1545, -0.0040,  0.1312,  0.1765,\n",
      "         0.2660,  0.2124,  0.2273,  0.1953,  0.2243,  0.0131,  0.1489,  0.3089,\n",
      "         0.1585,  0.2336, -0.0840,  0.3061,  0.0910,  0.0606,  0.2148,  0.2091,\n",
      "         0.0295,  0.1334,  0.1210,  0.1080,  0.2136,  0.0723,  0.1415,  0.0615,\n",
      "         0.2190,  0.2200,  0.1274,  0.1770,  0.1414,  0.2126,  0.1088,  0.1010,\n",
      "         0.1950,  0.1678,  0.2188,  0.1646,  0.1223,  0.1495,  0.1452,  0.0965,\n",
      "         0.1774,  0.0342,  0.2558,  0.2360,  0.1142,  0.0172,  0.2005,  0.0795,\n",
      "         0.2054,  0.4101,  0.2088,  0.1511,  0.0490,  0.1629,  0.0836,  0.1459,\n",
      "         0.2046,  0.2027,  0.1058,  0.2421,  0.1873,  0.0296,  0.1916,  0.1204,\n",
      "         0.3146,  0.0831,  0.1000,  0.1732,  0.2027,  0.2269,  0.3244,  0.0203,\n",
      "         0.2761,  0.2832,  0.2011,  0.0424,  0.1541,  0.2830,  0.2384, -0.0114,\n",
      "         0.1976,  0.1410,  0.1605,  0.1402,  0.1591,  0.1439,  0.2150,  0.1015,\n",
      "         0.2832,  0.1234,  0.2335,  0.0771,  0.0692,  0.0404,  0.2529,  0.4243,\n",
      "         0.1435,  0.0763,  0.0341,  0.1048,  0.1175,  0.1690, -0.0245,  0.0938,\n",
      "         0.0640,  0.0938,  0.1757,  0.0760,  0.0991,  0.0901,  0.1066,  0.0183,\n",
      "         0.1375,  0.1832,  0.0535,  0.0692,  0.3363,  0.1434,  0.1970,  0.2488,\n",
      "         0.2563,  0.0759,  0.3332,  0.1621,  0.1282,  0.1853,  0.2197,  0.1570,\n",
      "         0.2293, -0.0006,  0.0120,  0.1869,  0.3109,  0.2241,  0.2542,  0.2621,\n",
      "         0.3167,  0.2049,  0.1168,  0.2195,  0.0547,  0.2093,  0.1617,  0.0726,\n",
      "         0.0476,  0.2744,  0.3824,  0.0933,  0.2544,  0.0620,  0.1648,  0.1672,\n",
      "         0.2539,  0.2175,  0.1382,  0.2364,  0.2868,  0.0494,  0.1356,  0.2042,\n",
      "         0.1511,  0.0487,  0.0129,  0.0887,  0.2419,  0.2187,  0.3063,  0.1721,\n",
      "         0.1797,  0.1103,  0.0410,  0.0993,  0.1654,  0.2380,  0.2528,  0.1048,\n",
      "         0.1395,  0.0144,  0.1825,  0.2678,  0.2105,  0.2266,  0.1020,  0.1597,\n",
      "         0.1468,  0.2107,  0.1683,  0.4288,  0.2135,  0.2580,  0.1540,  0.1512,\n",
      "         0.1551, -0.0669,  0.1125,  0.3356,  0.2562,  0.1083,  0.2891,  0.0367,\n",
      "         0.2473,  0.2933,  0.2087,  0.1085,  0.1431,  0.1915,  0.2329,  0.1968,\n",
      "         0.2725,  0.0246,  0.1998,  0.0574,  0.2806,  0.0378,  0.1517, -0.0996,\n",
      "         0.1165,  0.1378,  0.0702,  0.0393,  0.0737,  0.0285,  0.2392,  0.3579,\n",
      "         0.0854,  0.0204,  0.0124,  0.0904,  0.0491,  0.1776,  0.0749,  0.1870,\n",
      "         0.1573,  0.1589,  0.2500,  0.1530,  0.3977,  0.0985,  0.1354,  0.2425,\n",
      "         0.4255,  0.1117,  0.2213,  0.1472,  0.1788,  0.0841, -0.0077,  0.1229,\n",
      "         0.2089, -0.0179,  0.1129,  0.1523,  0.1486,  0.1556,  0.1822,  0.1942,\n",
      "         0.1436,  0.1610,  0.3030,  0.2349,  0.2428,  0.2683,  0.1706,  0.2255],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn2.running_mean': tensor([-0.1934, -0.1421, -0.1164, -0.0964, -0.1385, -0.1882, -0.1601, -0.1043,\n",
      "        -0.1059, -0.1438, -0.0787, -0.1318, -0.0795, -0.2224, -0.1768, -0.1036,\n",
      "        -0.1062, -0.1393, -0.0849, -0.1795, -0.0517, -0.1440, -0.1432, -0.1236,\n",
      "        -0.1232, -0.1114, -0.1142, -0.1512, -0.1089, -0.1710, -0.0640, -0.1086,\n",
      "        -0.0739, -0.1327, -0.2079, -0.0857, -0.2135, -0.1879, -0.1188, -0.1834,\n",
      "        -0.1567, -0.1795, -0.0672, -0.1127, -0.1079, -0.1240, -0.3196, -0.0030,\n",
      "        -0.1864, -0.1545, -0.1184, -0.2057, -0.1636, -0.1421,  0.0306, -0.1089,\n",
      "        -0.2520, -0.1935, -0.1421, -0.1302, -0.0425,  0.0310, -0.1527, -0.1593,\n",
      "        -0.1428, -0.0561, -0.1346, -0.1262, -0.1356, -0.1515, -0.2077, -0.1135,\n",
      "        -0.0957, -0.1398, -0.1826, -0.1725, -0.1221, -0.2171, -0.1163, -0.1021,\n",
      "        -0.1517, -0.0617, -0.0660, -0.0671, -0.1106, -0.1056, -0.1179, -0.1022,\n",
      "        -0.1663, -0.0681, -0.0260, -0.1089, -0.0815, -0.1312, -0.1288, -0.1260,\n",
      "        -0.1959, -0.0996, -0.0830, -0.0889, -0.1842, -0.1449, -0.1156, -0.0419,\n",
      "        -0.1282, -0.0004, -0.2386, -0.1447, -0.2393, -0.0603, -0.0407, -0.0429,\n",
      "        -0.0895, -0.0128, -0.1381, -0.0529, -0.1461, -0.1334, -0.0487, -0.1050,\n",
      "        -0.1675, -0.0996, -0.1198, -0.0810, -0.0312, -0.2149, -0.1140, -0.0744,\n",
      "        -0.0716, -0.1493, -0.2088, -0.1343,  0.0046, -0.1786, -0.1471, -0.1449,\n",
      "        -0.1002, -0.1476, -0.0940, -0.0870, -0.0472, -0.1153, -0.0831, -0.2094,\n",
      "        -0.1271, -0.1349, -0.1518, -0.1324, -0.0994, -0.1604, -0.1041, -0.1381,\n",
      "        -0.1670, -0.1163, -0.1382, -0.1445, -0.1152, -0.1141, -0.1277, -0.1033,\n",
      "        -0.2228, -0.1399, -0.0906, -0.1097, -0.1484, -0.0355, -0.1714, -0.1903,\n",
      "        -0.1474, -0.2083, -0.1041, -0.1148, -0.0862, -0.1453, -0.1473, -0.1097,\n",
      "        -0.0341, -0.0914, -0.1068, -0.0927, -0.0673, -0.1701, -0.2459, -0.2741,\n",
      "        -0.2044, -0.0840, -0.1705, -0.1473, -0.1517, -0.1194, -0.0697, -0.0704,\n",
      "        -0.1091, -0.2648, -0.1304, -0.1841, -0.0944, -0.0825, -0.0685, -0.0844,\n",
      "        -0.1600, -0.1211, -0.2772, -0.1601, -0.1678, -0.1399, -0.1088, -0.1184,\n",
      "        -0.1648, -0.1989, -0.2444, -0.0218, -0.0864, -0.1922, -0.1306, -0.1399,\n",
      "        -0.1591, -0.0967, -0.0498, -0.1755, -0.0876, -0.0684, -0.2148, -0.0926,\n",
      "        -0.1031, -0.1601, -0.1180, -0.1002, -0.0548, -0.1233, -0.2226, -0.1012,\n",
      "        -0.2142, -0.1445, -0.0584, -0.0900, -0.1646, -0.2085, -0.1337, -0.1906,\n",
      "        -0.2660, -0.2251, -0.2247, -0.1657, -0.1835, -0.1244, -0.0878, -0.1099,\n",
      "        -0.1307, -0.1646, -0.2984, -0.1214, -0.1428, -0.2349, -0.1584, -0.2394,\n",
      "        -0.1041, -0.1115, -0.2843, -0.0265, -0.2203, -0.1830, -0.1119, -0.1588,\n",
      "        -0.1444, -0.2423, -0.1585, -0.1983, -0.0715, -0.1175, -0.1771, -0.1218,\n",
      "        -0.1007, -0.0883, -0.1749, -0.1133, -0.1205, -0.0894, -0.1488, -0.0488,\n",
      "        -0.3489, -0.1349, -0.0481, -0.1844, -0.1620, -0.0298, -0.0819, -0.1894,\n",
      "        -0.0909, -0.1097, -0.1173, -0.0822, -0.0661, -0.0983, -0.0259, -0.1113,\n",
      "        -0.1514, -0.1056, -0.0659, -0.1648, -0.0934, -0.1168, -0.0484, -0.1721,\n",
      "        -0.3152, -0.0884, -0.0366, -0.1037, -0.1129, -0.1854, -0.2453, -0.2677,\n",
      "        -0.1850, -0.1104, -0.1741, -0.1088, -0.0851, -0.0703, -0.1249, -0.1700,\n",
      "        -0.1322, -0.1362, -0.0302, -0.2327, -0.1215, -0.1552, -0.0403, -0.2584,\n",
      "        -0.0333, -0.1662, -0.1718, -0.1450, -0.0603, -0.0799, -0.1289, -0.1606,\n",
      "        -0.1153, -0.1780, -0.0646, -0.2252, -0.2133, -0.1349, -0.1099, -0.0966,\n",
      "        -0.1374, -0.1580, -0.1355, -0.1127, -0.1124, -0.0327, -0.1890, -0.1263,\n",
      "        -0.1178, -0.2352, -0.0996, -0.1984, -0.1867, -0.2285, -0.0186, -0.1677,\n",
      "        -0.0965, -0.1404, -0.0783, -0.1196, -0.1189, -0.1718, -0.1375, -0.1380,\n",
      "        -0.1090, -0.1384, -0.0723, -0.1223, -0.0885, -0.0988, -0.1160, -0.0768,\n",
      "        -0.1215, -0.1617, -0.2570, -0.0702, -0.0455, -0.1109, -0.1466, -0.0918,\n",
      "        -0.1628, -0.0776, -0.0801, -0.1165, -0.1940, -0.1642, -0.1393, -0.0869,\n",
      "        -0.1835, -0.1240, -0.1245, -0.1739, -0.0801, -0.1788, -0.1443, -0.1816,\n",
      "        -0.1833, -0.1173, -0.1464, -0.0166, -0.0083, -0.1197, -0.1773, -0.1365,\n",
      "        -0.0928, -0.1517, -0.1701, -0.1398, -0.0944, -0.1477,  0.0233, -0.1680,\n",
      "        -0.1307, -0.1329, -0.2155, -0.2093, -0.1152, -0.1308, -0.1044, -0.2021,\n",
      "        -0.2856, -0.1258, -0.1195, -0.0592, -0.1050, -0.0682, -0.1781, -0.1444,\n",
      "        -0.0496, -0.1249, -0.1841, -0.0657, -0.0793, -0.0287, -0.1077, -0.1773,\n",
      "        -0.1397, -0.2187, -0.1806, -0.1366, -0.1933, -0.2178, -0.0981, -0.1890,\n",
      "        -0.1146, -0.1407, -0.1013, -0.1177,  0.0187, -0.0384, -0.0515, -0.0603,\n",
      "        -0.0830, -0.1852, -0.1007, -0.1672, -0.1845, -0.1473, -0.1575, -0.2540,\n",
      "        -0.1220, -0.1324, -0.1221, -0.1508, -0.2280, -0.1992, -0.1011, -0.0622,\n",
      "         0.0238, -0.1310, -0.1871, -0.2165, -0.1529, -0.0611, -0.0355, -0.1038,\n",
      "        -0.1667, -0.1916, -0.1096, -0.1576, -0.1215, -0.2297, -0.1726, -0.1138,\n",
      "        -0.1185, -0.0858, -0.1733, -0.2237, -0.0786, -0.2188, -0.2621, -0.0042,\n",
      "        -0.0746, -0.2276, -0.2394, -0.2159, -0.0698, -0.1109, -0.1683, -0.0542,\n",
      "        -0.2313, -0.1251, -0.0704, -0.1890, -0.0644, -0.0862, -0.2228, -0.0560],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn2.running_var': tensor([0.0655, 0.0200, 0.0251, 0.0297, 0.0184, 0.0197, 0.0221, 0.0296, 0.0126,\n",
      "        0.0384, 0.0210, 0.0247, 0.0176, 0.0399, 0.0189, 0.0210, 0.0316, 0.0260,\n",
      "        0.0178, 0.0205, 0.0213, 0.0372, 0.0167, 0.0356, 0.0245, 0.0150, 0.0214,\n",
      "        0.0155, 0.0348, 0.0304, 0.0171, 0.0179, 0.0289, 0.0292, 0.0416, 0.0340,\n",
      "        0.0640, 0.0279, 0.0159, 0.0335, 0.0190, 0.0254, 0.0219, 0.0220, 0.0251,\n",
      "        0.0240, 0.0838, 0.0254, 0.0219, 0.0304, 0.0239, 0.0256, 0.0218, 0.0337,\n",
      "        0.0392, 0.0221, 0.0653, 0.0403, 0.0206, 0.0395, 0.0172, 0.0237, 0.0350,\n",
      "        0.0531, 0.0312, 0.0216, 0.0213, 0.0398, 0.0213, 0.0341, 0.0722, 0.0337,\n",
      "        0.0156, 0.0329, 0.0487, 0.0501, 0.0402, 0.0484, 0.0198, 0.0262, 0.0246,\n",
      "        0.0256, 0.0155, 0.0303, 0.0308, 0.0339, 0.0242, 0.0168, 0.0199, 0.0127,\n",
      "        0.0163, 0.0191, 0.0412, 0.0252, 0.0184, 0.0341, 0.0339, 0.0203, 0.0174,\n",
      "        0.0290, 0.0471, 0.0319, 0.0255, 0.0151, 0.0371, 0.0208, 0.0858, 0.0297,\n",
      "        0.0752, 0.0167, 0.0158, 0.0285, 0.0281, 0.0151, 0.0233, 0.0106, 0.0271,\n",
      "        0.0387, 0.0227, 0.0212, 0.0263, 0.0420, 0.0229, 0.0143, 0.0207, 0.0487,\n",
      "        0.0282, 0.0413, 0.0124, 0.0230, 0.0359, 0.0176, 0.0338, 0.0387, 0.0250,\n",
      "        0.0242, 0.0147, 0.0196, 0.0253, 0.0179, 0.0146, 0.0312, 0.0186, 0.0497,\n",
      "        0.0263, 0.0223, 0.0582, 0.0235, 0.0324, 0.0195, 0.0212, 0.0262, 0.0703,\n",
      "        0.0384, 0.0362, 0.0203, 0.0172, 0.0261, 0.0166, 0.0175, 0.0435, 0.0529,\n",
      "        0.0202, 0.0221, 0.0223, 0.0306, 0.0265, 0.0210, 0.0303, 0.0461, 0.0164,\n",
      "        0.0328, 0.0253, 0.0447, 0.0243, 0.0174, 0.0172, 0.0190, 0.0332, 0.0183,\n",
      "        0.0254, 0.0358, 0.0787, 0.0827, 0.0314, 0.0189, 0.0230, 0.0329, 0.0724,\n",
      "        0.0199, 0.0272, 0.0187, 0.0189, 0.0631, 0.0246, 0.0336, 0.0158, 0.0193,\n",
      "        0.0273, 0.0178, 0.0535, 0.0194, 0.0530, 0.0280, 0.0357, 0.0379, 0.0245,\n",
      "        0.0424, 0.0403, 0.0451, 0.0623, 0.0141, 0.0154, 0.0449, 0.0216, 0.0218,\n",
      "        0.0169, 0.0251, 0.0134, 0.0381, 0.0275, 0.0165, 0.0986, 0.0221, 0.0264,\n",
      "        0.0615, 0.0315, 0.0304, 0.0214, 0.0182, 0.0583, 0.0176, 0.0281, 0.0259,\n",
      "        0.0196, 0.0156, 0.0422, 0.0329, 0.0196, 0.0300, 0.0586, 0.0566, 0.0794,\n",
      "        0.0232, 0.0220, 0.0416, 0.0345, 0.0157, 0.0358, 0.0297, 0.0784, 0.0165,\n",
      "        0.0143, 0.0426, 0.0329, 0.0368, 0.0129, 0.0234, 0.0689, 0.0189, 0.0557,\n",
      "        0.0351, 0.0142, 0.0281, 0.0266, 0.0376, 0.0466, 0.0572, 0.0214, 0.0351,\n",
      "        0.0234, 0.0218, 0.0283, 0.0139, 0.0225, 0.0206, 0.0431, 0.0367, 0.0304,\n",
      "        0.0140, 0.1224, 0.0212, 0.0137, 0.0237, 0.0300, 0.0127, 0.0225, 0.0280,\n",
      "        0.0147, 0.0299, 0.0163, 0.0154, 0.0283, 0.0335, 0.0248, 0.0290, 0.0266,\n",
      "        0.0161, 0.0203, 0.0292, 0.0202, 0.0216, 0.0263, 0.0250, 0.0730, 0.0095,\n",
      "        0.0243, 0.0130, 0.0127, 0.0300, 0.0282, 0.0304, 0.0565, 0.0269, 0.0255,\n",
      "        0.0400, 0.0262, 0.0165, 0.0274, 0.0370, 0.0359, 0.0350, 0.0226, 0.0513,\n",
      "        0.0358, 0.0399, 0.0164, 0.0925, 0.0206, 0.0268, 0.0298, 0.0353, 0.0230,\n",
      "        0.0223, 0.0183, 0.0266, 0.0144, 0.0207, 0.0140, 0.0402, 0.0502, 0.0260,\n",
      "        0.0332, 0.0176, 0.0250, 0.0459, 0.0297, 0.0205, 0.0239, 0.0173, 0.0532,\n",
      "        0.0286, 0.0286, 0.0347, 0.0310, 0.0248, 0.0419, 0.0761, 0.0379, 0.0288,\n",
      "        0.0348, 0.0273, 0.0303, 0.0536, 0.0336, 0.0197, 0.0369, 0.0153, 0.0216,\n",
      "        0.0308, 0.0217, 0.0192, 0.0353, 0.0135, 0.0203, 0.0159, 0.0274, 0.0681,\n",
      "        0.0533, 0.0256, 0.0224, 0.0176, 0.0244, 0.0231, 0.0362, 0.0245, 0.0436,\n",
      "        0.0145, 0.0458, 0.0389, 0.0227, 0.0542, 0.0354, 0.0207, 0.0183, 0.0374,\n",
      "        0.0106, 0.0506, 0.0208, 0.0280, 0.0486, 0.0262, 0.0239, 0.0141, 0.0180,\n",
      "        0.0416, 0.0395, 0.0204, 0.0278, 0.0203, 0.0300, 0.0362, 0.0153, 0.0197,\n",
      "        0.0207, 0.0193, 0.0206, 0.0267, 0.0454, 0.0648, 0.0153, 0.0270, 0.0157,\n",
      "        0.0435, 0.0547, 0.0398, 0.0294, 0.0288, 0.0189, 0.0213, 0.0280, 0.0200,\n",
      "        0.0236, 0.0219, 0.0201, 0.0280, 0.0202, 0.0102, 0.0339, 0.0164, 0.0187,\n",
      "        0.0612, 0.0390, 0.0224, 0.0265, 0.0331, 0.0421, 0.0706, 0.0478, 0.0210,\n",
      "        0.0296, 0.0290, 0.0304, 0.0266, 0.0135, 0.0151, 0.0168, 0.0688, 0.0273,\n",
      "        0.0352, 0.0304, 0.0484, 0.0408, 0.0873, 0.0436, 0.0204, 0.0335, 0.0383,\n",
      "        0.0603, 0.0853, 0.0196, 0.0168, 0.0537, 0.0421, 0.0338, 0.0385, 0.0390,\n",
      "        0.0174, 0.0125, 0.0234, 0.0549, 0.0359, 0.0153, 0.0205, 0.0243, 0.0550,\n",
      "        0.0300, 0.0287, 0.0259, 0.0197, 0.0273, 0.0507, 0.0340, 0.0411, 0.0310,\n",
      "        0.0159, 0.0185, 0.0862, 0.0407, 0.0427, 0.0237, 0.0191, 0.0289, 0.0175,\n",
      "        0.0304, 0.0180, 0.0175, 0.0270, 0.0171, 0.0265, 0.0417, 0.0169],\n",
      "       device='cuda:0'), 'resnet18.layer4.1.bn2.num_batches_tracked': tensor(134251, device='cuda:0'), 'resnet18.fc.weight': tensor([[-0.0185, -0.0705, -0.0518,  ..., -0.0390,  0.1735, -0.0410],\n",
      "        [-0.0818, -0.0944,  0.0174,  ...,  0.2028, -0.0248,  0.0372],\n",
      "        [-0.0332, -0.0566, -0.0242,  ..., -0.0344, -0.0227,  0.0197],\n",
      "        ...,\n",
      "        [-0.0103,  0.0033, -0.0359,  ..., -0.0279, -0.0115,  0.0128],\n",
      "        [-0.0359, -0.0353, -0.0296,  ..., -0.0330, -0.0110, -0.0513],\n",
      "        [ 0.0021, -0.0248, -0.0829,  ...,  0.0417, -0.0500,  0.0663]],\n",
      "       device='cuda:0'), 'resnet18.fc.bias': tensor([-2.6341e-03,  3.0005e-03,  6.5581e-04, -2.6909e-02,  6.3637e-03,\n",
      "         1.3260e-02, -1.1178e-02,  2.0639e-02, -3.6373e-03, -1.2325e-02,\n",
      "        -1.2629e-02, -7.2057e-03, -1.9321e-02, -2.4960e-02, -1.1885e-02,\n",
      "        -8.3259e-03, -9.5745e-03, -1.6658e-02,  9.1804e-03, -1.5354e-02,\n",
      "         7.1358e-03,  3.0737e-02,  1.3239e-02, -7.7528e-03,  4.7448e-03,\n",
      "         1.1175e-02,  1.5949e-02, -1.6712e-02, -1.0130e-03, -3.7167e-03,\n",
      "         6.5269e-03, -1.2041e-02,  9.0427e-03, -8.3279e-04,  8.8647e-03,\n",
      "        -2.6307e-02, -1.4588e-02,  2.9433e-03,  2.9718e-03, -1.9125e-02,\n",
      "        -4.7922e-03,  1.3828e-02,  9.8802e-03, -1.8417e-02,  1.9734e-02,\n",
      "         1.6941e-03,  1.2420e-02, -5.5842e-03, -1.0612e-02,  3.9847e-04,\n",
      "         4.2733e-03, -1.3298e-02,  2.0661e-02,  1.6963e-02,  2.7952e-03,\n",
      "         7.4214e-04,  1.3168e-02,  3.2213e-03,  1.0458e-02,  1.6511e-02,\n",
      "         9.1717e-04,  3.9388e-03, -5.6534e-03,  1.9372e-02,  7.5238e-03,\n",
      "         1.3437e-02, -1.3185e-02, -1.0026e-02,  7.1920e-03, -2.3166e-03,\n",
      "        -1.8895e-02,  1.2519e-02,  1.9583e-03,  7.3836e-03, -9.6664e-03,\n",
      "         2.0189e-02,  7.6652e-03,  1.8529e-02,  1.5710e-02,  1.8582e-02,\n",
      "        -6.9314e-03,  1.7090e-02,  9.1268e-03, -3.8876e-02, -2.4116e-02,\n",
      "        -6.8715e-03, -1.1648e-02,  7.8817e-03,  1.8046e-03,  2.8480e-02,\n",
      "        -1.9379e-02, -1.6295e-02,  1.0468e-02, -1.3027e-02, -8.4211e-03,\n",
      "        -2.9210e-02, -2.4856e-03, -8.7141e-03, -1.6397e-02, -9.3054e-03,\n",
      "        -1.5931e-02, -2.6346e-02, -1.1091e-03,  2.2589e-02,  2.1387e-03,\n",
      "        -2.3212e-02, -1.4085e-02, -5.6224e-03, -2.0090e-02, -3.0284e-02,\n",
      "        -4.9574e-02,  2.3283e-02,  1.4954e-02, -7.7501e-03, -3.9482e-03,\n",
      "        -3.7629e-02, -2.4220e-02, -1.0194e-02, -7.7038e-03, -4.1312e-03,\n",
      "        -2.9553e-03, -6.2174e-03, -1.2076e-02, -7.0168e-03, -3.8948e-03,\n",
      "        -1.6953e-02, -2.4585e-02,  5.5353e-03, -8.3370e-03, -7.0759e-03,\n",
      "        -2.4023e-02, -6.3686e-03,  7.3420e-04,  5.2883e-03, -2.2181e-02,\n",
      "        -2.6972e-02, -1.7990e-02, -1.6393e-02,  2.1485e-03, -1.6122e-02,\n",
      "        -1.6112e-02,  6.5931e-03, -2.0045e-02,  6.4149e-03, -1.2601e-02,\n",
      "        -7.6238e-03,  1.1411e-02, -4.5084e-02, -9.2018e-03, -1.5563e-02,\n",
      "        -1.3590e-02, -1.4374e-03, -1.9466e-02,  2.0737e-02, -1.0476e-02,\n",
      "         6.3229e-03,  8.3229e-03, -1.0791e-02, -1.8903e-02,  5.8624e-03,\n",
      "        -2.0189e-03,  3.2436e-02,  4.0581e-02, -4.0820e-05,  1.0886e-02,\n",
      "        -1.6544e-02, -5.3365e-04, -2.2903e-02,  4.6295e-03, -4.8402e-03,\n",
      "         1.0187e-02,  1.7954e-02,  4.8211e-03,  6.1831e-03,  1.4419e-02,\n",
      "        -1.2094e-02, -8.7460e-03,  1.9488e-03,  1.4685e-02,  1.2464e-02,\n",
      "         7.0523e-03, -4.1783e-03,  1.2048e-02, -2.0199e-02,  9.9144e-03,\n",
      "         1.3978e-02, -1.0321e-03,  5.7394e-03,  1.4019e-03,  6.0113e-04,\n",
      "        -5.5790e-04,  2.4424e-02,  2.3076e-02, -1.4610e-02,  1.1185e-02,\n",
      "         3.4608e-02,  1.6944e-02,  4.3295e-03, -2.5606e-02,  1.2279e-02,\n",
      "        -2.5810e-02,  8.5365e-03,  2.0437e-02,  2.2557e-02,  2.2966e-02,\n",
      "         8.8420e-03, -1.3894e-02,  3.8719e-03, -9.3046e-03,  2.3220e-02,\n",
      "        -1.4949e-02,  6.9258e-03,  5.0070e-03, -1.7302e-02,  1.0364e-03,\n",
      "        -1.0223e-02, -9.6949e-03,  3.4534e-02,  6.1337e-03,  1.1582e-02,\n",
      "        -2.0529e-02, -2.1956e-02,  5.3109e-03,  3.4101e-02, -5.8079e-03,\n",
      "         2.9406e-02, -8.7954e-03, -5.2505e-03, -1.9088e-02,  3.0350e-02,\n",
      "         1.8445e-02, -2.1225e-02,  1.8432e-02,  1.3832e-02,  1.7848e-02,\n",
      "        -4.4762e-03,  3.5858e-02,  2.1762e-02,  1.0880e-02,  4.0255e-02,\n",
      "        -2.0049e-03, -3.0348e-03,  9.3293e-03, -1.6304e-02,  9.6253e-04,\n",
      "         1.8673e-02, -1.6567e-02,  1.4964e-02, -3.7206e-03, -7.6734e-03,\n",
      "        -7.9254e-06,  3.9732e-03, -9.5979e-03, -1.6833e-02,  5.8524e-05,\n",
      "        -6.4126e-03,  8.2977e-03,  4.8207e-03, -1.1467e-03,  4.8869e-03,\n",
      "         1.7349e-02,  3.9222e-03, -7.8080e-03,  1.6051e-02,  9.8802e-03,\n",
      "        -1.0144e-02,  2.0912e-02, -6.3203e-03, -2.3139e-02,  1.1646e-03,\n",
      "         2.2468e-02, -6.6953e-03,  1.8311e-02,  1.4623e-02, -1.1654e-02,\n",
      "        -1.4306e-02,  1.2974e-02, -9.6865e-03, -6.2351e-03,  1.3180e-02,\n",
      "         6.7543e-03,  4.6418e-02, -2.7962e-02, -1.5111e-02,  2.8716e-02,\n",
      "         9.1991e-03, -5.3710e-03, -6.0361e-03, -7.2140e-03, -9.2421e-03,\n",
      "         1.8536e-03, -3.1078e-03, -8.4004e-03, -1.6766e-02,  4.0936e-03,\n",
      "         6.2426e-03, -1.2470e-03, -1.2919e-02,  3.5819e-03,  1.1006e-02,\n",
      "        -1.3282e-02,  2.6395e-03,  8.9953e-03,  6.5421e-03, -1.2031e-02,\n",
      "         1.7149e-02,  1.7949e-02, -1.0581e-02, -2.6962e-02, -1.3564e-02,\n",
      "        -9.7173e-03, -2.1176e-03,  3.5370e-02,  1.8392e-02,  2.6676e-02,\n",
      "        -1.0594e-03, -3.3949e-03, -4.8838e-03,  1.3427e-02, -1.3948e-02,\n",
      "        -1.9559e-02, -2.3295e-02, -3.7834e-02, -1.4637e-02, -2.1323e-02,\n",
      "        -3.0952e-02, -3.0822e-02,  1.9438e-03,  2.8637e-03, -2.1198e-02,\n",
      "         1.0448e-02, -1.1316e-02, -4.2609e-03,  2.2647e-02, -1.2867e-02,\n",
      "        -1.1018e-02,  1.2336e-02, -2.0057e-02, -2.1837e-02, -6.8067e-03,\n",
      "        -1.0488e-02, -2.6298e-02, -9.9579e-03, -1.2966e-02, -2.4832e-03,\n",
      "        -7.0940e-03,  1.7997e-02, -6.4257e-03,  7.9069e-03, -1.2287e-02,\n",
      "         9.8176e-03,  2.6674e-03, -2.1524e-02,  2.7511e-03, -9.2075e-03,\n",
      "        -1.7541e-02, -1.7103e-03, -1.4588e-02,  4.4247e-03,  3.4405e-02,\n",
      "         1.2725e-02,  3.0885e-02,  1.3090e-03, -7.0084e-05, -2.3165e-03,\n",
      "        -3.7989e-03, -1.1148e-02,  1.7210e-02, -6.7575e-03, -1.3694e-04,\n",
      "        -8.9166e-03, -1.6281e-02, -4.4920e-03,  1.1332e-02, -1.5909e-03,\n",
      "        -8.8193e-03, -4.9399e-03,  4.5732e-03, -1.0949e-02,  1.2890e-02,\n",
      "        -6.6586e-03, -2.5605e-03,  2.7965e-03,  1.1225e-02, -2.2055e-02,\n",
      "        -3.9271e-03, -6.6467e-03, -1.8840e-02, -2.1687e-02, -7.4066e-04,\n",
      "        -2.7281e-02,  5.0448e-03, -2.0709e-02, -3.4103e-02, -2.2374e-02,\n",
      "        -1.6656e-02, -2.7916e-02, -9.8977e-03,  5.5252e-03,  1.6013e-02,\n",
      "        -1.4895e-02,  3.5091e-03,  9.0003e-03, -8.3982e-03, -3.7479e-02,\n",
      "         2.0727e-02, -5.8799e-03,  9.1768e-03, -2.0297e-02, -7.3148e-03,\n",
      "        -1.6966e-03, -1.4029e-03,  3.2229e-03,  2.9212e-02,  1.2487e-02,\n",
      "        -2.0100e-02,  2.1170e-02, -2.5300e-02,  3.1815e-02, -1.0645e-03,\n",
      "        -1.0449e-02, -2.3419e-02,  1.4564e-02,  2.1245e-02,  1.6530e-02,\n",
      "        -3.2436e-03, -2.0437e-02, -3.6982e-02, -8.7213e-03,  5.4575e-03,\n",
      "         1.1048e-03,  2.2012e-03,  2.9512e-03, -5.9939e-05,  5.5785e-04,\n",
      "        -3.6906e-03,  5.3763e-03, -2.4765e-02,  9.2729e-03,  9.6081e-03,\n",
      "         9.1647e-03,  9.0880e-03,  7.4842e-03, -1.1946e-02,  2.1395e-02,\n",
      "         2.7922e-02,  1.4692e-02, -2.4958e-03,  2.8887e-02,  1.3422e-02,\n",
      "         1.7173e-03,  2.5018e-03, -2.1253e-02, -8.2424e-04,  4.2183e-03,\n",
      "         8.5981e-03,  1.8735e-02,  8.5622e-03, -8.8255e-03,  1.7462e-02,\n",
      "        -1.3693e-02,  2.1955e-03,  1.0772e-02,  2.8693e-03,  3.1032e-02,\n",
      "         8.5460e-03, -1.4198e-02, -2.2472e-03,  1.8740e-02, -1.2905e-02,\n",
      "         4.0370e-02, -7.7538e-04,  1.8671e-03,  7.2793e-03, -2.6508e-02,\n",
      "        -1.7609e-02, -2.4142e-02,  2.9577e-03, -1.5917e-02,  1.6273e-03,\n",
      "         1.1132e-02,  1.4574e-02, -8.1919e-03, -7.6581e-03, -1.8452e-02,\n",
      "        -9.0419e-03,  4.0883e-03,  4.4482e-02, -2.3664e-02, -5.2547e-03,\n",
      "        -1.9529e-02,  3.2860e-03,  5.4667e-03, -4.9558e-03,  7.6805e-03,\n",
      "        -3.3026e-03, -2.6248e-03, -1.1094e-02,  2.3922e-02,  1.8079e-02,\n",
      "        -1.8135e-02,  5.2204e-03, -1.3559e-02,  1.9448e-02,  1.0981e-02,\n",
      "         2.6869e-02, -6.6801e-03, -8.9389e-04, -3.4924e-03, -1.9667e-02,\n",
      "        -1.8511e-02, -7.6262e-04, -1.6382e-02, -1.5862e-02, -1.3717e-02,\n",
      "         1.7528e-02, -1.1419e-03, -6.3346e-03, -1.1118e-02,  1.3159e-02,\n",
      "        -2.3464e-02,  2.7993e-04, -3.6273e-04,  2.3797e-02, -2.7353e-03,\n",
      "        -2.2223e-02,  1.3415e-02,  1.0443e-02, -2.3512e-02,  1.6832e-02,\n",
      "         4.3699e-03, -1.3243e-02, -2.8605e-03,  5.4212e-03,  1.9924e-03,\n",
      "        -6.8664e-04, -3.9092e-04,  1.7806e-02,  1.8391e-02,  2.8473e-02,\n",
      "        -3.3835e-02, -1.0778e-02, -1.2371e-02, -1.9110e-03, -1.6381e-03,\n",
      "         1.7288e-02, -3.9813e-03, -1.5167e-02, -1.0781e-02,  5.3808e-03,\n",
      "        -3.3947e-04,  3.3885e-04, -1.0162e-02, -4.0266e-03, -3.4751e-03,\n",
      "         4.2359e-03, -1.4677e-03,  1.3207e-02,  7.5580e-03,  1.9397e-04,\n",
      "         3.0048e-03,  8.6283e-03, -1.1193e-02,  3.8466e-02, -2.6220e-02,\n",
      "        -2.0251e-02, -6.3872e-03,  2.1906e-02, -7.3400e-03,  5.2753e-03,\n",
      "        -1.1709e-02,  8.4009e-03,  2.8530e-03, -4.7220e-03,  2.3118e-02,\n",
      "        -7.6039e-03,  2.8136e-03, -1.1701e-02, -4.4118e-03,  1.1846e-02,\n",
      "        -1.7632e-03, -1.2260e-02, -2.1210e-03,  1.2072e-02,  6.7523e-03,\n",
      "        -1.9128e-04, -2.5105e-02,  1.2693e-02,  1.6062e-02,  8.1264e-03,\n",
      "         1.3857e-03,  3.0087e-03, -1.4111e-02,  1.9784e-02, -9.2301e-04,\n",
      "        -1.8428e-02,  7.8059e-03,  1.5319e-02, -1.2768e-02, -9.0166e-03,\n",
      "         1.8031e-02,  2.4853e-02,  1.7788e-02,  8.8640e-03, -9.4422e-03,\n",
      "        -1.3652e-03,  1.2932e-02,  9.0133e-03,  1.6655e-02, -5.4321e-03,\n",
      "         2.7480e-02, -3.1781e-02, -1.3331e-02,  5.5792e-03, -1.3278e-02,\n",
      "        -1.9219e-02, -1.3307e-02,  4.2390e-03,  3.0246e-02, -8.1990e-03,\n",
      "         8.3008e-03,  1.8993e-02,  1.0643e-02,  3.1324e-02,  1.9283e-02,\n",
      "         3.3642e-03,  1.9669e-02,  2.2673e-03, -1.9630e-02,  2.0147e-02,\n",
      "        -1.1433e-02, -7.6073e-03,  1.5071e-02, -3.0395e-03, -9.3430e-03,\n",
      "        -4.1657e-03,  2.2972e-03, -5.0985e-03, -1.4499e-02, -2.7673e-02,\n",
      "        -3.8721e-02,  5.4249e-03,  1.3504e-02, -1.2811e-03,  3.7465e-02,\n",
      "         1.5154e-03,  2.4035e-02, -2.0557e-02,  9.8406e-03,  1.0352e-02,\n",
      "         3.8597e-02, -1.1905e-02, -2.1718e-02,  8.3778e-03,  1.4691e-02,\n",
      "         2.2631e-02, -3.7629e-03,  1.5570e-02, -9.3990e-03,  5.3536e-03,\n",
      "         1.9584e-02, -1.1156e-02,  1.5190e-02,  5.4622e-03,  2.2995e-02,\n",
      "         2.9260e-02, -1.5236e-03,  6.6009e-03, -3.1939e-02, -1.0486e-02,\n",
      "        -4.4617e-03,  3.1853e-02,  1.3736e-02,  1.3561e-02,  7.0907e-03,\n",
      "        -1.6753e-02, -2.5470e-02,  1.9752e-02,  2.6715e-02, -4.6859e-03,\n",
      "         1.7682e-02,  3.2496e-02,  1.4553e-02,  2.6101e-02,  1.1341e-02,\n",
      "        -2.2271e-03,  3.5237e-02, -1.1892e-02, -1.8683e-02, -5.5245e-03,\n",
      "        -7.0732e-03, -5.2670e-03,  7.5946e-03, -1.8465e-02, -1.6897e-02,\n",
      "         1.0127e-02,  1.3006e-02, -1.8251e-03,  6.6651e-04, -1.1207e-02,\n",
      "         1.3563e-02, -1.8153e-02, -2.6487e-02,  6.0652e-03,  3.9711e-02,\n",
      "        -1.4285e-02,  1.8001e-02, -1.4039e-02, -1.8762e-02, -1.1778e-02,\n",
      "        -1.6449e-02,  9.0423e-03, -7.2730e-03,  1.7517e-02, -7.3016e-04,\n",
      "         1.0212e-02,  2.3785e-02,  8.1286e-03,  8.0260e-03,  1.1922e-02,\n",
      "         6.2416e-03, -2.4625e-02,  2.9461e-02, -1.4183e-02, -1.8672e-02,\n",
      "        -1.4057e-02,  7.9872e-03, -2.1081e-02, -2.7560e-02, -3.5690e-03,\n",
      "         1.5993e-03,  9.4720e-03,  1.8272e-02, -2.3742e-03,  1.1843e-03,\n",
      "        -5.7722e-04,  8.7818e-03,  2.7804e-03,  6.7973e-04,  1.5877e-02,\n",
      "        -7.0359e-03,  2.5487e-03, -1.7925e-02,  8.4912e-03,  4.3375e-03,\n",
      "         2.4508e-02,  3.6686e-03,  1.0252e-02, -1.3396e-02,  4.5706e-04,\n",
      "         1.0313e-02,  1.5229e-02,  3.9907e-02, -8.0809e-03,  1.3760e-02,\n",
      "        -6.5863e-03,  6.6066e-03, -3.1480e-02,  2.4665e-02,  3.4374e-03,\n",
      "         2.0973e-02,  1.9384e-02, -2.0880e-02,  7.1465e-03,  1.0406e-02,\n",
      "         2.2273e-05, -1.9182e-02,  6.3135e-03, -1.6891e-04,  8.8664e-03,\n",
      "        -4.7666e-03, -1.4493e-02,  3.2176e-03,  7.3346e-03,  2.0694e-02,\n",
      "        -4.9972e-04,  1.8820e-02,  3.9147e-02, -2.7095e-02, -1.8293e-02,\n",
      "        -1.9868e-02, -9.4048e-03,  4.1552e-03,  5.3837e-03, -4.6663e-03,\n",
      "        -1.3019e-02, -2.4452e-02, -8.9231e-03, -1.4603e-02,  2.5529e-03,\n",
      "        -3.0766e-02,  1.1169e-02, -6.8113e-03, -7.5967e-03, -9.3191e-03,\n",
      "         1.4919e-03, -2.3428e-03,  4.4398e-04, -1.0810e-02,  8.8498e-03,\n",
      "        -2.1022e-02, -8.0380e-03, -1.0818e-02, -6.4815e-03, -2.0681e-03,\n",
      "         2.2326e-02, -1.9234e-02,  4.0844e-03,  7.7233e-04,  1.7226e-03,\n",
      "        -1.7454e-02, -1.3190e-02, -7.4112e-03, -1.7550e-03,  1.2926e-03,\n",
      "        -6.7029e-03, -7.0588e-03,  6.2745e-03, -1.8068e-02, -9.4855e-03,\n",
      "        -2.0856e-02,  8.9604e-03,  2.1294e-02,  1.7025e-02,  2.1015e-02,\n",
      "         8.8233e-03, -9.8277e-03, -2.2293e-02,  2.4295e-02, -1.1174e-02,\n",
      "        -7.5753e-03,  6.1182e-03, -2.0653e-02, -1.6264e-02,  2.6457e-02,\n",
      "        -1.4782e-02,  1.8654e-02,  2.5488e-02,  2.4106e-02,  4.7888e-03,\n",
      "         2.3329e-02,  3.5806e-04,  2.5154e-02,  1.7094e-02,  1.7803e-02,\n",
      "         2.4687e-02,  9.0085e-03,  2.3610e-03,  2.6088e-02, -1.4110e-02,\n",
      "        -5.4212e-04,  8.9498e-04,  2.1150e-02,  4.8484e-03, -3.0503e-02,\n",
      "        -7.5025e-03, -3.3718e-02, -2.8913e-02,  1.5691e-02,  6.2047e-03,\n",
      "        -1.0853e-02,  1.9524e-02, -1.6188e-02,  8.9890e-03,  9.1894e-03,\n",
      "        -2.8592e-03, -1.0911e-02,  1.0848e-02,  4.8784e-02, -1.9687e-03,\n",
      "         2.6843e-02, -4.8715e-03,  1.3489e-02, -1.4523e-02, -2.7585e-02,\n",
      "         6.1228e-03,  4.8171e-03,  2.1566e-03, -3.7561e-02,  3.0775e-02,\n",
      "         1.9977e-02,  1.8480e-02,  3.0368e-03,  9.3825e-03,  4.5243e-04,\n",
      "         6.1650e-02, -8.6416e-03, -2.6913e-02,  6.3527e-03,  7.7985e-03,\n",
      "         1.3180e-02, -1.6666e-03,  2.0865e-02,  9.9480e-03,  8.8136e-03,\n",
      "         1.4841e-02,  3.3211e-03,  3.6342e-03,  2.8740e-02, -2.2120e-02,\n",
      "        -7.1567e-03,  1.0352e-02,  1.6433e-02,  1.1683e-02, -5.8058e-03,\n",
      "        -6.9297e-04,  2.6578e-02,  8.7967e-03, -3.1689e-02,  1.8949e-02,\n",
      "        -8.5859e-03,  3.4228e-02, -1.5237e-02, -5.9709e-03,  1.1069e-03,\n",
      "        -1.8394e-02, -1.9246e-02, -3.6361e-02,  3.9839e-03,  4.1237e-02,\n",
      "         1.3816e-02, -7.3304e-03,  3.8832e-03,  2.4367e-03, -2.1625e-02,\n",
      "        -1.4523e-02, -1.6281e-04,  6.2566e-04, -1.6798e-02,  2.3083e-02,\n",
      "         9.7114e-03, -8.2207e-03,  1.1595e-03, -2.0983e-02, -6.6540e-03,\n",
      "        -1.4097e-02,  3.4067e-03, -7.7575e-03, -1.4738e-02, -2.1343e-02,\n",
      "         5.4123e-03,  3.9747e-03, -4.6185e-03, -1.5462e-02, -7.6229e-03,\n",
      "         1.2211e-02, -4.8453e-03, -8.8757e-03, -1.0275e-02,  7.3482e-03,\n",
      "        -6.0349e-03,  2.3658e-03,  2.1053e-02, -8.5688e-03, -1.1630e-02,\n",
      "        -2.7332e-02, -2.0648e-02,  4.4952e-03, -1.8649e-02, -1.1564e-02,\n",
      "         4.5905e-04, -6.1831e-03, -2.4435e-02, -7.1187e-03, -1.4394e-02,\n",
      "        -2.3544e-03,  2.1556e-02,  2.2924e-02, -1.3725e-02,  7.7785e-03,\n",
      "        -8.5513e-03,  2.4221e-02,  3.8192e-03,  7.0947e-04,  1.6114e-02,\n",
      "         2.5932e-02,  1.8108e-02,  2.9306e-02,  1.6773e-03, -3.0166e-03,\n",
      "         3.2015e-02, -1.4034e-02,  2.7365e-02, -1.8858e-02,  2.5832e-03,\n",
      "         1.3498e-02, -1.3502e-02, -1.4940e-02, -1.0904e-02,  1.8642e-02,\n",
      "         4.2593e-03, -1.6742e-02, -1.2638e-02, -4.5468e-02, -5.0823e-03,\n",
      "        -2.5093e-02,  6.7847e-03, -1.7868e-02, -7.8250e-04, -6.3448e-03],\n",
      "       device='cuda:0'), 'cbam1.channel_attention.fc.0.weight': tensor([[ 0.0048, -0.0910, -0.1010, -0.0513, -0.0679,  0.0367,  0.0409, -0.0262,\n",
      "          0.0117,  0.1070, -0.0032, -0.0417, -0.1062,  0.0619,  0.0042, -0.0805,\n",
      "         -0.0008, -0.1081, -0.0917, -0.0293, -0.0267,  0.0486, -0.0325, -0.0129,\n",
      "         -0.0804,  0.0762,  0.0076, -0.0174,  0.0567, -0.0667, -0.0307, -0.1064,\n",
      "         -0.0916, -0.0676,  0.0636, -0.0308, -0.0529, -0.0086,  0.0178, -0.0508,\n",
      "          0.0998, -0.0340,  0.0594, -0.0363,  0.0349,  0.0309, -0.0490, -0.0923,\n",
      "          0.0199,  0.0782,  0.0828, -0.0901,  0.0838, -0.0879, -0.0842,  0.0893,\n",
      "          0.0516,  0.0100, -0.0276,  0.0451, -0.1036, -0.0044,  0.0731,  0.1056],\n",
      "        [-0.0973,  0.1221, -0.0754, -0.0133, -0.0640,  0.0260,  0.0575, -0.2485,\n",
      "          0.1546, -0.0642, -0.0735, -0.1999, -0.0399, -0.0631, -0.0727, -0.0017,\n",
      "          0.5484,  0.1357,  0.0621,  0.3463,  0.0824,  0.0084, -0.0252, -0.0837,\n",
      "         -0.0962,  0.1828, -0.2885, -0.1568,  0.1492, -0.2536, -0.0230, -0.5261,\n",
      "         -0.1241, -0.1014, -0.0509,  0.0783, -0.4478,  0.1184,  0.1514, -0.1074,\n",
      "         -0.4159,  0.1757,  0.0421,  0.0866, -0.0036,  0.2109,  0.0768, -0.0453,\n",
      "         -0.4139, -0.1428,  0.1155,  0.1178, -0.0830,  0.1147, -0.2016,  0.4162,\n",
      "          0.0146,  0.3646,  0.2917,  0.2099,  0.1142,  0.1680,  0.1098, -0.2567],\n",
      "        [ 0.1798, -0.3428, -0.0611, -0.5520,  0.1246, -0.4678, -0.1848, -0.1459,\n",
      "          0.4788, -0.4102, -0.0223,  0.3192, -0.1283, -0.2988, -0.4598, -0.2255,\n",
      "          0.2804,  0.1417, -0.2251, -0.4672, -0.5466, -0.1229, -0.3910, -0.3996,\n",
      "          0.0651, -0.0047, -0.3767, -0.0673,  0.0947, -0.6173,  0.0130, -0.4354,\n",
      "         -0.2825, -0.1807,  0.0798, -0.2345,  0.1019,  0.1139,  0.2038,  0.1671,\n",
      "         -0.1285,  0.1623,  0.1272,  0.0072, -0.0198,  0.0646,  0.3752,  0.0156,\n",
      "         -0.4985, -0.3067,  0.1563,  0.1114,  0.0587,  0.0963, -0.2755,  0.3175,\n",
      "         -0.2229, -0.4773, -0.2511, -0.0898,  0.0919,  0.0256, -0.2032,  0.0183],\n",
      "        [-0.0813, -0.0496,  0.0344,  0.0092,  0.0613, -0.0873, -0.0530,  0.0013,\n",
      "          0.0789,  0.0769,  0.0069, -0.1280, -0.0279,  0.0152,  0.0498,  0.0358,\n",
      "         -0.0417,  0.0533,  0.0848, -0.0144, -0.0521, -0.0501,  0.0619, -0.0248,\n",
      "          0.0634, -0.0523, -0.0712,  0.0858,  0.0651, -0.0957, -0.1131, -0.0076,\n",
      "         -0.0605, -0.0214,  0.0696, -0.0193, -0.1301,  0.0134, -0.0518, -0.1036,\n",
      "         -0.1024,  0.0878, -0.0900,  0.0310,  0.0237,  0.0356, -0.0334,  0.0586,\n",
      "          0.0222,  0.0394, -0.0395, -0.0235,  0.0283,  0.0761, -0.0598,  0.0821,\n",
      "          0.0610, -0.0234, -0.1086,  0.0858, -0.0014, -0.1199, -0.0829,  0.0775]],\n",
      "       device='cuda:0'), 'cbam1.channel_attention.fc.2.weight': tensor([[-2.8371e-01, -1.7002e-01, -5.7004e-01,  9.7514e-02],\n",
      "        [ 3.5394e-01,  1.0166e-01,  1.8158e-01, -2.5559e-01],\n",
      "        [-6.7141e-02,  3.6605e-01, -1.2413e-01,  8.1718e-02],\n",
      "        [-2.4381e-02,  5.2550e-02,  1.6404e-01, -1.0679e-01],\n",
      "        [-4.0923e-02, -5.7204e-02, -3.3721e-01, -1.5485e-01],\n",
      "        [ 3.6794e-01,  2.1008e-01, -4.9566e-02,  2.7857e-01],\n",
      "        [-4.7988e-02, -2.4056e-01,  2.0918e-01, -2.5677e-01],\n",
      "        [-3.5488e-01,  4.2347e-01,  4.2079e-01, -4.2594e-01],\n",
      "        [ 1.5576e-01,  3.1035e-01, -3.9592e-01,  2.7321e-01],\n",
      "        [-4.0961e-01, -3.4542e-01,  1.5748e-01,  3.9169e-01],\n",
      "        [ 3.6124e-01,  2.8696e-01, -2.8553e-01,  2.3964e-01],\n",
      "        [ 3.9786e-01, -3.7533e-01,  1.5049e-01,  1.3389e-02],\n",
      "        [ 4.2117e-01, -2.1437e-01,  4.3568e-01,  1.0661e-01],\n",
      "        [-1.7110e-02, -1.4777e-01,  1.6378e-01, -1.5950e-01],\n",
      "        [-4.1736e-01,  5.9915e-02,  4.3077e-01,  3.2929e-01],\n",
      "        [ 3.8108e-01,  3.0832e-01,  4.8590e-01,  5.1738e-02],\n",
      "        [ 2.2905e-01, -7.6132e-01, -1.2770e-01, -3.0824e-01],\n",
      "        [-3.7438e-01, -4.9300e-01,  4.8344e-01, -5.8022e-02],\n",
      "        [-4.3028e-01, -1.1967e-01, -3.1058e-01, -1.3726e-01],\n",
      "        [ 3.3086e-01, -1.9580e-01,  4.9966e-01,  2.2152e-01],\n",
      "        [ 3.9178e-01, -3.2536e-01,  5.0811e-01, -3.5742e-01],\n",
      "        [-1.1657e-01, -5.6722e-02,  3.2051e-01, -6.5077e-02],\n",
      "        [-2.1871e-01, -3.0578e-02,  4.6961e-01,  4.1970e-01],\n",
      "        [ 2.6574e-01,  3.3938e-01,  4.7404e-01,  3.0966e-01],\n",
      "        [ 1.7198e-01,  2.6370e-01,  6.8109e-02, -1.6781e-01],\n",
      "        [ 2.9841e-01, -3.3392e-02, -2.2935e-01,  2.3722e-01],\n",
      "        [ 1.8716e-01,  2.1282e-01,  2.5200e-01, -3.5266e-01],\n",
      "        [-1.0920e-01, -1.7449e-01, -3.9544e-01, -1.3783e-01],\n",
      "        [-2.7329e-01, -4.3234e-01,  3.0902e-01, -1.8674e-01],\n",
      "        [-5.9805e-02,  2.0923e-01,  3.9260e-02, -3.9185e-01],\n",
      "        [ 1.6444e-01,  3.5738e-01,  1.8019e-01,  6.2661e-02],\n",
      "        [-5.1273e-02,  4.2622e-01,  3.3458e-01, -9.7462e-02],\n",
      "        [ 1.0855e-01, -1.5610e-01,  3.2339e-02,  6.5557e-02],\n",
      "        [-3.8569e-01, -3.3019e-02,  4.5339e-01, -4.2631e-01],\n",
      "        [ 1.9544e-01, -9.5874e-02,  4.3668e-01, -1.7974e-01],\n",
      "        [ 1.1384e-01,  2.0169e-01,  3.7858e-01,  2.7171e-01],\n",
      "        [ 2.8762e-02, -9.2866e-02, -3.8796e-01,  3.1658e-01],\n",
      "        [-2.8826e-01,  1.0297e-01,  4.4222e-01, -1.0016e-01],\n",
      "        [ 2.2667e-01, -1.2261e-01, -1.7638e-02,  2.5506e-01],\n",
      "        [-2.4797e-01,  1.5935e-01,  4.8020e-01,  1.6246e-01],\n",
      "        [-2.5101e-01, -4.1207e-01,  3.2778e-01, -4.2428e-01],\n",
      "        [ 2.1693e-01,  4.1610e-01, -6.0511e-01, -2.4131e-03],\n",
      "        [ 6.8183e-02,  5.3052e-01,  6.2366e-02, -3.9992e-01],\n",
      "        [ 6.1322e-02,  4.1026e-01, -4.1841e-01,  3.0206e-01],\n",
      "        [ 1.7745e-01, -2.3472e-01,  2.8833e-01,  3.3959e-01],\n",
      "        [ 6.3336e-02,  2.3876e-01,  3.5198e-01, -3.1523e-01],\n",
      "        [-2.8954e-02,  4.7279e-01, -7.4707e-01,  1.2858e-01],\n",
      "        [ 1.6882e-01,  2.2115e-01,  2.5366e-02,  8.8612e-02],\n",
      "        [ 8.3903e-03, -4.2117e-01,  6.7451e-01,  4.0980e-01],\n",
      "        [-2.7252e-01,  9.1375e-02,  3.3576e-01, -3.2808e-01],\n",
      "        [-3.8605e-01, -1.0217e-01,  4.3883e-01, -1.1476e-01],\n",
      "        [-2.4937e-01, -5.5577e-01, -2.9467e-01, -2.2322e-01],\n",
      "        [ 1.5868e-01,  1.4644e-01,  4.1957e-01,  1.6357e-01],\n",
      "        [-1.5107e-01,  2.9025e-01,  1.6487e-01,  1.9153e-01],\n",
      "        [-2.6462e-01,  3.5522e-01,  1.0526e-01, -1.9593e-01],\n",
      "        [-2.8602e-02, -6.4494e-01,  1.8352e-01, -4.2690e-01],\n",
      "        [-1.7247e-01, -2.7094e-01,  1.7936e-01,  2.5153e-01],\n",
      "        [ 7.9476e-02, -8.6897e-02,  5.1295e-01,  9.3532e-03],\n",
      "        [-2.7338e-01, -3.0419e-01,  3.6639e-01, -2.0831e-01],\n",
      "        [ 4.5889e-04, -1.1516e-01,  5.4279e-01, -3.9182e-02],\n",
      "        [-6.4999e-02,  1.4298e-02, -3.4923e-01,  2.1139e-02],\n",
      "        [ 1.3010e-02,  2.8074e-01,  7.4888e-02,  1.6030e-02],\n",
      "        [-1.3026e-01,  8.5108e-02, -8.5092e-02,  1.5729e-01],\n",
      "        [-2.6303e-01, -4.6116e-02,  4.2235e-01, -3.7008e-01]], device='cuda:0'), 'cbam1.spatial_attention.conv.weight': tensor([[[[ 0.0417,  0.0461,  0.0388,  0.1002,  0.0152,  0.0207,  0.0305],\n",
      "          [-0.0936,  0.0122,  0.0715,  0.0101,  0.0459,  0.0270,  0.0752],\n",
      "          [ 0.0453,  0.0356,  0.0145,  0.1110,  0.0457,  0.1271,  0.0072],\n",
      "          [ 0.0754,  0.0898,  0.1516,  0.1894,  0.1846,  0.2160,  0.0893],\n",
      "          [ 0.0337,  0.0224,  0.1742,  0.2029,  0.0867,  0.0787,  0.0277],\n",
      "          [ 0.0252,  0.0845,  0.0614,  0.0747,  0.1643,  0.0159,  0.0672],\n",
      "          [-0.0329,  0.0558,  0.0317, -0.0099,  0.0765,  0.0130,  0.0151]],\n",
      "\n",
      "         [[-0.0084,  0.0991, -0.0672, -0.1523,  0.0265,  0.1321, -0.0607],\n",
      "          [ 0.0004,  0.1172,  0.0657,  0.0188,  0.1249,  0.0904,  0.0443],\n",
      "          [ 0.0181,  0.0725, -0.1164, -0.2578, -0.0200, -0.0163, -0.0137],\n",
      "          [-0.0144, -0.1495, -0.2652, -0.4008, -0.2430, -0.0478, -0.0466],\n",
      "          [ 0.0976,  0.0851, -0.0071, -0.0297,  0.2586,  0.1338,  0.0687],\n",
      "          [ 0.0162,  0.0857,  0.0086, -0.1066,  0.1076,  0.1287,  0.0357],\n",
      "          [-0.0683,  0.1104,  0.0303, -0.0980, -0.0260,  0.0553,  0.0100]]]],\n",
      "       device='cuda:0'), 'cbam2.channel_attention.fc.0.weight': tensor([[-0.0816, -0.0012, -0.1089,  ..., -0.0474,  0.1009,  0.0026],\n",
      "        [ 0.0328, -0.0322, -0.0643,  ..., -0.0732,  0.0023, -0.0236],\n",
      "        [-0.0064,  0.0502,  0.0269,  ..., -0.0731, -0.0597, -0.0267],\n",
      "        ...,\n",
      "        [ 0.0396, -0.0671,  0.0631,  ..., -0.0529,  0.0545,  0.0696],\n",
      "        [ 0.0533,  0.0143,  0.0240,  ...,  0.0216,  0.0113,  0.0507],\n",
      "        [-0.0439, -0.0145, -0.0054,  ..., -0.0498,  0.0545,  0.0695]],\n",
      "       device='cuda:0'), 'cbam2.channel_attention.fc.2.weight': tensor([[ 0.2497,  0.0477,  0.1237,  ..., -0.0639, -0.2112,  0.0743],\n",
      "        [-0.1352, -0.2737, -0.0500,  ...,  0.2917,  0.1903,  0.1118],\n",
      "        [-0.0715, -0.2467,  0.0594,  ...,  0.2371,  0.2491,  0.0252],\n",
      "        ...,\n",
      "        [ 0.0371, -0.1443,  0.2681,  ..., -0.1283,  0.0168,  0.0394],\n",
      "        [ 0.2636,  0.1734, -0.1485,  ..., -0.0341,  0.0169, -0.2385],\n",
      "        [-0.2302,  0.0382, -0.2580,  ...,  0.0228, -0.1392, -0.1450]],\n",
      "       device='cuda:0'), 'cbam2.spatial_attention.conv.weight': tensor([[[[-0.0519, -0.0621, -0.0307,  0.1363,  0.0676, -0.0188,  0.0201],\n",
      "          [-0.0282, -0.0148,  0.0803,  0.1541,  0.0352, -0.0708,  0.0445],\n",
      "          [ 0.0589,  0.0501,  0.0599,  0.0995,  0.0286, -0.0113,  0.0039],\n",
      "          [-0.0134,  0.0112,  0.1604,  0.0659,  0.1216,  0.0083,  0.0307],\n",
      "          [-0.0407,  0.0206,  0.0717,  0.2196,  0.1591,  0.0829,  0.0318],\n",
      "          [-0.0699, -0.0552, -0.0307,  0.0176, -0.0148,  0.0037, -0.0519],\n",
      "          [ 0.0061, -0.0299,  0.1255, -0.0082,  0.0674,  0.0248,  0.0722]],\n",
      "\n",
      "         [[-0.0359,  0.0091,  0.0251,  0.0362,  0.1114, -0.0424, -0.0122],\n",
      "          [ 0.0942,  0.0494,  0.0495, -0.0067, -0.0600,  0.0288,  0.0264],\n",
      "          [ 0.0346,  0.0229, -0.0745, -0.1272, -0.0267, -0.0102,  0.0748],\n",
      "          [ 0.0651, -0.0742, -0.1182, -0.1913, -0.0591, -0.0440,  0.1017],\n",
      "          [ 0.0674,  0.0052, -0.0809,  0.0119, -0.0125, -0.0019,  0.0502],\n",
      "          [-0.0056,  0.0179, -0.0323, -0.0276, -0.0058, -0.0053, -0.0132],\n",
      "          [ 0.0206, -0.0161,  0.0508,  0.0740,  0.0355,  0.0127,  0.0446]]]],\n",
      "       device='cuda:0'), 'cbam3.channel_attention.fc.0.weight': tensor([[ 0.0128,  0.0280,  0.0346,  ...,  0.0321, -0.0517,  0.0214],\n",
      "        [ 0.0175, -0.0192, -0.0289,  ..., -0.0525, -0.0514,  0.0230],\n",
      "        [ 0.0282,  0.0337, -0.0132,  ..., -0.0154,  0.0162, -0.0545],\n",
      "        ...,\n",
      "        [-0.0081,  0.0275,  0.0118,  ...,  0.0342,  0.0052, -0.0025],\n",
      "        [ 0.0408, -0.0190,  0.0336,  ..., -0.0058, -0.0425, -0.0442],\n",
      "        [-0.0483,  0.0318, -0.0242,  ..., -0.0296, -0.0445, -0.0435]],\n",
      "       device='cuda:0'), 'cbam3.channel_attention.fc.2.weight': tensor([[-0.1613,  0.0710,  0.1516,  ...,  0.0266, -0.1408,  0.0918],\n",
      "        [ 0.1148,  0.1637,  0.0190,  ...,  0.0701,  0.0925, -0.2165],\n",
      "        [-0.2133,  0.0717, -0.1365,  ...,  0.0998,  0.0681, -0.1143],\n",
      "        ...,\n",
      "        [-0.1811, -0.2180, -0.1089,  ..., -0.1088,  0.0246, -0.0158],\n",
      "        [-0.1525,  0.1833, -0.1001,  ..., -0.0229,  0.1410, -0.0627],\n",
      "        [ 0.1585,  0.0783, -0.1014,  ...,  0.0995,  0.1032, -0.1680]],\n",
      "       device='cuda:0'), 'cbam3.spatial_attention.conv.weight': tensor([[[[-0.0452, -0.0366,  0.0804,  0.0217,  0.1291, -0.0166,  0.1168],\n",
      "          [-0.0385,  0.0170,  0.1334,  0.0496,  0.0627, -0.0135,  0.0880],\n",
      "          [-0.0361, -0.0262,  0.1085,  0.1071,  0.0430,  0.0420, -0.0528],\n",
      "          [ 0.0370,  0.0518,  0.0126,  0.0539,  0.0586,  0.0104,  0.0751],\n",
      "          [-0.0815, -0.0428,  0.1066,  0.0245,  0.0367, -0.0218,  0.0736],\n",
      "          [-0.0366,  0.1001,  0.1066,  0.1499,  0.0319,  0.1262, -0.0118],\n",
      "          [ 0.0797, -0.0005,  0.0988,  0.1284, -0.0043, -0.0093,  0.1070]],\n",
      "\n",
      "         [[ 0.0306, -0.0022,  0.0643,  0.0718,  0.0340,  0.0073,  0.0376],\n",
      "          [-0.0209,  0.0231,  0.0241,  0.0208, -0.0031, -0.0267,  0.0264],\n",
      "          [ 0.0228,  0.0028,  0.0331, -0.0592, -0.0079,  0.0068, -0.0189],\n",
      "          [-0.0023, -0.0155, -0.1250, -0.1359, -0.0852, -0.0158, -0.0027],\n",
      "          [-0.0389, -0.0120,  0.0389,  0.0098,  0.0164,  0.0403,  0.0458],\n",
      "          [ 0.0247,  0.0087,  0.0291,  0.0824,  0.0707, -0.0532,  0.0639],\n",
      "          [-0.0165,  0.0368, -0.0194,  0.0643,  0.0071,  0.0257,  0.0746]]]],\n",
      "       device='cuda:0'), 'cbam4.channel_attention.fc.0.weight': tensor([[-0.0027,  0.0191, -0.0934,  ..., -0.0287,  0.0800, -0.1120],\n",
      "        [ 0.0353, -0.0634,  0.0276,  ..., -0.0296, -0.0496, -0.0610],\n",
      "        [-0.0756,  0.1375, -0.1083,  ..., -0.0082, -0.1564,  0.0334],\n",
      "        ...,\n",
      "        [-0.0322,  0.0259, -0.0207,  ...,  0.0236,  0.0157,  0.0117],\n",
      "        [ 0.0824,  0.0093,  0.0047,  ..., -0.0367,  0.0990, -0.0490],\n",
      "        [ 0.0762, -0.0302,  0.0165,  ...,  0.0561,  0.1207, -0.0969]],\n",
      "       device='cuda:0'), 'cbam4.channel_attention.fc.2.weight': tensor([[ 0.0256, -0.0913,  0.0501,  ...,  0.1378, -0.0459,  0.0332],\n",
      "        [-0.1327,  0.0254, -0.0107,  ...,  0.1297,  0.0425,  0.0746],\n",
      "        [-0.0093,  0.0041,  0.0026,  ..., -0.0923, -0.0288,  0.0779],\n",
      "        ...,\n",
      "        [-0.0803, -0.1691, -0.1225,  ..., -0.0511, -0.1169, -0.0389],\n",
      "        [ 0.0178,  0.0202, -0.0373,  ..., -0.0324, -0.0794, -0.0483],\n",
      "        [ 0.0532, -0.0941, -0.1159,  ..., -0.0028,  0.1123, -0.1007]],\n",
      "       device='cuda:0'), 'cbam4.spatial_attention.conv.weight': tensor([[[[-0.1371, -0.1254, -0.0140, -0.0555,  0.0140,  0.0862,  0.0943],\n",
      "          [-0.1109, -0.0347, -0.0017, -0.1381, -0.0079,  0.1072,  0.0975],\n",
      "          [-0.0797, -0.1392, -0.1806, -0.2084, -0.0694, -0.1507, -0.0198],\n",
      "          [-0.1497, -0.0591, -0.2294, -0.3093, -0.1831, -0.1544, -0.2024],\n",
      "          [-0.0083,  0.0351, -0.0678, -0.1972, -0.0794, -0.0372, -0.0250],\n",
      "          [ 0.0658, -0.0838, -0.0348, -0.1007,  0.0238, -0.0029, -0.0331],\n",
      "          [-0.1093, -0.1180, -0.0595, -0.0927, -0.0705, -0.0555, -0.0844]],\n",
      "\n",
      "         [[-0.2287, -0.1170, -0.1155, -0.1617,  0.2390,  0.7307,  0.6782],\n",
      "          [-0.0717,  0.0831,  0.2090,  0.1419,  0.4716,  0.9706,  0.9588],\n",
      "          [-0.1336, -0.0449, -0.0143, -0.0693,  0.0354,  0.3317,  0.1973],\n",
      "          [-0.3084, -0.2601, -0.0560, -0.3330, -0.3343, -0.1930, -0.2510],\n",
      "          [-0.0423,  0.1517,  0.1603,  0.0138,  0.1273,  0.2536,  0.0471],\n",
      "          [ 0.0418,  0.1918,  0.1964, -0.0141,  0.0668,  0.2383,  0.0461],\n",
      "          [-0.1749,  0.0098, -0.1420, -0.2087, -0.1233,  0.0044, -0.3139]]]],\n",
      "       device='cuda:0'), 'lbp_extractor.fc_lbp.weight': tensor([[-0.0497, -0.0502,  0.0214,  ...,  0.0217, -0.0406,  0.0153],\n",
      "        [ 0.0432, -0.0255, -0.0536,  ...,  0.0166,  0.0426,  0.0249],\n",
      "        [ 0.0045, -0.0437, -0.0031,  ...,  0.0121, -0.0232,  0.0568],\n",
      "        ...,\n",
      "        [-0.0300, -0.0020, -0.0525,  ...,  0.0007, -0.0080,  0.0572],\n",
      "        [-0.0273,  0.0092,  0.0009,  ...,  0.0226,  0.0513, -0.0153],\n",
      "        [ 0.0192,  0.0230,  0.0462,  ..., -0.0165, -0.0111, -0.0158]],\n",
      "       device='cuda:0'), 'lbp_extractor.fc_lbp.bias': tensor([-4.5471e-02,  5.6937e-02, -3.8257e-02,  1.0200e-02, -2.9049e-02,\n",
      "         5.1562e-02, -3.0790e-02,  3.3181e-02,  2.5247e-02,  4.0728e-02,\n",
      "         4.7079e-02, -2.2459e-02, -4.9638e-02, -6.4406e-03,  4.1916e-02,\n",
      "         3.6779e-02,  3.0258e-02, -2.3611e-03, -1.2550e-02,  2.7631e-02,\n",
      "         2.5651e-02, -2.9965e-02, -4.3169e-02,  6.0756e-03, -1.5986e-02,\n",
      "         3.8429e-02, -3.8533e-02,  7.4288e-03, -1.8721e-02, -2.7273e-02,\n",
      "        -3.3893e-02, -9.1738e-03,  3.9889e-02, -4.9131e-02,  6.8419e-03,\n",
      "        -3.6763e-02, -4.2250e-03, -2.0862e-02,  3.0632e-02, -3.9391e-02,\n",
      "        -1.8018e-02,  2.2639e-02,  3.3414e-02, -1.8657e-03, -1.5773e-02,\n",
      "        -3.9920e-02,  4.2941e-02,  2.0649e-02, -4.3812e-02,  4.6263e-02,\n",
      "         1.8708e-02,  2.5658e-02,  2.6896e-02, -7.1583e-03,  2.7731e-02,\n",
      "         4.0481e-02, -5.2935e-03,  3.5809e-04, -3.6750e-02, -1.6829e-02,\n",
      "         4.0726e-02,  4.4703e-02,  3.3402e-02,  2.9384e-02, -4.6163e-02,\n",
      "        -2.1535e-02,  1.4837e-02,  1.8869e-02, -1.7607e-02,  5.0899e-02,\n",
      "         1.8873e-03, -5.1959e-03,  1.9738e-02,  1.5546e-02,  4.1220e-03,\n",
      "        -5.6760e-02, -1.2949e-02,  4.4996e-02,  1.1553e-02, -2.2794e-03,\n",
      "        -2.4880e-02, -1.6688e-02, -3.4791e-02,  2.8086e-03, -2.6931e-02,\n",
      "        -4.1656e-02,  4.8859e-02, -2.0081e-02,  3.9399e-02,  1.6086e-02,\n",
      "         3.5591e-02,  1.3931e-02, -6.1127e-03, -3.3209e-03, -2.9919e-02,\n",
      "         3.3072e-02,  2.2901e-02,  2.6993e-02, -3.6191e-02, -4.1232e-02,\n",
      "         4.8553e-02,  4.4617e-02,  3.5324e-02, -2.8028e-02, -4.8873e-02,\n",
      "         3.3187e-03,  2.3396e-02,  5.5929e-03, -2.7169e-03, -1.8102e-02,\n",
      "         3.7294e-02, -3.4059e-02, -3.2348e-02,  3.1697e-02,  2.1480e-02,\n",
      "        -1.9388e-02,  4.0900e-02, -1.3731e-02, -4.7381e-02,  5.3949e-02,\n",
      "         4.3427e-02,  1.4899e-02, -3.7238e-02,  4.3148e-03,  4.0887e-02,\n",
      "        -2.0616e-02, -2.0329e-02, -4.1395e-02,  1.9772e-02,  4.8501e-02,\n",
      "        -3.2977e-02, -2.8743e-02, -3.1586e-02, -2.8265e-02,  4.7661e-02,\n",
      "         4.4891e-02, -3.2559e-02, -8.4669e-04,  2.5271e-02, -3.9520e-02,\n",
      "         9.0895e-03, -2.9827e-02,  9.0754e-03, -2.5301e-02, -1.4610e-03,\n",
      "         3.5254e-02,  1.1795e-02,  7.7714e-03,  2.5646e-02,  5.7855e-02,\n",
      "         5.0203e-02,  2.9323e-02, -1.9608e-03,  1.6865e-03,  3.4357e-02,\n",
      "        -5.5259e-02, -3.4184e-02, -1.8346e-02, -8.1228e-03,  4.7930e-02,\n",
      "        -3.0387e-02,  9.9155e-03, -1.3821e-02, -1.1188e-02,  3.3504e-02,\n",
      "        -4.8408e-02, -1.3341e-02,  3.5163e-02, -1.3899e-02, -4.1513e-02,\n",
      "         4.8857e-02,  2.5060e-02, -3.8383e-02, -1.6170e-02, -3.6080e-02,\n",
      "        -4.9678e-02, -1.8322e-02, -1.2013e-02,  2.7105e-02, -1.9570e-03,\n",
      "         1.3250e-02, -3.5533e-02,  2.3664e-02, -4.2536e-04, -1.9483e-03,\n",
      "         1.6821e-02,  5.1447e-02, -2.9832e-02, -2.6552e-02,  2.7564e-02,\n",
      "         2.9225e-02,  2.6507e-02,  4.7815e-02, -4.4468e-03,  1.5079e-02,\n",
      "         3.9140e-02,  3.3407e-02, -2.8245e-02,  1.2444e-02, -4.0938e-02,\n",
      "         1.6773e-02, -4.8444e-03, -5.6332e-02, -3.4255e-02,  4.2870e-02,\n",
      "         3.1439e-02, -2.7096e-02,  2.3817e-02, -2.5892e-02, -2.8305e-02,\n",
      "         2.4495e-02, -1.3715e-02,  2.7183e-02,  1.2351e-02, -1.5168e-02,\n",
      "        -5.0191e-02,  4.8752e-02,  2.5111e-02, -1.1435e-02,  2.5941e-02,\n",
      "        -4.9526e-02, -4.5667e-03, -4.9184e-02, -4.3987e-02,  4.1140e-02,\n",
      "        -4.1630e-02, -1.9785e-02,  1.3452e-02, -3.1830e-02,  2.5591e-02,\n",
      "        -4.0487e-02,  2.8779e-02, -6.1278e-03,  5.5695e-05,  6.6843e-03,\n",
      "         1.8187e-02, -1.4977e-02, -5.0148e-03, -3.3933e-02, -4.5946e-03,\n",
      "        -4.6905e-03, -2.3607e-02, -1.5401e-02, -4.2150e-02,  8.7843e-03,\n",
      "        -2.3900e-02, -1.6944e-02,  5.0976e-02, -3.4577e-02,  3.9067e-02,\n",
      "        -3.2280e-02, -3.5366e-02, -4.5783e-02, -3.7050e-02, -2.5453e-02,\n",
      "         2.3982e-03], device='cuda:0'), 'fc1.weight': tensor([[-0.0247,  0.0117,  0.0251,  ...,  0.0179, -0.0267,  0.0084],\n",
      "        [ 0.0021, -0.0054,  0.0254,  ..., -0.0159,  0.0391, -0.0567],\n",
      "        [-0.0199,  0.0228, -0.0097,  ...,  0.0300, -0.0302, -0.0156],\n",
      "        ...,\n",
      "        [-0.0192,  0.0173, -0.0248,  ..., -0.0165, -0.0487, -0.0154],\n",
      "        [-0.0631, -0.0158,  0.0228,  ..., -0.0217, -0.0066, -0.0151],\n",
      "        [-0.0463, -0.0308,  0.0449,  ..., -0.0020, -0.0477, -0.0215]],\n",
      "       device='cuda:0'), 'fc1.bias': tensor([ 1.5544e-03, -1.0266e-05, -2.1375e-02,  1.3885e-02, -9.9772e-03,\n",
      "        -4.0501e-03, -9.5654e-03, -4.1529e-03, -1.4856e-02, -6.8844e-03,\n",
      "         4.6476e-02, -1.0984e-02, -8.7356e-04, -1.7440e-02, -2.6526e-02,\n",
      "         2.1096e-02, -7.1885e-03,  1.9716e-02, -2.9356e-02,  1.7633e-02,\n",
      "        -2.3494e-02, -1.0285e-02, -3.7625e-02, -1.2644e-04,  6.6365e-03,\n",
      "         2.3444e-02,  4.3111e-02, -3.1385e-02, -1.2083e-02, -3.3408e-03,\n",
      "         9.3371e-03, -8.0075e-04,  3.3956e-02,  2.9794e-02, -2.0065e-02,\n",
      "        -2.5851e-02,  3.6213e-02, -3.0325e-02,  7.7705e-03, -4.1750e-02,\n",
      "         1.8611e-02, -1.9539e-02, -3.4441e-02, -2.8679e-02,  2.6439e-02,\n",
      "         1.0987e-02, -2.9863e-02, -3.5117e-02, -2.0448e-02, -3.8679e-02,\n",
      "         4.3473e-02, -2.2368e-02, -1.3087e-02, -3.3257e-02,  2.0861e-02,\n",
      "        -2.0334e-02,  2.4675e-02,  2.0132e-02, -4.5110e-02, -2.3009e-02,\n",
      "        -2.9991e-02, -2.1929e-02, -1.7407e-03,  2.6981e-02,  3.0074e-03,\n",
      "         8.5396e-03, -4.9030e-02, -3.6358e-02,  4.2222e-02,  3.3009e-02,\n",
      "        -3.3568e-02, -1.2387e-02, -3.2124e-02, -2.6581e-02,  5.2188e-02,\n",
      "         1.0834e-03, -2.6028e-02, -1.9063e-02, -3.2632e-02,  1.3902e-02,\n",
      "        -3.9911e-02,  2.5577e-02,  8.2391e-03,  9.7420e-03, -4.1597e-02,\n",
      "        -3.5977e-02,  7.5884e-03,  2.5110e-02, -3.0393e-02, -5.1587e-02,\n",
      "         2.3881e-02, -2.3816e-02,  1.2572e-02,  2.4605e-02, -3.6050e-02,\n",
      "        -1.7659e-02,  2.2263e-03,  3.2346e-02,  3.1805e-02, -2.3961e-02,\n",
      "         6.0860e-03, -1.5125e-02,  6.6994e-03, -1.8765e-02,  1.2964e-03,\n",
      "        -2.7066e-03,  2.7789e-02,  1.0057e-02,  2.8951e-02, -1.4299e-02,\n",
      "        -1.2855e-02, -9.4521e-03, -1.1053e-02,  4.1400e-03,  5.1846e-02,\n",
      "        -2.4970e-02,  3.3478e-02, -1.4174e-03, -3.0395e-02,  2.6608e-02,\n",
      "         3.0065e-02, -3.4830e-03,  1.7277e-02,  1.3857e-02, -1.9069e-02,\n",
      "        -1.9873e-02, -1.1186e-02,  2.1853e-02,  2.1437e-02, -5.7758e-04,\n",
      "        -3.6567e-03,  1.8472e-02,  1.4343e-02,  2.1880e-02,  2.2714e-02,\n",
      "        -1.2180e-02, -3.6874e-02, -3.4924e-02,  8.5148e-03,  2.8135e-03,\n",
      "         2.1134e-02,  5.2879e-03, -2.9860e-02, -1.4059e-02,  2.9169e-04,\n",
      "         1.1610e-02, -1.4894e-02,  4.4901e-02,  4.5091e-02, -2.3465e-02,\n",
      "         4.9351e-04,  1.8237e-02,  1.2400e-02, -9.6933e-04,  1.6437e-02,\n",
      "        -4.3247e-03,  1.8023e-02, -3.8293e-02, -3.3358e-03,  3.9185e-02,\n",
      "        -1.2836e-02,  7.1764e-03,  1.7819e-02,  7.8975e-03, -1.3968e-02,\n",
      "        -3.3177e-02, -1.5044e-02, -3.7420e-02,  1.0141e-02, -2.7064e-02,\n",
      "        -2.0553e-02,  1.3783e-02, -2.1464e-02,  2.5067e-02,  1.8315e-02,\n",
      "        -2.9878e-02, -2.2448e-02, -1.4275e-02,  2.4906e-02,  1.6264e-02,\n",
      "         1.2456e-02, -2.4732e-02,  2.3247e-04,  1.7918e-02, -1.1588e-03,\n",
      "        -1.0642e-02,  1.0927e-02,  3.9970e-02,  5.3323e-03, -1.6570e-02,\n",
      "        -1.5286e-02,  1.7126e-02, -4.2614e-03,  1.5692e-02,  2.4744e-02,\n",
      "        -4.4621e-03, -2.1101e-02,  2.4579e-02, -2.6055e-02, -3.2824e-02,\n",
      "         2.7367e-02, -2.5142e-02, -3.9375e-02,  1.2636e-02, -2.2261e-02,\n",
      "         2.5027e-02, -3.1225e-02,  4.6239e-02, -5.6797e-03, -1.7365e-02,\n",
      "        -2.8746e-02, -4.3728e-02, -8.5272e-03,  1.8781e-02,  1.1817e-02,\n",
      "         3.8090e-02, -5.9991e-03, -3.7201e-02,  2.6463e-02,  8.1348e-03,\n",
      "        -2.4677e-02,  1.7597e-03, -9.8195e-03, -7.6198e-03, -2.1907e-02,\n",
      "         1.8815e-02, -6.5920e-02, -8.3523e-03,  3.0284e-02,  1.3756e-02,\n",
      "        -5.0858e-03, -3.3319e-03,  1.6282e-02, -4.4118e-02, -2.5888e-02,\n",
      "         4.0900e-02, -2.0057e-02,  2.4402e-02, -1.2985e-02, -2.9777e-02,\n",
      "         1.6808e-02, -3.8901e-03,  3.1420e-02,  4.6255e-03,  7.3229e-03,\n",
      "        -2.2333e-02,  1.1464e-02,  1.2120e-02, -8.9921e-03, -1.8838e-02,\n",
      "         3.0018e-02,  1.6815e-02,  4.3590e-02, -2.8001e-02,  1.9355e-02,\n",
      "        -1.3407e-02, -1.5683e-03, -6.5848e-03, -1.1041e-02, -2.8857e-02,\n",
      "        -8.9149e-03, -4.6199e-02, -2.0390e-02,  2.5975e-02,  1.3450e-02,\n",
      "        -2.0348e-02,  2.7528e-02, -1.4104e-02, -2.5445e-02,  4.7976e-02,\n",
      "         4.2754e-02, -3.5052e-03,  2.0965e-02,  2.6530e-03,  5.1279e-02,\n",
      "        -4.8157e-03, -2.6352e-02,  5.0090e-02,  2.9035e-03, -3.3951e-02,\n",
      "         6.1812e-04, -5.2729e-03, -1.8617e-02, -2.6150e-02,  5.4353e-03,\n",
      "        -2.4971e-02, -5.6948e-03,  8.7099e-03,  1.5013e-02, -5.6202e-03,\n",
      "        -7.0124e-03,  8.7238e-03,  1.9050e-02, -1.9812e-02, -1.8197e-02,\n",
      "         3.6476e-02, -4.6337e-02,  6.8931e-03,  2.8774e-02, -2.9064e-02,\n",
      "        -9.1562e-03,  3.1409e-02,  1.8403e-02,  2.6921e-02, -1.7310e-02,\n",
      "         2.8406e-02, -1.2112e-02, -1.6332e-02,  2.4542e-02,  4.4174e-02,\n",
      "         5.6169e-03,  1.5018e-02, -1.0970e-02, -7.1328e-03, -1.5906e-02,\n",
      "         2.9468e-02, -1.5212e-02,  6.4107e-03,  1.5103e-02,  1.1133e-02,\n",
      "         3.7611e-02,  7.9509e-04,  2.8124e-02, -1.4214e-02,  2.4364e-02,\n",
      "        -1.3277e-02, -4.2420e-03,  3.6974e-02, -5.4665e-03, -4.0656e-02,\n",
      "        -1.6880e-02,  1.7989e-02,  3.6154e-03,  3.4893e-02,  1.1666e-02,\n",
      "         3.4962e-02, -9.3993e-03,  1.2259e-02,  3.3141e-02,  2.2532e-02,\n",
      "         3.1626e-02, -5.4660e-03, -5.3558e-02, -2.7262e-02,  1.8429e-02,\n",
      "        -1.3874e-02, -4.0222e-02,  3.1555e-02,  6.5082e-03,  7.0963e-03,\n",
      "        -1.6146e-02, -3.2578e-02,  4.0482e-02, -2.3085e-02, -3.8869e-02,\n",
      "         3.1682e-02,  3.8160e-02,  2.8901e-02, -4.0381e-02,  2.4947e-03,\n",
      "        -2.6945e-02,  3.0961e-02,  2.0108e-02, -6.5830e-03,  1.3949e-02,\n",
      "        -4.8114e-02, -1.1126e-02, -1.3812e-02,  1.8331e-02, -5.3338e-02,\n",
      "        -2.5589e-03,  1.0525e-02, -4.3815e-02,  1.3144e-02, -9.2242e-03,\n",
      "         2.1053e-02, -4.5618e-02,  2.7215e-02, -4.3551e-03, -1.0459e-02,\n",
      "         7.9040e-03,  1.2819e-02, -4.7888e-02,  1.8993e-02,  4.6296e-02,\n",
      "        -2.0734e-02, -3.0458e-02,  1.2150e-02, -5.0829e-03,  3.7014e-02,\n",
      "        -1.9639e-02, -2.3558e-02,  2.9494e-02,  2.4065e-02,  1.6279e-02,\n",
      "         1.1033e-02,  4.7279e-03,  1.3149e-02, -1.3040e-03, -1.1710e-03,\n",
      "        -1.2000e-02, -2.5914e-02, -1.9452e-02, -3.0008e-02,  2.2607e-02,\n",
      "        -1.1189e-02,  2.8262e-02,  3.1473e-02,  3.7312e-02,  3.1389e-03,\n",
      "        -2.6110e-02, -4.2938e-02,  4.3660e-03,  3.1081e-02, -4.2762e-02,\n",
      "         1.6930e-02, -2.3503e-02, -2.8250e-02,  4.3076e-02, -3.6520e-02,\n",
      "         2.2610e-02,  8.1597e-03,  1.1512e-02, -2.4931e-02, -2.4475e-02,\n",
      "         2.1103e-03, -6.4346e-03,  5.9502e-03,  1.4634e-02,  2.7701e-02,\n",
      "        -2.9085e-02, -3.0459e-03, -2.2964e-02, -2.6405e-02,  2.8829e-02,\n",
      "         2.0599e-02, -5.4180e-04,  2.2449e-02, -3.6983e-02,  1.0929e-02,\n",
      "         5.8754e-03,  6.6462e-02, -1.0470e-02, -3.3449e-03, -2.2104e-02,\n",
      "        -1.6935e-02,  3.9218e-02, -1.8845e-02,  4.1336e-02,  4.5178e-02,\n",
      "         1.6441e-02,  3.7518e-03,  9.0272e-03,  3.4077e-03, -1.6809e-02,\n",
      "         5.0282e-02, -2.3138e-02, -1.2375e-02, -3.3542e-02, -3.4017e-02,\n",
      "        -1.8762e-02, -1.0134e-02, -2.3031e-02, -1.8517e-02,  4.9455e-03,\n",
      "        -3.4663e-02, -1.2095e-02, -2.1293e-03, -2.6312e-02,  4.5206e-02,\n",
      "        -1.8909e-02, -3.7434e-02,  3.3956e-02, -4.6141e-02,  3.0725e-02,\n",
      "         2.6948e-02,  1.6511e-02, -1.8985e-02,  1.1548e-02, -8.5627e-03,\n",
      "        -1.1486e-02,  1.7038e-03,  4.6243e-02, -3.0812e-02,  3.7361e-03,\n",
      "         2.6662e-02,  1.7652e-02, -1.8659e-02,  2.5310e-02, -1.2553e-02,\n",
      "         1.9609e-02,  2.8003e-02, -3.3675e-02,  1.3036e-02, -4.1931e-02,\n",
      "        -2.8912e-02, -2.6430e-02,  3.0764e-02,  8.4724e-04,  2.6004e-04,\n",
      "        -4.4111e-02, -1.3938e-02,  1.7415e-02, -2.0803e-03, -3.3125e-02,\n",
      "         1.6886e-03,  3.5925e-03, -3.4671e-03,  1.1049e-02, -7.9482e-03,\n",
      "        -2.3821e-02, -2.0928e-02], device='cuda:0'), 'fc2.weight': tensor([[ 0.0239, -0.0155, -0.0399,  ...,  0.0411,  0.0296, -0.0089],\n",
      "        [-0.0007,  0.0229,  0.0496,  ...,  0.0201,  0.0456,  0.0445],\n",
      "        [ 0.0247, -0.0009,  0.0525,  ...,  0.0295, -0.0055, -0.0448],\n",
      "        ...,\n",
      "        [-0.0364,  0.0405,  0.0436,  ..., -0.0426, -0.0395,  0.0280],\n",
      "        [ 0.0333,  0.0151,  0.0148,  ..., -0.0097,  0.0295,  0.0008],\n",
      "        [-0.0114, -0.0071,  0.0441,  ...,  0.0054,  0.0142, -0.0053]],\n",
      "       device='cuda:0'), 'fc2.bias': tensor([ 4.7892e-02,  5.1031e-02, -3.5716e-03, -5.0505e-02, -1.6780e-02,\n",
      "         4.7313e-03, -3.6942e-02, -1.7649e-02, -4.0259e-02, -7.7012e-03,\n",
      "         4.8764e-02, -2.8666e-02,  4.9424e-02,  6.0290e-03, -7.7637e-03,\n",
      "        -4.5257e-02,  2.7583e-02,  1.1478e-02, -2.3584e-02,  3.3007e-02,\n",
      "        -8.6650e-03,  5.8144e-02,  4.0730e-02, -4.1613e-02,  4.1221e-02,\n",
      "         5.0765e-03, -1.6032e-02, -4.0866e-02,  1.4114e-02, -2.5640e-02,\n",
      "         3.6358e-02, -1.0937e-02, -5.0436e-02, -2.0069e-02, -1.1676e-02,\n",
      "        -1.3356e-02,  1.7828e-02, -4.3613e-02,  1.9541e-02, -4.2336e-03,\n",
      "        -3.1325e-02, -3.1084e-02, -1.1129e-03, -3.9073e-02, -5.1996e-02,\n",
      "         9.5862e-03, -2.5464e-02, -2.1062e-02,  4.1490e-02, -2.3409e-02,\n",
      "         4.1731e-02,  3.3731e-02,  5.2545e-02,  3.0893e-02,  5.2949e-02,\n",
      "        -1.9927e-02, -1.1092e-02, -3.6097e-02, -8.0610e-03, -9.7694e-03,\n",
      "        -2.2281e-02,  3.2762e-03,  1.2995e-02, -3.1119e-02,  2.6740e-02,\n",
      "        -3.7333e-02, -2.1409e-02, -3.5916e-02,  1.5147e-02, -1.4744e-02,\n",
      "        -3.0620e-04, -1.1690e-02, -2.6132e-03,  1.2129e-02, -9.9121e-03,\n",
      "         1.2626e-03, -5.5010e-02,  3.6570e-02, -8.1417e-03,  2.7125e-02,\n",
      "        -4.5790e-02,  3.3643e-02, -2.4641e-02, -4.3714e-02, -4.1316e-02,\n",
      "        -2.1126e-02,  3.6039e-02, -3.5972e-02, -1.6054e-02,  2.0923e-03,\n",
      "         2.8793e-02, -3.9622e-02, -2.1095e-02,  4.0136e-02, -1.5553e-02,\n",
      "         2.7856e-02, -7.2565e-05, -4.3188e-02,  5.0725e-02, -1.3932e-02,\n",
      "         5.8445e-02,  4.0640e-02, -2.3719e-03,  3.6590e-03, -1.0381e-02,\n",
      "        -4.2546e-03, -4.0542e-02,  3.2740e-02, -7.2181e-03, -4.4287e-02,\n",
      "        -4.5715e-02,  4.3571e-02, -3.4982e-02,  2.5152e-02,  2.1564e-02,\n",
      "        -9.8527e-03,  1.8259e-02,  2.3195e-02,  4.4014e-02,  2.7055e-02,\n",
      "         5.3364e-02, -3.9571e-02, -2.1293e-02, -1.9074e-02, -4.5929e-03,\n",
      "         6.7324e-03,  1.3322e-02,  3.2890e-02, -2.1344e-02, -3.3301e-02,\n",
      "        -3.5253e-02,  5.4122e-02, -6.5327e-03, -1.5190e-02, -1.8917e-02,\n",
      "        -1.6030e-02,  3.3551e-02,  3.9419e-02, -4.3649e-03,  4.0874e-02,\n",
      "         2.3880e-02, -5.5653e-02,  2.1808e-04,  2.1448e-02,  7.1396e-03,\n",
      "         9.1696e-03, -6.3913e-03, -5.1992e-03, -2.8492e-02,  3.3534e-03,\n",
      "        -1.4966e-02,  1.2559e-02,  4.1715e-02, -3.8933e-02,  4.7492e-02,\n",
      "         3.2031e-02,  3.3943e-02, -3.2673e-02,  3.5215e-02, -3.3464e-02,\n",
      "         1.9226e-02, -5.6367e-02, -4.1441e-02,  2.2645e-02,  1.4792e-02,\n",
      "         3.1566e-02, -5.3109e-02,  4.2950e-02,  6.9616e-03,  7.2299e-03,\n",
      "         2.7741e-02, -3.2971e-02, -5.2460e-03,  5.1711e-02,  8.9478e-03,\n",
      "        -3.1942e-02, -5.9019e-02,  1.5734e-02,  1.1451e-02,  1.5986e-02,\n",
      "        -3.6551e-02, -1.0326e-02, -9.2994e-03,  1.7165e-02,  2.1126e-02,\n",
      "        -3.4445e-02,  3.5131e-02,  4.0715e-02,  1.3571e-02, -4.5424e-02,\n",
      "         1.4317e-02, -3.3864e-02,  2.9856e-02, -3.3719e-02, -4.6101e-02,\n",
      "         1.4287e-02, -3.3993e-02, -4.5063e-02,  7.4920e-03, -1.9322e-02,\n",
      "        -2.2917e-02, -3.5224e-02,  1.8528e-02, -4.8387e-02,  1.6658e-02,\n",
      "         3.9695e-02, -3.0804e-02, -2.9084e-02,  1.6268e-02,  2.2332e-02,\n",
      "        -5.1082e-02, -1.2064e-02,  2.7485e-02, -1.8993e-02,  1.9627e-02,\n",
      "        -6.1098e-03,  3.8420e-02,  1.2775e-02,  4.1955e-04, -1.5745e-02,\n",
      "        -2.1549e-02,  1.6165e-02,  3.6744e-02,  4.9956e-02,  2.6065e-02,\n",
      "        -3.2516e-02,  1.7441e-02, -1.9271e-02,  6.3585e-05,  3.2407e-02,\n",
      "         3.5143e-02,  2.1195e-02, -3.6630e-02, -2.3896e-02, -4.5974e-02,\n",
      "         3.2089e-02, -3.5842e-02, -2.0508e-02, -2.0562e-02, -2.2292e-02,\n",
      "        -2.8501e-03, -3.8642e-03, -1.4417e-02, -4.8359e-02,  4.5046e-03,\n",
      "         1.4914e-02,  2.2876e-02, -5.3772e-02,  3.3530e-02,  2.5518e-03,\n",
      "         1.6294e-03,  3.5434e-02, -1.9999e-02,  2.7104e-02, -1.1378e-02,\n",
      "        -4.3487e-03], device='cuda:0'), 'fc3.weight': tensor([[ 0.0775,  0.0060, -0.0518,  ..., -0.0285, -0.0047,  0.0242],\n",
      "        [-0.0342, -0.0016, -0.0071,  ...,  0.0106, -0.0112,  0.0336],\n",
      "        [ 0.0443,  0.0098, -0.0234,  ...,  0.0152, -0.0112,  0.0094],\n",
      "        ...,\n",
      "        [ 0.0094, -0.0604, -0.0113,  ...,  0.0199, -0.0200, -0.0050],\n",
      "        [-0.0027, -0.0797, -0.0875,  ..., -0.0269, -0.0221,  0.0337],\n",
      "        [ 0.0860, -0.0066,  0.0380,  ..., -0.0186, -0.0194,  0.0004]],\n",
      "       device='cuda:0'), 'fc3.bias': tensor([-0.1032, -0.1389, -0.0441,  0.1888, -0.3510, -0.1651, -0.1116, -0.2520,\n",
      "         0.0169, -0.0411, -0.1289, -0.1093, -0.3066,  0.0598], device='cuda:0'), 'fc4.weight': tensor([[-0.8804,  0.1635, -0.1161,  0.5097,  1.0376,  0.0176, -0.0237,  2.2325,\n",
      "         -0.3953,  0.0112, -0.2883, -0.3945, -0.1477, -0.1920],\n",
      "        [ 0.5009, -0.5647, -0.4697, -0.2248,  1.0792, -0.7773,  0.6164, -1.4532,\n",
      "         -0.2648, -0.3188,  0.7143,  0.5011,  0.4268, -1.0613],\n",
      "        [ 0.1307, -0.1484,  0.8332,  0.0904, -0.5766, -0.2035, -0.1030, -0.0673,\n",
      "         -0.3489, -0.5110, -1.5081,  0.6886,  0.8351,  1.2610],\n",
      "        [-1.3018,  0.4407, -0.2153,  0.3805, -0.3027,  0.3385, -0.2741, -0.0700,\n",
      "          1.9152, -0.4378,  0.3973,  0.4503,  0.0679, -0.0832],\n",
      "        [ 0.4317,  0.7838, -0.7198,  0.5490, -0.8700, -0.6400, -0.2530,  0.0062,\n",
      "         -0.3879,  1.2293,  0.1036,  0.4542, -1.2048,  0.7477],\n",
      "        [-0.0603,  0.4959,  0.2976, -2.0019, -0.1363,  0.3987,  0.7564, -0.0921,\n",
      "         -0.3154,  0.2316,  0.0960, -0.6364,  0.6981, -0.5256],\n",
      "        [ 0.8974, -0.8984,  0.6081,  0.7428, -0.6301,  0.5881, -1.3357,  0.0903,\n",
      "         -0.2448,  0.1003,  0.3382, -0.9009, -0.6720, -0.1163]],\n",
      "       device='cuda:0'), 'fc4.bias': tensor([-0.2698, -0.4670, -0.0917, -0.4502, -0.2035,  0.5879,  0.4198],\n",
      "       device='cuda:0')}), 'optimizer_state_dict': {'state': {0: {'momentum_buffer': tensor([[[[ 2.5129e-03,  1.7529e-03,  1.4069e-03],\n",
      "          [ 2.4348e-03,  1.4787e-03,  1.2921e-03],\n",
      "          [ 2.1325e-03,  9.2782e-04,  6.7498e-04]]],\n",
      "\n",
      "\n",
      "        [[[-6.6343e-04, -4.4550e-04, -2.6142e-04],\n",
      "          [-6.8841e-04, -4.8842e-04, -3.1046e-04],\n",
      "          [ 1.2052e-04,  2.8699e-04,  3.6426e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 2.7850e-06, -2.8867e-06,  1.8491e-06],\n",
      "          [ 5.8736e-07, -2.0438e-06, -7.1515e-07],\n",
      "          [ 8.5506e-07,  2.0499e-06, -3.7725e-08]]],\n",
      "\n",
      "\n",
      "        [[[-2.4394e-06,  2.1037e-06,  1.5595e-07],\n",
      "          [-1.1903e-06,  2.6229e-08,  2.9340e-06],\n",
      "          [-9.2495e-07,  7.8452e-07,  1.1683e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 5.0704e-07, -9.9547e-07, -2.6077e-06],\n",
      "          [-5.6858e-07,  2.3024e-06, -2.9277e-06],\n",
      "          [-1.0475e-06,  1.6676e-06,  1.5088e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 3.6161e-03,  4.2678e-03,  4.4847e-03],\n",
      "          [ 3.5885e-03,  4.0998e-03,  4.5846e-03],\n",
      "          [ 3.5490e-03,  3.9228e-03,  4.5263e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 7.0630e-04, -3.7311e-03, -8.9415e-04],\n",
      "          [ 1.1210e-03, -6.8461e-05,  6.1911e-03],\n",
      "          [-1.2185e-03, -1.7997e-03,  5.1434e-03]]],\n",
      "\n",
      "\n",
      "        [[[-7.6778e-07,  3.4020e-07, -3.8402e-07],\n",
      "          [ 6.8626e-08,  8.2554e-07, -8.2047e-09],\n",
      "          [ 6.9758e-07, -4.5913e-07, -1.5910e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 5.7754e-05,  7.0596e-05,  7.0938e-05],\n",
      "          [ 5.3987e-05,  6.1848e-05,  6.5318e-05],\n",
      "          [ 4.0743e-05,  4.4868e-05,  3.9059e-05]]],\n",
      "\n",
      "\n",
      "        [[[-1.7277e-06,  1.6044e-06,  1.0066e-06],\n",
      "          [-2.8093e-06,  1.3748e-06, -1.2363e-06],\n",
      "          [-6.5469e-07,  6.2441e-07,  2.8005e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 2.1984e-03,  1.3418e-03,  1.0621e-03],\n",
      "          [ 1.5670e-03,  6.4331e-04,  5.9228e-04],\n",
      "          [ 1.1373e-03,  2.8124e-04,  1.4720e-04]]],\n",
      "\n",
      "\n",
      "        [[[-3.9144e-03, -3.8831e-03, -4.2785e-03],\n",
      "          [-4.2487e-03, -3.9559e-03, -4.0103e-03],\n",
      "          [-3.6625e-03, -3.2891e-03, -3.3116e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.9043e-06, -2.2940e-06, -2.1851e-08],\n",
      "          [ 6.1217e-07, -2.2131e-06,  1.8567e-06],\n",
      "          [-2.4832e-06,  2.1957e-07, -2.8283e-06]]],\n",
      "\n",
      "\n",
      "        [[[-2.0598e-06, -1.6073e-06,  3.2176e-07],\n",
      "          [-1.4799e-06,  2.2456e-06,  1.7968e-06],\n",
      "          [-1.8967e-06,  2.1979e-06,  2.6720e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4685e-03,  1.2376e-03,  1.3406e-03],\n",
      "          [ 2.1166e-03,  1.8481e-03,  1.6741e-03],\n",
      "          [ 2.0423e-03,  1.7395e-03,  1.5735e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.9882e-03,  1.7209e-03,  1.7540e-03],\n",
      "          [ 2.0495e-03,  1.8259e-03,  1.9898e-03],\n",
      "          [ 1.9503e-03,  1.6643e-03,  1.8067e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 9.9769e-04, -1.7930e-03, -4.3767e-03],\n",
      "          [ 2.4579e-03, -7.1209e-04, -1.7200e-03],\n",
      "          [ 4.5317e-04, -2.6513e-03, -2.6314e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.5603e-06, -3.0459e-07, -4.6095e-07],\n",
      "          [ 2.4279e-06,  8.2470e-07,  4.1390e-07],\n",
      "          [ 2.5428e-06,  1.9120e-06, -2.4828e-06]]],\n",
      "\n",
      "\n",
      "        [[[-1.1191e-06,  2.7068e-06, -1.5750e-07],\n",
      "          [ 1.5664e-06, -6.0747e-07,  2.7085e-06],\n",
      "          [-5.5586e-07,  2.5977e-06, -2.4752e-07]]],\n",
      "\n",
      "\n",
      "        [[[-5.0865e-03, -5.1540e-03, -1.2923e-03],\n",
      "          [ 4.4485e-04,  1.4530e-03,  7.1162e-03],\n",
      "          [ 1.1625e-03,  1.3914e-03,  4.9718e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.9027e-03, -2.6868e-03, -2.3810e-03],\n",
      "          [-1.6268e-03, -1.3849e-03, -1.5644e-03],\n",
      "          [-1.1986e-03, -9.6099e-04, -1.2985e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.0810e-04, -1.6893e-03, -3.7535e-03],\n",
      "          [-3.1013e-03, -5.0293e-03, -6.9012e-03],\n",
      "          [-3.8998e-03, -5.5020e-03, -6.6125e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 4.4119e-03,  4.2534e-03,  4.8436e-03],\n",
      "          [ 6.8115e-03,  6.7418e-03,  7.0075e-03],\n",
      "          [ 7.4402e-03,  6.4263e-03,  5.7311e-03]]],\n",
      "\n",
      "\n",
      "        [[[-6.1706e-05, -4.3108e-05, -1.0848e-04],\n",
      "          [ 4.5851e-05,  7.5535e-05,  3.5750e-05],\n",
      "          [ 2.2066e-05,  4.6143e-05,  9.1614e-06]]],\n",
      "\n",
      "\n",
      "        [[[-1.7288e-04,  1.7488e-04,  2.9945e-04],\n",
      "          [-6.8096e-06,  2.9573e-04,  3.8707e-04],\n",
      "          [-1.3034e-04,  1.7071e-04,  1.3430e-04]]],\n",
      "\n",
      "\n",
      "        [[[-1.5227e-03, -1.5601e-03, -2.1883e-03],\n",
      "          [-1.6998e-03, -1.7831e-03, -2.2109e-03],\n",
      "          [-1.6373e-03, -1.6880e-03, -2.0535e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 8.4056e-03,  6.9352e-03,  6.4480e-03],\n",
      "          [ 6.5655e-03,  4.1534e-03,  3.2103e-03],\n",
      "          [ 6.5655e-03,  2.4388e-03,  1.0347e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.9113e-03,  3.1076e-03,  3.5400e-03],\n",
      "          [ 2.2505e-03,  2.1387e-03,  2.0692e-03],\n",
      "          [ 2.9093e-03,  2.5683e-03,  2.1159e-03]]],\n",
      "\n",
      "\n",
      "        [[[-7.8440e-03, -1.1079e-02, -1.3580e-02],\n",
      "          [-5.9914e-03, -6.1399e-03, -4.6295e-03],\n",
      "          [-1.0710e-02, -1.0061e-02, -5.8797e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.6592e-03,  7.3277e-04,  6.8730e-04],\n",
      "          [-1.7385e-03,  6.9723e-04,  4.9783e-04],\n",
      "          [ 7.6259e-04,  3.1613e-03,  2.3127e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.3596e-04, -7.0871e-04, -9.7406e-04],\n",
      "          [-1.0091e-03, -1.3541e-03, -1.4874e-03],\n",
      "          [-1.0184e-03, -1.4073e-03, -1.4650e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.7253e-03,  7.7867e-04, -5.3431e-04],\n",
      "          [-5.1579e-04, -1.5328e-03, -2.3075e-03],\n",
      "          [-1.5076e-03, -2.3117e-03, -2.3233e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.9001e-03,  2.6759e-03,  3.0927e-03],\n",
      "          [ 3.4573e-03,  3.2313e-03,  3.4204e-03],\n",
      "          [ 3.9315e-03,  3.5572e-03,  3.3660e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 4.7014e-03,  4.4844e-03,  4.5847e-03],\n",
      "          [ 4.2978e-03,  3.5522e-03,  3.0176e-03],\n",
      "          [ 4.5382e-03,  3.5661e-03,  3.0520e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.0050e-06, -1.2708e-06, -8.7135e-07],\n",
      "          [ 1.1671e-06, -1.5525e-06,  2.3053e-06],\n",
      "          [ 1.2614e-06,  7.2360e-08,  1.5507e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 1.6017e-05,  1.5117e-05, -6.8748e-06],\n",
      "          [ 1.2233e-05,  1.3294e-05, -8.4508e-06],\n",
      "          [ 1.5344e-05,  1.3335e-05, -8.6319e-06]]],\n",
      "\n",
      "\n",
      "        [[[-1.8228e-06, -7.1735e-07,  2.4981e-06],\n",
      "          [-1.8923e-06, -2.7879e-06, -1.3464e-07],\n",
      "          [-2.5495e-06,  1.6317e-07, -4.6140e-07]]],\n",
      "\n",
      "\n",
      "        [[[-7.6571e-04, -5.8620e-04, -3.3552e-04],\n",
      "          [-5.6122e-04, -3.6205e-04, -1.8050e-04],\n",
      "          [-3.2103e-04, -1.4387e-04, -2.6556e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 9.2345e-07, -4.2116e-08,  1.7174e-06],\n",
      "          [-1.4520e-07,  2.9111e-06,  1.5758e-07],\n",
      "          [ 7.8786e-07,  1.5221e-06,  3.3252e-07]]],\n",
      "\n",
      "\n",
      "        [[[ 3.2929e-04,  3.3700e-04,  3.6938e-04],\n",
      "          [ 2.8168e-04,  2.8696e-04,  3.2760e-04],\n",
      "          [ 2.3584e-04,  2.3369e-04,  3.0145e-04]]],\n",
      "\n",
      "\n",
      "        [[[-3.0348e-04, -1.9301e-04, -8.8692e-05],\n",
      "          [-1.0487e-04,  4.2742e-05,  9.9306e-05],\n",
      "          [-7.4889e-05,  8.0226e-05,  1.1393e-04]]],\n",
      "\n",
      "\n",
      "        [[[-1.5382e-04, -7.3794e-04, -6.2379e-04],\n",
      "          [ 8.4310e-06, -5.1405e-04, -5.0180e-04],\n",
      "          [ 7.8002e-05, -2.0975e-04, -1.2233e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 3.0599e-03,  2.2263e-03,  2.4030e-03],\n",
      "          [ 3.8679e-03,  2.7526e-03,  2.7524e-03],\n",
      "          [ 3.6763e-03,  2.0959e-03,  1.8299e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.1861e-02, -1.2065e-02, -1.3444e-02],\n",
      "          [-1.1418e-02, -1.0684e-02, -1.0880e-02],\n",
      "          [-9.1430e-03, -8.0991e-03, -7.9233e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.9078e-03, -3.5166e-03, -4.0682e-03],\n",
      "          [-2.8044e-03, -3.2119e-03, -3.5769e-03],\n",
      "          [-3.0193e-03, -2.9546e-03, -2.8411e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.4545e-03,  3.7656e-03,  5.5527e-03],\n",
      "          [ 4.2132e-03,  5.2168e-03,  6.2661e-03],\n",
      "          [ 5.5198e-03,  5.5721e-03,  5.4253e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.6786e-03,  7.3226e-04, -3.5308e-04],\n",
      "          [-2.2276e-04, -1.6644e-03, -2.5014e-03],\n",
      "          [-1.1225e-03, -2.3112e-03, -2.5719e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.4076e-03, -1.7924e-03, -1.7941e-03],\n",
      "          [-1.3227e-03, -1.7592e-03, -1.5926e-03],\n",
      "          [-1.4004e-03, -1.7641e-03, -1.4825e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.7224e-06, -2.7733e-06, -1.1955e-06],\n",
      "          [-1.5200e-06, -5.7727e-07, -5.8143e-07],\n",
      "          [-2.7631e-06,  3.1550e-07,  1.0492e-06]]],\n",
      "\n",
      "\n",
      "        [[[-8.6594e-04,  1.1320e-03,  1.6983e-03],\n",
      "          [-5.2084e-03, -2.9089e-03, -1.5054e-03],\n",
      "          [-6.6084e-03, -4.1840e-03, -1.3278e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.2405e-03, -2.5516e-03, -1.9880e-03],\n",
      "          [-3.2785e-03, -2.4370e-03, -1.6287e-03],\n",
      "          [-3.6474e-03, -2.5397e-03, -1.4943e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.5376e-04,  3.4504e-04,  1.6603e-03],\n",
      "          [ 4.6292e-04,  1.0248e-03,  2.2674e-03],\n",
      "          [ 9.2831e-04,  1.0386e-03,  1.9025e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.4686e-03, -3.9908e-03, -4.7265e-03],\n",
      "          [-3.7857e-03, -4.1216e-03, -4.5029e-03],\n",
      "          [-4.4784e-03, -4.4396e-03, -4.3066e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.9498e-03, -2.2811e-03, -1.8644e-03],\n",
      "          [-2.4228e-03, -1.6374e-03, -9.6569e-04],\n",
      "          [-2.1756e-03, -6.4824e-04,  2.8134e-04]]],\n",
      "\n",
      "\n",
      "        [[[-2.1384e-06, -2.8997e-06,  1.6852e-06],\n",
      "          [ 2.6354e-06,  2.8788e-06, -2.0849e-06],\n",
      "          [-2.8670e-06, -1.8729e-06, -2.1054e-06]]],\n",
      "\n",
      "\n",
      "        [[[-1.6336e-03, -1.4515e-03, -1.2489e-03],\n",
      "          [-1.4947e-03, -1.2318e-03, -9.6965e-04],\n",
      "          [-1.3887e-03, -1.0785e-03, -8.5240e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 3.3599e-03,  2.7688e-03,  2.5010e-03],\n",
      "          [ 3.2236e-03,  2.6365e-03,  2.7863e-03],\n",
      "          [ 3.5757e-03,  2.7289e-03,  2.7588e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 8.4672e-04,  3.6429e-04, -3.8668e-04],\n",
      "          [-5.0043e-04, -7.2232e-04, -1.0576e-03],\n",
      "          [-1.2250e-03, -1.0659e-03, -1.1761e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 8.3551e-07, -2.1910e-06, -1.0072e-06],\n",
      "          [ 1.0918e-07,  8.1400e-07, -7.2370e-07],\n",
      "          [ 1.6885e-06,  1.7621e-06, -9.6923e-07]]],\n",
      "\n",
      "\n",
      "        [[[-4.1690e-03, -3.8653e-03, -3.5967e-03],\n",
      "          [-3.1645e-03, -2.7362e-03, -2.7389e-03],\n",
      "          [-2.2027e-03, -1.5274e-03, -1.4803e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.6248e-03, -8.0732e-04,  8.4151e-04],\n",
      "          [-4.6511e-04,  3.7805e-04,  1.5512e-03],\n",
      "          [-1.0993e-04,  3.9110e-04,  1.0195e-03]]],\n",
      "\n",
      "\n",
      "        [[[-5.3978e-04, -1.8136e-03, -4.1084e-03],\n",
      "          [-3.5593e-03, -5.4050e-03, -7.1700e-03],\n",
      "          [-4.9424e-03, -6.5919e-03, -7.3799e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 6.4206e-07, -5.4605e-07,  2.8749e-06],\n",
      "          [-1.8602e-06, -2.1847e-06,  5.4467e-08],\n",
      "          [ 2.6661e-06, -2.3897e-06,  4.9111e-07]]],\n",
      "\n",
      "\n",
      "        [[[-3.0777e-03, -2.9440e-03, -2.8682e-03],\n",
      "          [-2.4958e-03, -2.4437e-03, -2.4120e-03],\n",
      "          [-2.2227e-03, -2.2047e-03, -2.1884e-03]]]], device='cuda:0')}, 1: {'momentum_buffer': tensor([-1.5617e-03,  1.8798e-03, -4.5085e-13,  4.5694e-06,  3.0348e-14,\n",
      "         2.2329e-03,  1.1389e-02,  1.1592e-12,  3.5379e-03,  1.3372e-11,\n",
      "        -2.3931e-03,  4.6570e-03,  3.3472e-06,  9.5728e-11,  5.3155e-04,\n",
      "         3.1847e-04, -1.5232e-03,  3.4877e-06,  4.1403e-06,  6.8256e-03,\n",
      "        -2.4684e-03,  1.7149e-02,  2.7552e-03, -5.8667e-04,  4.6098e-04,\n",
      "         4.0235e-03,  1.6792e-02,  1.9013e-03, -2.3952e-03,  1.0166e-03,\n",
      "        -9.0513e-04,  3.5983e-03,  4.3850e-03,  2.9191e-03,  3.7591e-06,\n",
      "         1.3611e-05,  6.6008e-13,  5.3159e-04,  1.3000e-13, -3.7340e-03,\n",
      "         1.7272e-04, -2.8618e-04,  3.5878e-03,  1.1187e-02,  2.0458e-03,\n",
      "         8.1928e-03,  3.9695e-03,  9.8724e-04,  1.9424e-13,  6.1560e-03,\n",
      "        -5.5648e-04,  2.7751e-03,  7.7697e-03,  4.0472e-04,  3.2244e-06,\n",
      "         4.3208e-04, -8.0797e-04, -2.7408e-03,  4.6300e-06, -1.9599e-03,\n",
      "         2.1918e-03,  1.9907e-02,  4.2632e-06, -2.6375e-03], device='cuda:0')}, 2: {'momentum_buffer': tensor([-2.9056e-03,  3.2108e-03, -9.2922e-12, -5.8620e-06, -1.4606e-13,\n",
      "        -7.9816e-03, -1.7640e-02, -3.7944e-12, -2.4775e-03, -7.0485e-11,\n",
      "        -5.5681e-03, -3.6295e-03, -2.1944e-06, -3.0632e-10, -1.2756e-02,\n",
      "         5.3040e-05, -2.9934e-03, -4.6664e-06, -5.5466e-06, -1.5254e-03,\n",
      "        -2.2626e-03, -5.7901e-03,  4.8255e-03,  3.0085e-03, -3.2844e-03,\n",
      "        -2.6218e-03, -5.2158e-03,  1.6649e-03, -1.2264e-02,  9.1202e-04,\n",
      "        -1.1508e-03, -7.0270e-03, -4.6737e-04,  2.0882e-03, -2.4776e-06,\n",
      "         5.7961e-05, -2.1598e-12, -1.4597e-03, -4.3355e-13, -4.2683e-03,\n",
      "        -3.2410e-03,  7.7760e-04, -2.0122e-03, -2.5876e-02, -5.2606e-03,\n",
      "        -2.6521e-03, -5.4545e-03, -8.4074e-04, -7.6687e-13, -8.9925e-03,\n",
      "         3.5077e-04, -3.7821e-03, -1.0386e-03, -2.4524e-03, -3.6358e-06,\n",
      "        -3.9742e-04,  7.1676e-03, -7.7620e-03, -3.9611e-06, -4.4437e-03,\n",
      "         3.0863e-05, -2.2195e-03, -3.5509e-06,  3.2909e-03], device='cuda:0')}, 3: {'momentum_buffer': tensor([[[[-2.6875e-04, -2.2569e-04, -1.9850e-04],\n",
      "          [ 1.5236e-06,  1.9222e-05,  1.1456e-04],\n",
      "          [ 2.6897e-05, -9.8666e-07,  4.7689e-05]],\n",
      "\n",
      "         [[ 7.2072e-05,  8.0855e-05,  6.7844e-05],\n",
      "          [ 2.8788e-05,  3.8270e-05, -1.7887e-07],\n",
      "          [ 2.2656e-07,  2.3224e-05, -3.5804e-05]],\n",
      "\n",
      "         [[-2.0835e-14, -3.4636e-13, -2.9060e-13],\n",
      "          [ 1.9181e-13,  7.3442e-14,  1.1059e-13],\n",
      "          [ 1.0038e-13,  7.7690e-14,  1.3658e-13]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0859e-04, -1.9185e-04,  9.8155e-05],\n",
      "          [-3.6910e-06, -1.1868e-04,  2.3781e-04],\n",
      "          [-1.9636e-05, -1.9417e-04,  2.8783e-05]],\n",
      "\n",
      "         [[ 1.4932e-07,  1.2330e-07,  8.5421e-08],\n",
      "          [ 1.2612e-07, -5.9122e-09, -1.9459e-07],\n",
      "          [ 1.0941e-07,  3.1256e-07, -1.9674e-07]],\n",
      "\n",
      "         [[-2.8348e-04, -2.3343e-04, -9.4231e-05],\n",
      "          [-7.6197e-05,  8.0927e-06,  1.4007e-04],\n",
      "          [-1.3265e-04, -5.3858e-05,  9.3397e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 4.4438e-04,  2.2058e-04, -2.5825e-04],\n",
      "          [ 2.0392e-04,  6.4325e-06, -5.0850e-04],\n",
      "          [ 4.3535e-04,  2.6611e-04, -2.1588e-04]],\n",
      "\n",
      "         [[ 3.7309e-05,  2.4689e-05,  2.3077e-05],\n",
      "          [ 1.2773e-05, -1.9166e-06,  2.5545e-05],\n",
      "          [ 4.4580e-05,  3.4494e-05,  7.5337e-05]],\n",
      "\n",
      "         [[-2.7701e-13,  3.1164e-13,  4.7444e-13],\n",
      "          [-2.3723e-13,  4.5465e-13,  4.8054e-13],\n",
      "          [-3.3917e-13, -9.9115e-14, -6.6821e-14]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.8493e-03,  1.7350e-03,  1.3990e-03],\n",
      "          [ 1.5095e-03,  1.3432e-03,  9.0631e-04],\n",
      "          [ 1.8140e-03,  1.5007e-03,  9.1063e-04]],\n",
      "\n",
      "         [[-2.9337e-07,  1.4671e-08, -7.8022e-08],\n",
      "          [ 1.3718e-07, -5.1407e-07, -2.4205e-07],\n",
      "          [ 1.1574e-07, -2.6702e-07, -1.9092e-08]],\n",
      "\n",
      "         [[-3.4852e-04, -3.2480e-04, -5.6534e-04],\n",
      "          [-3.5332e-04, -3.2765e-04, -5.8681e-04],\n",
      "          [-2.5425e-04, -1.9116e-04, -3.9309e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 5.8587e-05,  5.4247e-04,  2.4903e-04],\n",
      "          [-5.5749e-04, -6.5158e-06, -2.4675e-04],\n",
      "          [-6.3251e-04, -7.8004e-05, -2.7681e-04]],\n",
      "\n",
      "         [[ 4.0264e-05,  1.2620e-04, -3.2824e-06],\n",
      "          [ 4.0306e-05,  1.0519e-04,  3.9520e-05],\n",
      "          [ 5.1668e-05,  1.1362e-04,  7.8289e-05]],\n",
      "\n",
      "         [[ 2.7307e-13,  4.7249e-13,  2.8074e-13],\n",
      "          [-1.4150e-13, -1.5950e-13, -1.7177e-14],\n",
      "          [-5.1452e-13, -4.0013e-13, -1.0932e-13]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.4322e-03, -4.4769e-03, -4.6131e-03],\n",
      "          [-5.7206e-03, -4.7016e-03, -4.7730e-03],\n",
      "          [-5.5175e-03, -4.5391e-03, -4.4965e-03]],\n",
      "\n",
      "         [[ 1.9017e-07,  2.0089e-08, -2.2777e-07],\n",
      "          [ 2.0540e-07, -6.9954e-08, -1.8332e-08],\n",
      "          [-5.0355e-08, -2.3764e-07, -1.2720e-07]],\n",
      "\n",
      "         [[ 1.3538e-03,  1.6267e-03,  1.4531e-03],\n",
      "          [ 8.6657e-04,  1.1250e-03,  9.3774e-04],\n",
      "          [ 8.5963e-04,  1.1340e-03,  9.5092e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.4694e-04,  1.2233e-04,  1.9136e-04],\n",
      "          [ 1.1374e-04, -5.1906e-06,  5.8818e-05],\n",
      "          [ 1.0600e-04, -2.7755e-05,  3.0233e-05]],\n",
      "\n",
      "         [[ 9.8345e-05,  8.2476e-06, -1.9905e-06],\n",
      "          [ 1.0853e-04,  6.3311e-06,  9.5534e-06],\n",
      "          [ 1.2101e-04,  8.6655e-06, -3.4826e-06]],\n",
      "\n",
      "         [[ 2.3521e-14,  2.4409e-13,  2.1787e-13],\n",
      "          [ 5.6387e-14,  3.6200e-13,  2.9653e-13],\n",
      "          [ 5.1438e-14,  1.1761e-13,  8.5148e-14]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.4741e-05, -7.7273e-05,  2.5530e-06],\n",
      "          [-1.5581e-04, -1.9590e-04, -1.1186e-04],\n",
      "          [-8.4354e-05, -1.4209e-04, -8.0813e-05]],\n",
      "\n",
      "         [[ 9.9157e-09, -5.0724e-08, -6.0354e-08],\n",
      "          [ 5.3432e-08,  6.4656e-08, -1.0397e-07],\n",
      "          [-1.0099e-08,  4.5762e-08, -1.7517e-07]],\n",
      "\n",
      "         [[ 1.4557e-04,  1.3799e-04,  1.6767e-04],\n",
      "          [ 2.9035e-05,  2.3819e-05,  4.3213e-05],\n",
      "          [ 3.1440e-05,  2.0846e-05,  6.1247e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 1.9652e-04,  2.4749e-06, -1.9952e-05],\n",
      "          [ 2.5911e-04,  8.1118e-05,  6.8752e-05],\n",
      "          [ 4.5465e-04,  2.9295e-04,  2.9235e-04]],\n",
      "\n",
      "         [[ 7.7242e-06,  6.6981e-05,  1.0554e-04],\n",
      "          [ 1.7706e-05,  7.7292e-05,  1.1469e-04],\n",
      "          [ 9.9505e-06,  7.1996e-05,  1.2115e-04]],\n",
      "\n",
      "         [[-4.3920e-13, -2.4886e-13, -1.8161e-13],\n",
      "          [-4.6217e-13, -2.5162e-13, -3.0950e-13],\n",
      "          [-2.8341e-13, -3.0064e-13, -3.8065e-13]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.5269e-05, -3.6942e-04, -6.0912e-04],\n",
      "          [-9.2056e-05, -3.9220e-04, -6.2340e-04],\n",
      "          [ 1.8436e-04, -1.0179e-04, -3.2150e-04]],\n",
      "\n",
      "         [[-5.8152e-08,  1.4508e-07,  1.9235e-07],\n",
      "          [-1.0843e-07,  1.9666e-07,  1.1158e-07],\n",
      "          [-7.9211e-08,  1.0548e-08, -4.6242e-08]],\n",
      "\n",
      "         [[ 1.2393e-04,  4.9671e-05,  3.9857e-05],\n",
      "          [ 1.6951e-04,  9.2002e-05,  7.6604e-05],\n",
      "          [ 3.0044e-04,  2.1788e-04,  2.0420e-04]]],\n",
      "\n",
      "\n",
      "        [[[-3.8199e-04, -2.5988e-04, -5.4954e-05],\n",
      "          [-2.9982e-04, -1.0274e-04, -6.0294e-05],\n",
      "          [-4.8126e-04, -2.4040e-04, -1.1221e-04]],\n",
      "\n",
      "         [[ 1.0995e-05, -2.3948e-04, -7.2521e-07],\n",
      "          [ 1.8735e-05, -2.4867e-04,  9.9527e-06],\n",
      "          [ 2.5924e-05, -3.5146e-04, -9.3101e-06]],\n",
      "\n",
      "         [[ 1.6333e-13,  4.6531e-14,  3.6873e-13],\n",
      "          [ 3.3076e-13,  2.2454e-13,  2.6816e-13],\n",
      "          [ 9.9217e-14, -5.0229e-14, -1.7660e-13]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.1150e-03, -1.9684e-03, -2.4483e-03],\n",
      "          [-1.7939e-03, -1.3597e-03, -1.7745e-03],\n",
      "          [-1.8848e-03, -1.2580e-03, -1.6127e-03]],\n",
      "\n",
      "         [[-2.2176e-08,  1.9438e-07, -1.7599e-07],\n",
      "          [-5.2432e-07,  3.8681e-07,  2.3675e-07],\n",
      "          [-1.5440e-07,  2.1722e-07,  2.1906e-07]],\n",
      "\n",
      "         [[ 2.3668e-04,  3.2922e-04,  4.7246e-04],\n",
      "          [ 2.6759e-04,  3.3850e-04,  3.5764e-04],\n",
      "          [ 1.3785e-04,  1.8251e-04,  1.6600e-04]]]], device='cuda:0')}, 4: {'momentum_buffer': tensor([ 0.0029,  0.0110,  0.0085, -0.0071,  0.0059,  0.0096,  0.0052,  0.0036,\n",
      "         0.0051, -0.0078,  0.0028, -0.0018,  0.0056, -0.0176, -0.0092,  0.0023,\n",
      "        -0.0017,  0.0011, -0.0110,  0.0026,  0.0077, -0.0059,  0.0043, -0.0002,\n",
      "        -0.0159,  0.0065,  0.0005, -0.0033,  0.0027, -0.0126,  0.0016, -0.0002,\n",
      "        -0.0069,  0.0009, -0.0012, -0.0052,  0.0046, -0.0066,  0.0162,  0.0014,\n",
      "        -0.0008,  0.0056,  0.0079,  0.0107, -0.0039,  0.0039, -0.0043, -0.0067,\n",
      "        -0.0042,  0.0079, -0.0067,  0.0035,  0.0054, -0.0152,  0.0057,  0.0022,\n",
      "        -0.0016, -0.0054,  0.0007, -0.0039,  0.0005, -0.0003,  0.0047,  0.0025],\n",
      "       device='cuda:0')}, 5: {'momentum_buffer': tensor([-1.7257e-03, -3.3821e-03, -7.5773e-03,  3.0086e-03,  2.7632e-03,\n",
      "         1.3633e-03,  5.9146e-05, -1.7976e-02,  4.6342e-03, -2.0027e-03,\n",
      "         1.4660e-03, -1.4716e-03,  6.0253e-04, -1.9146e-03, -1.0380e-02,\n",
      "        -1.4755e-03,  7.7199e-04,  2.0225e-04, -8.8628e-03,  2.1078e-03,\n",
      "         1.1285e-02, -6.2726e-03,  1.8272e-03, -1.6533e-04, -3.0393e-03,\n",
      "         6.1945e-03, -2.3404e-03, -2.7258e-03, -8.7047e-03, -4.0955e-03,\n",
      "         1.5141e-04, -3.3999e-04, -5.2329e-04, -1.5001e-03, -2.3291e-03,\n",
      "         9.0449e-04,  3.5443e-03,  9.6487e-03,  2.4708e-03,  1.1744e-03,\n",
      "         5.7626e-04, -2.7982e-03,  3.0177e-03,  5.0492e-03, -1.7053e-04,\n",
      "         1.4639e-03, -2.8903e-03,  3.1673e-04, -2.0932e-03,  4.3827e-03,\n",
      "         4.8998e-05,  3.2277e-03,  4.6996e-03, -9.2390e-03,  6.6986e-05,\n",
      "         6.1632e-04,  1.4414e-03, -1.8144e-04, -8.9243e-04,  6.1717e-05,\n",
      "         8.2365e-04,  4.5558e-04,  1.6391e-03,  1.3492e-03], device='cuda:0')}, 6: {'momentum_buffer': tensor([[[[ 1.3064e-04, -2.7803e-05, -5.6118e-05],\n",
      "          [ 4.2091e-04,  1.7561e-04,  1.2769e-04],\n",
      "          [ 4.7697e-04,  1.6080e-04,  4.1388e-05]],\n",
      "\n",
      "         [[ 7.2754e-05, -6.0789e-05, -3.0095e-05],\n",
      "          [ 2.1596e-04, -1.5303e-05, -1.4242e-04],\n",
      "          [ 5.4583e-04,  3.2147e-04,  8.6853e-05]],\n",
      "\n",
      "         [[ 1.1854e-03,  1.0482e-03,  3.4063e-04],\n",
      "          [ 1.2258e-03,  1.4947e-03,  6.6722e-04],\n",
      "          [ 9.2915e-04,  1.5112e-03,  8.7069e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.4553e-05,  1.5682e-04, -8.5411e-05],\n",
      "          [-3.7945e-05,  6.0628e-05, -1.8058e-04],\n",
      "          [-7.4810e-05,  1.6501e-05, -2.4138e-04]],\n",
      "\n",
      "         [[ 1.6562e-04, -1.7157e-04,  1.0547e-04],\n",
      "          [ 1.2146e-04, -2.0900e-04,  7.2441e-05],\n",
      "          [ 1.3472e-04, -2.1850e-04,  8.2848e-05]],\n",
      "\n",
      "         [[-3.5473e-04, -6.7411e-05,  2.4070e-05],\n",
      "          [-9.5545e-06,  6.1693e-04,  7.1207e-04],\n",
      "          [ 3.2716e-04,  1.0453e-03,  1.2172e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 3.2857e-04,  2.7485e-04,  3.3931e-04],\n",
      "          [ 4.6933e-04,  4.1189e-04,  4.0332e-04],\n",
      "          [ 7.0628e-04,  6.4981e-04,  5.5386e-04]],\n",
      "\n",
      "         [[-4.5519e-04, -3.8343e-04, -6.9300e-04],\n",
      "          [-6.2163e-04, -4.8648e-04, -6.4858e-04],\n",
      "          [-8.1595e-04, -5.3403e-04, -4.6953e-04]],\n",
      "\n",
      "         [[-7.5196e-05,  7.1807e-04,  4.9709e-04],\n",
      "          [ 2.6047e-05,  9.2006e-04,  7.1742e-04],\n",
      "          [-1.4602e-04,  7.8248e-04,  8.2674e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.4085e-05,  7.4927e-05, -1.0419e-05],\n",
      "          [-5.0933e-05,  9.3299e-05,  1.2823e-06],\n",
      "          [-3.2757e-05,  1.1855e-04,  3.3522e-05]],\n",
      "\n",
      "         [[ 3.6005e-05, -3.4340e-06, -4.3686e-05],\n",
      "          [ 7.0623e-05,  4.0672e-05, -7.1030e-06],\n",
      "          [ 5.2946e-05,  2.9713e-05, -1.7913e-05]],\n",
      "\n",
      "         [[-3.9424e-04,  2.5471e-04,  1.5543e-04],\n",
      "          [-6.4745e-04,  2.1757e-04,  1.7596e-04],\n",
      "          [-4.3466e-04,  6.3500e-05,  6.4338e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 2.1488e-03,  1.9035e-03,  2.0566e-03],\n",
      "          [ 1.0826e-03,  9.4989e-04,  1.0014e-03],\n",
      "          [ 2.2535e-04,  2.1943e-04,  2.6687e-04]],\n",
      "\n",
      "         [[ 2.2508e-03,  2.8360e-03,  2.2644e-03],\n",
      "          [ 1.6746e-03,  2.3149e-03,  1.7931e-03],\n",
      "          [-3.2733e-04,  1.5777e-04, -2.5342e-04]],\n",
      "\n",
      "         [[ 3.8588e-03,  5.2629e-03,  5.3217e-03],\n",
      "          [ 1.3094e-03,  2.3968e-03,  2.2952e-03],\n",
      "          [ 4.2050e-03,  4.8325e-03,  4.6477e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.0798e-04, -1.8866e-04,  1.3732e-04],\n",
      "          [-3.4234e-03, -3.2712e-03, -2.9634e-03],\n",
      "          [ 1.5498e-04,  3.4517e-04,  6.4069e-04]],\n",
      "\n",
      "         [[ 5.9369e-04,  7.8210e-04,  4.7324e-04],\n",
      "          [ 6.5990e-04,  8.2582e-04,  4.8427e-04],\n",
      "          [ 5.5870e-04,  6.5967e-04,  3.2493e-04]],\n",
      "\n",
      "         [[ 2.6981e-03,  3.0299e-03,  3.3243e-03],\n",
      "          [ 3.0232e-03,  3.0186e-03,  3.4066e-03],\n",
      "          [ 3.9830e-04,  1.5275e-04,  6.6540e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 4.5801e-04,  4.9677e-04,  3.8483e-05],\n",
      "          [ 2.4973e-04,  3.2122e-04, -1.0356e-04],\n",
      "          [-2.8603e-04, -1.6236e-04, -6.0649e-04]],\n",
      "\n",
      "         [[ 1.1224e-03,  1.5566e-03,  1.9335e-03],\n",
      "          [ 4.2412e-04,  1.3890e-03,  1.7961e-03],\n",
      "          [ 2.2033e-04,  1.4225e-03,  1.9631e-03]],\n",
      "\n",
      "         [[-4.4330e-03, -2.3774e-03, -1.4799e-03],\n",
      "          [-5.2192e-03, -2.5725e-03, -1.2797e-03],\n",
      "          [-5.0563e-03, -2.4784e-03, -8.3780e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.5374e-04, -5.0664e-04, -2.6588e-04],\n",
      "          [-3.6855e-04, -5.7838e-04, -3.5418e-04],\n",
      "          [ 1.1862e-04, -9.2444e-05,  1.3439e-04]],\n",
      "\n",
      "         [[-2.4805e-04,  9.2499e-05, -1.1898e-04],\n",
      "          [-2.4035e-04,  7.7241e-05, -1.2476e-04],\n",
      "          [-1.7898e-04,  1.3604e-04, -7.8338e-05]],\n",
      "\n",
      "         [[-1.6833e-03, -9.9242e-04, -5.0538e-05],\n",
      "          [-1.2386e-03, -6.9454e-04,  5.9413e-04],\n",
      "          [-1.5633e-03, -1.2504e-03,  3.1974e-04]]],\n",
      "\n",
      "\n",
      "        [[[-2.9261e-04, -8.3283e-05, -1.5280e-04],\n",
      "          [-2.7448e-04, -2.3363e-04, -3.1702e-04],\n",
      "          [-1.4450e-04, -2.4000e-04, -3.8859e-04]],\n",
      "\n",
      "         [[ 2.9231e-04, -7.7655e-04, -1.8899e-04],\n",
      "          [ 5.4117e-04, -4.8495e-04, -1.7503e-05],\n",
      "          [ 7.6277e-04, -2.1360e-04,  2.2733e-04]],\n",
      "\n",
      "         [[-3.3084e-04, -6.1889e-04, -4.0217e-04],\n",
      "          [-1.9387e-04, -4.5773e-04,  3.8970e-05],\n",
      "          [-1.4863e-04, -2.4904e-04,  2.0408e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.9666e-05, -2.4705e-04, -1.7847e-04],\n",
      "          [-1.9862e-05, -2.4030e-04, -1.2844e-04],\n",
      "          [-2.5655e-05, -2.5965e-04, -1.4500e-04]],\n",
      "\n",
      "         [[-2.9236e-04, -4.5256e-04, -4.5170e-06],\n",
      "          [-3.4842e-04, -4.8370e-04, -2.4491e-05],\n",
      "          [-3.8228e-04, -4.9325e-04, -1.7731e-05]],\n",
      "\n",
      "         [[ 1.9381e-04,  7.5082e-04, -1.5135e-05],\n",
      "          [-6.3530e-04,  4.8773e-04,  8.0011e-05],\n",
      "          [-1.1489e-03,  3.0401e-04,  1.2033e-04]]],\n",
      "\n",
      "\n",
      "        [[[-7.3455e-04,  1.3622e-04, -6.4019e-04],\n",
      "          [-6.7503e-04,  2.3274e-04, -3.6698e-04],\n",
      "          [-9.0855e-04, -9.9571e-05, -4.9947e-04]],\n",
      "\n",
      "         [[ 2.1342e-03,  2.0443e-03,  2.6051e-03],\n",
      "          [ 1.9920e-03,  2.1470e-03,  2.6537e-03],\n",
      "          [ 9.7405e-04,  1.2511e-03,  1.3335e-03]],\n",
      "\n",
      "         [[-2.2606e-03, -2.0834e-03,  3.1844e-04],\n",
      "          [-4.1754e-03, -3.2890e-03, -1.2893e-03],\n",
      "          [-4.7181e-03, -2.7837e-03, -7.6796e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.4946e-04,  3.9106e-04, -1.5972e-04],\n",
      "          [ 9.3494e-05, -5.3498e-05, -6.2399e-04],\n",
      "          [ 8.1210e-05, -2.9383e-05, -6.6949e-04]],\n",
      "\n",
      "         [[ 5.0066e-04, -5.4492e-04,  1.7028e-05],\n",
      "          [ 4.1059e-04, -6.5663e-04, -5.9554e-05],\n",
      "          [ 3.7913e-04, -7.9546e-04, -1.4456e-04]],\n",
      "\n",
      "         [[-6.0876e-04, -2.8995e-03, -7.6850e-04],\n",
      "          [-5.0885e-05, -2.9986e-03, -2.5891e-04],\n",
      "          [ 2.8143e-04, -2.5853e-03,  1.0280e-03]]]], device='cuda:0')}, 7: {'momentum_buffer': tensor([ 4.0020e-03,  4.0696e-03, -1.8321e-02,  4.6846e-03,  1.9834e-03,\n",
      "         2.7190e-03, -6.9197e-03,  3.5584e-03, -3.6304e-03,  3.9693e-03,\n",
      "         3.4903e-03, -3.9480e-03, -1.0982e-03, -1.0929e-02,  1.5720e-03,\n",
      "         4.2453e-03, -1.1419e-02, -7.1834e-03,  5.7257e-04,  8.8559e-04,\n",
      "        -4.5657e-03,  8.2516e-03,  3.5636e-03,  5.3795e-03,  1.4181e-03,\n",
      "        -3.3139e-03,  1.0909e-02, -5.0123e-03, -6.8871e-03,  3.6414e-03,\n",
      "         2.9907e-03,  7.5749e-03,  4.5444e-03, -1.2147e-03,  1.4623e-03,\n",
      "         2.2384e-03,  3.3346e-03, -4.6188e-03, -7.9649e-04, -1.4975e-03,\n",
      "        -1.3208e-03,  4.9199e-03, -1.2226e-02,  2.4772e-04, -5.3807e-03,\n",
      "        -1.2156e-02,  2.4413e-03, -1.0343e-02,  2.0696e-03, -7.2469e-03,\n",
      "         5.2577e-04, -2.9420e-03,  7.8599e-03,  4.0332e-03,  3.8182e-03,\n",
      "         1.8422e-03,  5.3689e-03, -1.6834e-02, -7.7818e-03, -4.6426e-03,\n",
      "         4.9264e-03, -9.3858e-03,  3.1393e-04,  1.5980e-05], device='cuda:0')}, 8: {'momentum_buffer': tensor([ 0.0016, -0.0028, -0.0027, -0.0024,  0.0011,  0.0040,  0.0032, -0.0027,\n",
      "         0.0012, -0.0105, -0.0018,  0.0003, -0.0016, -0.0013, -0.0115,  0.0004,\n",
      "         0.0031,  0.0026,  0.0005, -0.0020, -0.0008,  0.0028,  0.0046,  0.0067,\n",
      "        -0.0011,  0.0028,  0.0047,  0.0004,  0.0006,  0.0042,  0.0023,  0.0007,\n",
      "         0.0007,  0.0070,  0.0042,  0.0007,  0.0024,  0.0010,  0.0022, -0.0003,\n",
      "        -0.0012,  0.0052,  0.0013, -0.0036, -0.0016, -0.0025,  0.0035,  0.0047,\n",
      "        -0.0031, -0.0031,  0.0001,  0.0005,  0.0063,  0.0024, -0.0025,  0.0039,\n",
      "         0.0095, -0.0079, -0.0052, -0.0016,  0.0015,  0.0081,  0.0027,  0.0051],\n",
      "       device='cuda:0')}, 9: {'momentum_buffer': tensor([[[[-5.4747e-04, -5.7729e-04, -7.7165e-04],\n",
      "          [-4.3284e-04, -5.3121e-04, -7.1780e-04],\n",
      "          [-2.0552e-04, -3.1189e-04, -4.8627e-04]],\n",
      "\n",
      "         [[-7.4986e-04, -4.3521e-04, -6.4012e-05],\n",
      "          [-3.4268e-04, -5.7907e-04, -4.1863e-04],\n",
      "          [ 8.3248e-05, -1.7710e-04, -5.7976e-05]],\n",
      "\n",
      "         [[ 2.0998e-04,  4.0432e-04,  9.6448e-04],\n",
      "          [ 4.5455e-04,  5.6465e-04,  1.3355e-03],\n",
      "          [-1.0242e-03, -6.3207e-04,  4.3412e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.9974e-04,  2.7855e-04,  6.7074e-04],\n",
      "          [-1.5768e-04,  4.8224e-04,  6.4985e-04],\n",
      "          [-2.6472e-04,  1.7611e-04,  3.0572e-04]],\n",
      "\n",
      "         [[ 1.4299e-03,  6.4528e-05, -4.7596e-04],\n",
      "          [ 1.1905e-03,  1.5797e-04, -5.4240e-04],\n",
      "          [ 8.2278e-04,  4.2026e-05, -6.6520e-04]],\n",
      "\n",
      "         [[ 4.2713e-04,  8.7175e-04,  8.9598e-04],\n",
      "          [-1.5630e-03, -1.5394e-03, -1.7351e-03],\n",
      "          [-1.6731e-03, -1.8114e-03, -1.9581e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 4.1635e-04,  6.2440e-05,  1.6057e-04],\n",
      "          [ 4.0035e-04, -5.2717e-05,  8.3383e-05],\n",
      "          [ 3.4628e-04, -1.3503e-04,  4.4745e-05]],\n",
      "\n",
      "         [[-8.8166e-05,  6.9976e-05,  1.0187e-04],\n",
      "          [ 1.0068e-04,  1.2549e-04,  1.2450e-04],\n",
      "          [-3.5717e-05, -4.9812e-05,  2.8899e-05]],\n",
      "\n",
      "         [[-2.9748e-03, -2.4999e-03, -1.1861e-03],\n",
      "          [-3.4584e-03, -3.0609e-03, -1.5356e-03],\n",
      "          [-3.6339e-03, -3.2245e-03, -1.4398e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.1612e-04, -2.6799e-04, -5.0232e-04],\n",
      "          [-1.0310e-03, -7.2038e-05, -1.9731e-04],\n",
      "          [-1.0534e-03,  4.3982e-05,  1.2908e-05]],\n",
      "\n",
      "         [[ 2.9765e-04,  4.2445e-05, -1.8523e-04],\n",
      "          [ 2.2391e-04, -3.7696e-05, -5.1941e-04],\n",
      "          [ 1.4483e-04, -1.2336e-04, -8.0566e-04]],\n",
      "\n",
      "         [[-5.6754e-04, -2.2198e-04, -7.3172e-05],\n",
      "          [-6.5605e-04,  5.7645e-05,  3.0951e-04],\n",
      "          [-2.8633e-04,  1.0623e-04,  2.8513e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 2.2228e-04,  1.5078e-04,  3.2331e-04],\n",
      "          [-1.0885e-04, -3.4311e-04, -2.3989e-04],\n",
      "          [-5.9699e-04, -8.8238e-04, -8.1023e-04]],\n",
      "\n",
      "         [[ 3.6300e-04,  5.9029e-04,  8.0529e-04],\n",
      "          [ 7.1026e-05,  2.3036e-04,  3.1223e-04],\n",
      "          [ 1.0907e-04,  1.4311e-04,  1.5137e-04]],\n",
      "\n",
      "         [[ 2.4407e-03,  1.7615e-03,  8.8598e-04],\n",
      "          [ 6.6725e-04,  2.7177e-04, -1.2963e-04],\n",
      "          [ 5.8074e-04,  2.2380e-04, -1.1850e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.0712e-04, -2.1156e-04, -2.9482e-04],\n",
      "          [ 3.7750e-04, -2.0343e-04, -9.1750e-05],\n",
      "          [ 9.8476e-04,  4.2253e-04,  3.6881e-04]],\n",
      "\n",
      "         [[ 1.7496e-04,  1.6153e-03,  7.8942e-04],\n",
      "          [ 1.1366e-04,  1.9070e-03,  9.8038e-04],\n",
      "          [-5.0762e-05,  1.9933e-03,  1.4624e-03]],\n",
      "\n",
      "         [[-5.8673e-04, -1.3823e-03, -6.7656e-04],\n",
      "          [-1.3120e-03, -1.5828e-03, -1.6252e-03],\n",
      "          [-4.0350e-04, -4.7247e-04, -1.0145e-03]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-2.2569e-04, -3.1929e-05,  1.0732e-04],\n",
      "          [-9.2064e-05,  7.4136e-05,  2.7083e-04],\n",
      "          [ 7.4781e-06,  1.9563e-04,  4.6637e-04]],\n",
      "\n",
      "         [[-3.2111e-04, -4.7136e-04, -4.2106e-04],\n",
      "          [ 1.4764e-04,  1.4367e-05,  3.3793e-05],\n",
      "          [ 2.5092e-04,  2.5175e-04,  4.1226e-04]],\n",
      "\n",
      "         [[-7.7804e-04, -8.1589e-04, -9.1589e-04],\n",
      "          [-5.9308e-04, -6.2487e-04, -8.1644e-04],\n",
      "          [-6.4316e-04, -6.1691e-04, -7.4086e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.1051e-04,  4.9655e-04,  1.3707e-04],\n",
      "          [ 8.3069e-04,  7.1985e-04,  3.4669e-04],\n",
      "          [ 2.6297e-04,  1.0895e-04, -2.3777e-04]],\n",
      "\n",
      "         [[ 5.2024e-04, -4.8657e-04, -4.4313e-04],\n",
      "          [ 3.0450e-04, -4.4664e-04, -4.4260e-04],\n",
      "          [ 1.1780e-04, -3.8787e-04, -2.5314e-04]],\n",
      "\n",
      "         [[ 1.9101e-03,  1.7460e-03,  1.7161e-03],\n",
      "          [ 8.7836e-04,  9.2999e-04,  1.1808e-03],\n",
      "          [-7.6554e-05, -4.2607e-04, -1.7979e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 3.6998e-04,  6.6549e-04,  1.4502e-04],\n",
      "          [ 3.8731e-04,  6.0982e-04,  9.6421e-05],\n",
      "          [ 5.2414e-04,  7.2533e-04,  2.2600e-04]],\n",
      "\n",
      "         [[ 1.3634e-04,  2.8346e-04,  7.9747e-05],\n",
      "          [ 1.4109e-04,  2.5937e-04,  8.9644e-05],\n",
      "          [ 9.0064e-05,  2.4937e-04,  1.1176e-04]],\n",
      "\n",
      "         [[-1.1430e-03, -1.2864e-03, -1.6206e-03],\n",
      "          [-8.2328e-04, -1.0937e-03, -1.4811e-03],\n",
      "          [-1.0334e-03, -1.2850e-03, -1.5525e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.2574e-04, -7.8367e-04, -1.6464e-04],\n",
      "          [-9.6438e-04, -9.8106e-04, -2.9265e-04],\n",
      "          [-1.6147e-03, -1.5865e-03, -8.6034e-04]],\n",
      "\n",
      "         [[ 1.2973e-04,  8.4224e-04, -9.8977e-05],\n",
      "          [ 4.1437e-04,  1.0008e-03, -5.5243e-05],\n",
      "          [ 3.5831e-04,  1.3200e-03, -1.1774e-04]],\n",
      "\n",
      "         [[ 1.3566e-03,  1.2364e-03,  8.0095e-04],\n",
      "          [ 1.3790e-03,  1.2205e-03,  6.2226e-04],\n",
      "          [ 1.0778e-03,  3.2227e-05, -3.0541e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 6.4871e-04,  1.0103e-03,  1.0277e-03],\n",
      "          [-6.7914e-05,  2.9576e-04,  4.1911e-04],\n",
      "          [ 2.1485e-05,  3.5539e-04,  5.7035e-04]],\n",
      "\n",
      "         [[-2.5997e-04, -3.2607e-04, -3.9051e-04],\n",
      "          [ 3.1837e-05, -2.5004e-04, -3.8508e-04],\n",
      "          [ 2.4648e-04, -6.7972e-05, -1.6043e-04]],\n",
      "\n",
      "         [[-1.4622e-03, -2.1506e-03, -2.3046e-03],\n",
      "          [ 2.3715e-05, -5.0254e-04, -3.7720e-04],\n",
      "          [-6.5538e-04, -1.0561e-03, -7.6999e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3427e-03, -1.3721e-03, -1.2595e-03],\n",
      "          [-4.4802e-04, -1.7365e-04, -2.5824e-04],\n",
      "          [ 1.8248e-04,  6.9110e-04,  3.6712e-04]],\n",
      "\n",
      "         [[ 1.5195e-03,  7.2948e-04,  4.2945e-04],\n",
      "          [ 1.4678e-03,  4.8868e-04,  1.9336e-04],\n",
      "          [ 1.4337e-03,  3.9639e-04, -2.3419e-04]],\n",
      "\n",
      "         [[ 8.0817e-05,  9.4280e-04,  1.4726e-03],\n",
      "          [-9.9881e-04, -3.7350e-04,  1.1089e-04],\n",
      "          [ 2.0726e-03,  1.7610e-03,  1.6084e-03]]]], device='cuda:0')}, 10: {'momentum_buffer': tensor([-0.0147, -0.0013,  0.0012, -0.0093,  0.0066, -0.0009, -0.0042, -0.0020,\n",
      "         0.0030, -0.0013, -0.0008, -0.0034,  0.0061, -0.0091,  0.0034,  0.0064,\n",
      "        -0.0006,  0.0016,  0.0049, -0.0023,  0.0054,  0.0040,  0.0044,  0.0036,\n",
      "         0.0007,  0.0088,  0.0086, -0.0004,  0.0088, -0.0108, -0.0035,  0.0062,\n",
      "        -0.0012,  0.0013,  0.0032,  0.0010, -0.0025,  0.0006,  0.0052, -0.0020,\n",
      "        -0.0090, -0.0003, -0.0012, -0.0005,  0.0017,  0.0006, -0.0057, -0.0092,\n",
      "        -0.0012,  0.0027, -0.0057, -0.0009, -0.0017, -0.0045,  0.0109, -0.0023,\n",
      "        -0.0087,  0.0035,  0.0011,  0.0056,  0.0020, -0.0028, -0.0055,  0.0016],\n",
      "       device='cuda:0')}, 11: {'momentum_buffer': tensor([-2.1925e-02, -4.4220e-04, -5.1732e-03, -2.5984e-03,  3.1638e-03,\n",
      "        -5.3183e-04,  1.0408e-03, -2.2020e-02, -4.5863e-03, -1.1405e-02,\n",
      "         2.5634e-03,  5.0094e-05,  3.7596e-03,  1.7565e-03, -1.1469e-03,\n",
      "         6.7128e-04,  7.6361e-03,  2.4320e-03,  1.7545e-03, -6.8992e-03,\n",
      "         2.7074e-03,  2.5562e-03,  3.5264e-03,  1.8655e-03, -3.4744e-04,\n",
      "         8.4633e-03,  5.1833e-03,  1.2409e-04,  2.8398e-03,  7.4680e-04,\n",
      "        -1.7426e-03,  4.7819e-03,  6.5860e-04,  1.1323e-03,  1.3791e-03,\n",
      "         1.7356e-03, -8.7163e-03,  5.5026e-04,  6.7620e-03, -1.1785e-02,\n",
      "        -2.0605e-03, -7.2694e-04, -1.1906e-03, -4.4598e-03,  3.8989e-03,\n",
      "         2.5093e-03, -3.0385e-03, -1.7523e-03, -7.2362e-04, -3.1309e-03,\n",
      "        -2.7360e-03,  3.9878e-03,  1.0357e-02, -3.3165e-03,  4.5673e-03,\n",
      "         9.0651e-03, -1.0972e-02,  4.2870e-03, -6.5514e-03, -2.6048e-03,\n",
      "         3.1448e-03,  8.7634e-03, -2.1485e-03,  5.3218e-03], device='cuda:0')}, 12: {'momentum_buffer': tensor([[[[ 9.4907e-04,  3.5473e-04,  9.0694e-05],\n",
      "          [ 5.8928e-04, -4.4323e-06, -5.0385e-04],\n",
      "          [-3.5837e-04, -7.0344e-04, -1.0878e-03]],\n",
      "\n",
      "         [[ 5.4323e-04,  5.6781e-04, -5.0778e-05],\n",
      "          [ 5.2459e-04,  5.5259e-04,  4.9218e-06],\n",
      "          [ 6.7774e-04,  6.9600e-04,  1.7331e-04]],\n",
      "\n",
      "         [[-1.0685e-03, -1.1964e-03, -6.7161e-04],\n",
      "          [-1.1702e-03, -1.3612e-03, -8.7400e-04],\n",
      "          [-9.1505e-04, -1.0436e-03, -1.5330e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1577e-03,  1.0389e-03,  7.5697e-04],\n",
      "          [ 5.2004e-04,  6.8567e-04,  5.0269e-04],\n",
      "          [ 1.0474e-04,  5.2974e-05, -2.6408e-04]],\n",
      "\n",
      "         [[ 9.3564e-05, -9.9750e-05,  1.1035e-03],\n",
      "          [ 1.8925e-04, -3.8537e-05,  1.1070e-03],\n",
      "          [ 1.6032e-04, -1.3081e-04,  1.0929e-03]],\n",
      "\n",
      "         [[-1.3154e-03, -1.4225e-03, -6.6263e-04],\n",
      "          [-1.5277e-03, -1.9618e-03, -1.6753e-03],\n",
      "          [-1.8179e-03, -2.4952e-03, -2.3780e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3377e-04, -1.9137e-04, -3.2350e-04],\n",
      "          [-1.3306e-04, -1.5425e-04, -1.7786e-04],\n",
      "          [-6.5309e-04, -1.6985e-04,  2.8221e-04]],\n",
      "\n",
      "         [[ 1.2939e-04,  7.3554e-05,  7.6299e-05],\n",
      "          [ 7.3192e-05, -3.2863e-05,  3.5714e-05],\n",
      "          [ 3.0537e-05, -1.9734e-06,  1.0457e-04]],\n",
      "\n",
      "         [[ 3.6673e-05, -1.1747e-04, -3.6501e-04],\n",
      "          [-1.5886e-04, -2.2231e-05,  5.5305e-05],\n",
      "          [-1.3333e-04,  1.8637e-05,  9.6124e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2773e-03,  1.3715e-03,  1.1081e-03],\n",
      "          [ 7.9312e-04,  5.8827e-04,  3.4590e-04],\n",
      "          [ 8.6086e-04,  6.6607e-04,  5.7700e-04]],\n",
      "\n",
      "         [[ 2.8367e-05,  2.0473e-04,  3.4578e-04],\n",
      "          [-2.8301e-05,  1.6927e-04,  1.5506e-04],\n",
      "          [-1.7207e-04,  1.9139e-04,  1.4441e-04]],\n",
      "\n",
      "         [[ 4.4036e-04,  1.6682e-04,  1.4426e-04],\n",
      "          [ 5.2437e-04,  6.2409e-05,  1.1808e-04],\n",
      "          [ 2.7359e-04,  1.6812e-05,  3.4273e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.0152e-03,  6.3259e-04,  2.8223e-04],\n",
      "          [ 8.5664e-04,  6.7494e-04,  8.3967e-04],\n",
      "          [-8.6740e-04, -1.6736e-03, -1.7558e-03]],\n",
      "\n",
      "         [[-2.1456e-04,  3.1512e-04, -1.1037e-03],\n",
      "          [-3.8218e-04,  2.5589e-04, -8.3759e-04],\n",
      "          [-4.4322e-04,  3.8869e-05, -1.0801e-03]],\n",
      "\n",
      "         [[ 3.7022e-04,  5.3166e-05,  9.3429e-04],\n",
      "          [-1.8195e-04, -9.5658e-04,  2.4902e-04],\n",
      "          [-6.4919e-04, -1.3429e-03, -5.7374e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3300e-03,  1.8806e-03,  2.0952e-03],\n",
      "          [ 2.5360e-04,  4.1933e-04,  6.2739e-04],\n",
      "          [ 5.3620e-04,  4.9225e-04,  3.2202e-04]],\n",
      "\n",
      "         [[ 8.4453e-05, -1.5842e-03,  5.0843e-04],\n",
      "          [ 8.4528e-05, -2.0201e-03,  6.9082e-04],\n",
      "          [ 1.3914e-04, -1.6305e-03,  7.9717e-04]],\n",
      "\n",
      "         [[-3.4335e-04, -4.8351e-04, -3.0904e-04],\n",
      "          [-4.4220e-04, -6.0422e-04, -3.5011e-04],\n",
      "          [-7.1693e-04, -9.9388e-04, -4.1388e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.2013e-03,  1.3366e-03,  1.3637e-03],\n",
      "          [ 4.7043e-04,  8.0112e-04,  9.2969e-04],\n",
      "          [ 5.2349e-04,  6.7706e-04,  5.7053e-04]],\n",
      "\n",
      "         [[ 1.8542e-04, -3.6390e-04,  9.3653e-05],\n",
      "          [ 1.4114e-04, -2.6075e-04,  1.1955e-04],\n",
      "          [ 4.4130e-04, -2.3579e-04,  2.5186e-04]],\n",
      "\n",
      "         [[ 9.7733e-05,  2.7619e-04, -4.2572e-04],\n",
      "          [ 3.1659e-04,  4.7910e-04, -2.3496e-04],\n",
      "          [ 1.2104e-03,  1.2197e-03,  1.9638e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5608e-03, -1.4261e-03, -1.1158e-03],\n",
      "          [-2.4757e-03, -2.5876e-03, -2.1798e-03],\n",
      "          [-1.6274e-03, -1.9511e-03, -1.9266e-03]],\n",
      "\n",
      "         [[ 2.1064e-04,  2.9017e-04, -1.0373e-03],\n",
      "          [ 1.0865e-05,  3.4634e-04, -1.1556e-03],\n",
      "          [ 1.1954e-04,  3.9324e-04, -9.3814e-04]],\n",
      "\n",
      "         [[ 4.3829e-04,  1.4859e-04, -7.1207e-04],\n",
      "          [ 1.9238e-04,  4.3157e-04, -3.4841e-04],\n",
      "          [ 7.2628e-04,  1.2086e-03,  3.8586e-04]]],\n",
      "\n",
      "\n",
      "        [[[-6.5244e-04, -4.6599e-04, -2.9874e-04],\n",
      "          [-9.8251e-04, -9.2255e-04, -7.6218e-04],\n",
      "          [-5.6917e-04, -5.9777e-04, -4.3930e-04]],\n",
      "\n",
      "         [[ 9.6797e-05, -2.0201e-04, -1.5363e-04],\n",
      "          [ 1.8215e-05, -9.8738e-05, -4.3645e-05],\n",
      "          [-2.4158e-04, -1.9653e-05, -6.6863e-05]],\n",
      "\n",
      "         [[-5.1858e-04, -1.5099e-04, -4.1206e-04],\n",
      "          [-5.1526e-04, -5.3979e-04, -4.6838e-04],\n",
      "          [-5.0559e-04, -7.7035e-04, -6.3028e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.4133e-04, -5.2847e-08,  4.1374e-04],\n",
      "          [-7.9951e-04, -6.8952e-04, -5.4865e-04],\n",
      "          [ 2.8042e-04, -4.8959e-05, -4.7106e-04]],\n",
      "\n",
      "         [[-2.1198e-04, -2.2876e-04,  6.5441e-05],\n",
      "          [-2.6140e-04, -2.0588e-04,  1.2611e-04],\n",
      "          [-3.8383e-04, -3.4571e-04, -1.0481e-05]],\n",
      "\n",
      "         [[-4.1182e-04, -8.8389e-04, -4.9077e-04],\n",
      "          [-2.7831e-04, -8.4168e-04, -4.2758e-04],\n",
      "          [ 3.5441e-04, -2.6249e-04, -1.8182e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.0249e-03,  1.6365e-03,  2.2775e-03],\n",
      "          [ 6.1064e-04,  1.5064e-03,  2.0440e-03],\n",
      "          [ 1.3208e-03,  1.7679e-03,  1.9063e-03]],\n",
      "\n",
      "         [[ 1.0724e-03, -6.6818e-04,  6.7825e-06],\n",
      "          [ 1.0245e-03, -6.0872e-04,  1.6961e-04],\n",
      "          [ 8.9530e-04, -3.1168e-04,  5.1160e-04]],\n",
      "\n",
      "         [[ 1.0843e-03,  1.2981e-03,  7.4925e-04],\n",
      "          [ 6.0159e-04,  7.8204e-04,  3.2629e-04],\n",
      "          [ 3.5104e-04,  4.3630e-04,  3.6189e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.4079e-04, -1.2636e-04,  1.2083e-04],\n",
      "          [ 3.6544e-04, -2.1019e-04, -5.1169e-04],\n",
      "          [ 4.8167e-04,  2.2502e-04, -2.0522e-04]],\n",
      "\n",
      "         [[-1.5572e-04,  2.7432e-04,  7.2220e-05],\n",
      "          [-1.5914e-04,  1.7316e-04, -1.8342e-04],\n",
      "          [ 9.4595e-05, -2.2991e-04, -3.6924e-04]],\n",
      "\n",
      "         [[ 8.1079e-04,  1.4086e-03,  1.0471e-03],\n",
      "          [ 1.8140e-04,  9.1196e-04,  7.6767e-04],\n",
      "          [ 2.0801e-04,  5.5559e-04,  1.7882e-04]]]], device='cuda:0')}, 13: {'momentum_buffer': tensor([ 1.2948e-03,  2.4250e-03,  4.5910e-03, -7.6587e-03, -6.8160e-04,\n",
      "         3.1135e-03,  5.4159e-04,  6.3614e-03,  3.0533e-03,  2.2105e-03,\n",
      "         2.2014e-03,  3.1532e-03, -2.4157e-03,  6.1510e-03,  1.3291e-03,\n",
      "        -8.0807e-04,  4.2711e-04, -1.6375e-03, -7.5934e-03, -3.7078e-03,\n",
      "         5.9353e-03,  1.5190e-03,  3.3039e-03,  3.7416e-03, -3.3527e-04,\n",
      "        -1.2989e-03, -5.5141e-03,  9.0377e-04, -7.7542e-04,  3.9591e-03,\n",
      "        -1.5214e-03, -8.3283e-03,  1.3001e-03,  3.1906e-03,  1.0777e-03,\n",
      "         3.4659e-03,  5.0937e-04, -6.5115e-03, -4.3533e-03,  3.5913e-04,\n",
      "        -1.4927e-03, -2.0777e-03, -3.2943e-03,  3.3643e-03,  1.7881e-03,\n",
      "         1.6713e-02,  1.9997e-02, -3.1580e-03, -2.9769e-03, -5.0495e-03,\n",
      "         4.7033e-03, -4.1981e-03,  1.1045e-03, -2.8437e-03, -1.9937e-03,\n",
      "         2.6413e-03,  4.1537e-03,  4.3717e-03, -6.6429e-04, -6.5496e-05,\n",
      "        -2.3589e-03, -5.2423e-04,  1.4805e-03, -3.0084e-03], device='cuda:0')}, 14: {'momentum_buffer': tensor([-7.4868e-04, -2.5569e-03, -1.7776e-03, -6.8617e-03, -6.7700e-04,\n",
      "         1.9458e-03,  2.4172e-04, -8.4358e-04,  1.4315e-04,  8.8477e-04,\n",
      "         7.0767e-04,  6.1930e-04,  3.9620e-04, -2.5354e-03, -4.7018e-03,\n",
      "         3.5790e-03,  5.6176e-03, -2.8197e-03, -3.4008e-03,  2.5229e-03,\n",
      "         5.3982e-04,  1.1945e-03,  7.5820e-03,  1.2660e-03, -5.2481e-04,\n",
      "         3.0752e-03,  2.0349e-03, -6.3111e-04,  1.4253e-03,  8.8269e-04,\n",
      "         4.0021e-03, -7.1675e-04,  1.0569e-03,  6.5165e-03,  2.5905e-03,\n",
      "         1.9393e-03, -1.3752e-03, -5.2789e-03,  1.8123e-03, -5.4964e-04,\n",
      "        -1.5169e-03,  1.6424e-03,  9.9339e-04,  7.0088e-04,  2.0793e-05,\n",
      "         2.7759e-03,  2.9244e-03,  9.0070e-04,  1.1898e-03, -5.4992e-03,\n",
      "        -8.1386e-04,  8.3434e-04,  2.6151e-03,  2.0474e-03,  4.0971e-04,\n",
      "         2.9442e-03,  2.7121e-03,  3.2957e-03, -4.9027e-03, -5.6182e-04,\n",
      "         9.6825e-04,  3.4125e-03,  1.1930e-03,  2.4359e-03], device='cuda:0')}, 15: {'momentum_buffer': tensor([[[[ 8.1503e-04,  7.6649e-04,  9.1227e-04],\n",
      "          [ 8.1444e-04,  7.0772e-04,  8.6585e-04],\n",
      "          [ 4.9440e-04,  4.5685e-04,  4.9547e-04]],\n",
      "\n",
      "         [[-3.9657e-04, -5.2918e-04, -5.3140e-04],\n",
      "          [ 3.1222e-04,  2.1303e-04, -2.0095e-05],\n",
      "          [-1.4546e-05, -3.2859e-04, -3.0135e-04]],\n",
      "\n",
      "         [[ 2.9717e-04,  8.0645e-04,  2.0298e-04],\n",
      "          [-8.8429e-04, -2.5536e-04, -7.6134e-04],\n",
      "          [ 2.4662e-05,  3.6158e-04, -1.4473e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.6170e-04,  7.6905e-04,  9.7157e-04],\n",
      "          [-7.2568e-04, -7.1932e-04, -4.6026e-04],\n",
      "          [-3.3646e-04, -2.8382e-04, -3.4152e-06]],\n",
      "\n",
      "         [[ 2.3099e-04,  8.1534e-04,  8.3128e-04],\n",
      "          [-1.2551e-04,  3.8200e-04,  7.4065e-04],\n",
      "          [-6.2598e-05,  4.5398e-04,  4.8211e-04]],\n",
      "\n",
      "         [[ 2.2095e-03,  1.6399e-03,  1.2073e-03],\n",
      "          [ 1.0053e-03,  6.6788e-04, -3.0063e-05],\n",
      "          [-4.9304e-04, -1.6595e-04, -6.0506e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 5.7272e-04,  4.8327e-04,  7.9386e-04],\n",
      "          [ 5.5641e-04,  5.0021e-04,  6.8798e-04],\n",
      "          [ 1.6068e-04,  1.5374e-04,  4.0112e-04]],\n",
      "\n",
      "         [[-1.2313e-05,  5.1270e-05,  2.3198e-04],\n",
      "          [-3.3193e-04, -4.0217e-05,  1.4200e-04],\n",
      "          [-6.0298e-04, -4.2800e-04, -1.0134e-05]],\n",
      "\n",
      "         [[-1.0518e-03,  3.5252e-04, -1.1264e-03],\n",
      "          [-1.7540e-03, -3.8905e-04, -1.3702e-03],\n",
      "          [-1.4563e-03, -4.0292e-05, -1.1194e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.2171e-05,  3.1091e-04,  8.7849e-04],\n",
      "          [ 4.8238e-05,  8.4537e-05,  4.6531e-04],\n",
      "          [ 9.6209e-04,  7.7871e-04,  6.8663e-04]],\n",
      "\n",
      "         [[ 1.4791e-04,  5.4280e-05,  1.7314e-04],\n",
      "          [ 2.5711e-05,  1.8366e-05,  9.5142e-05],\n",
      "          [-5.5143e-05, -5.0583e-05,  1.5243e-04]],\n",
      "\n",
      "         [[ 8.2404e-04,  1.2414e-03,  2.4505e-03],\n",
      "          [ 1.2643e-03,  1.0940e-03,  1.4062e-03],\n",
      "          [ 1.2974e-03,  3.6456e-04, -9.8088e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 5.0416e-04,  4.4957e-04,  5.0475e-04],\n",
      "          [ 2.6197e-04,  2.7704e-04,  3.8140e-04],\n",
      "          [ 3.7822e-05,  5.5511e-05,  1.5199e-04]],\n",
      "\n",
      "         [[ 6.7166e-04,  5.9816e-04,  4.2507e-04],\n",
      "          [ 6.0196e-04,  4.6017e-04,  3.5920e-04],\n",
      "          [-3.0293e-04, -4.2408e-04, -1.6609e-04]],\n",
      "\n",
      "         [[-3.6553e-04, -1.1106e-03, -8.0726e-04],\n",
      "          [ 1.2207e-04, -8.2138e-04, -5.5082e-04],\n",
      "          [ 1.7200e-04, -7.2800e-04, -5.9092e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.8695e-04, -7.6815e-04, -7.4948e-04],\n",
      "          [-4.2894e-04, -4.5122e-04, -4.1396e-04],\n",
      "          [-8.0471e-05,  7.8493e-05,  2.3936e-04]],\n",
      "\n",
      "         [[-8.4856e-04, -8.5894e-04, -9.6519e-04],\n",
      "          [-7.2556e-04, -8.7612e-04, -9.6956e-04],\n",
      "          [-5.7947e-04, -7.9296e-04, -8.2409e-04]],\n",
      "\n",
      "         [[-1.5575e-03, -7.2208e-04, -1.2169e-03],\n",
      "          [-1.0052e-03, -5.3078e-04, -8.4161e-04],\n",
      "          [-1.1978e-03, -2.9749e-04, -7.3192e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-7.2465e-04, -5.5094e-04,  7.4964e-05],\n",
      "          [-2.7695e-04, -1.8654e-04,  3.4310e-04],\n",
      "          [-2.2702e-04, -2.2663e-04,  3.3539e-04]],\n",
      "\n",
      "         [[ 1.8251e-04,  1.0089e-04,  5.7569e-05],\n",
      "          [ 2.6890e-04,  2.7348e-04,  3.8800e-04],\n",
      "          [-1.1289e-04, -1.0797e-04,  8.0270e-05]],\n",
      "\n",
      "         [[-1.5358e-04, -1.7150e-04, -8.2574e-04],\n",
      "          [-9.7185e-05,  1.7452e-04, -4.1449e-04],\n",
      "          [-5.0169e-04,  1.8816e-04, -6.1179e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.8683e-04, -7.8337e-05,  7.8426e-04],\n",
      "          [-1.0105e-04,  2.5462e-04,  1.0219e-03],\n",
      "          [-4.8698e-04, -1.6704e-04,  7.1823e-04]],\n",
      "\n",
      "         [[ 3.9939e-04,  6.1518e-04,  4.8895e-04],\n",
      "          [ 3.7185e-04,  4.2320e-04,  3.7340e-04],\n",
      "          [ 3.6904e-04,  2.2655e-04,  4.9719e-04]],\n",
      "\n",
      "         [[-2.3710e-04, -6.1815e-04,  2.3242e-05],\n",
      "          [ 1.1900e-03,  7.2028e-04,  8.4298e-04],\n",
      "          [ 1.4064e-03,  1.2029e-03,  7.3369e-04]]],\n",
      "\n",
      "\n",
      "        [[[-1.5903e-04, -7.1418e-05, -2.5476e-04],\n",
      "          [-2.3987e-04, -2.0446e-04, -3.3969e-04],\n",
      "          [ 2.2872e-05,  9.1521e-05, -3.1379e-05]],\n",
      "\n",
      "         [[ 6.1067e-05,  2.8108e-04,  2.4585e-04],\n",
      "          [ 2.4886e-04,  1.7099e-04, -1.8120e-04],\n",
      "          [ 1.2856e-04, -6.2034e-05, -2.9436e-04]],\n",
      "\n",
      "         [[-3.4615e-04,  1.1296e-04,  3.0187e-05],\n",
      "          [ 5.5292e-04,  6.4067e-04,  6.3629e-04],\n",
      "          [-3.7336e-05,  5.6568e-06, -1.1355e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.8497e-04, -4.4681e-04, -5.2707e-04],\n",
      "          [ 4.4762e-04,  5.6190e-04,  5.8478e-04],\n",
      "          [ 5.1646e-04,  8.3628e-04,  8.4229e-04]],\n",
      "\n",
      "         [[-1.1471e-04,  1.8720e-04,  1.9162e-04],\n",
      "          [-2.1560e-04,  1.7645e-04,  1.5082e-04],\n",
      "          [-1.5782e-04,  1.0684e-04, -5.0930e-05]],\n",
      "\n",
      "         [[-5.6693e-04, -5.1605e-04, -5.8489e-04],\n",
      "          [-5.6274e-04, -4.0110e-04, -2.6443e-04],\n",
      "          [ 1.5390e-03,  1.7238e-03,  1.5802e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.3865e-03, -1.2761e-03, -1.3468e-03],\n",
      "          [-1.2291e-03, -1.0497e-03, -1.1878e-03],\n",
      "          [-1.1140e-03, -1.0621e-03, -1.2359e-03]],\n",
      "\n",
      "         [[-1.0383e-03, -8.7733e-04, -4.6612e-04],\n",
      "          [-8.3163e-04, -9.6397e-04, -9.4903e-04],\n",
      "          [-9.4388e-04, -1.1556e-03, -1.0880e-03]],\n",
      "\n",
      "         [[ 1.1679e-03, -6.8900e-04, -5.5617e-04],\n",
      "          [ 1.8121e-03, -2.4492e-04, -1.0364e-04],\n",
      "          [ 1.3780e-03, -2.5160e-04, -2.5883e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.7664e-04, -6.1853e-04, -8.5377e-04],\n",
      "          [-2.4941e-04, -3.9602e-04, -5.2600e-04],\n",
      "          [-4.5712e-04, -5.1972e-04, -3.2204e-04]],\n",
      "\n",
      "         [[-2.7272e-04,  5.8970e-05, -5.0146e-04],\n",
      "          [-5.8587e-04, -1.3194e-04, -6.6526e-04],\n",
      "          [-7.3051e-04, -1.1781e-04, -7.0233e-04]],\n",
      "\n",
      "         [[ 1.6092e-04, -2.6410e-04, -5.7665e-04],\n",
      "          [-1.7853e-04,  2.3218e-04, -1.5603e-04],\n",
      "          [ 5.8088e-04,  8.2881e-04,  8.1358e-04]]]], device='cuda:0')}, 16: {'momentum_buffer': tensor([-9.8169e-03,  2.6588e-03, -1.7425e-02, -3.2810e-03,  3.6612e-03,\n",
      "        -6.3087e-03, -1.2346e-03, -8.0555e-03, -2.2755e-03, -3.2640e-03,\n",
      "         1.6713e-04, -4.7702e-03, -6.9331e-03,  1.7596e-03, -8.1815e-04,\n",
      "        -1.3180e-03,  1.0355e-03, -3.5956e-03,  2.0374e-03,  9.7244e-03,\n",
      "         1.7624e-03,  2.7562e-03, -2.3923e-03,  1.9868e-03,  2.6035e-03,\n",
      "         6.9100e-03,  1.3188e-03, -6.4235e-03,  3.4261e-04, -2.9368e-03,\n",
      "        -1.2629e-03, -1.5672e-03,  1.5047e-03, -1.0991e-03, -1.3090e-03,\n",
      "        -5.1251e-03,  6.0290e-03, -4.0831e-03, -3.2466e-03,  1.2506e-03,\n",
      "        -1.4687e-03,  7.6386e-03, -7.7706e-04, -3.0074e-03,  6.7141e-03,\n",
      "         7.1216e-03, -2.0452e-03, -6.2793e-03, -9.2088e-03,  7.7137e-04,\n",
      "        -2.7163e-03, -1.6978e-03,  8.8774e-04,  1.1837e-03,  3.5576e-03,\n",
      "         1.3794e-03,  6.0442e-04, -8.5661e-03,  3.4487e-03, -3.0941e-04,\n",
      "        -4.9220e-03,  2.5130e-03,  6.4433e-04, -3.1749e-03,  1.0503e-04,\n",
      "         8.1475e-03, -2.9858e-03,  8.6325e-04,  4.0888e-03,  8.5047e-03,\n",
      "         2.7210e-03,  6.0806e-03,  6.6049e-04,  1.5359e-03,  6.7461e-04,\n",
      "        -7.0558e-03, -5.9677e-03,  2.4708e-03, -4.1890e-03, -2.5569e-03,\n",
      "        -6.6034e-03,  3.9392e-03, -1.4920e-03,  9.1093e-03,  1.0260e-03,\n",
      "        -1.2544e-03,  2.1358e-03,  3.0645e-03,  7.2192e-03, -9.5546e-05,\n",
      "         2.6916e-03, -1.1106e-02, -2.8225e-03,  1.6996e-03, -7.2786e-03,\n",
      "        -4.0050e-03,  1.1722e-02, -7.2505e-03,  3.7053e-03, -2.0301e-03,\n",
      "         5.0230e-03, -1.9739e-03,  2.4002e-03, -5.3835e-03, -7.5238e-04,\n",
      "         1.8722e-03, -2.3337e-03, -3.7818e-03, -7.1397e-03, -3.8710e-03,\n",
      "         4.4279e-03, -5.1700e-04,  2.3394e-03,  7.4474e-03, -2.9189e-03,\n",
      "         1.8866e-03,  6.2998e-04,  1.1401e-02, -1.7903e-04,  3.2215e-03,\n",
      "         1.7001e-03,  1.8632e-03,  1.6815e-03,  3.5901e-03, -4.9730e-03,\n",
      "         3.6575e-03, -1.6781e-04,  7.9486e-04], device='cuda:0')}, 17: {'momentum_buffer': tensor([-7.2616e-03,  1.5612e-03, -1.2506e-02, -4.0290e-03,  3.6216e-03,\n",
      "        -3.9614e-03, -4.0901e-03, -1.0684e-02, -2.8995e-03, -2.5739e-03,\n",
      "         5.9364e-05, -4.2537e-03, -6.0017e-03, -2.7294e-04,  1.2084e-03,\n",
      "         1.0681e-04, -1.2592e-03, -4.6680e-04, -1.5483e-03,  7.7013e-04,\n",
      "        -2.8343e-03,  1.1404e-03, -2.3054e-03,  2.3002e-03,  8.1776e-04,\n",
      "         3.8273e-03, -4.2138e-04, -3.2001e-03, -4.3790e-04,  2.5876e-03,\n",
      "        -3.0932e-04, -2.3318e-06, -6.9787e-03,  1.3501e-03, -4.8987e-03,\n",
      "        -3.5997e-03,  2.5728e-03, -3.6001e-03, -4.4376e-03, -9.0107e-04,\n",
      "        -1.8851e-03,  4.6479e-03, -7.9598e-04, -2.9379e-03,  3.2702e-03,\n",
      "         8.2282e-03,  1.0591e-03, -4.2283e-03, -5.2956e-03,  2.5605e-03,\n",
      "        -2.7990e-03, -3.9322e-03, -1.8143e-03,  9.5548e-04,  5.3382e-03,\n",
      "        -2.1141e-03, -2.7559e-03, -2.7734e-03,  1.0762e-03, -3.4388e-04,\n",
      "         5.3685e-03,  3.8432e-04,  4.1777e-04, -3.1735e-03,  8.6641e-05,\n",
      "         9.4433e-03,  8.3772e-04,  1.8961e-03,  5.2775e-03,  4.2708e-03,\n",
      "         2.1538e-03,  3.2760e-03, -4.5953e-03, -1.1368e-03,  1.4686e-03,\n",
      "        -5.4607e-03, -4.4995e-03,  9.4285e-04, -5.5708e-03, -2.4996e-03,\n",
      "        -1.7304e-03,  5.4600e-03, -1.2094e-03,  3.4433e-04,  1.6214e-03,\n",
      "         6.1145e-04, -3.8492e-03, -9.1070e-04, -1.1102e-03,  6.6752e-04,\n",
      "         2.1769e-03, -1.6859e-03, -3.1255e-04, -8.9632e-04, -7.8042e-03,\n",
      "        -4.2467e-03,  6.1653e-03, -1.4558e-03,  2.2333e-03, -5.7762e-03,\n",
      "         2.5666e-03,  2.9615e-03, -1.5627e-04,  4.1722e-04, -1.1982e-05,\n",
      "         2.2274e-03, -4.8499e-03, -4.6133e-03, -4.0489e-03, -1.9725e-03,\n",
      "         9.0974e-04, -1.1592e-03,  1.3719e-04, -1.5347e-03,  1.4386e-03,\n",
      "         1.3286e-03, -9.2644e-04,  8.8708e-03,  4.2893e-03,  9.3920e-04,\n",
      "         2.1475e-03,  8.0804e-04, -9.7478e-04, -2.0259e-04, -4.1411e-03,\n",
      "         1.9646e-04, -3.5221e-03,  3.7398e-03], device='cuda:0')}, 18: {'momentum_buffer': tensor([[[[-7.1320e-04,  2.3972e-04,  4.2411e-04],\n",
      "          [ 1.6870e-04,  1.0273e-03,  1.4211e-03],\n",
      "          [-1.1353e-04,  3.3626e-04,  9.9666e-04]],\n",
      "\n",
      "         [[-1.1800e-04,  1.0420e-04,  2.8856e-04],\n",
      "          [ 1.6360e-04,  3.6987e-04,  6.2366e-04],\n",
      "          [-3.5129e-04, -2.1618e-05,  1.0851e-04]],\n",
      "\n",
      "         [[-4.1253e-05,  2.1271e-04, -7.6697e-05],\n",
      "          [ 9.6439e-04,  9.5611e-04,  7.8898e-05],\n",
      "          [ 4.2810e-04,  8.5605e-04,  7.2769e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.0433e-06,  3.7693e-04,  5.7207e-05],\n",
      "          [ 5.6893e-04,  5.2202e-04, -9.2470e-05],\n",
      "          [ 1.2560e-04,  6.2054e-05, -2.4952e-04]],\n",
      "\n",
      "         [[-6.4114e-04, -1.0379e-03, -9.0435e-04],\n",
      "          [ 4.0707e-04,  4.0369e-04,  1.8342e-04],\n",
      "          [-2.4930e-04,  2.0753e-04,  3.8822e-04]],\n",
      "\n",
      "         [[ 3.0318e-05, -1.5946e-04, -5.6200e-04],\n",
      "          [ 1.5491e-04,  1.6070e-04,  3.4442e-04],\n",
      "          [ 2.1561e-04, -2.7197e-04, -4.8818e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 7.2584e-04,  3.9511e-04, -1.7310e-04],\n",
      "          [ 8.0826e-04,  6.2291e-04,  7.3385e-05],\n",
      "          [ 3.8178e-05, -4.9594e-05, -1.5645e-04]],\n",
      "\n",
      "         [[-3.5520e-04, -3.5209e-04, -6.1988e-05],\n",
      "          [-2.8939e-04, -2.1159e-04,  3.8984e-05],\n",
      "          [ 4.0668e-06, -2.5616e-04, -5.4967e-04]],\n",
      "\n",
      "         [[ 8.9640e-04,  8.1706e-04,  5.4800e-04],\n",
      "          [ 9.6493e-04,  1.7145e-03,  1.0968e-03],\n",
      "          [-3.6209e-04,  9.0372e-04,  1.1690e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.2060e-05, -6.7104e-04, -4.9261e-04],\n",
      "          [ 6.1746e-05, -4.6991e-04, -4.6751e-04],\n",
      "          [ 1.1041e-04, -2.8222e-04, -7.9056e-05]],\n",
      "\n",
      "         [[ 3.2474e-04, -1.9455e-04, -1.9550e-05],\n",
      "          [ 4.3205e-04,  3.9395e-04,  4.0445e-04],\n",
      "          [-9.8326e-05, -8.0134e-05,  3.0142e-05]],\n",
      "\n",
      "         [[-1.2522e-04,  1.3523e-04,  6.1893e-04],\n",
      "          [-5.5971e-04, -6.7507e-05,  4.3755e-04],\n",
      "          [-1.7984e-04, -6.9689e-04, -2.7355e-04]]],\n",
      "\n",
      "\n",
      "        [[[-1.9420e-03, -1.5126e-03, -1.7669e-03],\n",
      "          [-9.9313e-04, -4.9791e-04, -8.0747e-04],\n",
      "          [-7.1125e-04, -5.6774e-04, -2.9684e-04]],\n",
      "\n",
      "         [[-9.2568e-04, -4.6750e-04, -5.1568e-04],\n",
      "          [-5.8666e-04, -3.1957e-04, -7.4783e-04],\n",
      "          [-9.3709e-04, -3.1257e-04, -2.5191e-04]],\n",
      "\n",
      "         [[ 4.1128e-04,  6.1837e-06, -2.3572e-04],\n",
      "          [ 1.3670e-03,  2.1808e-04, -3.8053e-04],\n",
      "          [ 1.1104e-03,  4.6824e-04,  1.7105e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.6645e-04,  7.4652e-04,  7.3940e-04],\n",
      "          [ 4.3871e-04,  1.1954e-03,  1.9387e-04],\n",
      "          [ 2.2409e-04,  8.2475e-04, -7.9911e-05]],\n",
      "\n",
      "         [[-5.0464e-04, -1.2071e-03, -1.2669e-03],\n",
      "          [ 9.3421e-05, -1.6536e-04, -1.0567e-04],\n",
      "          [-4.8772e-04, -7.7169e-04, -7.0998e-04]],\n",
      "\n",
      "         [[ 5.2425e-04,  2.2726e-04, -3.5585e-04],\n",
      "          [ 1.5762e-04,  1.9404e-05, -5.4895e-04],\n",
      "          [-4.7981e-04,  3.2253e-04,  4.0559e-05]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-4.3649e-04, -7.2300e-04, -3.3584e-04],\n",
      "          [-2.4205e-04, -6.1905e-04, -2.0847e-04],\n",
      "          [ 4.4227e-04, -3.2933e-04,  7.8102e-05]],\n",
      "\n",
      "         [[ 1.4881e-05, -6.4502e-04, -1.0838e-03],\n",
      "          [ 1.7334e-04, -2.5043e-04, -7.2612e-04],\n",
      "          [ 1.4231e-04,  2.5652e-04, -4.5347e-04]],\n",
      "\n",
      "         [[ 1.9065e-04,  8.8954e-04,  8.0441e-04],\n",
      "          [ 3.4957e-05,  4.8797e-04,  2.7532e-04],\n",
      "          [-1.3885e-04,  3.7180e-05,  2.8767e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3247e-03,  6.8173e-04,  3.8849e-04],\n",
      "          [ 1.3186e-03,  3.3318e-04, -6.4497e-05],\n",
      "          [ 6.0661e-04, -1.9345e-04, -4.3368e-04]],\n",
      "\n",
      "         [[ 1.5354e-04, -1.5645e-04, -7.7002e-04],\n",
      "          [-1.9390e-04, -4.5356e-04, -8.9532e-04],\n",
      "          [ 3.5285e-05, -2.1521e-04, -4.3278e-04]],\n",
      "\n",
      "         [[ 8.7869e-04, -7.9266e-05, -9.4468e-05],\n",
      "          [ 9.4474e-04, -2.0693e-04, -4.8716e-04],\n",
      "          [ 1.6604e-03,  2.0423e-04, -8.5459e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 8.6027e-04,  8.4028e-04,  1.3170e-03],\n",
      "          [ 2.9982e-04,  4.2118e-04,  9.1187e-04],\n",
      "          [ 9.4428e-05,  1.1767e-04,  7.2525e-04]],\n",
      "\n",
      "         [[ 1.1675e-03,  7.1592e-04,  1.1730e-03],\n",
      "          [ 1.0070e-03,  4.6662e-04,  3.2027e-04],\n",
      "          [ 6.7931e-04, -2.0076e-06,  6.1315e-05]],\n",
      "\n",
      "         [[-1.0571e-03, -1.5703e-03, -1.3777e-03],\n",
      "          [-6.8474e-04, -3.3147e-04, -2.5496e-04],\n",
      "          [-1.8772e-03, -1.0785e-03, -4.6755e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.8395e-04, -1.3811e-04,  5.1128e-04],\n",
      "          [ 5.9128e-04,  3.2821e-04,  2.7657e-04],\n",
      "          [ 5.9684e-04, -4.0260e-04, -6.7788e-04]],\n",
      "\n",
      "         [[-4.0210e-04, -8.3976e-04, -1.2374e-03],\n",
      "          [ 2.9849e-05,  1.9770e-04,  7.6266e-05],\n",
      "          [-8.7064e-04, -6.0868e-04, -1.3633e-04]],\n",
      "\n",
      "         [[-5.9970e-04,  1.2408e-04, -1.0048e-03],\n",
      "          [-5.3025e-04, -5.0198e-04, -2.4743e-04],\n",
      "          [-3.2475e-04, -7.0295e-04, -9.6449e-04]]],\n",
      "\n",
      "\n",
      "        [[[-5.2459e-05, -1.3877e-04, -4.0087e-05],\n",
      "          [-3.5377e-05, -1.1337e-04, -1.2923e-04],\n",
      "          [-7.1068e-05,  1.7791e-04, -5.9003e-06]],\n",
      "\n",
      "         [[-8.1858e-05,  2.1472e-04,  3.5133e-04],\n",
      "          [-2.5327e-05,  1.2465e-04,  1.5764e-04],\n",
      "          [-1.1753e-04,  1.6527e-05,  3.0847e-04]],\n",
      "\n",
      "         [[-2.4934e-04, -1.2345e-04,  3.4348e-04],\n",
      "          [ 3.9629e-04, -4.0622e-04, -4.7956e-04],\n",
      "          [ 8.0834e-04,  2.1988e-04, -3.8097e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.5618e-04,  2.1692e-04,  2.4689e-04],\n",
      "          [-1.3546e-05,  3.5678e-05,  9.7994e-05],\n",
      "          [-2.5342e-04, -1.6584e-05,  1.1549e-04]],\n",
      "\n",
      "         [[-3.6110e-04, -3.1575e-04, -1.7031e-04],\n",
      "          [-1.1494e-04, -6.5323e-05, -3.6370e-06],\n",
      "          [ 1.3246e-05, -9.9674e-05,  1.2316e-04]],\n",
      "\n",
      "         [[ 1.2296e-04,  2.4217e-05, -4.8422e-04],\n",
      "          [-6.0369e-05,  6.6259e-04, -2.2089e-04],\n",
      "          [-8.4920e-04, -5.4576e-05,  8.5049e-05]]]], device='cuda:0')}, 19: {'momentum_buffer': tensor([ 1.4902e-03, -4.2751e-03, -3.0708e-03,  1.3212e-04, -7.0280e-04,\n",
      "         4.7647e-03, -5.5966e-04, -3.6847e-03,  7.0039e-03, -9.4605e-03,\n",
      "         7.3928e-04, -1.0391e-02, -1.6336e-02,  2.4731e-03,  6.4870e-03,\n",
      "        -2.1783e-03, -4.6291e-03,  6.8854e-03,  1.8629e-03,  5.7194e-03,\n",
      "        -2.6040e-04, -7.6611e-05, -2.7764e-03, -3.3828e-03, -1.1419e-02,\n",
      "        -2.6917e-03,  1.8133e-03, -1.4243e-04, -1.3602e-03, -6.5816e-03,\n",
      "         8.1919e-03, -1.0599e-03, -5.0823e-04, -1.3926e-03, -2.6896e-03,\n",
      "         2.4428e-03,  5.0990e-03, -6.6695e-03, -7.4220e-04, -5.7086e-03,\n",
      "        -8.4936e-04, -3.4252e-03,  1.3724e-03, -5.3985e-03,  1.0685e-02,\n",
      "        -1.8408e-03,  3.3225e-03, -6.6786e-03,  9.1393e-04, -2.2425e-03,\n",
      "        -4.3112e-03,  3.0729e-03,  1.3205e-02, -3.4348e-03,  1.1385e-02,\n",
      "        -8.1734e-03, -8.2568e-03,  6.3729e-03,  8.2354e-03,  3.0368e-04,\n",
      "         1.4197e-03,  2.6547e-03, -7.7158e-03,  1.4941e-03,  4.0471e-03,\n",
      "        -4.1379e-04,  1.0477e-02, -1.2347e-02, -7.7954e-03,  5.1444e-03,\n",
      "        -6.6069e-03, -6.1100e-03, -6.4722e-03,  6.5815e-04,  1.8705e-03,\n",
      "         8.7287e-04,  1.8585e-03,  3.5218e-03, -4.2424e-04, -1.1381e-03,\n",
      "        -5.7360e-03, -5.2675e-03, -5.7689e-04, -6.2480e-03,  3.0645e-03,\n",
      "        -1.4945e-03, -3.3342e-04, -8.5028e-03, -3.8992e-03, -1.4747e-03,\n",
      "        -5.6218e-04, -1.8248e-03, -3.0631e-03, -1.2875e-03,  6.8710e-03,\n",
      "         1.5580e-02, -1.2223e-02,  9.8135e-03,  2.8557e-03,  9.4046e-03,\n",
      "        -2.3247e-03,  4.9536e-03, -2.5619e-03,  1.0328e-02, -6.7513e-04,\n",
      "        -2.9391e-03,  8.6603e-03,  5.7320e-04,  8.9339e-03,  4.7372e-03,\n",
      "         2.6517e-03,  3.9708e-03, -3.3085e-03,  3.6315e-03, -6.4715e-03,\n",
      "        -6.4856e-03,  5.1457e-03, -2.3597e-03,  3.0846e-03, -1.6706e-03,\n",
      "         7.1505e-03,  1.0653e-02,  2.0722e-04,  4.8757e-03, -7.0401e-03,\n",
      "         6.4159e-04, -3.6151e-03,  1.1982e-03], device='cuda:0')}, 20: {'momentum_buffer': tensor([-1.4228e-03, -8.1674e-04,  4.3582e-03,  2.8945e-04, -4.3810e-03,\n",
      "         2.8183e-03, -1.0564e-03, -1.3524e-03,  3.2488e-03, -6.4104e-03,\n",
      "        -6.1183e-03, -4.6006e-03, -7.3912e-03,  2.7098e-03,  3.3842e-03,\n",
      "        -6.5572e-04, -1.7917e-03,  4.3407e-03,  1.1129e-03,  5.2586e-03,\n",
      "         1.7061e-03, -1.3498e-03, -1.3583e-03, -2.0894e-03, -8.3986e-03,\n",
      "         1.8041e-03, -2.8317e-03, -2.7082e-03, -5.2411e-04,  6.5520e-03,\n",
      "         6.4017e-03, -3.6944e-05,  2.2885e-03, -1.2213e-03, -1.2902e-03,\n",
      "         2.8886e-03,  7.8944e-03, -3.2017e-03,  2.3588e-03,  8.7866e-04,\n",
      "        -3.8522e-03,  1.4610e-03, -1.3192e-03,  1.4724e-03, -1.3042e-03,\n",
      "         6.3904e-04,  3.9537e-03, -2.9563e-03, -2.4396e-03, -4.5630e-04,\n",
      "        -3.2334e-03,  1.6160e-03,  5.5569e-03, -5.3325e-03,  2.6142e-03,\n",
      "        -2.8507e-03, -6.0549e-03,  5.0500e-03,  2.8371e-03, -5.4649e-04,\n",
      "         3.1623e-03,  3.8756e-03, -6.2796e-03, -2.8631e-03,  2.3825e-03,\n",
      "        -6.7574e-03,  1.2489e-02, -1.0729e-02, -7.1629e-03,  1.7367e-03,\n",
      "        -3.4279e-03, -3.2928e-03, -5.4125e-03, -4.2562e-03, -2.0438e-03,\n",
      "         2.5500e-03,  1.2945e-03,  4.5999e-03, -1.5728e-03, -4.1862e-06,\n",
      "         1.2203e-03,  5.4374e-04, -3.7836e-03, -2.9918e-03,  1.9076e-03,\n",
      "        -3.5574e-03, -2.6199e-03, -6.5382e-03, -3.0431e-03, -3.0980e-03,\n",
      "         2.2735e-03, -1.4045e-03, -7.5565e-04, -3.7247e-04,  1.7461e-03,\n",
      "        -7.8850e-04, -5.0626e-03, -1.9017e-03,  3.2118e-03,  3.9733e-03,\n",
      "         5.3454e-04, -9.6159e-04, -3.1054e-04,  7.5149e-03, -1.4409e-03,\n",
      "        -2.9577e-03, -8.3832e-03,  2.3362e-03,  2.9125e-03,  6.2669e-03,\n",
      "         3.1393e-03,  4.8414e-03, -5.4214e-03, -6.8742e-05, -1.6147e-02,\n",
      "        -3.9717e-03,  2.4445e-03, -1.1624e-03,  6.2524e-04,  1.3189e-03,\n",
      "         4.4704e-03,  1.2925e-03,  2.6500e-05,  7.2310e-03, -4.7621e-03,\n",
      "         3.7405e-04,  2.9015e-03,  1.3593e-03], device='cuda:0')}, 21: {'momentum_buffer': tensor([[[[-3.4865e-04]],\n",
      "\n",
      "         [[-1.4550e-05]],\n",
      "\n",
      "         [[ 6.5229e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.8266e-04]],\n",
      "\n",
      "         [[-1.3243e-03]],\n",
      "\n",
      "         [[ 1.3708e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.7236e-04]],\n",
      "\n",
      "         [[ 4.9853e-04]],\n",
      "\n",
      "         [[ 1.3240e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.4751e-04]],\n",
      "\n",
      "         [[ 4.8539e-04]],\n",
      "\n",
      "         [[ 1.1424e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 4.5096e-05]],\n",
      "\n",
      "         [[ 4.0547e-05]],\n",
      "\n",
      "         [[-1.6782e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0472e-04]],\n",
      "\n",
      "         [[ 1.0970e-05]],\n",
      "\n",
      "         [[ 1.5543e-05]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.3537e-05]],\n",
      "\n",
      "         [[-5.8617e-07]],\n",
      "\n",
      "         [[-3.4444e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.9862e-06]],\n",
      "\n",
      "         [[-1.0458e-06]],\n",
      "\n",
      "         [[ 1.8056e-05]]],\n",
      "\n",
      "\n",
      "        [[[-6.0800e-04]],\n",
      "\n",
      "         [[ 2.5626e-04]],\n",
      "\n",
      "         [[-1.7295e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.9565e-05]],\n",
      "\n",
      "         [[-1.0681e-03]],\n",
      "\n",
      "         [[ 1.6106e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 1.1437e-05]],\n",
      "\n",
      "         [[-6.2324e-05]],\n",
      "\n",
      "         [[ 9.1240e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.3016e-05]],\n",
      "\n",
      "         [[-1.8851e-04]],\n",
      "\n",
      "         [[-5.8597e-04]]]], device='cuda:0')}, 22: {'momentum_buffer': tensor([-0.0057,  0.0003, -0.0040,  0.0018,  0.0026, -0.0015,  0.0021, -0.0066,\n",
      "         0.0097, -0.0041,  0.0007, -0.0036, -0.0071, -0.0054, -0.0005, -0.0040,\n",
      "        -0.0029,  0.0037, -0.0002,  0.0024,  0.0051,  0.0016, -0.0033,  0.0029,\n",
      "        -0.0072,  0.0024, -0.0089,  0.0003, -0.0034,  0.0105,  0.0085,  0.0004,\n",
      "         0.0011,  0.0003,  0.0011,  0.0032,  0.0013, -0.0038, -0.0017,  0.0023,\n",
      "        -0.0051,  0.0030, -0.0010,  0.0020, -0.0028, -0.0082, -0.0016, -0.0021,\n",
      "        -0.0063, -0.0020, -0.0067, -0.0013, -0.0026, -0.0029, -0.0086, -0.0039,\n",
      "        -0.0020,  0.0059,  0.0016,  0.0021,  0.0011, -0.0016, -0.0007,  0.0042,\n",
      "         0.0022,  0.0017,  0.0042,  0.0022, -0.0074,  0.0016, -0.0090, -0.0012,\n",
      "         0.0044,  0.0012, -0.0034, -0.0015, -0.0013,  0.0015, -0.0035,  0.0024,\n",
      "         0.0015, -0.0092, -0.0048, -0.0039, -0.0031,  0.0060, -0.0058,  0.0075,\n",
      "         0.0006, -0.0044,  0.0023, -0.0010,  0.0034,  0.0031,  0.0042, -0.0020,\n",
      "        -0.0039, -0.0050,  0.0015, -0.0060, -0.0058, -0.0031, -0.0004,  0.0037,\n",
      "        -0.0016,  0.0004, -0.0008, -0.0023, -0.0004,  0.0043,  0.0037,  0.0054,\n",
      "        -0.0028, -0.0021, -0.0149, -0.0015, -0.0016,  0.0029, -0.0010,  0.0013,\n",
      "         0.0005, -0.0041,  0.0006, -0.0009, -0.0092,  0.0033, -0.0020,  0.0016],\n",
      "       device='cuda:0')}, 23: {'momentum_buffer': tensor([-1.4228e-03, -8.1674e-04,  4.3582e-03,  2.8945e-04, -4.3810e-03,\n",
      "         2.8183e-03, -1.0564e-03, -1.3524e-03,  3.2488e-03, -6.4104e-03,\n",
      "        -6.1183e-03, -4.6006e-03, -7.3912e-03,  2.7098e-03,  3.3842e-03,\n",
      "        -6.5572e-04, -1.7917e-03,  4.3407e-03,  1.1129e-03,  5.2586e-03,\n",
      "         1.7061e-03, -1.3498e-03, -1.3583e-03, -2.0894e-03, -8.3986e-03,\n",
      "         1.8041e-03, -2.8317e-03, -2.7082e-03, -5.2411e-04,  6.5520e-03,\n",
      "         6.4017e-03, -3.6944e-05,  2.2885e-03, -1.2213e-03, -1.2902e-03,\n",
      "         2.8886e-03,  7.8944e-03, -3.2017e-03,  2.3588e-03,  8.7866e-04,\n",
      "        -3.8522e-03,  1.4610e-03, -1.3192e-03,  1.4724e-03, -1.3042e-03,\n",
      "         6.3904e-04,  3.9537e-03, -2.9563e-03, -2.4396e-03, -4.5630e-04,\n",
      "        -3.2334e-03,  1.6160e-03,  5.5569e-03, -5.3325e-03,  2.6142e-03,\n",
      "        -2.8507e-03, -6.0549e-03,  5.0500e-03,  2.8371e-03, -5.4649e-04,\n",
      "         3.1623e-03,  3.8756e-03, -6.2796e-03, -2.8631e-03,  2.3825e-03,\n",
      "        -6.7574e-03,  1.2489e-02, -1.0729e-02, -7.1629e-03,  1.7367e-03,\n",
      "        -3.4279e-03, -3.2928e-03, -5.4125e-03, -4.2562e-03, -2.0438e-03,\n",
      "         2.5500e-03,  1.2945e-03,  4.5999e-03, -1.5728e-03, -4.1862e-06,\n",
      "         1.2203e-03,  5.4374e-04, -3.7836e-03, -2.9918e-03,  1.9076e-03,\n",
      "        -3.5574e-03, -2.6199e-03, -6.5382e-03, -3.0431e-03, -3.0980e-03,\n",
      "         2.2735e-03, -1.4045e-03, -7.5565e-04, -3.7247e-04,  1.7461e-03,\n",
      "        -7.8850e-04, -5.0626e-03, -1.9017e-03,  3.2118e-03,  3.9733e-03,\n",
      "         5.3454e-04, -9.6159e-04, -3.1054e-04,  7.5149e-03, -1.4409e-03,\n",
      "        -2.9577e-03, -8.3832e-03,  2.3362e-03,  2.9125e-03,  6.2669e-03,\n",
      "         3.1393e-03,  4.8414e-03, -5.4214e-03, -6.8742e-05, -1.6147e-02,\n",
      "        -3.9717e-03,  2.4445e-03, -1.1624e-03,  6.2524e-04,  1.3189e-03,\n",
      "         4.4704e-03,  1.2925e-03,  2.6500e-05,  7.2310e-03, -4.7621e-03,\n",
      "         3.7405e-04,  2.9015e-03,  1.3593e-03], device='cuda:0')}, 24: {'momentum_buffer': tensor([[[[ 6.4310e-04,  8.3420e-04,  7.2217e-04],\n",
      "          [ 1.6472e-04,  3.3416e-04,  8.6066e-04],\n",
      "          [ 6.2276e-04,  1.1924e-03,  1.3795e-03]],\n",
      "\n",
      "         [[-4.0347e-04, -3.1075e-05, -2.1884e-04],\n",
      "          [-2.9238e-04, -5.9761e-04, -6.4845e-04],\n",
      "          [-2.3800e-04, -5.7389e-04, -6.8510e-04]],\n",
      "\n",
      "         [[-1.3260e-04,  2.1191e-04,  4.7739e-04],\n",
      "          [-2.3853e-04, -1.2044e-04, -3.8681e-05],\n",
      "          [ 7.2296e-05, -1.3508e-04, -3.2320e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.4478e-04,  6.6084e-04,  9.8083e-04],\n",
      "          [ 1.5663e-04,  4.2126e-04,  4.4169e-04],\n",
      "          [ 5.0393e-04,  3.4929e-04,  3.0191e-04]],\n",
      "\n",
      "         [[ 9.2910e-04,  1.0707e-03,  7.6043e-04],\n",
      "          [ 8.3780e-04,  8.1874e-04,  8.2176e-04],\n",
      "          [ 1.5109e-03,  1.2341e-03,  1.0360e-03]],\n",
      "\n",
      "         [[-1.8360e-04, -1.5604e-04, -2.9634e-04],\n",
      "          [-3.7827e-04, -4.3416e-04,  1.2453e-05],\n",
      "          [-1.8757e-04, -2.1011e-04, -3.6406e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.5691e-03,  3.8828e-04,  7.1077e-05],\n",
      "          [ 1.6072e-03,  2.5541e-04, -1.8739e-06],\n",
      "          [ 1.1280e-03,  2.9545e-04,  7.0476e-04]],\n",
      "\n",
      "         [[ 8.3061e-04,  1.1785e-03,  8.9895e-04],\n",
      "          [ 5.5466e-04,  5.2851e-04,  1.3164e-04],\n",
      "          [ 3.8426e-04,  2.7131e-05, -1.2189e-04]],\n",
      "\n",
      "         [[ 7.1651e-04,  3.2158e-04, -5.7777e-04],\n",
      "          [ 3.1669e-04,  2.4063e-04, -1.5518e-04],\n",
      "          [-8.1600e-05,  3.6305e-04,  4.4789e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.5263e-05, -9.2209e-05,  1.5380e-04],\n",
      "          [ 1.0661e-04,  1.5968e-04,  2.4829e-04],\n",
      "          [ 2.1878e-04,  2.3661e-04,  2.6941e-04]],\n",
      "\n",
      "         [[ 1.0689e-03,  4.0591e-04,  4.3338e-04],\n",
      "          [ 1.0286e-03,  1.3978e-04,  2.0991e-04],\n",
      "          [ 4.8973e-04,  4.3358e-04,  5.9866e-04]],\n",
      "\n",
      "         [[-2.3287e-04,  6.2268e-05,  1.4632e-04],\n",
      "          [-5.8229e-05,  2.2785e-05, -1.2663e-06],\n",
      "          [ 3.1647e-05,  1.3124e-04,  1.1164e-04]]],\n",
      "\n",
      "\n",
      "        [[[-6.2300e-04,  1.3239e-04,  8.4670e-06],\n",
      "          [-3.2158e-04,  3.0954e-04, -1.1470e-04],\n",
      "          [-1.2752e-04,  1.7396e-04, -8.2451e-05]],\n",
      "\n",
      "         [[ 2.7591e-04,  3.5679e-04,  2.3111e-04],\n",
      "          [ 2.3855e-04,  4.0624e-04,  3.7290e-04],\n",
      "          [ 2.2923e-04,  3.3148e-04,  1.0765e-04]],\n",
      "\n",
      "         [[-1.4990e-04, -4.0503e-04, -3.1438e-05],\n",
      "          [-3.6648e-05,  3.4587e-05,  3.2918e-05],\n",
      "          [ 5.4071e-05,  3.5287e-04,  3.2074e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.3006e-05,  1.9791e-04, -6.5121e-05],\n",
      "          [-2.5588e-05,  1.2203e-04, -6.1669e-05],\n",
      "          [ 2.8662e-05,  1.1424e-04, -3.2233e-05]],\n",
      "\n",
      "         [[-5.7017e-04, -2.8605e-04, -2.9714e-04],\n",
      "          [-4.3843e-04, -1.2025e-04, -2.5658e-04],\n",
      "          [-2.0615e-04,  4.5371e-05, -3.3205e-04]],\n",
      "\n",
      "         [[-1.9369e-04, -1.3684e-04, -2.7578e-05],\n",
      "          [-7.6678e-05,  8.3459e-05, -8.8152e-05],\n",
      "          [-3.1639e-05, -5.5952e-06, -2.4781e-05]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.4883e-04,  1.1910e-04, -3.6339e-05],\n",
      "          [-7.9372e-04, -1.0723e-03, -1.1759e-03],\n",
      "          [-3.2255e-04, -1.1911e-03, -1.4018e-03]],\n",
      "\n",
      "         [[ 8.4182e-04,  8.9727e-04,  9.7001e-04],\n",
      "          [ 7.6738e-04,  5.7172e-04,  1.8582e-04],\n",
      "          [ 9.9708e-04,  7.6026e-04,  6.4785e-04]],\n",
      "\n",
      "         [[ 3.9707e-04,  2.2547e-04,  1.1534e-03],\n",
      "          [-4.0892e-04,  3.2211e-05,  7.6566e-04],\n",
      "          [-3.2325e-04,  5.8941e-04,  8.5480e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-5.9401e-05,  2.4957e-04, -1.5966e-05],\n",
      "          [-6.1382e-04, -7.4317e-04, -7.2104e-04],\n",
      "          [-4.9315e-04, -6.6972e-04, -6.2765e-04]],\n",
      "\n",
      "         [[-5.4142e-05,  1.5758e-04,  9.8708e-05],\n",
      "          [-1.8493e-03, -1.6048e-03, -1.1999e-03],\n",
      "          [-7.8843e-04, -1.0095e-03, -4.3474e-04]],\n",
      "\n",
      "         [[-3.5917e-04, -2.2684e-04, -2.0947e-04],\n",
      "          [-5.8120e-04, -4.3610e-04, -2.0249e-04],\n",
      "          [-9.8408e-05, -4.6646e-05,  3.4758e-04]]],\n",
      "\n",
      "\n",
      "        [[[-3.6989e-04, -1.6451e-04, -4.7149e-04],\n",
      "          [-1.3279e-05,  9.9146e-05,  1.5704e-05],\n",
      "          [ 1.0328e-04,  8.9426e-06, -1.5019e-04]],\n",
      "\n",
      "         [[ 7.8077e-05, -8.6776e-05, -2.4919e-04],\n",
      "          [ 2.5282e-05, -3.4767e-04, -4.2564e-04],\n",
      "          [-1.3544e-04, -2.6934e-04, -2.0893e-04]],\n",
      "\n",
      "         [[-5.9809e-04,  1.1051e-04,  6.1815e-04],\n",
      "          [-3.5585e-04,  5.4346e-04,  6.6199e-04],\n",
      "          [ 3.2721e-04,  6.3529e-04,  5.7413e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.5242e-04,  1.0552e-04, -1.1305e-04],\n",
      "          [ 3.6744e-04,  4.9781e-04, -2.2175e-05],\n",
      "          [ 1.9491e-04, -1.0031e-04,  9.3300e-05]],\n",
      "\n",
      "         [[-6.9730e-04, -6.2950e-04, -6.2659e-04],\n",
      "          [-1.4135e-04, -1.7174e-04, -3.8537e-04],\n",
      "          [-6.1725e-04, -5.3861e-04, -2.0742e-04]],\n",
      "\n",
      "         [[-9.0833e-06, -7.1368e-05,  1.6383e-04],\n",
      "          [-1.5533e-05, -5.0013e-05, -6.6634e-05],\n",
      "          [-7.9296e-05, -2.2088e-04, -2.1824e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 4.7808e-04,  3.6923e-04,  4.9357e-04],\n",
      "          [ 1.2575e-04, -1.4871e-04, -8.1845e-05],\n",
      "          [-1.5433e-04, -2.3432e-04, -1.2763e-05]],\n",
      "\n",
      "         [[ 7.2984e-04,  8.8101e-04,  6.9797e-04],\n",
      "          [ 1.6703e-04,  4.0534e-04,  1.5360e-04],\n",
      "          [ 2.5018e-04,  4.6790e-04,  2.4390e-04]],\n",
      "\n",
      "         [[ 7.8800e-04,  6.6647e-04,  4.5700e-04],\n",
      "          [-1.9548e-04, -2.7304e-04, -3.0174e-04],\n",
      "          [-6.3293e-04, -8.2879e-04, -7.9343e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.1361e-04,  2.6111e-04,  4.3616e-04],\n",
      "          [-5.2948e-04, -5.8407e-04, -6.1292e-04],\n",
      "          [-5.9435e-04, -6.1210e-04, -3.2539e-04]],\n",
      "\n",
      "         [[ 6.0689e-04,  7.5065e-04,  9.2175e-04],\n",
      "          [-5.3277e-04, -6.4399e-04, -4.5696e-04],\n",
      "          [-4.8044e-04, -2.7958e-04, -1.7442e-04]],\n",
      "\n",
      "         [[-5.6935e-05, -2.4758e-05, -3.5837e-05],\n",
      "          [-5.2927e-05, -2.3468e-04, -1.4764e-04],\n",
      "          [-6.9249e-05, -2.0736e-04, -1.4559e-04]]]], device='cuda:0')}, 25: {'momentum_buffer': tensor([ 8.7477e-03, -5.2916e-04,  3.6429e-04,  3.9835e-03, -8.4425e-03,\n",
      "        -2.2957e-03, -1.5115e-03,  2.7706e-03,  5.7912e-03, -3.2739e-03,\n",
      "        -1.4948e-04,  4.1890e-03, -8.0829e-05,  1.4526e-03, -6.7677e-03,\n",
      "        -1.7234e-03, -9.5256e-03, -1.6181e-03,  1.1391e-02,  2.8487e-03,\n",
      "         2.5450e-03,  1.3367e-03, -3.8399e-03, -5.6211e-03,  1.7907e-03,\n",
      "        -1.4561e-03,  3.6729e-03, -4.2593e-03, -3.8015e-03, -7.6107e-03,\n",
      "         5.2488e-04,  4.4864e-03,  2.1506e-03, -2.2147e-02,  9.2915e-03,\n",
      "         1.5978e-02, -7.5629e-04, -2.1730e-03, -2.5606e-04,  8.8790e-03,\n",
      "        -4.7167e-03,  4.0520e-03, -4.7395e-03, -2.8337e-04, -1.8184e-04,\n",
      "        -8.3441e-03,  1.0233e-03,  6.1302e-03,  7.5422e-03,  8.4111e-03,\n",
      "         4.2677e-03, -3.0033e-04, -1.5502e-03, -6.9586e-04, -1.1141e-02,\n",
      "        -1.0943e-03,  5.5999e-04,  1.3420e-03,  3.1495e-03, -1.9932e-03,\n",
      "         1.4379e-03, -1.0325e-02,  2.6157e-03,  4.2851e-03, -1.1415e-02,\n",
      "        -4.9733e-03,  8.9373e-04,  5.3531e-03,  7.2065e-03, -2.0582e-03,\n",
      "         5.3311e-03,  8.1813e-03,  4.9225e-03, -2.5645e-03, -4.6481e-03,\n",
      "        -6.2480e-03,  8.5909e-03,  6.9204e-03, -7.1472e-03,  7.3246e-03,\n",
      "        -1.9344e-03, -1.6252e-03,  2.6740e-03, -2.4937e-03, -1.5060e-03,\n",
      "        -4.0224e-03,  4.0475e-03, -6.7034e-04,  5.4808e-03, -1.0991e-04,\n",
      "        -5.8799e-04,  1.2121e-02,  9.2082e-04, -1.4521e-02, -1.1573e-02,\n",
      "        -7.7637e-03, -6.1186e-04,  2.0921e-03,  3.7466e-03,  5.8632e-03,\n",
      "         4.5091e-03, -2.5614e-03,  1.3002e-03, -1.2345e-02, -1.8919e-03,\n",
      "         4.7638e-03, -9.0603e-03,  1.2502e-03,  1.2777e-02, -5.0485e-03,\n",
      "        -1.0417e-02, -2.3527e-03,  3.7642e-03,  7.2391e-03, -4.1938e-03,\n",
      "        -6.1566e-03, -7.1334e-03, -5.2023e-03,  8.5795e-05,  2.8297e-03,\n",
      "         6.1509e-03, -3.5963e-03, -7.0926e-03, -2.4831e-03, -7.5603e-03,\n",
      "        -6.0010e-04,  1.5229e-03, -7.9452e-03], device='cuda:0')}, 26: {'momentum_buffer': tensor([ 2.7609e-03, -2.3124e-03,  1.2089e-04,  6.3757e-03, -7.8253e-03,\n",
      "         1.7449e-03, -5.6179e-04,  2.8206e-03,  3.5579e-03, -7.4965e-03,\n",
      "         1.7628e-04,  1.4950e-03, -3.3787e-04,  1.1623e-03, -2.4245e-03,\n",
      "        -2.7229e-03, -2.4939e-03,  9.8082e-04,  7.3523e-03, -3.0550e-04,\n",
      "         2.0345e-03, -3.1543e-03, -4.2063e-03, -3.0487e-03,  1.1581e-03,\n",
      "         5.1069e-04,  2.5022e-03, -1.5942e-03, -3.7115e-03, -5.1844e-03,\n",
      "        -1.4461e-03, -1.1987e-04,  7.2094e-04, -7.9547e-03,  4.9514e-03,\n",
      "         1.0456e-02, -1.4610e-05, -6.7153e-04, -2.3745e-03,  4.9702e-03,\n",
      "        -8.8872e-04,  3.7008e-03, -3.3913e-03, -1.6023e-03, -1.4207e-03,\n",
      "        -6.6574e-03, -2.3736e-03,  4.7234e-03,  1.7655e-03,  4.1026e-03,\n",
      "        -1.4006e-03, -7.2813e-04, -6.7211e-04, -2.7854e-03, -4.7254e-03,\n",
      "        -1.0930e-03,  6.2490e-04, -1.9664e-04, -2.1475e-03,  2.7672e-04,\n",
      "         7.7254e-04, -9.7997e-03,  1.4320e-04,  5.6703e-03, -1.0064e-02,\n",
      "        -1.1764e-03,  9.6633e-04,  4.8186e-03,  3.1649e-03, -2.7435e-03,\n",
      "         2.8030e-03,  3.4375e-03, -6.9742e-04, -9.4204e-04, -7.3256e-04,\n",
      "        -4.7211e-03,  5.5578e-03,  5.1711e-03, -4.3416e-03,  2.7966e-03,\n",
      "         3.9077e-05,  4.7339e-04,  2.8078e-03, -4.0227e-03, -2.1905e-03,\n",
      "        -2.3881e-03,  1.2761e-03, -1.2038e-03,  5.6107e-03, -1.9819e-03,\n",
      "         7.7158e-04,  5.1374e-03,  1.2854e-03, -1.1228e-02, -4.4674e-03,\n",
      "        -4.3029e-03, -7.0315e-05,  2.4278e-03,  8.6240e-04,  2.0645e-03,\n",
      "         3.5825e-03, -5.1712e-03,  9.7384e-04, -6.6195e-03, -3.4095e-03,\n",
      "         2.3923e-03, -1.3144e-02,  1.9166e-03,  1.0695e-02, -3.3808e-03,\n",
      "        -5.3263e-03, -1.2953e-03,  7.0061e-04,  4.6404e-03, -3.4147e-03,\n",
      "        -5.4728e-03, -6.0176e-03, -4.7710e-03, -1.0741e-04,  3.6567e-03,\n",
      "         4.5359e-03, -5.2627e-05, -3.2545e-03, -4.0891e-03, -3.0757e-03,\n",
      "         1.9498e-03,  5.0793e-04, -3.8223e-03], device='cuda:0')}, 27: {'momentum_buffer': tensor([[[[-2.6274e-04, -5.3730e-05, -5.9125e-05],\n",
      "          [ 5.7635e-04,  3.6416e-04,  3.6321e-04],\n",
      "          [ 1.0112e-04,  5.0224e-04,  5.8373e-04]],\n",
      "\n",
      "         [[ 4.4008e-04,  6.3079e-04,  6.2681e-04],\n",
      "          [ 5.9115e-04,  4.4448e-04, -1.5552e-04],\n",
      "          [ 5.7500e-04,  2.0809e-04, -1.6466e-04]],\n",
      "\n",
      "         [[ 5.9653e-07, -5.8397e-05, -2.4841e-04],\n",
      "          [-3.8499e-06, -2.7340e-04, -3.2789e-04],\n",
      "          [-3.5547e-05, -3.6145e-04, -2.9468e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.1761e-04,  6.2644e-05, -2.5438e-04],\n",
      "          [ 2.5091e-04, -2.1554e-04, -4.2218e-04],\n",
      "          [-1.5859e-04, -4.6621e-04, -3.9544e-04]],\n",
      "\n",
      "         [[-6.1192e-04, -2.2802e-04, -1.6356e-04],\n",
      "          [-2.5192e-04,  4.3604e-05, -4.2467e-05],\n",
      "          [ 4.6635e-04,  3.7002e-04,  3.2261e-04]],\n",
      "\n",
      "         [[ 1.6265e-04,  7.5419e-05,  5.1528e-05],\n",
      "          [ 4.4244e-04,  5.2148e-04,  4.4760e-04],\n",
      "          [ 1.4090e-04,  3.3907e-05, -1.7435e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 3.7233e-04,  3.3416e-04,  2.3584e-04],\n",
      "          [ 4.0388e-04,  3.5265e-04,  3.6832e-04],\n",
      "          [-9.7637e-05,  1.1337e-05,  8.2828e-05]],\n",
      "\n",
      "         [[-6.6339e-04, -4.1850e-04, -1.9811e-04],\n",
      "          [-4.0704e-04, -6.3879e-04, -7.7081e-04],\n",
      "          [-7.2976e-04, -1.3835e-03, -1.0604e-03]],\n",
      "\n",
      "         [[-2.9513e-04, -3.0424e-04, -1.9738e-04],\n",
      "          [-4.4514e-04, -4.1128e-04, -2.9472e-04],\n",
      "          [-4.0581e-04, -4.3037e-04, -2.5509e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.2183e-04, -3.8728e-04, -3.8158e-04],\n",
      "          [ 2.5724e-04,  1.8002e-04, -6.9286e-05],\n",
      "          [ 9.0273e-05, -7.6072e-05, -2.9735e-05]],\n",
      "\n",
      "         [[ 6.0598e-04,  2.6901e-04,  1.7239e-04],\n",
      "          [ 5.4210e-04,  7.1898e-04,  4.7307e-04],\n",
      "          [ 9.4358e-04,  1.5681e-03,  1.0507e-03]],\n",
      "\n",
      "         [[-2.2217e-04, -1.9968e-04, -1.3836e-04],\n",
      "          [ 6.5698e-07, -3.3984e-04, -2.5131e-04],\n",
      "          [-1.7491e-04, -3.0663e-04, -4.6137e-04]]],\n",
      "\n",
      "\n",
      "        [[[-2.6675e-05, -3.6967e-04, -8.1335e-04],\n",
      "          [-1.7262e-04, -2.3456e-04, -2.1027e-04],\n",
      "          [ 1.5417e-04, -6.9610e-05, -1.2420e-04]],\n",
      "\n",
      "         [[-1.0503e-03, -1.2223e-03, -2.6261e-04],\n",
      "          [-1.5848e-03, -1.1982e-03, -2.2318e-04],\n",
      "          [-1.5452e-03, -4.8109e-04,  3.2137e-04]],\n",
      "\n",
      "         [[-1.7552e-04,  1.0347e-04,  6.0978e-04],\n",
      "          [-4.4735e-06,  4.6087e-04,  6.7548e-04],\n",
      "          [ 4.3393e-04,  9.2586e-04,  6.2293e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.4716e-04,  3.2428e-05, -2.6552e-04],\n",
      "          [-1.2627e-05, -5.5457e-04, -4.4388e-04],\n",
      "          [-3.3788e-05, -5.0550e-04, -3.3177e-05]],\n",
      "\n",
      "         [[-2.6010e-04, -5.6652e-05, -5.3662e-05],\n",
      "          [ 4.9621e-04, -1.0634e-04, -1.2730e-05],\n",
      "          [ 4.0067e-04,  3.3313e-04,  1.8018e-04]],\n",
      "\n",
      "         [[-3.0412e-04, -2.2926e-04, -3.0391e-04],\n",
      "          [ 2.3532e-04,  2.1140e-04, -1.6604e-04],\n",
      "          [ 2.4234e-04, -1.0110e-04, -3.1965e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-4.3671e-04, -6.5199e-04, -7.5292e-04],\n",
      "          [-4.5724e-04, -5.3541e-04, -2.6534e-04],\n",
      "          [ 3.0107e-04,  3.2714e-04,  3.0217e-04]],\n",
      "\n",
      "         [[-2.4646e-04, -7.9329e-04, -1.0237e-04],\n",
      "          [ 3.2498e-04,  4.1703e-04,  9.4013e-04],\n",
      "          [ 3.7430e-04,  7.5204e-04,  1.9532e-03]],\n",
      "\n",
      "         [[ 1.8058e-04,  5.3323e-05,  4.9727e-04],\n",
      "          [ 1.8778e-04,  1.3638e-04,  3.7539e-04],\n",
      "          [ 1.6667e-04,  9.3980e-05,  7.2117e-06]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.1831e-04,  2.1848e-04,  2.5562e-04],\n",
      "          [-1.4220e-04, -6.2826e-04, -5.9990e-04],\n",
      "          [ 3.5197e-04, -4.6306e-04, -6.0556e-04]],\n",
      "\n",
      "         [[ 1.4735e-04,  3.2486e-04, -2.4479e-04],\n",
      "          [-4.7869e-04,  2.7604e-05, -2.1037e-04],\n",
      "          [-7.1767e-04, -7.9427e-04, -4.7940e-04]],\n",
      "\n",
      "         [[-1.6045e-05, -6.6337e-06, -1.8079e-04],\n",
      "          [ 4.5630e-04,  3.2131e-04, -7.2298e-05],\n",
      "          [ 7.4687e-04,  5.6621e-04,  1.0054e-04]]],\n",
      "\n",
      "\n",
      "        [[[-6.7916e-04, -3.6638e-04, -4.2421e-04],\n",
      "          [-6.0056e-04, -4.7912e-04, -2.0322e-04],\n",
      "          [-6.0754e-04, -2.5624e-04, -1.5732e-04]],\n",
      "\n",
      "         [[-7.1622e-04, -8.0856e-04, -5.6930e-04],\n",
      "          [-1.1908e-04,  3.4356e-06, -2.9559e-04],\n",
      "          [ 5.0311e-04,  6.5771e-05, -6.7318e-04]],\n",
      "\n",
      "         [[ 1.4870e-04,  1.6742e-04, -1.7282e-04],\n",
      "          [ 7.6794e-05,  4.8468e-05, -2.0378e-04],\n",
      "          [ 2.4150e-04,  3.5974e-05, -1.2093e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.0848e-04,  7.0586e-04,  4.2487e-05],\n",
      "          [-2.3891e-04, -2.4942e-05, -4.3471e-04],\n",
      "          [-9.0885e-04, -6.7862e-04, -6.2630e-04]],\n",
      "\n",
      "         [[-1.8013e-04, -3.6565e-04, -4.1043e-04],\n",
      "          [-4.3100e-04, -4.2341e-04, -2.4341e-04],\n",
      "          [-2.4876e-04, -2.3435e-04, -1.4503e-04]],\n",
      "\n",
      "         [[ 1.9043e-04,  8.5788e-05,  8.5701e-05],\n",
      "          [-2.1037e-04, -3.6759e-04, -3.6467e-04],\n",
      "          [ 3.6296e-04,  3.0186e-04,  1.4677e-04]]],\n",
      "\n",
      "\n",
      "        [[[-2.8006e-04, -4.7155e-04,  6.9243e-05],\n",
      "          [-2.1900e-04, -4.0988e-04, -7.3278e-05],\n",
      "          [-7.3217e-04, -6.3690e-04, -3.6664e-04]],\n",
      "\n",
      "         [[-3.1893e-04, -6.0063e-04, -3.2943e-04],\n",
      "          [-1.4271e-04, -2.1431e-04, -3.0657e-04],\n",
      "          [ 3.8429e-04, -3.7578e-04, -7.8890e-04]],\n",
      "\n",
      "         [[ 6.3033e-06,  1.2568e-04, -1.1842e-04],\n",
      "          [ 1.2686e-04,  1.3940e-04, -2.1749e-04],\n",
      "          [ 1.8288e-04,  2.3315e-06, -3.4810e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.9880e-04,  3.1643e-05, -8.4240e-05],\n",
      "          [ 7.0459e-04,  7.2871e-04,  4.1213e-04],\n",
      "          [ 4.9443e-05,  2.2396e-04,  5.0825e-04]],\n",
      "\n",
      "         [[ 3.8849e-04,  3.2339e-04,  6.4127e-04],\n",
      "          [-4.7148e-05, -3.4543e-04, -1.3013e-04],\n",
      "          [ 5.0321e-04, -7.4912e-05, -2.9861e-04]],\n",
      "\n",
      "         [[-3.4639e-04, -4.6103e-04, -5.0310e-04],\n",
      "          [-1.7048e-04, -8.0044e-05, -1.7727e-04],\n",
      "          [-9.5661e-05,  1.6049e-05,  2.3078e-05]]]], device='cuda:0')}, 28: {'momentum_buffer': tensor([ 5.6742e-03,  6.3087e-03, -2.4652e-03, -8.7483e-05,  2.2342e-03,\n",
      "         3.6547e-04,  4.7264e-03, -1.0779e-02,  7.7746e-04, -9.1935e-06,\n",
      "         4.9822e-03, -7.4477e-03, -9.8553e-03,  9.9184e-05,  3.7771e-03,\n",
      "         1.4389e-03, -1.6698e-04, -9.6080e-03,  5.4044e-03,  3.5088e-03,\n",
      "         3.2683e-03, -2.2124e-03,  5.3704e-03, -9.7860e-03, -8.0658e-03,\n",
      "        -7.7037e-04, -2.0845e-03, -2.3622e-03,  8.5447e-03,  5.6578e-03,\n",
      "         8.8864e-03, -3.4623e-04,  3.4309e-03, -1.5135e-03,  1.9743e-03,\n",
      "         2.0373e-03,  8.1267e-03,  8.4341e-03, -7.0970e-03,  2.2372e-02,\n",
      "         3.4514e-03,  1.0290e-03,  1.6721e-03,  5.4426e-03, -2.6542e-03,\n",
      "        -2.4106e-03,  2.7892e-03, -7.3065e-04,  3.7749e-03,  2.9263e-03,\n",
      "        -3.6729e-03,  7.9163e-03, -4.7257e-03, -4.8917e-03, -1.3242e-02,\n",
      "        -4.8050e-03, -1.0615e-02,  5.1055e-03, -1.2693e-02,  4.9348e-03,\n",
      "        -1.1647e-03,  7.5319e-03,  2.0517e-03, -3.5743e-03, -3.9853e-03,\n",
      "        -6.2846e-03,  1.2938e-02, -7.1415e-03,  5.0009e-03,  1.7503e-03,\n",
      "         3.1117e-03,  2.8083e-03, -1.4211e-02, -3.8768e-03, -1.8387e-03,\n",
      "        -1.4132e-03,  3.4475e-04,  1.3684e-03, -1.9781e-03,  3.1156e-03,\n",
      "         2.4347e-03,  3.9033e-03, -4.9636e-04, -2.4020e-03,  1.0571e-03,\n",
      "         1.1568e-03,  5.8923e-03, -9.1115e-03,  4.6125e-03,  1.8757e-04,\n",
      "        -1.8358e-03, -3.5476e-03,  2.4789e-03, -1.6496e-03,  2.3771e-03,\n",
      "        -8.5954e-03, -2.8410e-03, -5.6086e-03,  2.8826e-03,  9.5128e-03,\n",
      "         1.4938e-05, -2.6184e-03, -1.3457e-03,  5.0169e-03, -1.5395e-03,\n",
      "         1.9637e-03, -6.5520e-04, -2.7007e-03,  8.0793e-03, -3.6807e-04,\n",
      "        -6.2749e-04, -6.4707e-03, -4.2820e-03,  2.0487e-03,  4.5712e-03,\n",
      "         1.3022e-03, -7.5025e-03, -4.7104e-03,  1.7149e-03,  6.3998e-03,\n",
      "         4.7293e-03,  2.1849e-05, -3.9434e-03,  8.6309e-03, -2.7500e-04,\n",
      "         7.1075e-03, -3.3328e-04,  4.8239e-03], device='cuda:0')}, 29: {'momentum_buffer': tensor([ 2.2192e-04,  2.1013e-03,  1.0365e-03,  1.2471e-03, -2.9033e-04,\n",
      "         1.6082e-03,  3.1698e-03, -3.9768e-03,  9.9713e-04, -2.3460e-03,\n",
      "         1.3129e-03, -8.8668e-03, -7.1140e-03, -6.9239e-05,  2.5039e-03,\n",
      "        -1.1524e-04,  8.8798e-04, -1.4273e-03,  4.5011e-03,  3.9503e-03,\n",
      "         2.7666e-03, -4.2712e-03,  1.7949e-03, -8.4093e-03, -5.2399e-03,\n",
      "        -6.4442e-04, -1.7505e-03, -4.7472e-03,  3.5415e-03,  5.9990e-03,\n",
      "         6.4207e-03, -2.9187e-03,  1.8850e-03, -8.1940e-04,  9.0791e-04,\n",
      "         4.3616e-03,  4.6489e-03,  4.1501e-03,  7.3486e-04,  4.7268e-04,\n",
      "        -5.4811e-04, -4.7853e-04, -1.8849e-05,  1.9484e-04,  1.2320e-04,\n",
      "         1.1847e-03,  5.3068e-03, -2.5736e-03, -2.8410e-03, -2.6744e-03,\n",
      "        -3.2077e-03,  1.3021e-03,  2.1573e-03, -2.6216e-03,  1.1173e-03,\n",
      "        -2.7556e-03, -5.7726e-03,  2.1528e-03,  4.0115e-03,  3.0927e-03,\n",
      "        -3.6191e-03,  1.3905e-03,  1.6717e-03,  3.5618e-04,  4.0342e-03,\n",
      "        -4.0403e-03, -1.1564e-03, -9.1274e-03, -3.3417e-03,  1.2191e-03,\n",
      "         1.0785e-03,  7.3932e-04, -7.7818e-03, -1.9978e-03, -3.7558e-03,\n",
      "        -1.3331e-03,  6.4018e-04,  5.0734e-03, -3.8538e-03,  1.0941e-03,\n",
      "         2.2859e-05,  5.1308e-03, -3.5240e-03, -2.8681e-03,  2.2953e-03,\n",
      "        -5.6597e-03,  2.4893e-03, -6.5019e-04,  1.9198e-03, -1.9218e-03,\n",
      "         5.1129e-04, -1.7845e-03,  2.0571e-03, -4.4168e-04,  3.6746e-04,\n",
      "         3.1292e-04, -2.7718e-03, -2.3047e-03,  6.8102e-03,  2.8176e-03,\n",
      "         1.5531e-03, -1.2420e-04, -6.1793e-04,  6.7618e-03,  2.4405e-04,\n",
      "         1.5033e-03, -6.5323e-03, -5.2981e-04,  4.0069e-03,  4.1965e-04,\n",
      "         1.0103e-03, -1.9192e-03, -3.0449e-03,  3.5174e-04, -1.1748e-02,\n",
      "        -1.4483e-06, -5.1152e-03, -3.6179e-03,  1.4971e-03, -2.3099e-04,\n",
      "         3.6005e-03, -1.6058e-03, -5.6144e-03,  3.0560e-03, -1.2508e-03,\n",
      "         1.8437e-03, -4.7422e-03,  1.9489e-03], device='cuda:0')}, 30: {'momentum_buffer': tensor([[[[-2.9714e-04, -8.4146e-04, -3.4262e-04],\n",
      "          [-8.2582e-04, -1.4944e-03, -1.5023e-03],\n",
      "          [-1.8355e-04, -7.2181e-04, -1.3214e-03]],\n",
      "\n",
      "         [[-4.7420e-05, -2.7568e-04, -4.2208e-04],\n",
      "          [ 7.4878e-04,  1.3599e-04, -1.6860e-04],\n",
      "          [ 8.8901e-04,  7.3465e-07,  2.9396e-05]],\n",
      "\n",
      "         [[-7.9216e-04, -4.5877e-04, -1.1059e-03],\n",
      "          [-8.6992e-04, -2.6880e-04, -8.3815e-04],\n",
      "          [-8.5730e-04,  1.6134e-04, -1.3587e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.5510e-04, -1.8256e-04, -5.9682e-04],\n",
      "          [-8.8981e-04, -1.0111e-03, -8.9374e-04],\n",
      "          [-3.2639e-04, -5.4256e-04, -4.9145e-04]],\n",
      "\n",
      "         [[-1.7433e-03, -1.8506e-03, -1.1815e-03],\n",
      "          [-1.5765e-03, -1.8526e-03, -1.2408e-03],\n",
      "          [-1.7100e-03, -1.7547e-03, -1.0859e-03]],\n",
      "\n",
      "         [[ 2.8193e-04, -2.1186e-04, -2.7911e-04],\n",
      "          [ 3.4598e-06,  2.3198e-04,  9.2899e-05],\n",
      "          [-5.6566e-04,  1.5961e-04, -6.1833e-05]]],\n",
      "\n",
      "\n",
      "        [[[-5.4890e-04, -6.3576e-04, -4.6810e-04],\n",
      "          [ 1.1048e-04,  3.2294e-04, -3.0985e-04],\n",
      "          [ 3.0729e-04, -3.1360e-05, -3.9749e-04]],\n",
      "\n",
      "         [[ 9.5676e-05, -2.5602e-04, -4.5983e-04],\n",
      "          [-1.2312e-04, -1.1314e-05,  5.6846e-05],\n",
      "          [ 3.1014e-04,  4.6644e-04,  5.9883e-04]],\n",
      "\n",
      "         [[ 3.1326e-05,  8.8928e-04,  3.6333e-04],\n",
      "          [ 1.6888e-03,  2.6128e-03,  1.7420e-03],\n",
      "          [ 1.2630e-03,  1.5653e-03,  5.9734e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.4245e-04,  1.0918e-03,  5.4929e-04],\n",
      "          [ 7.8836e-04,  8.3734e-04,  5.1064e-04],\n",
      "          [ 9.0702e-04,  8.1363e-04,  5.5283e-04]],\n",
      "\n",
      "         [[-9.5005e-05, -7.9975e-05,  3.7604e-04],\n",
      "          [ 7.3511e-04,  6.9905e-05,  5.3189e-04],\n",
      "          [ 6.4663e-04,  1.8795e-04,  5.0898e-04]],\n",
      "\n",
      "         [[-8.8387e-05,  3.6780e-04,  1.0126e-03],\n",
      "          [ 8.8656e-05,  3.0027e-04,  5.0438e-04],\n",
      "          [-3.9476e-04, -4.6912e-04,  1.5637e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4991e-04, -1.1724e-04,  2.4463e-04],\n",
      "          [ 1.1321e-04,  1.0197e-04,  4.5251e-04],\n",
      "          [-5.8046e-04, -4.8235e-04,  3.2944e-04]],\n",
      "\n",
      "         [[-1.9082e-04, -2.5518e-04, -2.2646e-04],\n",
      "          [-1.5443e-04, -2.8146e-04,  7.3391e-05],\n",
      "          [ 2.0607e-04,  9.7953e-05, -6.8787e-05]],\n",
      "\n",
      "         [[ 2.9371e-04, -3.9415e-05, -1.9368e-04],\n",
      "          [ 7.6754e-04,  2.8611e-04,  3.2267e-04],\n",
      "          [ 1.2890e-03,  7.4923e-04,  8.3406e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.8384e-04,  4.9595e-04,  5.8566e-04],\n",
      "          [ 4.3397e-04,  5.5259e-04,  5.9774e-04],\n",
      "          [ 4.4582e-05,  1.9866e-04,  5.5267e-04]],\n",
      "\n",
      "         [[ 7.1532e-04,  1.2220e-03,  1.7096e-03],\n",
      "          [ 1.1803e-03,  1.6884e-03,  1.8770e-03],\n",
      "          [ 8.4713e-04,  1.4350e-03,  1.6955e-03]],\n",
      "\n",
      "         [[ 1.0260e-04,  9.8178e-04,  8.3985e-04],\n",
      "          [-6.3600e-05,  7.2651e-04,  2.2091e-04],\n",
      "          [ 6.6275e-04,  4.6971e-04,  6.7852e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-7.2419e-04,  2.5396e-05,  3.6815e-04],\n",
      "          [-1.2531e-04,  5.2589e-04,  2.0096e-04],\n",
      "          [ 1.0403e-04,  1.7962e-04, -6.9098e-04]],\n",
      "\n",
      "         [[-3.7147e-04, -4.3169e-04,  1.3397e-04],\n",
      "          [-2.8153e-04,  4.2877e-05,  3.2806e-04],\n",
      "          [ 1.2888e-04,  1.7901e-04,  1.0117e-04]],\n",
      "\n",
      "         [[ 1.9575e-04,  2.3033e-04,  2.6282e-04],\n",
      "          [ 8.0222e-04,  6.8730e-04,  8.5638e-04],\n",
      "          [ 1.2688e-03,  9.7501e-04,  8.0127e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.1416e-05,  2.6106e-04,  7.6270e-04],\n",
      "          [-2.8794e-04, -1.2668e-04, -1.0668e-04],\n",
      "          [ 4.3400e-05, -1.7804e-04,  4.0667e-04]],\n",
      "\n",
      "         [[ 3.1089e-04,  4.9551e-04, -3.6380e-04],\n",
      "          [ 2.9173e-04,  5.5322e-04,  1.5104e-04],\n",
      "          [ 8.0005e-05,  3.0584e-04,  7.8828e-05]],\n",
      "\n",
      "         [[ 7.1680e-04,  4.4595e-04,  2.9442e-04],\n",
      "          [ 1.6623e-04,  2.2307e-04,  6.1060e-06],\n",
      "          [-2.9929e-04, -3.4145e-04, -4.5007e-05]]],\n",
      "\n",
      "\n",
      "        [[[-2.1408e-04, -1.1280e-04, -3.5988e-04],\n",
      "          [-9.1480e-05,  1.0397e-03,  3.4100e-04],\n",
      "          [ 7.9215e-05,  5.7125e-04,  7.6430e-07]],\n",
      "\n",
      "         [[ 1.7717e-04,  1.2256e-04,  3.8636e-04],\n",
      "          [-6.9628e-05,  4.5122e-04,  5.1658e-04],\n",
      "          [ 9.3607e-05,  3.0172e-04,  4.8923e-04]],\n",
      "\n",
      "         [[ 2.9479e-04,  4.2743e-05,  1.3677e-04],\n",
      "          [ 3.3222e-04,  5.5983e-04,  5.4917e-04],\n",
      "          [-5.2663e-04, -2.2443e-04, -1.3291e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.0157e-04,  6.9512e-04,  4.3419e-04],\n",
      "          [ 4.6797e-04,  8.5222e-04,  3.8361e-04],\n",
      "          [ 4.5810e-04,  1.3208e-05, -2.1533e-04]],\n",
      "\n",
      "         [[ 3.3861e-04, -7.5623e-05,  1.7322e-05],\n",
      "          [ 8.4590e-04,  7.2112e-04,  7.4053e-04],\n",
      "          [ 8.8988e-04,  8.7326e-04,  1.2491e-03]],\n",
      "\n",
      "         [[-1.1497e-04,  2.0878e-04,  5.5952e-04],\n",
      "          [ 1.3524e-04,  5.9838e-04,  7.9368e-04],\n",
      "          [-2.7334e-04, -6.3398e-04, -1.7654e-05]]],\n",
      "\n",
      "\n",
      "        [[[-8.5708e-05,  1.1100e-04,  5.5489e-06],\n",
      "          [-4.5072e-04,  3.5159e-04,  2.7906e-04],\n",
      "          [-8.1426e-04, -1.2701e-04, -8.5665e-04]],\n",
      "\n",
      "         [[ 6.2603e-04,  3.0031e-04,  4.3783e-04],\n",
      "          [ 3.9993e-06, -4.0937e-05, -1.5398e-04],\n",
      "          [ 2.1131e-04, -3.4833e-04, -3.1397e-04]],\n",
      "\n",
      "         [[ 1.3572e-04,  6.3037e-05,  7.6885e-04],\n",
      "          [-2.1163e-04, -7.5163e-05,  2.7563e-05],\n",
      "          [-9.9255e-04,  1.5330e-04,  2.5010e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.1394e-04,  5.9227e-04,  5.1176e-04],\n",
      "          [-1.1072e-04, -4.2500e-04, -1.5990e-04],\n",
      "          [ 1.0630e-05, -2.6814e-04, -1.9528e-04]],\n",
      "\n",
      "         [[-8.4753e-04, -9.7265e-04, -1.0417e-03],\n",
      "          [-2.4243e-04, -3.8176e-04, -7.0421e-05],\n",
      "          [-4.3715e-04, -2.2401e-04, -5.0497e-04]],\n",
      "\n",
      "         [[-2.7365e-04,  2.7994e-04,  3.0092e-04],\n",
      "          [-2.4891e-04, -1.2510e-04, -1.5282e-04],\n",
      "          [-3.3972e-04, -2.8479e-04, -2.6527e-04]]]], device='cuda:0')}, 31: {'momentum_buffer': tensor([ 6.0940e-04,  2.0616e-03,  7.3197e-04, -7.0572e-03,  7.7531e-03,\n",
      "        -1.4765e-03, -5.8689e-04,  2.5529e-03,  3.3094e-03, -2.9534e-03,\n",
      "        -3.0693e-04,  5.9378e-03,  2.8597e-04,  8.2777e-04,  6.4246e-03,\n",
      "         6.9192e-03, -6.1561e-03, -2.6537e-03,  5.5701e-03, -1.0360e-02,\n",
      "        -4.3384e-03, -4.6212e-03, -3.2819e-04,  4.9168e-03,  2.8348e-03,\n",
      "        -5.4394e-03, -1.9764e-02, -4.7113e-04, -1.0473e-02,  8.2450e-03,\n",
      "        -4.3541e-03, -2.2006e-03,  4.2151e-04,  2.8283e-03, -2.5694e-02,\n",
      "         1.7575e-03, -1.1904e-03, -1.2027e-03,  2.9740e-03, -5.8482e-03,\n",
      "         1.3123e-02, -1.3853e-03, -1.4913e-03,  3.5543e-03, -1.3933e-03,\n",
      "        -2.6304e-03,  9.9853e-04, -2.2054e-03,  2.7945e-03,  1.1487e-03,\n",
      "        -3.3654e-03, -1.0837e-04,  5.0802e-03,  1.3281e-02,  2.0508e-03,\n",
      "        -9.4204e-03, -8.6788e-04,  2.5053e-03,  6.5450e-03,  4.1992e-03,\n",
      "         3.8602e-03,  2.8439e-03, -8.9284e-03,  3.4613e-03,  4.7390e-03,\n",
      "        -7.9889e-04, -1.3384e-04, -2.8171e-03, -4.3709e-03, -4.4187e-03,\n",
      "         9.8735e-03,  3.3334e-03,  3.7038e-03,  8.9365e-03, -9.6348e-03,\n",
      "        -6.6038e-03,  5.3186e-03,  5.5908e-03, -3.0280e-03, -3.5275e-03,\n",
      "         6.5632e-03, -1.3347e-02,  3.6626e-03, -3.1539e-03,  2.4275e-03,\n",
      "        -1.5798e-02, -8.3865e-03, -5.0722e-04, -2.4035e-03, -8.1161e-03,\n",
      "        -2.2694e-03,  6.0569e-03, -3.8021e-03, -7.4289e-03,  1.0801e-03,\n",
      "        -2.8831e-03, -1.0499e-02,  5.5362e-03, -4.1874e-03, -3.4212e-03,\n",
      "         6.8624e-03,  5.5128e-04,  9.0660e-03, -4.2858e-03, -5.5805e-03,\n",
      "        -1.0885e-02, -8.1555e-03,  6.3421e-03, -7.5894e-04,  1.4389e-02,\n",
      "         1.2474e-02, -5.5431e-03,  6.3833e-03,  6.4475e-03, -7.1809e-03,\n",
      "        -1.0028e-02, -2.7198e-02, -1.0809e-03, -8.1435e-03,  6.4805e-04,\n",
      "         3.8216e-03,  2.4076e-03,  3.5314e-03,  5.7202e-03,  2.4065e-03,\n",
      "         2.1661e-03,  3.3995e-04,  2.9019e-03,  8.3742e-03, -5.7966e-03,\n",
      "        -1.3182e-02,  3.9538e-04, -4.3306e-03, -2.7847e-03, -4.6467e-03,\n",
      "         3.2175e-03, -1.5048e-03,  1.2817e-03,  6.8386e-03,  6.3614e-03,\n",
      "        -8.4060e-03, -3.2529e-04,  4.2132e-04,  7.6319e-03,  5.4182e-04,\n",
      "         1.9380e-03, -6.8951e-03,  3.0023e-03,  1.8647e-02,  5.8042e-03,\n",
      "         1.0016e-02, -4.3449e-03, -1.8966e-04,  3.4317e-03, -1.9886e-03,\n",
      "        -1.5867e-03, -4.8269e-03,  3.7310e-03, -1.0615e-02, -2.2068e-03,\n",
      "        -1.0142e-02,  2.8116e-04,  5.5949e-03,  2.5619e-03, -6.1495e-03,\n",
      "         2.6057e-03, -1.0000e-04, -2.0379e-03,  7.9407e-04,  3.1240e-03,\n",
      "        -1.3294e-03, -5.7684e-03, -2.9766e-03, -5.0691e-05, -1.0144e-03,\n",
      "        -7.8962e-03,  1.0938e-03,  3.8337e-03, -1.0378e-02, -1.7242e-03,\n",
      "        -1.7229e-03, -8.7056e-04, -3.1660e-03,  2.4282e-04,  1.9956e-02,\n",
      "         2.4856e-03, -4.0926e-03, -1.8624e-03, -1.3110e-03,  4.3656e-03,\n",
      "         4.2588e-03,  6.0348e-03, -1.2116e-02, -4.1568e-03,  1.1382e-02,\n",
      "        -1.5782e-03,  2.1315e-03,  2.8152e-03,  3.5783e-03,  6.5676e-04,\n",
      "         4.2013e-03, -2.2749e-04,  6.0609e-03,  3.7373e-03,  7.8956e-03,\n",
      "         1.8611e-03, -5.2458e-03,  9.8407e-03,  4.3391e-03, -2.1431e-03,\n",
      "        -5.4617e-03,  2.7745e-03,  1.0254e-02, -9.3947e-03, -4.0890e-04,\n",
      "         1.0406e-03,  5.5635e-03, -3.7806e-03, -1.0559e-02, -5.8187e-03,\n",
      "        -2.6453e-03,  5.6927e-03, -2.9643e-03,  1.4097e-03, -2.3467e-03,\n",
      "         9.9608e-03,  2.4715e-03, -1.5086e-03, -3.9406e-03,  8.5617e-04,\n",
      "        -3.3900e-03,  6.4333e-03, -8.1734e-04,  5.7452e-03,  1.2229e-03,\n",
      "         7.1457e-03, -6.0469e-03, -2.6017e-03,  3.0627e-03,  3.5129e-03,\n",
      "         7.6949e-04,  1.2448e-02,  7.3552e-03, -4.8530e-03, -3.6624e-03,\n",
      "         1.8292e-03, -8.0424e-03, -3.9143e-03, -2.0077e-03, -8.8283e-04,\n",
      "         6.5365e-03,  3.2328e-03, -4.3049e-03, -1.1086e-04, -5.3025e-03,\n",
      "         7.4902e-03], device='cuda:0')}, 32: {'momentum_buffer': tensor([ 4.9666e-03, -6.3136e-03, -8.3147e-04, -6.2172e-03,  1.2182e-02,\n",
      "        -3.6843e-03, -2.7361e-03,  7.7046e-04,  2.1440e-03, -4.1976e-03,\n",
      "        -1.7813e-04,  2.6463e-03, -3.0587e-03,  5.1261e-03,  6.9678e-03,\n",
      "         1.5961e-03, -3.3060e-03, -3.0605e-03, -8.0189e-04, -5.6861e-03,\n",
      "        -1.5990e-03, -1.9232e-03, -2.9576e-05,  3.3235e-03,  2.1322e-03,\n",
      "        -5.1963e-03, -6.1421e-03,  1.4980e-03, -4.6866e-03,  3.6072e-03,\n",
      "        -1.0108e-03, -2.1505e-03,  1.6885e-03,  4.3103e-03, -2.1457e-02,\n",
      "        -1.7914e-04,  2.1132e-03, -2.5321e-03, -1.4944e-03, -2.9720e-03,\n",
      "         4.8039e-03,  2.7813e-03, -1.3135e-03,  9.9048e-05, -5.0632e-04,\n",
      "        -1.5026e-03,  1.5205e-03,  5.0754e-04,  1.4775e-03,  2.3815e-03,\n",
      "        -3.0549e-03,  3.7334e-05,  2.4958e-03,  9.0261e-03,  2.3065e-03,\n",
      "        -2.9625e-03, -3.0225e-04,  1.4982e-03,  2.4818e-03,  7.4022e-04,\n",
      "         4.2412e-03,  2.3414e-03, -3.9749e-03, -1.2577e-03,  1.1182e-03,\n",
      "         1.6462e-03,  1.7999e-05, -3.1774e-03, -1.5385e-03, -6.0884e-03,\n",
      "         1.2437e-03,  9.6573e-04, -1.9445e-03,  4.1407e-03, -4.9070e-03,\n",
      "        -2.1275e-03,  4.5729e-04,  4.3267e-03, -3.4510e-03, -5.4469e-03,\n",
      "         1.2884e-03, -7.2092e-03,  2.6314e-03, -1.1710e-03,  4.0172e-03,\n",
      "        -9.8719e-03, -2.4655e-03, -1.7350e-03, -1.3894e-04, -2.5684e-03,\n",
      "        -4.7166e-03,  3.7193e-03, -6.9997e-03, -4.8280e-03,  1.8159e-03,\n",
      "        -5.2400e-03, -6.6058e-03,  6.7643e-03,  3.0164e-04,  1.3870e-03,\n",
      "         1.5460e-03,  1.8332e-04,  4.2108e-03, -4.8079e-03, -4.1626e-03,\n",
      "        -9.3169e-03,  1.5163e-03,  2.9294e-03, -1.7274e-03,  5.2030e-03,\n",
      "         6.8677e-03, -1.2880e-03, -1.4319e-03,  5.0920e-03, -4.7367e-03,\n",
      "        -2.9913e-03, -1.1863e-02, -2.1856e-03, -9.8328e-03,  1.9551e-03,\n",
      "         6.3195e-04,  2.4329e-04,  2.8876e-03,  5.9199e-03,  3.9960e-03,\n",
      "        -5.9506e-04, -2.4091e-04,  2.7239e-03,  4.8872e-03, -2.7766e-03,\n",
      "        -7.4540e-03, -2.3624e-03, -3.8419e-03, -8.7822e-04, -2.8316e-03,\n",
      "         2.7919e-03, -1.8487e-03, -6.4946e-04,  5.9526e-03, -4.1956e-03,\n",
      "        -2.8644e-03, -2.1483e-03, -6.6711e-04,  5.3992e-03,  2.6454e-03,\n",
      "         3.5619e-04, -2.4306e-03,  2.2498e-03,  8.4633e-03,  5.3229e-03,\n",
      "         1.1582e-02, -9.5708e-04,  7.1384e-04,  3.8659e-03, -4.0933e-03,\n",
      "         2.6879e-04, -1.9804e-03,  3.4844e-03, -1.3092e-02, -1.5571e-04,\n",
      "        -9.2239e-03,  6.0292e-03,  3.4505e-03, -2.1917e-03, -4.0366e-03,\n",
      "         1.9563e-03, -1.8935e-03,  2.1443e-03,  5.0227e-05,  2.7527e-03,\n",
      "        -7.3995e-04, -4.0202e-03, -1.0004e-03,  6.7874e-04, -9.0948e-04,\n",
      "        -1.8286e-03,  3.4201e-03, -1.4769e-03, -3.5774e-03, -3.0037e-03,\n",
      "        -9.3543e-04, -8.7979e-04, -1.9786e-03,  2.8046e-03,  1.4359e-02,\n",
      "         2.3110e-03, -7.5664e-03, -7.3242e-04, -2.6586e-05, -9.9443e-04,\n",
      "         7.6683e-04,  2.7710e-03, -6.0797e-03, -1.9008e-03,  5.5845e-03,\n",
      "         1.6057e-03,  9.0844e-04, -2.7797e-03,  6.7317e-04, -5.5366e-04,\n",
      "         2.5103e-03, -3.5999e-03,  4.6797e-03,  1.2621e-03,  3.3986e-03,\n",
      "        -3.1753e-03, -3.4524e-03,  5.1604e-03, -6.6099e-04, -5.3864e-04,\n",
      "        -6.8865e-03,  1.5036e-03,  1.0857e-02, -3.8477e-03, -7.1878e-04,\n",
      "         5.9646e-04,  2.0242e-03, -2.8477e-03, -6.2225e-03, -2.3796e-03,\n",
      "         5.2748e-04,  3.7300e-03, -4.9144e-03,  3.4178e-03, -2.8438e-03,\n",
      "         4.1793e-03,  1.6825e-03, -3.6540e-03, -3.8999e-03,  1.9937e-03,\n",
      "        -1.1411e-03,  1.7717e-03, -4.9372e-03,  4.3876e-03,  7.0049e-04,\n",
      "         1.5119e-03, -1.9741e-03, -1.9862e-03,  3.1636e-03,  1.5826e-03,\n",
      "         1.1133e-03,  4.9195e-03,  5.3213e-04, -4.8238e-03, -4.2653e-03,\n",
      "         2.5076e-04, -5.9379e-03,  5.8712e-04, -1.3422e-03,  9.0939e-04,\n",
      "         8.7769e-04,  3.3697e-03, -4.3340e-03, -9.9285e-04, -1.7027e-03,\n",
      "         1.0644e-02], device='cuda:0')}, 33: {'momentum_buffer': tensor([[[[-3.1891e-04,  2.0475e-04,  6.0422e-04],\n",
      "          [-4.4597e-04,  2.1118e-04,  2.9498e-04],\n",
      "          [-7.9318e-05, -3.7007e-05,  6.5192e-04]],\n",
      "\n",
      "         [[-2.1684e-04, -3.4403e-04, -2.9785e-04],\n",
      "          [ 1.6328e-04, -4.3431e-04, -1.6304e-03],\n",
      "          [-8.1425e-04, -7.4653e-04, -9.8802e-04]],\n",
      "\n",
      "         [[-5.5909e-04, -6.1065e-04, -7.9648e-04],\n",
      "          [-2.1400e-04,  1.2614e-04, -1.2561e-04],\n",
      "          [-3.4941e-04, -4.5451e-05,  1.1207e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.6302e-04, -1.1622e-03, -1.3371e-03],\n",
      "          [-2.3797e-04, -1.3389e-04, -2.8868e-04],\n",
      "          [-7.1163e-05,  4.4434e-04,  6.0503e-04]],\n",
      "\n",
      "         [[-1.7418e-03, -1.2508e-03, -1.4466e-03],\n",
      "          [-2.0161e-03, -1.8633e-03, -1.8191e-03],\n",
      "          [-2.5040e-03, -2.5271e-03, -1.0968e-03]],\n",
      "\n",
      "         [[-7.8729e-04,  1.0966e-04,  2.9811e-04],\n",
      "          [ 9.2748e-05,  1.5884e-04,  2.6745e-04],\n",
      "          [ 4.4455e-05,  1.5839e-04,  8.2188e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.4773e-03,  1.1898e-03,  4.9059e-04],\n",
      "          [ 8.4600e-04,  3.8823e-04, -4.5765e-04],\n",
      "          [-8.5678e-04, -5.4944e-05, -7.4387e-04]],\n",
      "\n",
      "         [[-3.4220e-04, -2.5567e-04,  7.4564e-04],\n",
      "          [-1.1644e-04, -7.5690e-04, -7.6658e-04],\n",
      "          [-4.2159e-04, -9.6842e-04, -9.1797e-04]],\n",
      "\n",
      "         [[-3.1707e-04, -2.3457e-04, -2.6854e-04],\n",
      "          [-5.3431e-04, -4.3459e-04, -3.3038e-04],\n",
      "          [-1.5015e-04, -7.4235e-04, -7.5636e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3106e-04,  2.0289e-04,  4.0337e-04],\n",
      "          [-2.1755e-04, -2.6212e-04, -1.8443e-04],\n",
      "          [-2.7422e-04, -2.8825e-04, -2.0546e-05]],\n",
      "\n",
      "         [[ 9.5912e-04,  7.7459e-04,  4.5317e-04],\n",
      "          [ 5.6689e-04, -8.0957e-05, -3.0857e-04],\n",
      "          [ 1.2825e-03,  4.6200e-04,  1.8144e-04]],\n",
      "\n",
      "         [[ 1.2705e-03,  1.4113e-03,  5.6679e-04],\n",
      "          [ 1.4010e-03,  5.2986e-04, -2.8609e-04],\n",
      "          [ 5.9185e-04,  6.0465e-04, -5.0777e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 7.5252e-04,  1.5857e-03,  1.8383e-03],\n",
      "          [ 8.6468e-04,  1.2852e-03,  1.5137e-03],\n",
      "          [-1.3619e-04,  5.9626e-04,  8.1022e-04]],\n",
      "\n",
      "         [[-2.6848e-04,  1.4872e-04,  6.4998e-04],\n",
      "          [ 9.3126e-05,  1.0965e-04, -2.4518e-04],\n",
      "          [ 3.4397e-04,  1.1329e-05,  2.2891e-04]],\n",
      "\n",
      "         [[-2.6956e-04,  4.9919e-04,  8.0771e-04],\n",
      "          [-1.6391e-04, -3.8404e-04, -8.2774e-04],\n",
      "          [-6.5637e-04, -2.5079e-04,  3.1856e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.6536e-04,  2.6080e-04, -1.8630e-04],\n",
      "          [ 8.8453e-05, -3.1494e-04, -3.7402e-05],\n",
      "          [-4.1213e-04, -5.6786e-04, -6.8925e-04]],\n",
      "\n",
      "         [[-7.3383e-04, -1.2712e-04,  2.3276e-04],\n",
      "          [-4.9172e-04,  7.7702e-05,  2.2802e-04],\n",
      "          [ 6.4707e-04, -4.2714e-05, -1.3279e-04]],\n",
      "\n",
      "         [[ 1.0002e-03,  8.4080e-04,  2.9159e-04],\n",
      "          [ 1.5140e-03,  1.1667e-03,  4.7129e-04],\n",
      "          [ 8.5324e-04,  8.8505e-04,  1.3834e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-1.3098e-03, -1.9393e-03, -1.1157e-03],\n",
      "          [-4.5847e-04, -8.1266e-04, -5.8740e-04],\n",
      "          [-1.2821e-04, -2.4480e-04,  2.0000e-04]],\n",
      "\n",
      "         [[-1.3313e-03,  2.6228e-04,  1.6091e-05],\n",
      "          [-5.4800e-04, -4.5170e-04, -6.1798e-04],\n",
      "          [-1.2623e-03, -8.0958e-04,  1.1390e-04]],\n",
      "\n",
      "         [[ 2.2035e-04,  1.1540e-03,  1.0364e-03],\n",
      "          [ 3.6729e-04,  9.7568e-04,  4.2483e-05],\n",
      "          [-5.8841e-04, -5.4648e-04,  1.5170e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.1380e-04,  7.2683e-04,  2.9656e-04],\n",
      "          [-1.5905e-04,  3.4628e-04,  2.0420e-04],\n",
      "          [ 5.9898e-04,  4.8704e-04,  4.8692e-04]],\n",
      "\n",
      "         [[-8.1405e-04, -8.1587e-04, -3.4687e-04],\n",
      "          [-8.8253e-04,  9.8012e-05,  2.9962e-04],\n",
      "          [ 2.9497e-04,  8.4678e-04,  6.1361e-04]],\n",
      "\n",
      "         [[-7.5434e-04, -9.3463e-04, -5.2460e-04],\n",
      "          [-6.1422e-04, -2.2435e-04,  2.2138e-04],\n",
      "          [ 7.2113e-04,  4.5604e-04,  7.5007e-04]]],\n",
      "\n",
      "\n",
      "        [[[-7.6695e-04,  7.7277e-05,  5.0900e-04],\n",
      "          [-7.9845e-04, -2.7357e-04, -1.4340e-04],\n",
      "          [ 1.8229e-05,  3.8853e-04, -3.6130e-05]],\n",
      "\n",
      "         [[-5.2894e-04, -8.3849e-04, -4.7144e-04],\n",
      "          [-1.1135e-03, -9.6204e-04, -1.8922e-04],\n",
      "          [-1.3490e-03, -5.0553e-04, -8.8749e-04]],\n",
      "\n",
      "         [[-9.9274e-04, -1.5113e-03, -8.0574e-04],\n",
      "          [ 5.4285e-06, -4.8279e-04,  3.7498e-05],\n",
      "          [-2.8541e-04, -5.7752e-05, -2.1616e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.5688e-03, -1.6618e-03, -3.9442e-04],\n",
      "          [-4.7888e-04, -2.1246e-04, -8.3698e-04],\n",
      "          [-1.0059e-03, -1.2994e-03, -1.1909e-03]],\n",
      "\n",
      "         [[ 4.5909e-04, -3.7747e-04, -1.0648e-03],\n",
      "          [ 5.6416e-04,  5.4423e-04,  3.7786e-04],\n",
      "          [ 9.1577e-04,  2.7534e-04, -2.6857e-04]],\n",
      "\n",
      "         [[-1.6555e-03, -1.5132e-03, -8.5081e-04],\n",
      "          [-8.6926e-04, -6.3983e-04,  4.4825e-05],\n",
      "          [-5.1490e-04, -1.6437e-03, -1.7067e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 2.3029e-05,  6.6341e-04,  6.6204e-04],\n",
      "          [ 2.3105e-04,  6.9528e-04,  3.4218e-04],\n",
      "          [ 1.3856e-04, -3.3672e-04, -7.7629e-04]],\n",
      "\n",
      "         [[ 6.2511e-04,  4.9248e-04, -1.0079e-04],\n",
      "          [ 1.9223e-04, -1.9996e-04,  4.8513e-04],\n",
      "          [ 3.9816e-04,  1.5876e-04,  1.6151e-05]],\n",
      "\n",
      "         [[ 1.4504e-04, -6.1792e-04,  3.0643e-04],\n",
      "          [ 4.5273e-04, -7.4757e-04, -5.4659e-05],\n",
      "          [-4.4406e-04, -7.1519e-04, -3.6603e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.4809e-04, -5.4136e-05, -1.2719e-04],\n",
      "          [ 1.1412e-03,  3.6715e-04,  3.4857e-04],\n",
      "          [ 8.2013e-04,  4.1397e-04,  3.0816e-04]],\n",
      "\n",
      "         [[-6.1901e-04,  7.4258e-05, -1.2965e-04],\n",
      "          [ 6.8192e-04, -2.1922e-04, -1.9568e-04],\n",
      "          [ 5.1393e-04,  1.6293e-04, -5.1710e-04]],\n",
      "\n",
      "         [[-1.0074e-03, -9.7079e-04, -1.7629e-03],\n",
      "          [-2.1044e-03, -1.9162e-03, -2.4048e-03],\n",
      "          [-1.3416e-03, -1.6775e-03, -1.8982e-03]]]], device='cuda:0')}, 34: {'momentum_buffer': tensor([-0.0257,  0.0010,  0.0095, -0.0090, -0.0016, -0.0086,  0.0061, -0.0102,\n",
      "         0.0011,  0.0057,  0.0071, -0.0006, -0.0105, -0.0042,  0.0078, -0.0073,\n",
      "        -0.0064, -0.0051, -0.0015,  0.0042,  0.0004, -0.0009,  0.0005, -0.0018,\n",
      "        -0.0088, -0.0063,  0.0009,  0.0074,  0.0101,  0.0071, -0.0057,  0.0049,\n",
      "         0.0015,  0.0013, -0.0011, -0.0038, -0.0011, -0.0097,  0.0026, -0.0042,\n",
      "         0.0003, -0.0023,  0.0078, -0.0056, -0.0041, -0.0145, -0.0016, -0.0027,\n",
      "        -0.0010,  0.0149, -0.0005,  0.0160,  0.0121, -0.0064, -0.0046, -0.0052,\n",
      "         0.0043, -0.0099, -0.0009, -0.0207,  0.0126,  0.0105,  0.0172,  0.0168,\n",
      "         0.0176, -0.0050, -0.0083,  0.0019, -0.0037,  0.0020, -0.0019,  0.0001,\n",
      "        -0.0009, -0.0044, -0.0004,  0.0032, -0.0139, -0.0098,  0.0037,  0.0050,\n",
      "        -0.0060, -0.0025,  0.0042,  0.0196,  0.0005,  0.0017,  0.0059, -0.0041,\n",
      "         0.0122, -0.0003, -0.0083,  0.0110,  0.0015, -0.0085, -0.0084, -0.0040,\n",
      "         0.0016, -0.0007,  0.0023,  0.0065,  0.0020, -0.0023, -0.0041, -0.0053,\n",
      "         0.0109, -0.0020, -0.0036, -0.0116,  0.0024,  0.0110,  0.0129,  0.0035,\n",
      "         0.0020, -0.0143, -0.0013, -0.0003,  0.0071, -0.0237,  0.0019,  0.0104,\n",
      "         0.0068, -0.0063, -0.0043, -0.0148, -0.0002, -0.0052,  0.0127, -0.0025,\n",
      "        -0.0010, -0.0061,  0.0043,  0.0083,  0.0012, -0.0126, -0.0128, -0.0069,\n",
      "         0.0167,  0.0015, -0.0023,  0.0245, -0.0053,  0.0037,  0.0023, -0.0105,\n",
      "        -0.0010, -0.0152, -0.0009, -0.0057,  0.0043, -0.0036, -0.0074, -0.0166,\n",
      "        -0.0063, -0.0054,  0.0017,  0.0006, -0.0018,  0.0013,  0.0080,  0.0034,\n",
      "         0.0026,  0.0030, -0.0012,  0.0141, -0.0013, -0.0020, -0.0068,  0.0072,\n",
      "        -0.0020, -0.0105, -0.0027, -0.0025,  0.0016,  0.0017,  0.0051,  0.0087,\n",
      "        -0.0055, -0.0120,  0.0093, -0.0047, -0.0024,  0.0010, -0.0015,  0.0058,\n",
      "        -0.0062,  0.0039,  0.0009,  0.0106, -0.0060,  0.0153, -0.0011,  0.0121,\n",
      "        -0.0038, -0.0032,  0.0016, -0.0074, -0.0070, -0.0053,  0.0093, -0.0066,\n",
      "         0.0143,  0.0038, -0.0089,  0.0076,  0.0070, -0.0053, -0.0128,  0.0052,\n",
      "        -0.0029,  0.0098, -0.0016, -0.0044,  0.0030, -0.0123,  0.0010, -0.0126,\n",
      "        -0.0097,  0.0020, -0.0038,  0.0020, -0.0044, -0.0006, -0.0079, -0.0047,\n",
      "        -0.0161,  0.0008,  0.0143,  0.0001,  0.0193,  0.0049,  0.0010,  0.0003,\n",
      "        -0.0055,  0.0101,  0.0042, -0.0003, -0.0055, -0.0034, -0.0017, -0.0098,\n",
      "        -0.0080, -0.0032,  0.0067,  0.0034, -0.0008, -0.0099,  0.0029, -0.0018,\n",
      "        -0.0007,  0.0021,  0.0064,  0.0032, -0.0047,  0.0011, -0.0127,  0.0038],\n",
      "       device='cuda:0')}, 35: {'momentum_buffer': tensor([-1.4245e-02,  6.9604e-03,  3.0244e-03, -4.3442e-03, -5.9905e-03,\n",
      "        -7.4749e-03,  3.0377e-03, -9.4088e-03,  2.3169e-03,  2.2861e-03,\n",
      "         2.4687e-03, -4.0159e-05, -6.7688e-03, -1.7968e-06,  2.8414e-03,\n",
      "        -1.1156e-03, -2.6760e-03, -1.5908e-03,  9.5396e-04,  1.3960e-03,\n",
      "         1.4293e-03, -1.6025e-03,  7.1510e-03,  6.9358e-04, -3.3782e-03,\n",
      "        -4.5955e-03, -1.8969e-03,  3.6851e-03,  5.8973e-03,  5.3986e-03,\n",
      "        -4.4848e-03,  2.1837e-03, -4.7745e-04, -6.3734e-03, -9.1712e-05,\n",
      "        -1.3482e-03, -2.5936e-03, -7.0439e-03,  2.2044e-03, -6.5875e-04,\n",
      "         2.5032e-04, -9.7133e-04,  5.0452e-03, -5.2074e-03, -3.7613e-04,\n",
      "        -8.3884e-03,  1.3922e-03, -3.1952e-03,  5.6688e-04,  7.1492e-03,\n",
      "         6.1819e-04,  3.1924e-03,  1.6049e-02,  2.2158e-03, -5.7689e-03,\n",
      "        -3.3960e-03,  4.1928e-03, -4.8360e-03, -1.1032e-03, -1.2105e-02,\n",
      "         7.5482e-03,  8.7108e-03,  1.0651e-02,  1.3037e-02,  5.1044e-03,\n",
      "        -3.3299e-03, -1.3636e-03, -9.5032e-03, -5.3464e-03,  4.2144e-04,\n",
      "        -2.5691e-03,  5.0161e-03,  2.0949e-04, -3.2214e-03, -1.1154e-03,\n",
      "         2.9070e-03, -6.5438e-03, -7.7598e-03,  4.4470e-03,  9.6018e-05,\n",
      "        -3.7811e-03,  7.5214e-05, -3.3669e-03,  1.0614e-02, -2.3520e-03,\n",
      "         1.5495e-03,  4.2013e-03, -3.3975e-03,  2.0667e-03, -1.8121e-03,\n",
      "        -2.2856e-03,  6.1142e-03,  4.4140e-04, -3.6379e-03, -3.1077e-03,\n",
      "        -8.4535e-03, -1.6871e-03,  1.7986e-03,  4.4071e-03, -3.1619e-03,\n",
      "         1.1199e-03, -2.3911e-03, -3.1118e-03,  6.5038e-04,  4.1902e-03,\n",
      "         1.0453e-03, -5.4700e-03, -5.5061e-03,  7.0804e-04, -6.7762e-03,\n",
      "         3.5135e-03, -4.4874e-04,  1.4751e-03, -4.4212e-03, -7.8957e-05,\n",
      "        -3.8592e-04,  4.0069e-03, -6.7854e-03, -1.4662e-03,  4.5759e-03,\n",
      "         1.6101e-03, -5.8843e-03, -1.4220e-03, -1.0809e-02, -3.9118e-03,\n",
      "         2.1313e-03,  8.6744e-03, -8.5696e-04, -4.5325e-04, -6.3450e-03,\n",
      "         2.5466e-03,  6.5472e-03, -1.3914e-03, -4.7139e-03, -5.8119e-03,\n",
      "         1.4653e-03,  1.2597e-02,  9.6445e-04, -5.5755e-04,  4.8671e-03,\n",
      "        -4.9941e-03,  1.6987e-03,  5.8664e-03, -3.1390e-04, -1.7329e-03,\n",
      "        -7.7362e-03, -2.2842e-03, -5.8942e-03,  1.5305e-03, -8.7252e-04,\n",
      "        -4.4943e-03, -1.2654e-02, -1.1236e-03, -4.7526e-03,  1.2983e-03,\n",
      "         1.3990e-03, -1.1302e-03, -1.1620e-03,  7.1212e-03, -2.2848e-04,\n",
      "        -3.4011e-04,  8.3391e-03,  9.0193e-04,  1.0969e-02, -1.8540e-03,\n",
      "        -2.7857e-03, -4.4124e-03,  4.3602e-03,  1.4622e-03, -1.1715e-02,\n",
      "         1.3992e-04,  2.8067e-03, -2.4752e-03,  2.1942e-03,  1.4173e-03,\n",
      "         2.1489e-03, -5.9538e-03, -1.0398e-02,  3.3161e-03, -7.4301e-03,\n",
      "         5.3008e-04, -1.4898e-03, -4.6704e-03, -1.7453e-03, -3.0847e-03,\n",
      "         2.2772e-03,  1.3114e-03,  9.0313e-03, -2.4812e-03,  7.6581e-03,\n",
      "         7.3981e-05,  4.8229e-03, -3.6979e-03, -5.3161e-04,  8.1860e-04,\n",
      "        -6.8102e-03, -4.5775e-03, -5.4299e-03,  2.3819e-03, -4.0670e-03,\n",
      "         7.5111e-03,  4.6348e-03, -5.4407e-03,  7.3597e-03,  2.9159e-03,\n",
      "        -2.3462e-03, -9.8569e-03,  4.6498e-03, -1.4370e-04,  1.7736e-03,\n",
      "        -9.0973e-04, -2.4275e-03,  8.4669e-03, -1.1649e-02,  2.1486e-03,\n",
      "        -1.0058e-02, -1.1031e-02, -2.5252e-03,  9.9427e-04,  3.5752e-03,\n",
      "        -3.2638e-03, -1.9146e-03, -4.6567e-03, -2.1593e-03, -1.0804e-02,\n",
      "        -5.7829e-04,  4.7958e-03,  2.3566e-03,  1.1901e-02,  2.9174e-03,\n",
      "         2.6920e-03,  1.8179e-03, -7.1729e-03,  5.8118e-03, -8.3809e-04,\n",
      "        -1.5838e-03, -3.3448e-03, -3.2080e-03,  1.2762e-03, -6.5851e-03,\n",
      "        -3.1992e-03, -4.1487e-03,  5.6061e-03,  2.3197e-03,  1.0115e-03,\n",
      "        -2.1111e-03,  1.3564e-03, -1.1222e-04, -3.3325e-04, -2.7008e-03,\n",
      "        -2.1337e-04, -4.1047e-03,  2.5771e-03,  1.1706e-04, -1.0927e-02,\n",
      "         5.4127e-05], device='cuda:0')}, 36: {'momentum_buffer': tensor([[[[-3.7418e-04]],\n",
      "\n",
      "         [[ 1.3201e-03]],\n",
      "\n",
      "         [[ 2.7713e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-3.1135e-04]],\n",
      "\n",
      "         [[ 1.3285e-03]],\n",
      "\n",
      "         [[-9.2994e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.9363e-04]],\n",
      "\n",
      "         [[-4.1007e-04]],\n",
      "\n",
      "         [[-6.1577e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.7092e-04]],\n",
      "\n",
      "         [[-9.2002e-05]],\n",
      "\n",
      "         [[ 3.4377e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.2464e-04]],\n",
      "\n",
      "         [[ 4.8566e-04]],\n",
      "\n",
      "         [[ 2.0993e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.6807e-04]],\n",
      "\n",
      "         [[ 5.5309e-04]],\n",
      "\n",
      "         [[ 5.8891e-05]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 8.5603e-04]],\n",
      "\n",
      "         [[ 4.6112e-04]],\n",
      "\n",
      "         [[ 8.8694e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.4628e-04]],\n",
      "\n",
      "         [[ 6.0083e-04]],\n",
      "\n",
      "         [[-3.3903e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 7.4440e-06]],\n",
      "\n",
      "         [[ 1.1327e-04]],\n",
      "\n",
      "         [[-4.1800e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0125e-03]],\n",
      "\n",
      "         [[-6.8822e-05]],\n",
      "\n",
      "         [[ 4.9747e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 4.5289e-04]],\n",
      "\n",
      "         [[-4.4912e-04]],\n",
      "\n",
      "         [[-8.5242e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0309e-03]],\n",
      "\n",
      "         [[ 1.8205e-03]],\n",
      "\n",
      "         [[ 2.9952e-04]]]], device='cuda:0')}, 37: {'momentum_buffer': tensor([-1.0500e-02,  4.2300e-03, -1.3791e-03, -4.6855e-03, -5.3647e-03,\n",
      "        -1.3777e-03,  3.0192e-03, -5.8467e-03,  4.1963e-03,  6.2975e-03,\n",
      "         1.8948e-03,  1.7242e-03, -6.7251e-03,  2.1193e-03,  2.6328e-03,\n",
      "         3.0565e-03, -3.1392e-03, -1.3954e-03, -2.5673e-03, -1.6666e-03,\n",
      "        -2.1119e-03, -9.0562e-03, -3.7761e-03, -2.6783e-03, -1.0074e-02,\n",
      "        -6.2768e-03, -6.7434e-03,  9.0691e-03, -5.0227e-03,  2.2505e-03,\n",
      "        -9.7225e-04,  5.5909e-05, -2.3096e-03,  4.3270e-04, -7.2781e-04,\n",
      "         9.9654e-04, -4.8808e-03, -1.6932e-03, -1.1283e-03, -3.4236e-03,\n",
      "         1.8980e-03, -2.6371e-03,  6.7693e-03, -4.4598e-03,  2.2844e-03,\n",
      "         2.2797e-03, -9.2483e-04,  3.3890e-03,  7.3958e-03,  1.1051e-02,\n",
      "         4.2096e-04,  9.5315e-03,  8.2650e-03,  1.6782e-03,  3.9295e-03,\n",
      "        -1.3984e-02,  4.9086e-04, -9.6333e-03,  1.5601e-03, -2.1192e-02,\n",
      "         4.3979e-03,  4.1749e-03,  9.4982e-03,  1.1225e-02,  1.6528e-02,\n",
      "        -2.1537e-03, -4.5199e-03,  5.1002e-03,  3.2823e-03, -2.1000e-03,\n",
      "         1.9766e-03,  7.6034e-04,  8.7755e-03, -2.4167e-03, -6.5351e-03,\n",
      "        -3.1880e-03, -3.2074e-03, -6.3091e-03, -3.4984e-03,  3.1575e-03,\n",
      "         2.6281e-03,  2.1641e-03, -2.6392e-03,  1.1252e-02, -3.1346e-03,\n",
      "        -3.8882e-04, -3.4637e-03,  2.1433e-03, -4.8837e-03,  4.7505e-03,\n",
      "        -1.1238e-02,  3.8755e-03,  2.5069e-03,  5.3643e-03, -7.7479e-03,\n",
      "         9.3884e-04, -2.0382e-03, -2.6454e-03, -2.7258e-03, -3.6423e-03,\n",
      "         4.1392e-05,  3.5352e-03, -3.3357e-04, -7.1585e-04,  2.2765e-03,\n",
      "         1.7072e-03,  7.8870e-03, -7.9993e-03,  5.1057e-03, -6.8657e-03,\n",
      "         1.0895e-02,  6.3632e-03, -3.7626e-04, -6.0964e-03,  2.3146e-03,\n",
      "        -6.3169e-03,  3.4255e-03, -2.7632e-03, -1.0329e-02, -5.6976e-04,\n",
      "        -6.8452e-04, -4.7101e-03,  1.6145e-03, -2.9399e-03, -7.0858e-04,\n",
      "        -2.6091e-03,  5.4501e-04, -6.1128e-04,  4.3149e-03, -2.3806e-03,\n",
      "         3.0550e-03,  8.2032e-03,  8.5003e-04, -6.3693e-03,  1.8633e-03,\n",
      "         2.2997e-04,  8.0814e-03,  3.0537e-04,  5.8781e-03,  3.1473e-03,\n",
      "        -4.9863e-03,  1.6135e-03,  8.6055e-04,  7.2581e-04,  1.2886e-02,\n",
      "        -6.0521e-03, -4.5957e-04, -3.5436e-03,  1.1228e-03, -4.9517e-05,\n",
      "        -3.3942e-03, -9.4568e-03,  1.1365e-03, -6.7611e-03,  1.7201e-03,\n",
      "        -3.5768e-03, -1.8094e-03, -1.3484e-03, -1.3773e-03,  5.2367e-03,\n",
      "        -4.2165e-03,  4.5903e-03,  1.4236e-03,  4.8031e-03, -8.2538e-03,\n",
      "         2.4405e-03, -5.2700e-03,  3.4379e-03,  2.1730e-03, -2.4771e-03,\n",
      "         2.7222e-03,  6.1182e-03,  6.2000e-03,  1.5368e-03,  2.0138e-03,\n",
      "         1.2299e-02, -6.3652e-03, -6.0798e-03,  1.4376e-03, -2.2589e-03,\n",
      "         5.1135e-03, -5.8849e-04, -6.7080e-03,  1.9164e-03, -6.1894e-03,\n",
      "        -8.7425e-04,  4.8507e-03,  7.2483e-03, -6.3106e-03,  8.5527e-03,\n",
      "         6.7484e-04, -2.3011e-03, -3.0104e-03, -2.4512e-03,  6.9479e-04,\n",
      "         1.3105e-03, -2.0133e-03, -7.0172e-04,  6.5700e-03, -1.5382e-03,\n",
      "        -8.5077e-03,  4.6636e-03, -3.6486e-03,  1.0067e-02,  5.3042e-03,\n",
      "        -1.1784e-03, -5.4265e-03,  3.0876e-03,  3.0372e-03,  5.5189e-03,\n",
      "         1.0064e-03, -1.1725e-03,  7.4945e-04, -7.5648e-03, -1.1105e-03,\n",
      "         8.6537e-04, -3.6319e-03, -5.7655e-03, -1.7966e-03,  1.6993e-04,\n",
      "         1.4244e-03, -2.5265e-03, -4.6701e-03, -4.0513e-03, -5.1939e-03,\n",
      "        -4.6424e-03,  1.5907e-03,  3.9263e-03,  1.5786e-02,  9.8324e-04,\n",
      "         5.7916e-03,  2.6381e-04, -8.4459e-03,  4.4551e-03, -6.0675e-03,\n",
      "        -1.1338e-02,  2.1986e-04,  1.3943e-03, -5.5916e-04, -4.4538e-03,\n",
      "        -1.5795e-03, -1.1623e-02,  1.3776e-02, -1.0395e-04,  5.4489e-03,\n",
      "         7.7908e-04,  3.6712e-03,  2.9117e-03,  1.6078e-03,  2.2992e-03,\n",
      "         1.7069e-03, -9.8567e-03,  1.2326e-03, -7.7828e-04, -4.4285e-03,\n",
      "         8.2890e-04], device='cuda:0')}, 38: {'momentum_buffer': tensor([-1.4245e-02,  6.9604e-03,  3.0244e-03, -4.3442e-03, -5.9905e-03,\n",
      "        -7.4749e-03,  3.0377e-03, -9.4088e-03,  2.3169e-03,  2.2861e-03,\n",
      "         2.4687e-03, -4.0159e-05, -6.7688e-03, -1.7968e-06,  2.8414e-03,\n",
      "        -1.1156e-03, -2.6760e-03, -1.5908e-03,  9.5396e-04,  1.3960e-03,\n",
      "         1.4293e-03, -1.6025e-03,  7.1510e-03,  6.9358e-04, -3.3782e-03,\n",
      "        -4.5955e-03, -1.8969e-03,  3.6851e-03,  5.8973e-03,  5.3986e-03,\n",
      "        -4.4848e-03,  2.1837e-03, -4.7745e-04, -6.3734e-03, -9.1712e-05,\n",
      "        -1.3482e-03, -2.5936e-03, -7.0439e-03,  2.2044e-03, -6.5875e-04,\n",
      "         2.5032e-04, -9.7133e-04,  5.0452e-03, -5.2074e-03, -3.7613e-04,\n",
      "        -8.3884e-03,  1.3922e-03, -3.1952e-03,  5.6688e-04,  7.1492e-03,\n",
      "         6.1819e-04,  3.1924e-03,  1.6049e-02,  2.2158e-03, -5.7689e-03,\n",
      "        -3.3960e-03,  4.1928e-03, -4.8360e-03, -1.1032e-03, -1.2105e-02,\n",
      "         7.5482e-03,  8.7108e-03,  1.0651e-02,  1.3037e-02,  5.1044e-03,\n",
      "        -3.3299e-03, -1.3636e-03, -9.5032e-03, -5.3464e-03,  4.2144e-04,\n",
      "        -2.5691e-03,  5.0161e-03,  2.0949e-04, -3.2214e-03, -1.1154e-03,\n",
      "         2.9070e-03, -6.5438e-03, -7.7598e-03,  4.4470e-03,  9.6018e-05,\n",
      "        -3.7811e-03,  7.5214e-05, -3.3669e-03,  1.0614e-02, -2.3520e-03,\n",
      "         1.5495e-03,  4.2013e-03, -3.3975e-03,  2.0667e-03, -1.8121e-03,\n",
      "        -2.2856e-03,  6.1142e-03,  4.4140e-04, -3.6379e-03, -3.1077e-03,\n",
      "        -8.4535e-03, -1.6871e-03,  1.7986e-03,  4.4071e-03, -3.1619e-03,\n",
      "         1.1199e-03, -2.3911e-03, -3.1118e-03,  6.5038e-04,  4.1902e-03,\n",
      "         1.0453e-03, -5.4700e-03, -5.5061e-03,  7.0804e-04, -6.7762e-03,\n",
      "         3.5135e-03, -4.4874e-04,  1.4751e-03, -4.4212e-03, -7.8957e-05,\n",
      "        -3.8592e-04,  4.0069e-03, -6.7854e-03, -1.4662e-03,  4.5759e-03,\n",
      "         1.6101e-03, -5.8843e-03, -1.4220e-03, -1.0809e-02, -3.9118e-03,\n",
      "         2.1313e-03,  8.6744e-03, -8.5696e-04, -4.5325e-04, -6.3450e-03,\n",
      "         2.5466e-03,  6.5472e-03, -1.3914e-03, -4.7139e-03, -5.8119e-03,\n",
      "         1.4653e-03,  1.2597e-02,  9.6445e-04, -5.5755e-04,  4.8671e-03,\n",
      "        -4.9941e-03,  1.6987e-03,  5.8664e-03, -3.1390e-04, -1.7329e-03,\n",
      "        -7.7362e-03, -2.2842e-03, -5.8942e-03,  1.5305e-03, -8.7252e-04,\n",
      "        -4.4943e-03, -1.2654e-02, -1.1236e-03, -4.7526e-03,  1.2983e-03,\n",
      "         1.3990e-03, -1.1302e-03, -1.1620e-03,  7.1212e-03, -2.2848e-04,\n",
      "        -3.4011e-04,  8.3391e-03,  9.0193e-04,  1.0969e-02, -1.8540e-03,\n",
      "        -2.7857e-03, -4.4124e-03,  4.3602e-03,  1.4622e-03, -1.1715e-02,\n",
      "         1.3992e-04,  2.8067e-03, -2.4752e-03,  2.1942e-03,  1.4173e-03,\n",
      "         2.1489e-03, -5.9538e-03, -1.0398e-02,  3.3161e-03, -7.4301e-03,\n",
      "         5.3008e-04, -1.4898e-03, -4.6704e-03, -1.7453e-03, -3.0847e-03,\n",
      "         2.2772e-03,  1.3114e-03,  9.0313e-03, -2.4812e-03,  7.6581e-03,\n",
      "         7.3981e-05,  4.8229e-03, -3.6979e-03, -5.3161e-04,  8.1860e-04,\n",
      "        -6.8102e-03, -4.5775e-03, -5.4299e-03,  2.3819e-03, -4.0670e-03,\n",
      "         7.5111e-03,  4.6348e-03, -5.4407e-03,  7.3597e-03,  2.9159e-03,\n",
      "        -2.3462e-03, -9.8569e-03,  4.6498e-03, -1.4370e-04,  1.7736e-03,\n",
      "        -9.0973e-04, -2.4275e-03,  8.4669e-03, -1.1649e-02,  2.1486e-03,\n",
      "        -1.0058e-02, -1.1031e-02, -2.5252e-03,  9.9427e-04,  3.5752e-03,\n",
      "        -3.2638e-03, -1.9146e-03, -4.6567e-03, -2.1593e-03, -1.0804e-02,\n",
      "        -5.7829e-04,  4.7958e-03,  2.3566e-03,  1.1901e-02,  2.9174e-03,\n",
      "         2.6920e-03,  1.8179e-03, -7.1729e-03,  5.8118e-03, -8.3809e-04,\n",
      "        -1.5838e-03, -3.3448e-03, -3.2080e-03,  1.2762e-03, -6.5851e-03,\n",
      "        -3.1992e-03, -4.1487e-03,  5.6061e-03,  2.3197e-03,  1.0115e-03,\n",
      "        -2.1111e-03,  1.3564e-03, -1.1222e-04, -3.3325e-04, -2.7008e-03,\n",
      "        -2.1337e-04, -4.1047e-03,  2.5771e-03,  1.1706e-04, -1.0927e-02,\n",
      "         5.4127e-05], device='cuda:0')}, 39: {'momentum_buffer': tensor([[[[ 3.3185e-04,  4.9409e-04,  1.6220e-04],\n",
      "          [ 9.8474e-05,  1.9776e-04, -2.2902e-04],\n",
      "          [ 6.3776e-04,  6.8380e-04, -1.8111e-05]],\n",
      "\n",
      "         [[ 1.5783e-03,  1.8361e-03,  1.5036e-03],\n",
      "          [-1.7916e-05,  3.7009e-04,  3.8167e-04],\n",
      "          [-1.0853e-03, -1.2797e-03, -8.0841e-04]],\n",
      "\n",
      "         [[ 4.9315e-05,  1.4567e-04, -2.9454e-05],\n",
      "          [-1.1023e-04, -1.2393e-04,  3.3714e-04],\n",
      "          [ 1.4434e-04,  1.5884e-04,  5.1616e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.4097e-04,  4.3905e-04,  7.4642e-04],\n",
      "          [ 3.5223e-04, -2.2000e-04,  5.0546e-05],\n",
      "          [-2.9201e-04, -2.9914e-04, -2.7765e-04]],\n",
      "\n",
      "         [[-9.8285e-05, -7.7485e-05, -1.4514e-04],\n",
      "          [-1.3191e-04, -2.2431e-04, -3.2132e-04],\n",
      "          [-7.4197e-04, -1.0907e-03, -1.3339e-03]],\n",
      "\n",
      "         [[-2.1430e-04, -2.5660e-04,  2.4064e-04],\n",
      "          [-7.9731e-04, -9.2078e-04, -5.0754e-04],\n",
      "          [-6.6137e-04, -1.0402e-04,  1.4924e-04]]],\n",
      "\n",
      "\n",
      "        [[[-1.4058e-04,  2.3122e-04, -1.8841e-04],\n",
      "          [-4.0649e-04,  5.2138e-04,  5.3537e-04],\n",
      "          [-3.4298e-04,  3.0718e-04,  9.5101e-04]],\n",
      "\n",
      "         [[ 2.0524e-04,  2.0279e-04,  5.1636e-04],\n",
      "          [ 5.9890e-04,  7.0687e-04,  7.2527e-04],\n",
      "          [ 9.7656e-05,  1.7067e-04,  4.7414e-04]],\n",
      "\n",
      "         [[-1.3852e-05, -1.5628e-04, -4.0009e-05],\n",
      "          [ 1.5384e-04, -2.7232e-04, -5.1454e-04],\n",
      "          [ 2.6778e-04, -3.3787e-04, -5.4978e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.4758e-04, -8.4371e-04, -7.8732e-04],\n",
      "          [-4.4899e-05,  3.0409e-05,  1.8403e-04],\n",
      "          [-2.7151e-04, -9.2633e-05, -9.5478e-05]],\n",
      "\n",
      "         [[ 4.3296e-04,  3.7343e-04, -1.3767e-04],\n",
      "          [-6.1673e-05,  1.1465e-04,  1.4421e-04],\n",
      "          [-6.6560e-04, -5.3321e-04, -1.0530e-04]],\n",
      "\n",
      "         [[-3.6186e-04,  1.2398e-04,  2.7190e-04],\n",
      "          [-4.4748e-04, -3.1315e-04, -1.5559e-04],\n",
      "          [-2.8598e-04, -1.6978e-04, -3.0507e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 2.0887e-04, -5.2097e-04, -2.7399e-04],\n",
      "          [-3.0498e-04, -1.0266e-03, -8.0355e-04],\n",
      "          [ 1.5511e-04, -6.1027e-04, -1.3590e-04]],\n",
      "\n",
      "         [[ 6.7298e-04,  4.5045e-04,  2.4196e-04],\n",
      "          [ 4.3766e-04,  4.1967e-04,  6.2966e-04],\n",
      "          [ 7.1131e-04,  9.7339e-04,  1.1629e-03]],\n",
      "\n",
      "         [[ 1.5421e-04,  5.6422e-04,  1.0951e-03],\n",
      "          [ 2.0702e-06,  7.8310e-05,  7.3804e-04],\n",
      "          [-1.6531e-04,  2.4421e-04,  3.9990e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.4571e-04,  2.3343e-04,  2.2774e-04],\n",
      "          [ 1.9962e-04,  2.0027e-04,  5.7138e-04],\n",
      "          [ 1.0915e-03,  1.6222e-03,  2.8802e-03]],\n",
      "\n",
      "         [[ 7.0582e-04,  4.4465e-04,  2.5761e-04],\n",
      "          [ 4.7757e-04,  6.8709e-04,  5.0401e-04],\n",
      "          [ 1.4711e-03,  1.1109e-03,  4.5834e-04]],\n",
      "\n",
      "         [[ 1.0438e-03,  9.9999e-04,  4.2923e-04],\n",
      "          [ 8.1411e-04,  1.3396e-04,  2.7787e-04],\n",
      "          [-1.3862e-03, -1.4412e-04,  9.4415e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 7.3472e-05,  1.5252e-04, -3.7063e-05],\n",
      "          [ 1.0822e-03,  9.6025e-05, -2.7054e-04],\n",
      "          [ 1.3109e-03,  4.6602e-04,  1.9906e-04]],\n",
      "\n",
      "         [[-5.5904e-05, -2.4225e-04, -4.6738e-04],\n",
      "          [-3.2926e-04, -3.4455e-04, -7.2390e-05],\n",
      "          [-2.3850e-04, -3.8211e-04,  4.1144e-04]],\n",
      "\n",
      "         [[ 5.3315e-04,  3.6806e-04,  8.4321e-04],\n",
      "          [ 6.0919e-04,  4.1883e-04,  6.1891e-04],\n",
      "          [ 6.1129e-04,  7.2410e-04,  7.9879e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7993e-05, -2.1140e-04, -2.1368e-04],\n",
      "          [-7.8373e-04, -7.1983e-04,  4.5023e-04],\n",
      "          [-7.7359e-04,  2.2478e-04,  7.0057e-04]],\n",
      "\n",
      "         [[-1.9339e-04,  7.6975e-04,  5.2178e-04],\n",
      "          [ 4.7782e-04,  8.5106e-04,  7.4177e-04],\n",
      "          [ 7.8086e-04,  6.8483e-04,  3.8982e-04]],\n",
      "\n",
      "         [[ 9.8240e-04,  4.8823e-04,  1.5151e-04],\n",
      "          [-3.1304e-04,  8.2619e-04,  1.1886e-04],\n",
      "          [ 3.7263e-04,  1.6971e-03,  4.1119e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 9.0099e-04,  5.3237e-04, -4.9260e-04],\n",
      "          [ 1.0550e-03,  7.8518e-04,  3.6575e-04],\n",
      "          [ 7.7820e-04, -2.7904e-05, -3.9055e-05]],\n",
      "\n",
      "         [[-2.9125e-04,  3.4488e-04,  8.9229e-04],\n",
      "          [-4.5374e-04, -5.9224e-05,  3.4705e-04],\n",
      "          [-1.0746e-03, -8.9407e-04, -5.9319e-04]],\n",
      "\n",
      "         [[-3.8299e-04,  9.3028e-05,  3.2015e-04],\n",
      "          [-1.4268e-04,  3.5576e-04,  6.8654e-04],\n",
      "          [-4.6166e-05,  2.1753e-04,  3.3539e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.9763e-04,  2.5183e-04,  1.8297e-04],\n",
      "          [ 1.0621e-03,  1.1667e-03,  1.0516e-03],\n",
      "          [ 9.6809e-04,  8.1266e-04,  6.6026e-04]],\n",
      "\n",
      "         [[-2.0441e-04, -4.3570e-04, -4.6799e-04],\n",
      "          [-7.3774e-05,  7.8227e-05,  4.4312e-04],\n",
      "          [ 3.3365e-05, -8.3700e-05,  3.1919e-04]],\n",
      "\n",
      "         [[-1.8269e-04, -2.9105e-04,  8.9890e-05],\n",
      "          [-4.5921e-04, -5.1855e-04, -3.0955e-04],\n",
      "          [-3.5507e-04, -6.9184e-04, -2.9783e-04]]],\n",
      "\n",
      "\n",
      "        [[[-3.8552e-04, -3.5428e-04, -6.9873e-04],\n",
      "          [-3.1592e-05, -7.2980e-04, -6.7525e-04],\n",
      "          [ 2.5027e-04, -9.1311e-04, -5.8310e-04]],\n",
      "\n",
      "         [[-2.5266e-05, -6.0987e-05,  5.5185e-04],\n",
      "          [ 5.7279e-04,  9.6497e-04,  1.4608e-03],\n",
      "          [ 5.4312e-04,  8.0392e-04,  1.0347e-03]],\n",
      "\n",
      "         [[-4.1210e-05,  2.3607e-04, -8.4997e-05],\n",
      "          [-1.7691e-04,  1.9902e-04, -7.9046e-05],\n",
      "          [-6.1405e-04, -4.6082e-04, -4.7959e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 5.2706e-04, -1.5993e-04, -5.7627e-04],\n",
      "          [ 9.6113e-04,  9.4136e-04,  5.6764e-04],\n",
      "          [ 7.3767e-04,  1.2539e-03,  1.0225e-03]],\n",
      "\n",
      "         [[ 2.4475e-03,  1.5823e-03,  6.3897e-04],\n",
      "          [ 5.6107e-04,  2.6455e-04, -3.4978e-04],\n",
      "          [-4.4541e-04, -2.4430e-04,  2.8761e-04]],\n",
      "\n",
      "         [[ 4.5046e-04,  2.4586e-04, -6.4045e-04],\n",
      "          [-1.5007e-04, -2.3187e-04, -4.3919e-04],\n",
      "          [ 1.1374e-04,  4.0489e-04,  9.0878e-05]]]], device='cuda:0')}, 40: {'momentum_buffer': tensor([-1.5463e-03, -6.5791e-03,  3.6413e-02,  6.4218e-04, -1.0658e-02,\n",
      "        -7.6450e-03,  4.5411e-03, -5.5818e-03, -2.2804e-02,  2.8158e-03,\n",
      "         1.2602e-02, -1.1120e-03,  5.0761e-03, -8.9566e-04,  4.9296e-04,\n",
      "         4.2076e-05, -1.6845e-02,  4.5775e-03, -4.0050e-03, -8.3834e-03,\n",
      "        -5.7060e-04,  1.3375e-02,  6.3792e-03, -1.2870e-02,  3.8423e-04,\n",
      "         1.9282e-03, -2.5847e-03, -1.4473e-03, -9.9970e-03, -7.8810e-03,\n",
      "        -5.2514e-03,  3.4827e-03, -5.6316e-03, -2.4504e-02, -2.2432e-03,\n",
      "        -4.3306e-03, -4.5852e-04, -2.4493e-03, -2.7878e-03, -1.0418e-03,\n",
      "         1.1787e-02, -1.4433e-02, -6.5770e-04, -1.0686e-02, -4.2633e-03,\n",
      "        -6.2238e-03, -1.8989e-03,  7.2263e-03, -2.1882e-03,  8.4037e-04,\n",
      "         2.4281e-02,  3.7357e-03, -6.9820e-03,  2.1427e-02, -3.2924e-03,\n",
      "        -7.9018e-03, -8.5929e-04,  1.9932e-03,  6.6205e-03,  2.4579e-03,\n",
      "        -1.6200e-02,  2.9670e-03, -1.4320e-02,  8.6894e-04, -8.7610e-03,\n",
      "        -5.5117e-03,  1.7773e-02, -7.3435e-03,  1.5679e-02, -2.5013e-02,\n",
      "         4.2011e-03,  3.3765e-03,  2.7822e-03, -7.2695e-03, -7.5379e-04,\n",
      "        -5.8210e-03, -1.2453e-03, -5.6147e-03,  6.6838e-03, -5.5585e-03,\n",
      "         8.9847e-03, -8.4178e-03, -7.6310e-03, -3.9507e-03, -2.5866e-03,\n",
      "        -9.8474e-03, -1.3425e-02, -1.2205e-03,  2.2967e-03, -1.0150e-03,\n",
      "        -3.1923e-02,  5.4958e-03, -5.4415e-03, -1.0609e-03,  1.4474e-02,\n",
      "        -6.2702e-04, -1.6340e-03,  6.3336e-03,  6.1969e-03,  1.3896e-02,\n",
      "        -1.1814e-02,  6.2413e-03, -5.7667e-03,  1.6114e-03, -5.8650e-03,\n",
      "         4.8094e-04,  1.9619e-02,  8.5503e-04,  1.2890e-02, -1.1727e-02,\n",
      "        -1.3691e-02,  5.5605e-03, -5.1073e-03, -5.8478e-03,  3.5571e-02,\n",
      "         4.0423e-03, -5.0186e-03,  1.2857e-02, -1.7807e-02,  1.1307e-04,\n",
      "        -1.1529e-03,  4.2389e-03,  1.2238e-02,  1.4326e-03,  5.3244e-03,\n",
      "         4.8982e-03, -5.7386e-04, -1.8328e-04, -1.6347e-02, -2.9035e-03,\n",
      "        -3.7707e-03, -6.0825e-03,  1.3084e-03,  2.0589e-02, -1.0165e-02,\n",
      "        -7.9377e-03,  7.4741e-03, -1.3548e-03, -6.8475e-03,  6.8322e-03,\n",
      "         1.0050e-02,  1.4412e-02, -9.9303e-03,  7.7706e-05,  2.2848e-03,\n",
      "         1.2485e-02, -1.2150e-02, -4.0864e-03,  1.4292e-02,  2.3372e-04,\n",
      "         5.3561e-03, -1.9481e-03,  4.2154e-03, -1.2811e-02,  4.7450e-03,\n",
      "        -2.0932e-02,  2.0087e-03, -9.3717e-03, -2.4228e-04,  6.2853e-03,\n",
      "         5.1384e-03,  1.1352e-02,  1.0618e-03, -1.9845e-02,  5.6444e-03,\n",
      "         8.2716e-03,  8.4358e-03, -2.6300e-03, -1.9056e-02, -6.5029e-03,\n",
      "        -4.5128e-03,  2.2611e-03,  6.8748e-03, -5.8523e-03,  3.7946e-03,\n",
      "        -8.8918e-03, -1.5868e-02,  1.4801e-03,  2.0599e-02, -1.4728e-03,\n",
      "        -1.3442e-02, -9.6619e-03,  5.4747e-03, -1.8839e-03,  4.1189e-03,\n",
      "        -1.4439e-02,  1.5926e-02,  3.8689e-03,  1.7591e-02,  8.7656e-03,\n",
      "        -1.5700e-02,  1.4690e-02,  6.9375e-03,  8.8772e-03, -9.0242e-03,\n",
      "         3.1011e-03,  8.5938e-03, -1.1135e-02,  3.0774e-04,  1.8089e-03,\n",
      "         5.1141e-03, -8.8503e-03,  9.6609e-03, -2.3046e-03,  3.0873e-03,\n",
      "         1.7900e-02,  2.8937e-02,  4.3063e-03,  7.0972e-03,  2.5034e-04,\n",
      "         1.3226e-02,  1.3671e-03, -1.2636e-02, -1.2059e-02,  2.7412e-03,\n",
      "         4.4467e-03, -5.4751e-03,  6.7109e-04, -5.0577e-03, -1.7475e-03,\n",
      "        -1.5492e-02,  1.3528e-03, -7.7842e-04, -3.5873e-03,  7.7160e-04,\n",
      "         9.3964e-03, -5.6917e-03,  2.0893e-03,  4.9968e-03,  1.8142e-03,\n",
      "         4.0376e-03, -2.4086e-03,  1.4181e-02, -3.2104e-03, -5.1965e-03,\n",
      "         1.1970e-02, -2.4856e-03, -3.2474e-03, -1.3336e-02,  1.2466e-02,\n",
      "         1.8352e-03,  2.9508e-03, -1.0494e-03,  2.0265e-02, -1.2701e-02,\n",
      "         1.4281e-02,  8.7229e-03,  1.1238e-03,  4.4493e-03, -1.2652e-02,\n",
      "        -7.2005e-03,  1.2858e-03, -1.0049e-02,  1.7992e-03,  9.9784e-03,\n",
      "        -5.2117e-03], device='cuda:0')}, 41: {'momentum_buffer': tensor([ 2.3551e-04, -5.5614e-03,  1.1612e-02,  2.8328e-04, -5.6520e-03,\n",
      "        -4.5638e-03,  2.1844e-03, -4.4510e-03, -1.6033e-02, -6.0346e-04,\n",
      "         6.8562e-03, -1.2140e-03,  1.2076e-03,  1.0017e-03, -2.1682e-03,\n",
      "        -1.3010e-03, -9.3057e-03,  2.4586e-03,  8.9505e-04, -3.4141e-03,\n",
      "        -3.3849e-04,  6.0186e-03,  3.2939e-03, -1.0671e-02, -2.5992e-03,\n",
      "         1.8535e-03, -2.2785e-03, -1.1064e-03, -5.3842e-03, -3.8316e-03,\n",
      "        -3.5019e-03,  4.2580e-03, -2.8514e-03, -1.3624e-02,  8.0753e-04,\n",
      "        -2.2684e-03, -8.3812e-05, -2.3898e-03, -1.1681e-03, -1.8467e-03,\n",
      "         3.9557e-03, -2.8353e-03, -1.4892e-03, -4.0427e-03, -3.2151e-03,\n",
      "        -2.7583e-03, -4.1628e-04,  1.3628e-03,  1.6354e-05, -2.2343e-04,\n",
      "         9.2963e-03, -3.7554e-04, -4.6458e-03,  1.3390e-02, -3.0434e-03,\n",
      "        -3.9553e-03, -1.2036e-03, -2.1338e-03,  2.5094e-03,  2.7996e-03,\n",
      "        -6.5113e-03,  2.4650e-03, -8.0053e-03, -4.7529e-04, -3.6057e-03,\n",
      "        -4.2532e-03,  7.8169e-03, -7.1470e-03,  5.2433e-03, -7.4759e-03,\n",
      "         3.4105e-03,  2.8597e-03,  4.3399e-04, -2.6195e-03, -6.5854e-04,\n",
      "        -3.1115e-03, -4.1504e-03, -2.3085e-03,  5.7658e-03, -2.4988e-03,\n",
      "         6.2822e-03, -5.2168e-03, -3.4278e-03, -1.0079e-02, -2.2184e-03,\n",
      "        -3.2348e-03, -1.0714e-02, -3.7665e-03,  7.2302e-04, -5.9863e-04,\n",
      "        -1.3905e-02,  2.4980e-03, -2.5697e-03,  1.1122e-04,  1.1436e-02,\n",
      "         1.2708e-04, -1.5819e-03,  3.0910e-03,  6.4939e-03,  1.3136e-02,\n",
      "        -4.6376e-03,  3.8101e-03, -4.6399e-03,  1.5725e-03, -7.0370e-03,\n",
      "        -1.9508e-03,  1.0282e-02, -5.2691e-04,  8.3284e-03, -5.8287e-03,\n",
      "        -8.7334e-03, -1.1805e-04, -3.2196e-03, -2.9868e-03,  2.2826e-02,\n",
      "         2.1450e-03, -3.5053e-04,  8.3702e-03, -6.7933e-03,  4.6256e-03,\n",
      "         4.6071e-04,  2.4625e-03,  6.1661e-03,  1.8566e-03,  1.2230e-03,\n",
      "         3.1918e-03, -2.1173e-03, -1.3027e-03, -6.1596e-03, -3.4071e-03,\n",
      "        -6.7556e-04, -2.1318e-03, -1.6865e-04,  1.1931e-02, -4.4675e-03,\n",
      "        -8.9135e-03,  2.9492e-03,  1.4300e-04, -5.5518e-03,  1.7687e-03,\n",
      "         8.5071e-03,  7.1638e-03, -5.3872e-03, -3.2125e-04, -4.7438e-04,\n",
      "         3.0306e-03, -9.1721e-03, -2.9747e-03,  6.9282e-03,  6.3913e-04,\n",
      "        -3.7279e-04, -9.0496e-04,  1.5761e-03, -8.4761e-03,  5.8006e-03,\n",
      "        -1.0020e-02, -2.8568e-04,  2.6513e-03, -6.3523e-04,  1.4569e-03,\n",
      "         2.7772e-03,  1.5497e-03,  2.8600e-03, -1.5130e-02,  3.8037e-03,\n",
      "         2.5042e-03,  2.6059e-03, -2.5923e-03, -1.3923e-02, -2.8192e-03,\n",
      "        -3.8668e-03,  3.3934e-03,  3.6831e-03, -2.3010e-03, -4.4196e-04,\n",
      "        -4.1046e-03, -9.5798e-03,  5.7644e-03,  1.2169e-02,  7.0738e-05,\n",
      "        -8.2264e-03, -6.3425e-03,  5.4894e-04,  1.7834e-03,  2.9567e-03,\n",
      "        -1.1579e-02,  6.0089e-03,  1.7817e-03,  8.9080e-03,  6.2969e-03,\n",
      "        -1.2030e-02,  7.8432e-03,  8.5320e-04,  5.5749e-03, -2.3498e-03,\n",
      "         6.6984e-05,  4.7779e-03, -7.0810e-03,  5.2143e-04,  2.1474e-03,\n",
      "         1.6317e-03, -5.6982e-03,  5.2444e-03,  3.9905e-04, -1.6505e-03,\n",
      "         5.6334e-03,  1.2308e-02,  6.5498e-05,  7.0317e-04, -4.3820e-04,\n",
      "         7.1656e-03, -1.3091e-03, -8.1939e-03, -7.3768e-03,  9.8641e-04,\n",
      "         1.7916e-03, -3.0175e-03,  1.8904e-03, -2.6563e-03, -9.0895e-04,\n",
      "        -8.5503e-03,  9.2534e-04,  4.0781e-04, -7.2580e-04, -1.0046e-03,\n",
      "         6.2856e-03, -1.2917e-03,  5.1655e-03,  1.3268e-03,  1.0821e-04,\n",
      "         8.9049e-04, -4.2812e-03,  6.9010e-03, -3.5620e-03, -2.4311e-03,\n",
      "         6.2087e-03, -1.6488e-03, -3.3081e-03, -5.4478e-03,  5.7096e-03,\n",
      "        -7.4436e-04,  2.7467e-03,  8.6540e-04,  1.1401e-02, -6.7690e-03,\n",
      "         8.9942e-03,  4.2608e-03,  2.1009e-03,  1.9726e-03, -5.5875e-03,\n",
      "         1.6164e-04, -1.3281e-03, -6.6663e-03, -1.0162e-05,  2.1907e-03,\n",
      "        -1.8503e-03], device='cuda:0')}, 42: {'momentum_buffer': tensor([[[[ 5.1537e-04, -4.1749e-05, -5.4363e-04],\n",
      "          [ 6.4031e-04, -4.9807e-05, -9.8616e-04],\n",
      "          [ 4.1081e-04, -3.6992e-04, -1.1012e-03]],\n",
      "\n",
      "         [[-8.9389e-05,  3.7686e-04,  7.5167e-04],\n",
      "          [-1.4647e-04,  9.4658e-06,  4.4976e-04],\n",
      "          [ 4.4770e-05,  1.9234e-04,  2.4257e-04]],\n",
      "\n",
      "         [[ 8.5387e-04,  1.1763e-03,  1.2453e-03],\n",
      "          [ 9.3128e-04,  1.2188e-03,  9.3925e-04],\n",
      "          [ 3.3539e-04,  6.4010e-04,  8.8945e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.3482e-04,  2.4708e-04,  3.2308e-04],\n",
      "          [ 6.9861e-04,  4.6446e-04,  3.1652e-04],\n",
      "          [ 4.8077e-04,  7.3705e-04,  3.9634e-04]],\n",
      "\n",
      "         [[-5.1599e-04, -8.5879e-04, -1.9787e-04],\n",
      "          [-2.2496e-04, -6.2577e-04, -7.0100e-05],\n",
      "          [-4.3875e-04, -3.7673e-04,  2.5727e-04]],\n",
      "\n",
      "         [[-3.8075e-05, -4.0477e-04, -1.1643e-03],\n",
      "          [-2.2191e-04, -1.7401e-04, -8.0246e-04],\n",
      "          [-5.9745e-04,  1.5621e-04,  1.3723e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 6.2706e-05,  5.5753e-04,  1.0402e-03],\n",
      "          [-9.2685e-05,  1.5273e-04,  2.0747e-04],\n",
      "          [-3.2447e-04, -5.8186e-04, -6.0084e-04]],\n",
      "\n",
      "         [[-5.1649e-04, -2.8191e-04,  2.3805e-04],\n",
      "          [-7.1914e-04, -4.5189e-04,  5.4091e-05],\n",
      "          [-5.2533e-04, -2.1188e-04, -6.6512e-05]],\n",
      "\n",
      "         [[-1.1137e-05, -8.7448e-05, -6.5790e-04],\n",
      "          [-5.2630e-04, -4.2066e-04, -4.4945e-04],\n",
      "          [-4.2105e-04, -1.6250e-04, -2.9917e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.0809e-04, -1.6890e-04,  6.1476e-04],\n",
      "          [ 4.3284e-05, -3.1027e-04,  4.1543e-04],\n",
      "          [ 4.6496e-04,  7.6406e-04,  6.1594e-04]],\n",
      "\n",
      "         [[-1.2154e-03, -4.1397e-04,  4.5136e-05],\n",
      "          [-1.3966e-03, -7.6778e-04, -1.0110e-03],\n",
      "          [-1.3238e-03, -5.2672e-04, -1.0812e-03]],\n",
      "\n",
      "         [[ 7.6466e-04,  8.8312e-04,  7.4674e-04],\n",
      "          [ 5.5681e-04,  6.6070e-04,  8.9259e-04],\n",
      "          [-6.3030e-04, -3.6767e-04, -2.8218e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 2.2410e-04,  8.0667e-04,  1.7661e-04],\n",
      "          [-2.3771e-04, -1.6368e-05, -2.0541e-04],\n",
      "          [-4.4740e-04, -1.4845e-06, -7.4727e-05]],\n",
      "\n",
      "         [[ 3.6400e-05,  6.3017e-05, -1.0069e-04],\n",
      "          [ 3.2490e-05, -9.9933e-05, -4.5482e-04],\n",
      "          [-2.1455e-05,  5.0025e-05, -2.3683e-04]],\n",
      "\n",
      "         [[ 1.1696e-04,  2.7197e-04,  2.6639e-04],\n",
      "          [ 2.1977e-04,  3.7199e-04,  1.3441e-04],\n",
      "          [-1.6958e-04,  2.8968e-05,  9.6628e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 6.2995e-06, -5.5324e-05,  1.1411e-04],\n",
      "          [-2.8680e-04, -4.7870e-04, -4.2448e-04],\n",
      "          [ 5.1069e-05, -2.8763e-04, -2.7854e-04]],\n",
      "\n",
      "         [[-3.5739e-04, -8.0164e-04, -5.5719e-04],\n",
      "          [-1.6971e-04, -7.9850e-04, -3.9953e-04],\n",
      "          [ 1.4906e-04, -2.4383e-04, -7.9185e-05]],\n",
      "\n",
      "         [[ 5.1114e-05, -1.6108e-04,  2.4529e-04],\n",
      "          [ 2.7120e-04,  1.4235e-04,  4.1390e-04],\n",
      "          [ 7.4943e-04,  3.8931e-04,  4.5368e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 4.6973e-05, -4.1229e-04, -5.9296e-04],\n",
      "          [ 5.3357e-04, -1.6877e-04, -1.0591e-03],\n",
      "          [ 3.7820e-04,  1.4305e-05, -3.2152e-04]],\n",
      "\n",
      "         [[-1.7961e-04, -3.2099e-04, -3.7110e-04],\n",
      "          [ 1.1929e-04, -2.2930e-04, -5.5332e-04],\n",
      "          [ 1.6072e-04, -1.9183e-04, -5.2798e-04]],\n",
      "\n",
      "         [[-3.1844e-04,  2.6955e-04,  4.1805e-04],\n",
      "          [-4.6245e-04, -4.4596e-04, -5.2365e-04],\n",
      "          [-5.2331e-04, -5.4620e-04, -5.5115e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.6145e-04, -3.6870e-04, -1.8086e-05],\n",
      "          [ 3.1167e-04, -5.7436e-04,  9.3329e-05],\n",
      "          [-4.6500e-04, -6.2960e-04,  5.3404e-05]],\n",
      "\n",
      "         [[ 3.5871e-04,  3.1580e-04,  1.2289e-03],\n",
      "          [ 1.3603e-03,  3.0824e-04,  8.7203e-04],\n",
      "          [ 3.8140e-04, -1.9565e-04,  4.1376e-04]],\n",
      "\n",
      "         [[-3.1311e-05, -1.3297e-04, -7.7223e-05],\n",
      "          [ 3.4705e-04,  3.7399e-04,  1.2861e-03],\n",
      "          [-3.3732e-05,  1.0674e-03,  2.2730e-03]]],\n",
      "\n",
      "\n",
      "        [[[ 5.9163e-04, -4.9491e-05, -4.3588e-04],\n",
      "          [ 4.4635e-04,  4.4863e-06, -2.0340e-04],\n",
      "          [ 4.4221e-04,  1.5625e-04,  1.4111e-05]],\n",
      "\n",
      "         [[-2.4323e-04, -2.9307e-04, -9.1414e-05],\n",
      "          [-4.0027e-04, -2.4193e-04, -5.4185e-05],\n",
      "          [ 2.5766e-05,  2.1732e-04,  8.5333e-05]],\n",
      "\n",
      "         [[ 2.0780e-04,  3.6637e-04,  2.7935e-04],\n",
      "          [-3.3386e-04, -2.9896e-04,  1.5211e-04],\n",
      "          [-3.1653e-04, -4.2310e-04, -2.3927e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.5207e-04, -2.6227e-04, -9.6503e-04],\n",
      "          [ 9.9166e-04,  4.6930e-04, -4.8600e-05],\n",
      "          [ 1.0514e-03,  1.1441e-03,  1.1886e-04]],\n",
      "\n",
      "         [[ 8.5522e-04,  4.1367e-04,  1.7452e-04],\n",
      "          [ 1.1333e-03,  5.4657e-04, -1.8824e-04],\n",
      "          [ 1.3631e-03,  8.8630e-04,  1.7923e-05]],\n",
      "\n",
      "         [[-1.6080e-03, -1.0815e-03, -3.5063e-04],\n",
      "          [-1.6758e-03, -7.4329e-04, -2.5422e-04],\n",
      "          [-8.3929e-04, -9.8015e-04, -9.3096e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.0365e-04,  1.2541e-04, -5.7953e-05],\n",
      "          [ 3.0202e-04,  2.9991e-04,  2.0803e-04],\n",
      "          [ 3.7713e-04,  3.3470e-04,  3.2181e-04]],\n",
      "\n",
      "         [[ 3.9727e-04,  3.8348e-04,  8.3865e-04],\n",
      "          [-6.7714e-05, -1.3218e-04,  6.0358e-05],\n",
      "          [-9.0695e-04, -1.5016e-03, -9.1243e-04]],\n",
      "\n",
      "         [[ 9.6248e-04,  8.7714e-04,  2.5963e-04],\n",
      "          [ 6.2892e-04,  7.5426e-04,  7.7143e-04],\n",
      "          [ 1.1285e-04,  8.3486e-04,  7.9825e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.2777e-04, -7.9535e-04, -9.0926e-04],\n",
      "          [-2.0123e-05, -1.3584e-04, -1.2674e-04],\n",
      "          [ 1.3686e-04,  5.1705e-04,  9.2418e-04]],\n",
      "\n",
      "         [[-6.8894e-04, -9.0508e-04, -1.9522e-04],\n",
      "          [-1.0730e-03, -1.7957e-03, -9.1241e-04],\n",
      "          [-3.3754e-04, -1.3638e-03, -1.1649e-03]],\n",
      "\n",
      "         [[ 5.4055e-04,  2.1544e-04, -1.3539e-04],\n",
      "          [-2.1246e-04,  2.4096e-04,  3.9114e-04],\n",
      "          [ 4.8627e-04,  8.8664e-04,  8.1527e-04]]]], device='cuda:0')}, 43: {'momentum_buffer': tensor([-2.1481e-03,  6.3959e-03,  9.5149e-03, -2.4832e-03, -9.8850e-03,\n",
      "        -5.5923e-03, -5.9440e-04, -6.8741e-03, -2.8334e-03, -1.3863e-03,\n",
      "        -1.2052e-03,  8.8067e-03, -5.4859e-03, -7.7884e-03,  1.7823e-03,\n",
      "        -2.6685e-04,  1.6736e-03, -1.1139e-03,  5.0589e-03, -1.2048e-02,\n",
      "        -1.1282e-03, -4.1332e-04,  1.8959e-03,  5.3422e-03, -8.2017e-03,\n",
      "        -2.7581e-03, -6.0515e-03,  6.4244e-03,  3.2732e-03,  4.5395e-03,\n",
      "        -5.6443e-03,  1.5499e-03, -2.6192e-03,  1.0330e-02,  1.3746e-03,\n",
      "        -3.5436e-03, -2.3730e-03,  3.5773e-04, -3.4185e-03, -7.2572e-03,\n",
      "        -2.2890e-05, -6.3527e-03, -1.3638e-03, -2.5843e-03,  5.9088e-03,\n",
      "        -3.9046e-03,  1.0096e-03, -1.9271e-03,  5.1106e-03, -6.7896e-03,\n",
      "         5.2887e-03, -2.1518e-03,  1.2486e-02,  1.2172e-02, -9.5190e-03,\n",
      "         8.3507e-03,  7.0207e-03, -5.9820e-03,  3.5303e-03,  1.0816e-03,\n",
      "        -1.8866e-03,  1.8510e-02,  8.5813e-03,  9.5784e-03,  1.1482e-03,\n",
      "        -1.2700e-02, -2.3379e-03, -4.0075e-03, -3.4968e-03, -7.2029e-03,\n",
      "         4.6738e-03,  4.8035e-03,  2.7290e-03,  5.4806e-03,  2.3782e-03,\n",
      "         8.1025e-03, -9.2263e-03, -1.1112e-03,  4.6159e-03, -4.3189e-03,\n",
      "         1.2219e-02,  6.0723e-03, -8.7197e-03, -1.1017e-04, -9.9173e-03,\n",
      "        -7.1098e-03, -2.6835e-03, -2.5666e-03,  1.0222e-02,  6.0342e-03,\n",
      "        -4.4595e-03,  1.0363e-02,  1.9992e-03,  8.2584e-03,  3.0531e-03,\n",
      "        -5.8933e-03, -3.0198e-05,  9.3609e-03, -3.8023e-03,  1.4864e-03,\n",
      "        -4.6786e-03, -1.2652e-02,  2.0527e-04, -5.1183e-03,  6.8577e-03,\n",
      "         3.2913e-03, -1.7143e-02,  6.8787e-04, -4.5046e-03,  7.6671e-03,\n",
      "        -7.6359e-03, -1.8114e-04,  6.0897e-04,  5.0959e-04,  3.1321e-03,\n",
      "         2.6719e-04,  3.1715e-03,  8.2621e-03,  1.2777e-03,  8.8734e-03,\n",
      "         3.8501e-03, -3.1997e-03,  1.8892e-04, -1.4895e-02, -9.0805e-03,\n",
      "        -7.1523e-03,  3.8875e-03,  2.6236e-03,  1.4852e-03, -4.6482e-05,\n",
      "        -2.7112e-03,  7.6823e-03, -5.5225e-03, -1.1042e-02, -3.4820e-03,\n",
      "        -2.6170e-03,  4.9986e-03, -4.2896e-03, -1.3331e-03,  1.0617e-02,\n",
      "        -2.8579e-03,  3.2244e-03, -2.5111e-03, -2.6921e-03, -3.4932e-03,\n",
      "         6.8517e-03,  2.3737e-03,  2.2783e-03,  1.1225e-02,  6.9784e-03,\n",
      "         6.7604e-03, -2.0035e-02, -9.1388e-03, -5.5228e-03,  1.1780e-03,\n",
      "         1.2296e-02, -1.2012e-03, -1.0701e-03, -6.5240e-03,  1.7527e-04,\n",
      "         6.9723e-04, -2.9810e-03,  2.8023e-03,  1.8657e-02,  4.2878e-03,\n",
      "         1.5321e-02,  6.6256e-04,  2.4729e-03, -7.4094e-03, -1.3777e-02,\n",
      "        -5.9639e-03,  9.5955e-03, -4.8942e-03,  1.9148e-03,  1.7414e-03,\n",
      "        -5.8336e-03,  7.6164e-03,  8.5581e-04,  1.3812e-02, -1.4946e-02,\n",
      "        -7.2658e-04, -1.1390e-02, -6.4339e-03, -8.2614e-03, -1.4191e-03,\n",
      "        -2.0656e-03,  2.3309e-03,  4.0680e-03, -2.6688e-03,  1.2044e-02,\n",
      "        -2.9998e-03,  7.2983e-03,  5.1514e-03,  6.4158e-03,  4.9724e-03,\n",
      "        -7.5460e-03,  9.8743e-03,  8.1535e-03,  3.8495e-03, -1.0383e-02,\n",
      "        -6.0758e-03,  3.0459e-03, -2.8351e-03,  7.6310e-03, -5.9372e-03,\n",
      "        -1.0115e-03, -3.1375e-03, -5.3448e-03,  4.9485e-03, -1.2344e-03,\n",
      "        -1.4151e-03,  2.9923e-03,  4.1031e-03, -7.0099e-03,  2.2273e-03,\n",
      "        -3.1766e-03,  6.7639e-03,  1.9215e-03,  1.8021e-02,  6.8978e-03,\n",
      "         2.4264e-04,  2.1340e-03,  2.4967e-03, -6.8091e-03, -3.2733e-03,\n",
      "         1.3628e-03,  3.7224e-03,  9.8462e-03, -1.3076e-03, -1.1767e-03,\n",
      "        -1.5221e-03,  8.6610e-03,  1.8340e-03, -5.2275e-03, -6.1968e-03,\n",
      "         1.2100e-03, -3.5882e-03, -3.7246e-04,  1.6472e-03, -3.3651e-04,\n",
      "         4.5929e-04, -2.3772e-03,  6.0719e-03, -5.6051e-03,  8.8096e-03,\n",
      "         7.0982e-03, -1.7787e-03,  2.8797e-03,  6.1687e-03, -6.3676e-03,\n",
      "        -1.3981e-03, -3.2540e-03,  8.4291e-04,  7.5330e-03,  4.2183e-03,\n",
      "         9.6524e-03], device='cuda:0')}, 44: {'momentum_buffer': tensor([-1.5474e-02,  6.6909e-03,  3.1585e-03, -1.9971e-03, -5.1428e-03,\n",
      "        -3.7738e-03,  1.1698e-03, -3.7535e-03, -1.3007e-03, -4.4844e-03,\n",
      "        -4.6351e-04,  5.5626e-03, -1.0230e-02, -5.8180e-03,  1.7009e-03,\n",
      "        -4.3577e-03, -2.4628e-04, -4.1234e-04, -9.3457e-04, -8.1195e-04,\n",
      "        -5.6735e-04, -3.2843e-03,  1.3269e-03,  2.2440e-03, -4.2053e-03,\n",
      "        -4.4502e-03, -1.0944e-03,  5.4551e-03, -2.0582e-03,  9.3840e-03,\n",
      "        -4.9178e-03, -1.1867e-03, -5.6695e-03, -3.9723e-03,  6.2154e-04,\n",
      "        -1.8790e-03, -1.9365e-03, -2.7589e-03,  5.3189e-04, -1.8375e-03,\n",
      "        -9.9601e-05, -7.3757e-03, -2.0195e-03, -5.6666e-03,  2.8749e-03,\n",
      "        -5.8788e-03, -1.9644e-04, -2.2634e-03, -3.7653e-04, -6.2944e-04,\n",
      "         3.5997e-03, -1.0711e-03,  6.6272e-03,  2.3265e-03, -9.4622e-03,\n",
      "         3.3698e-03,  8.6217e-03, -2.5585e-03,  2.5757e-03,  1.5662e-03,\n",
      "         3.4003e-03,  1.3125e-02,  7.3186e-03,  9.5510e-03,  4.4992e-03,\n",
      "        -6.6042e-03, -4.8019e-03, -3.7530e-03, -3.6235e-03, -3.9044e-03,\n",
      "        -1.9533e-03,  5.0426e-03,  3.2752e-03,  5.1915e-03, -7.1650e-05,\n",
      "         9.0316e-03, -6.5110e-03, -5.7048e-03,  2.4670e-03, -1.4855e-03,\n",
      "         6.0018e-03,  2.9052e-04, -4.0894e-03,  3.6347e-03, -6.8709e-03,\n",
      "         1.0707e-03, -2.2532e-03, -4.1665e-03,  4.6924e-03, -3.7039e-03,\n",
      "        -2.9062e-03,  7.3776e-03,  1.0390e-03,  5.6488e-06, -1.1505e-03,\n",
      "        -6.0754e-03, -2.3130e-03,  4.5068e-03,  2.0934e-03, -1.7410e-04,\n",
      "        -2.6980e-03, -5.3988e-03, -3.2221e-03,  3.9489e-03,  3.1166e-03,\n",
      "        -1.6353e-04, -6.1303e-03, -7.8370e-04, -3.5570e-03, -4.7963e-03,\n",
      "        -5.7124e-04,  3.6717e-04,  1.5614e-03, -4.7968e-03,  7.7444e-04,\n",
      "         9.8390e-04,  3.9924e-03,  4.3147e-03, -7.5564e-04,  9.7014e-03,\n",
      "         2.5733e-03, -5.3645e-03,  8.4190e-04, -1.0802e-02,  3.6820e-04,\n",
      "         5.2485e-04,  7.0257e-03,  1.8330e-03, -2.8674e-04, -3.8194e-04,\n",
      "        -1.2650e-03,  6.3581e-03,  1.7991e-03, -4.2833e-03, -6.0689e-03,\n",
      "        -1.8974e-03,  6.5772e-03, -1.8886e-03,  1.4406e-03,  4.2663e-03,\n",
      "        -3.4866e-03,  3.8426e-03, -1.0631e-03,  4.8815e-04, -1.5360e-03,\n",
      "         2.9928e-04, -2.3936e-03, -1.7903e-03,  2.2296e-03,  1.2943e-03,\n",
      "        -6.7848e-04, -1.1630e-02,  5.9246e-04, -2.3738e-03,  1.5346e-03,\n",
      "         7.2144e-03, -2.4380e-03, -2.8735e-03,  4.3693e-03,  1.0244e-04,\n",
      "         5.6544e-05,  2.9182e-03,  4.0249e-03,  1.5858e-02,  1.3986e-03,\n",
      "         4.7770e-03, -1.1327e-03,  2.1729e-03, -3.4300e-03, -7.0723e-03,\n",
      "        -2.4488e-03,  3.3299e-03, -5.4390e-04,  5.5920e-03, -1.8301e-03,\n",
      "        -3.9225e-03, -4.7121e-04,  1.1488e-03,  6.2813e-03, -9.0153e-03,\n",
      "        -1.8256e-03, -1.0888e-02, -6.1259e-03, -3.2407e-03, -4.5283e-03,\n",
      "        -1.8400e-04,  1.1896e-03,  1.0087e-02, -3.1147e-03,  6.4264e-03,\n",
      "        -8.0557e-04,  3.9831e-03,  5.6884e-03,  3.7831e-03,  4.6428e-03,\n",
      "        -3.7429e-03,  5.1561e-04, -3.2012e-03,  6.6158e-04, -4.3344e-03,\n",
      "         1.7063e-03,  3.0410e-03, -4.3202e-03,  4.4623e-03, -3.4198e-03,\n",
      "         1.5520e-03, -5.1710e-03,  1.4742e-03,  2.0897e-03,  2.7853e-03,\n",
      "        -1.0248e-03, -2.1277e-03,  2.4180e-03, -1.4685e-03, -5.7173e-04,\n",
      "        -7.5073e-03,  2.9083e-03, -2.2772e-03,  7.7096e-03,  4.9065e-03,\n",
      "        -9.9036e-04, -6.2055e-04, -2.2077e-03, -2.3137e-03, -3.4206e-03,\n",
      "         1.6057e-03,  5.0742e-03,  6.9992e-03,  4.2875e-03,  3.8754e-04,\n",
      "         4.6376e-03,  5.0796e-03,  5.1159e-04, -2.8014e-04, -1.1380e-03,\n",
      "        -1.4947e-03,  6.0248e-04, -5.5507e-04,  1.8966e-03, -6.4682e-03,\n",
      "         1.3526e-03,  9.5444e-04,  7.2583e-03,  3.6799e-03,  6.6363e-03,\n",
      "        -1.3640e-03,  6.5444e-04,  1.7534e-03,  6.3941e-03, -5.3915e-03,\n",
      "        -1.6484e-03, -1.0569e-03,  6.2538e-03,  2.4230e-05, -4.2850e-03,\n",
      "         3.3678e-03], device='cuda:0')}, 45: {'momentum_buffer': tensor([[[[ 1.0170e-03, -4.4678e-05, -2.4757e-07],\n",
      "          [ 6.4125e-04,  5.9583e-04,  5.3608e-04],\n",
      "          [ 1.8322e-04,  6.9634e-04,  1.4148e-03]],\n",
      "\n",
      "         [[-8.1598e-05, -3.6778e-04, -4.9651e-04],\n",
      "          [-2.0940e-04, -1.0559e-03, -1.0144e-03],\n",
      "          [ 1.5825e-03,  9.2344e-04,  2.9351e-04]],\n",
      "\n",
      "         [[-5.2741e-04, -4.9440e-04, -8.6447e-04],\n",
      "          [-1.0674e-04, -1.2100e-05, -2.7740e-04],\n",
      "          [-1.0013e-04, -1.3627e-04, -7.3908e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9131e-04,  2.6348e-04, -2.5559e-04],\n",
      "          [ 1.4493e-03,  1.1821e-03,  3.8279e-04],\n",
      "          [ 9.7841e-04,  8.8938e-04,  1.3647e-03]],\n",
      "\n",
      "         [[-3.0199e-05, -4.4618e-04, -1.1695e-03],\n",
      "          [-4.1334e-05,  5.7128e-05, -1.6194e-04],\n",
      "          [ 9.5724e-04,  3.2492e-04,  6.6449e-04]],\n",
      "\n",
      "         [[ 4.6892e-04,  4.1996e-04,  2.6926e-04],\n",
      "          [ 7.6304e-04,  2.9573e-04, -1.9467e-04],\n",
      "          [ 5.6732e-06,  1.9506e-04,  5.0862e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 2.5437e-04, -5.1901e-04, -7.6463e-04],\n",
      "          [-1.5731e-04, -2.5168e-04, -8.2073e-04],\n",
      "          [-8.4603e-05,  1.9670e-04, -3.5291e-04]],\n",
      "\n",
      "         [[-5.7754e-04, -5.1053e-05, -1.6283e-04],\n",
      "          [-3.6614e-04, -2.3544e-04, -2.9706e-05],\n",
      "          [-1.0431e-04, -8.4639e-05, -2.2535e-05]],\n",
      "\n",
      "         [[ 2.2848e-05,  4.4957e-05,  5.1976e-04],\n",
      "          [ 1.7152e-04,  1.5862e-04,  4.1590e-04],\n",
      "          [ 2.0588e-04,  8.3506e-05,  1.9401e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.6433e-04,  5.6815e-04,  7.2303e-04],\n",
      "          [ 2.4768e-04,  2.5406e-04, -4.4420e-04],\n",
      "          [ 3.3419e-04,  2.5966e-04,  2.0604e-04]],\n",
      "\n",
      "         [[-5.8783e-05,  9.9721e-05, -4.2258e-04],\n",
      "          [ 4.7588e-04,  2.7103e-04, -5.7084e-04],\n",
      "          [ 6.2526e-04,  3.3047e-04, -1.9628e-04]],\n",
      "\n",
      "         [[ 4.6572e-04,  6.8442e-04, -9.6152e-05],\n",
      "          [ 5.1310e-04, -8.2233e-04, -1.4712e-03],\n",
      "          [-6.3303e-04, -8.1620e-04, -1.5400e-03]]],\n",
      "\n",
      "\n",
      "        [[[-2.8924e-04,  4.2338e-04, -7.7310e-04],\n",
      "          [-4.8443e-04,  8.1006e-04, -4.9333e-04],\n",
      "          [-1.0450e-03, -8.6387e-04,  5.4893e-06]],\n",
      "\n",
      "         [[ 2.2493e-04,  5.6024e-04,  2.0390e-04],\n",
      "          [ 4.2056e-04,  9.3158e-05, -3.2895e-04],\n",
      "          [ 4.4297e-04, -1.7077e-04, -7.4198e-04]],\n",
      "\n",
      "         [[ 4.9326e-04, -1.7960e-04,  1.8222e-04],\n",
      "          [ 3.6331e-05,  2.0145e-05, -3.5341e-04],\n",
      "          [ 9.1447e-04,  1.5110e-04, -6.1252e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.8789e-04,  1.3316e-03,  9.1483e-04],\n",
      "          [-3.0716e-04, -1.9556e-04,  8.2135e-04],\n",
      "          [-8.7879e-04, -1.4075e-03, -2.7325e-04]],\n",
      "\n",
      "         [[-2.0252e-04, -4.0633e-04, -4.0879e-04],\n",
      "          [ 3.1141e-04, -4.7468e-05, -8.9050e-04],\n",
      "          [-2.0651e-04, -7.3933e-04, -5.1213e-04]],\n",
      "\n",
      "         [[-2.1556e-04, -3.3832e-04, -6.2329e-04],\n",
      "          [-4.2982e-04, -9.9838e-05, -4.6982e-04],\n",
      "          [-2.6740e-04, -2.9078e-04,  3.3449e-05]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 4.2562e-04,  1.5793e-04,  2.2281e-04],\n",
      "          [ 2.6866e-05, -3.0548e-04, -3.1314e-04],\n",
      "          [ 4.3531e-05,  1.2463e-04, -3.8893e-05]],\n",
      "\n",
      "         [[ 2.3621e-04, -7.4670e-05, -6.9572e-05],\n",
      "          [ 2.3026e-06, -6.6615e-04, -4.0326e-04],\n",
      "          [ 1.9786e-04, -5.1657e-04, -9.7754e-04]],\n",
      "\n",
      "         [[ 3.3247e-04, -2.8573e-04, -2.3105e-04],\n",
      "          [ 1.1558e-04, -6.9005e-05, -2.1953e-04],\n",
      "          [-5.1342e-04, -3.6846e-04, -3.4060e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.9924e-04, -9.5374e-05, -4.3006e-04],\n",
      "          [-2.1366e-03, -2.5764e-03, -1.6664e-03],\n",
      "          [-1.6145e-03, -8.8423e-04, -7.8534e-04]],\n",
      "\n",
      "         [[-1.1445e-03, -1.8520e-03, -1.8582e-03],\n",
      "          [-4.6037e-04, -6.8805e-04, -1.0041e-03],\n",
      "          [-4.3879e-04, -4.0342e-04, -1.2007e-03]],\n",
      "\n",
      "         [[-2.1857e-04, -1.5180e-03, -1.4693e-03],\n",
      "          [-2.5632e-05, -2.0241e-04, -1.6398e-04],\n",
      "          [-4.2144e-04,  8.6144e-04,  1.0957e-03]]],\n",
      "\n",
      "\n",
      "        [[[-6.5609e-04, -8.1927e-04, -2.2654e-04],\n",
      "          [-1.5011e-04, -5.8559e-04, -8.1063e-04],\n",
      "          [-4.2270e-04, -9.6513e-04, -1.0246e-03]],\n",
      "\n",
      "         [[ 2.1612e-04,  5.0945e-04,  6.9333e-04],\n",
      "          [ 1.3162e-04, -2.0798e-06,  3.2437e-04],\n",
      "          [ 4.9158e-04,  3.0296e-04,  3.7691e-04]],\n",
      "\n",
      "         [[ 1.8098e-05,  2.1835e-05, -3.2562e-04],\n",
      "          [ 1.1201e-04,  1.7377e-04,  1.3479e-04],\n",
      "          [ 3.4171e-04,  3.4297e-04,  5.5765e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 7.0827e-04, -4.0355e-04, -5.5009e-04],\n",
      "          [ 2.6456e-04,  1.5820e-04, -2.5008e-04],\n",
      "          [ 2.5797e-04,  5.8520e-04,  2.3466e-04]],\n",
      "\n",
      "         [[ 1.9083e-04,  5.0553e-05, -1.1283e-04],\n",
      "          [ 3.0442e-04,  9.1523e-04,  5.1390e-05],\n",
      "          [ 3.8014e-04,  3.7074e-04, -3.3589e-05]],\n",
      "\n",
      "         [[ 5.2956e-04,  8.0017e-05, -5.6872e-04],\n",
      "          [ 1.8348e-04, -1.0367e-04, -5.4387e-05],\n",
      "          [ 3.6504e-05, -1.0181e-04, -8.0493e-05]]],\n",
      "\n",
      "\n",
      "        [[[-2.6699e-04,  1.5352e-03,  5.1585e-04],\n",
      "          [-8.5901e-04, -2.1608e-04,  2.5038e-04],\n",
      "          [-3.4637e-04, -7.9563e-04, -2.7036e-04]],\n",
      "\n",
      "         [[ 6.3434e-04,  1.3060e-03,  1.2660e-03],\n",
      "          [ 7.8150e-04,  7.0424e-04,  5.8751e-04],\n",
      "          [-2.6835e-04,  2.0066e-04, -3.2633e-04]],\n",
      "\n",
      "         [[ 2.0693e-04,  1.0147e-04, -1.8842e-05],\n",
      "          [ 2.9087e-04,  1.0283e-04, -5.4020e-04],\n",
      "          [ 4.8174e-04,  2.2059e-04, -5.3393e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.1488e-03,  5.2772e-04,  8.1889e-04],\n",
      "          [ 9.7956e-04,  5.0284e-04,  3.6463e-04],\n",
      "          [ 3.4549e-04,  3.0764e-04, -5.1031e-05]],\n",
      "\n",
      "         [[ 3.9703e-04, -1.2598e-04,  3.3493e-04],\n",
      "          [ 6.3546e-04,  1.3750e-04, -2.8994e-04],\n",
      "          [ 6.3563e-05,  1.8613e-04,  3.7851e-04]],\n",
      "\n",
      "         [[ 9.1970e-05, -5.8544e-04,  4.3069e-04],\n",
      "          [ 2.7978e-05,  5.9318e-04, -4.0070e-04],\n",
      "          [-2.9277e-04, -4.7088e-04,  9.0964e-06]]]], device='cuda:0')}, 46: {'momentum_buffer': tensor([ 7.8031e-03, -7.7574e-03,  1.4287e-03,  1.7997e-03, -8.2552e-03,\n",
      "        -7.9077e-03,  1.2352e-02,  8.2890e-04,  2.5023e-03,  1.4661e-03,\n",
      "         3.2624e-03,  6.0041e-03,  8.0379e-03,  7.0991e-03, -4.2946e-03,\n",
      "        -1.0307e-02,  2.6365e-03, -6.2238e-03, -1.6245e-03,  1.6072e-03,\n",
      "        -1.7850e-02, -3.2463e-03,  1.4551e-02, -1.8744e-04,  9.3074e-03,\n",
      "         4.6612e-03,  1.1797e-02,  4.8200e-03,  5.9006e-03,  1.1777e-02,\n",
      "        -4.5306e-03,  2.3213e-02, -2.2179e-03,  1.2446e-02,  2.2635e-03,\n",
      "         6.2073e-03,  1.3780e-03,  1.9961e-04,  6.0223e-03, -1.0082e-02,\n",
      "        -3.9568e-03, -3.2134e-03, -1.1150e-02,  1.2840e-03,  1.0732e-02,\n",
      "         9.2203e-04, -7.9561e-03,  8.1866e-03,  1.1830e-02, -2.4006e-03,\n",
      "         2.4924e-03, -2.1127e-02,  6.1172e-03, -5.0653e-03,  3.4101e-03,\n",
      "         8.8462e-04, -1.7212e-02,  6.1048e-03, -1.0041e-02, -1.0266e-02,\n",
      "         8.5313e-03,  3.4575e-02,  2.0841e-03, -5.8992e-03,  4.4044e-03,\n",
      "         1.1504e-03, -5.8128e-03, -5.9620e-03, -1.1065e-02,  2.1867e-02,\n",
      "         4.7163e-04,  4.0130e-03, -4.4106e-03,  7.8141e-03,  6.2960e-04,\n",
      "        -6.7718e-04, -1.1804e-02,  4.7892e-04,  1.6363e-02, -1.9516e-02,\n",
      "         3.3769e-04,  9.1056e-03, -1.2639e-02,  9.9129e-03, -3.5460e-03,\n",
      "         6.9580e-03, -8.6613e-03, -1.4706e-02, -2.8956e-03, -4.5922e-03,\n",
      "        -2.1605e-03, -6.0482e-03,  9.7358e-03,  4.1425e-03,  1.4207e-02,\n",
      "        -7.4951e-03, -5.2272e-03,  1.3027e-03,  1.1635e-03, -3.6357e-03,\n",
      "        -7.5379e-03, -2.1925e-03, -6.9782e-03,  4.0015e-03,  8.7596e-03,\n",
      "         3.2411e-04,  1.0431e-02, -1.7890e-03,  7.9888e-03,  9.9447e-03,\n",
      "        -2.4136e-03,  4.2339e-03,  5.9621e-03,  1.0779e-02, -6.0889e-03,\n",
      "         1.1305e-02,  1.8358e-03, -9.6421e-03, -3.9888e-03,  1.8296e-03,\n",
      "         4.3850e-03, -1.3916e-02,  9.7712e-03,  6.5446e-03, -9.0001e-03,\n",
      "        -8.6939e-03,  1.7942e-03, -2.5359e-03,  1.4069e-02,  6.4975e-03,\n",
      "         4.5503e-03,  5.3162e-04, -4.2752e-03,  7.7117e-03,  5.5531e-03,\n",
      "        -8.4716e-03, -1.2455e-02,  7.2896e-04, -6.0263e-03, -3.9152e-03,\n",
      "        -5.5196e-03,  9.6013e-03,  6.1632e-03, -1.1091e-02, -4.8254e-03,\n",
      "        -7.1442e-03, -1.0357e-02,  1.2125e-02,  2.1906e-03,  2.0915e-03,\n",
      "         1.2487e-03,  9.4654e-04, -4.2280e-03,  1.2183e-03,  3.5700e-03,\n",
      "         1.3204e-03,  7.4287e-04,  2.1241e-02,  3.5725e-04,  7.7260e-04,\n",
      "         7.7663e-03,  1.0655e-02, -2.5394e-03, -2.5089e-03, -1.2481e-03,\n",
      "         1.0754e-02, -2.6301e-03,  1.4731e-03,  1.2101e-02, -3.8796e-03,\n",
      "        -9.3305e-03, -2.8229e-03, -2.8100e-02, -2.0744e-02,  1.0526e-02,\n",
      "         6.7343e-03,  8.5204e-03,  4.4909e-03, -2.5776e-03, -1.0539e-02,\n",
      "         3.9219e-03,  3.0848e-03,  9.1753e-03,  1.2128e-03, -1.8533e-03,\n",
      "         6.6533e-03,  1.4038e-03,  1.0087e-03, -7.1856e-03, -2.6144e-03,\n",
      "        -9.6808e-03,  1.1668e-02, -8.4816e-03,  2.1739e-04, -3.5013e-03,\n",
      "        -8.0179e-03,  5.8844e-03, -3.8807e-03, -9.7537e-03,  4.7811e-03,\n",
      "         1.1596e-02, -4.7568e-03,  3.6197e-03,  8.9970e-03, -1.8611e-03,\n",
      "        -1.7080e-03, -1.5632e-02, -5.9055e-03, -2.4732e-03,  1.1409e-02,\n",
      "         1.1019e-02, -5.5975e-03, -1.1115e-02,  2.0700e-02,  1.0082e-02,\n",
      "         1.9749e-03,  3.7980e-04,  9.5150e-03, -2.2291e-03, -1.1867e-02,\n",
      "         1.1928e-03, -9.7694e-04, -1.3205e-03,  4.5489e-03, -1.5156e-02,\n",
      "         8.8266e-03, -1.8114e-03,  8.1757e-03, -1.0387e-02, -5.6599e-04,\n",
      "         6.9514e-03, -9.3824e-03,  2.9949e-03,  5.6079e-03, -1.4611e-02,\n",
      "        -1.8601e-03, -1.3132e-02, -2.8947e-03, -4.0207e-03,  1.7090e-02,\n",
      "         2.9631e-03,  6.8013e-03,  2.0349e-03, -1.0460e-02, -1.7288e-03,\n",
      "        -2.4073e-03,  1.9572e-03,  2.1411e-03, -9.3232e-03, -3.6448e-03,\n",
      "        -1.1268e-03,  4.8564e-03, -1.2830e-02,  8.3491e-03,  1.2650e-02,\n",
      "        -1.2282e-03, -5.1238e-03,  1.0840e-03,  2.0723e-03,  2.1544e-03,\n",
      "         2.4601e-03,  9.9890e-03, -1.4138e-03, -1.4342e-03, -3.4076e-03,\n",
      "         9.6087e-04,  7.2344e-04,  1.4116e-03,  3.7200e-03, -1.0248e-02,\n",
      "         8.4668e-03,  2.5254e-03, -7.9832e-03,  4.7780e-03,  4.6123e-03,\n",
      "        -4.9944e-03,  1.1650e-03, -6.4372e-03, -9.8479e-04,  2.2325e-02,\n",
      "         9.1186e-03,  3.8143e-03, -9.8377e-03, -7.9688e-04, -1.1935e-02,\n",
      "         1.3113e-02,  4.9016e-03,  1.5868e-02, -6.1547e-03,  8.1692e-03,\n",
      "         8.7628e-03,  1.4880e-03,  1.1617e-03, -3.9151e-04,  2.0905e-03,\n",
      "        -4.3088e-03,  1.1167e-03,  4.4813e-03,  9.1248e-03, -2.3258e-02,\n",
      "         8.3269e-03, -7.1424e-03,  1.0873e-02,  3.3435e-03, -5.0431e-03,\n",
      "        -1.7178e-02, -2.0305e-03,  5.9309e-04, -9.5577e-03, -1.5315e-02,\n",
      "         9.1520e-03,  1.6624e-03,  3.0568e-04,  8.4171e-03, -4.4497e-03,\n",
      "         2.5349e-03, -5.1971e-03, -9.4529e-03,  3.4330e-03, -2.8451e-03,\n",
      "        -1.9683e-03,  1.3575e-02, -1.1593e-02,  8.9026e-03, -3.1911e-03,\n",
      "        -9.7734e-04,  9.4883e-03,  7.0280e-03,  3.2096e-03,  4.6871e-04,\n",
      "        -3.4576e-03,  6.7656e-04, -1.1379e-02,  3.0675e-03, -5.0340e-03,\n",
      "        -6.9585e-03,  4.0272e-03, -5.9186e-05, -4.8583e-03,  2.9750e-03,\n",
      "        -1.0863e-03, -1.4972e-02,  8.7591e-03, -1.3093e-02, -1.0914e-02,\n",
      "        -1.0297e-02, -1.9031e-03, -5.7047e-03,  6.6464e-03,  1.5291e-03,\n",
      "         1.4278e-02, -5.5728e-03, -2.4266e-02,  8.1520e-03, -6.3743e-03,\n",
      "        -6.8039e-03,  2.0745e-03, -1.6494e-02, -1.2986e-02,  1.0394e-02,\n",
      "         1.1922e-02,  1.4800e-03,  5.9421e-03,  4.1024e-03, -1.0603e-02,\n",
      "        -4.5282e-03, -1.0508e-02, -3.8754e-03, -3.8638e-03, -5.0336e-03,\n",
      "        -6.9927e-03,  1.7763e-03,  2.8090e-03,  2.6139e-03,  5.5219e-03,\n",
      "         1.1370e-02, -6.8378e-03, -5.4468e-04,  1.1206e-02, -3.9860e-03,\n",
      "        -1.5311e-02,  4.2807e-03, -1.5998e-02,  2.6783e-03, -6.7704e-03,\n",
      "         1.7499e-03,  7.3319e-03, -1.9111e-03, -3.0531e-04, -1.8663e-03,\n",
      "        -2.1634e-03,  2.9140e-03, -2.4359e-03,  1.2234e-02,  1.5310e-02,\n",
      "         1.9979e-03,  7.4099e-03,  9.3852e-03,  3.6249e-03, -1.2727e-03,\n",
      "        -6.3846e-05, -7.1867e-03,  1.1617e-02, -1.1767e-02, -1.4806e-02,\n",
      "        -9.3964e-03,  1.2798e-04, -2.6431e-03,  1.0597e-02, -3.5670e-03,\n",
      "        -9.7902e-03, -4.3105e-03, -4.2488e-03, -2.0702e-02, -6.5920e-04,\n",
      "         1.0332e-02, -4.1721e-03, -5.0736e-04,  1.6322e-03, -3.1929e-03,\n",
      "        -2.8632e-03, -5.3285e-03, -9.3347e-03,  4.2642e-03, -5.1749e-03,\n",
      "         2.2092e-02,  1.4060e-02, -3.6535e-03,  3.9351e-04, -7.2289e-03,\n",
      "        -2.3749e-02,  3.0065e-03,  2.1014e-03,  2.9961e-03,  2.2042e-02,\n",
      "        -8.1499e-03,  3.9651e-03,  1.6437e-02,  4.7134e-03,  1.6043e-02,\n",
      "        -1.6955e-02, -3.4277e-03, -5.8702e-04, -2.0239e-03, -7.3876e-03,\n",
      "        -9.1640e-04,  4.3014e-03, -4.5713e-03, -5.9894e-03,  9.0782e-03,\n",
      "         8.1814e-03, -1.9239e-02,  1.9517e-03, -2.3300e-03, -2.9366e-03,\n",
      "        -5.6827e-04,  1.2262e-04,  9.5532e-03,  9.0944e-03, -4.1490e-03,\n",
      "         4.0619e-03,  2.1433e-03, -6.3868e-04, -1.5441e-02,  8.5006e-03,\n",
      "        -5.8244e-03,  1.0553e-02, -5.0763e-03,  1.2408e-02, -1.0094e-02,\n",
      "        -9.1850e-03,  2.6697e-03, -2.8009e-03,  2.0250e-03,  7.0502e-03,\n",
      "         2.4373e-03, -1.3317e-03,  2.6874e-03,  1.1081e-03, -5.4640e-03,\n",
      "        -9.9974e-03, -2.6810e-02, -1.1833e-03, -5.0653e-03, -5.0346e-03,\n",
      "         8.7925e-03,  3.3983e-03, -6.1484e-03,  1.6121e-03,  7.8775e-03,\n",
      "         1.6815e-02, -1.6545e-02,  6.4412e-03, -8.2033e-04,  2.5377e-03,\n",
      "        -1.0048e-03,  6.0966e-03,  2.8037e-03, -1.2706e-02,  3.4760e-03,\n",
      "         1.3115e-02,  7.3702e-04, -2.3693e-03,  1.3336e-02,  3.4175e-03,\n",
      "         2.7613e-03,  2.3295e-03, -9.6827e-03, -4.8417e-03, -3.7895e-03,\n",
      "         2.1404e-03,  1.8361e-03], device='cuda:0')}, 47: {'momentum_buffer': tensor([ 5.5375e-03, -3.5087e-03,  1.0989e-03, -6.3537e-04, -5.0061e-03,\n",
      "        -5.2529e-03,  7.1060e-03,  2.1211e-03, -5.7295e-04, -2.3186e-04,\n",
      "         1.0509e-04,  1.5428e-03,  4.1555e-03,  2.7353e-03, -2.1353e-03,\n",
      "        -5.3217e-03,  2.2580e-03, -4.8137e-03, -5.5614e-04,  4.5200e-03,\n",
      "        -1.0197e-02, -2.2980e-03,  6.7390e-03,  1.8931e-04,  6.8231e-03,\n",
      "         2.4497e-03,  4.8384e-03,  1.0928e-03,  1.0720e-02,  4.2310e-03,\n",
      "        -2.0225e-05,  9.7129e-03,  7.7275e-05,  7.1015e-03,  3.0892e-03,\n",
      "         5.0003e-03, -6.6702e-04,  4.1558e-05,  4.4116e-03, -3.5660e-03,\n",
      "        -5.0314e-03, -4.3329e-03, -6.3996e-03, -1.2999e-03,  4.0763e-03,\n",
      "        -4.6243e-03, -2.9469e-04,  3.6969e-03,  5.2283e-03, -1.1256e-03,\n",
      "         1.5109e-03, -8.3329e-03,  2.6575e-03, -2.1241e-03,  3.3345e-03,\n",
      "        -1.7333e-03, -1.0371e-02,  2.3611e-03, -8.6939e-03, -5.7214e-03,\n",
      "         3.3311e-03,  2.6730e-02,  1.5607e-03, -1.8577e-03,  4.2174e-03,\n",
      "         6.8918e-04, -3.0333e-03, -7.2584e-03, -5.5953e-03,  1.3475e-02,\n",
      "        -5.2325e-04,  2.1513e-03, -2.4784e-03,  4.5515e-03, -8.1777e-04,\n",
      "         9.9691e-04, -4.8796e-04,  1.6846e-03,  7.4090e-03, -6.3509e-03,\n",
      "         9.0547e-04,  6.6205e-04, -4.9411e-03,  4.5837e-03,  1.5392e-04,\n",
      "         2.5708e-04, -4.1290e-03, -6.0330e-03,  1.2017e-03, -1.3392e-03,\n",
      "        -1.9327e-03, -3.5891e-03,  9.1266e-03,  2.8673e-03,  4.6343e-03,\n",
      "        -1.7272e-03, -3.0220e-03,  8.6800e-04, -3.3880e-04, -3.7115e-03,\n",
      "        -1.8470e-03, -1.6634e-03, -3.6825e-03,  3.6392e-03,  4.9022e-03,\n",
      "        -3.8634e-03,  7.8865e-03, -8.6400e-04,  4.0315e-03,  5.5253e-03,\n",
      "        -4.8343e-03,  2.2344e-03,  5.3125e-03,  3.5845e-03, -3.6595e-03,\n",
      "         5.8278e-03,  5.0108e-03, -6.7739e-03, -3.7129e-03,  1.1616e-04,\n",
      "         2.2918e-03, -1.0573e-02,  6.4810e-03,  1.6161e-03, -6.0391e-03,\n",
      "        -2.5807e-03,  1.1114e-03, -1.9396e-03,  7.4113e-03,  5.9692e-03,\n",
      "         2.1679e-04,  2.1167e-03, -1.6633e-03,  1.6487e-03,  4.0517e-04,\n",
      "        -6.2857e-03, -4.6876e-03, -1.4045e-03, -5.3534e-03, -3.6156e-03,\n",
      "        -3.9267e-03,  3.4357e-03,  3.2013e-03, -5.6839e-03, -4.1202e-03,\n",
      "        -7.4324e-03, -8.4970e-03,  8.4150e-03,  1.5642e-04, -1.0915e-03,\n",
      "         6.8618e-04,  3.2892e-03,  2.7993e-04,  3.0497e-03,  2.7326e-03,\n",
      "         1.3694e-03, -6.0641e-04,  1.5104e-02,  2.1975e-03, -1.4289e-03,\n",
      "         5.0166e-03,  4.2127e-03,  1.0737e-03, -1.6719e-03,  6.6091e-04,\n",
      "         5.1762e-03, -2.4790e-03,  1.9295e-03,  5.9902e-03, -2.2386e-03,\n",
      "        -2.9233e-03, -1.0445e-03, -1.1805e-02, -1.0192e-02,  6.6124e-03,\n",
      "         3.9748e-03,  4.2911e-03,  5.3370e-03, -2.4543e-03, -7.3821e-03,\n",
      "         1.2778e-03,  2.2295e-03,  4.0651e-03,  2.0796e-03,  1.1624e-03,\n",
      "         3.4605e-03,  6.1241e-04, -3.2087e-04, -4.3609e-03, -2.7249e-03,\n",
      "        -5.9328e-03,  4.9147e-03, -4.6732e-03, -1.1856e-03, -3.2838e-03,\n",
      "        -3.0294e-03,  5.7288e-04, -3.1671e-03, -4.8462e-03,  5.3788e-03,\n",
      "         5.4223e-03, -2.5989e-04,  8.1750e-04,  2.4095e-03, -1.7755e-03,\n",
      "         5.2659e-04, -6.3765e-03, -4.2704e-03, -2.2348e-03,  3.2784e-03,\n",
      "         3.9376e-03, -3.5600e-03, -7.2099e-03,  9.7643e-03,  5.6826e-03,\n",
      "         2.1455e-03, -9.7911e-04,  2.2226e-03, -1.2341e-03, -5.6440e-03,\n",
      "         1.6316e-03, -1.9473e-04, -8.0310e-03,  4.2750e-03, -9.8891e-03,\n",
      "         5.6745e-03, -2.9565e-04,  3.8153e-03, -4.1422e-03, -3.5115e-03,\n",
      "         5.3433e-03, -5.5258e-03, -3.8800e-04,  2.6580e-03, -7.1763e-03,\n",
      "        -1.7867e-03, -6.2415e-03, -2.7649e-05, -1.1788e-03,  1.0063e-02,\n",
      "         3.1720e-03,  3.3250e-03,  4.0917e-03, -6.2062e-03,  3.3693e-03,\n",
      "        -3.1032e-03,  7.7734e-04, -6.8567e-04, -3.4559e-03, -2.1479e-03,\n",
      "        -6.8169e-06,  4.4709e-03, -5.5965e-03,  3.0078e-03,  7.6110e-03,\n",
      "         6.7775e-04, -4.0439e-03,  2.7471e-03,  9.0113e-04,  2.4088e-03,\n",
      "        -6.8858e-04,  2.8363e-03,  1.8092e-04, -4.7810e-04, -1.4499e-03,\n",
      "         2.1336e-03, -8.0250e-04,  9.8455e-04,  3.6336e-03, -5.6964e-03,\n",
      "         4.2073e-03,  2.8773e-03, -6.5842e-03,  1.6901e-04,  1.9246e-03,\n",
      "        -1.5631e-03,  2.1749e-05, -5.6204e-03, -4.1542e-03,  1.2124e-02,\n",
      "         6.9871e-03,  2.5951e-03, -5.6333e-03, -5.8847e-04, -7.4445e-03,\n",
      "         8.8367e-03,  7.1036e-04,  5.7443e-03, -9.5248e-03,  2.8379e-03,\n",
      "         8.1181e-03,  2.6587e-03,  3.1979e-03, -1.9644e-03, -1.0651e-04,\n",
      "        -2.0461e-03,  1.1893e-03, -2.1855e-05,  3.3437e-03, -1.2758e-02,\n",
      "         3.4972e-03, -5.9864e-03,  5.3472e-03,  1.3552e-03, -2.8383e-03,\n",
      "        -4.1021e-03, -5.2970e-03, -3.5666e-04, -2.5509e-03, -9.5035e-03,\n",
      "         1.1491e-03,  1.8331e-03,  7.2578e-04,  8.8450e-03, -2.6518e-03,\n",
      "         8.7225e-04, -1.0712e-03, -5.1971e-03,  1.3388e-03, -1.6989e-03,\n",
      "         2.3496e-04,  7.3792e-03, -5.6078e-03,  1.9812e-03, -1.5206e-03,\n",
      "        -3.9762e-04,  4.1780e-03,  6.3754e-03,  3.0962e-03,  1.4612e-03,\n",
      "        -2.8675e-03,  1.3184e-03, -7.0789e-03,  6.9809e-04, -3.3367e-03,\n",
      "        -2.6266e-03,  6.5823e-04,  3.3231e-04, -1.9650e-03,  2.3709e-03,\n",
      "         2.1823e-03, -1.0163e-02,  4.7170e-03, -6.2231e-03, -3.1321e-03,\n",
      "        -5.3507e-03, -2.9295e-03, -2.0473e-03,  2.8786e-03, -1.3365e-03,\n",
      "         4.4771e-03, -1.0173e-03, -8.5223e-03,  5.7524e-03, -2.8806e-03,\n",
      "        -4.1290e-03,  2.9978e-03, -1.0294e-02, -6.7850e-03,  6.8633e-03,\n",
      "         4.6405e-03,  2.1180e-03,  3.2681e-03,  1.7021e-03, -1.9507e-03,\n",
      "         3.4257e-04, -6.3192e-03, -4.0313e-03, -2.9216e-03, -3.2463e-04,\n",
      "        -2.4896e-03, -8.3824e-04, -7.0683e-04,  4.4373e-04,  3.1706e-03,\n",
      "         5.7908e-03, -3.2230e-03,  1.8282e-03,  3.0781e-03, -1.4951e-03,\n",
      "        -8.3678e-03,  2.6843e-03, -1.0505e-02,  1.2974e-03, -7.3446e-03,\n",
      "        -5.1726e-04,  5.2441e-03, -1.5571e-03, -5.9316e-05,  8.6729e-05,\n",
      "         2.8547e-03,  1.8731e-03,  2.1706e-03,  7.9106e-03,  6.8628e-03,\n",
      "        -1.6223e-03,  3.7389e-03,  5.3430e-03,  3.1302e-03,  4.6980e-04,\n",
      "        -1.3971e-03, -6.4541e-03,  5.1987e-03, -7.2667e-03, -8.0531e-03,\n",
      "        -7.7709e-03,  6.7669e-04, -1.4404e-03,  1.0318e-02, -3.2666e-03,\n",
      "        -5.2252e-03, -2.6559e-03, -2.8586e-04, -7.1887e-03,  2.7592e-03,\n",
      "         7.3676e-03, -3.6945e-03, -9.4843e-04,  3.6721e-04, -1.1198e-03,\n",
      "        -3.8256e-03, -3.3224e-03, -2.8869e-03,  6.6311e-03, -2.4457e-03,\n",
      "         9.2359e-03,  8.2949e-03, -5.5303e-03, -1.1820e-03, -4.6610e-03,\n",
      "        -1.3716e-02,  2.0307e-03,  2.1117e-03,  4.1470e-04,  1.5186e-02,\n",
      "        -9.1751e-03,  3.0485e-03,  1.0855e-02,  3.2507e-03,  8.0749e-03,\n",
      "        -8.0420e-03, -3.4933e-03,  2.2714e-03, -1.3663e-03, -3.5504e-03,\n",
      "         2.8192e-03,  2.5632e-03, -4.2871e-03, -3.0849e-03,  1.4867e-03,\n",
      "         8.6994e-03, -4.9425e-03,  8.4728e-04,  5.1201e-04, -2.0699e-03,\n",
      "        -1.1122e-03,  8.8230e-04,  3.5172e-03,  3.6709e-03, -1.7016e-03,\n",
      "         2.0842e-03,  2.6515e-03,  8.1510e-04, -7.5171e-03,  4.5453e-03,\n",
      "        -5.8913e-03,  5.9249e-03, -3.2191e-03,  6.7802e-03, -9.2113e-03,\n",
      "        -5.5043e-03,  3.9245e-03, -3.3715e-03,  1.9615e-03,  3.7420e-03,\n",
      "         3.4884e-03, -1.6475e-03,  2.1030e-03, -1.1462e-03, -3.4797e-03,\n",
      "        -5.6475e-03, -1.6113e-02,  3.9341e-04, -2.0831e-03, -5.9264e-03,\n",
      "         6.5049e-03,  2.1191e-03, -1.0327e-03,  5.7741e-04,  4.2420e-03,\n",
      "         7.1482e-03, -6.7162e-03,  5.0381e-03, -5.9548e-04,  8.5568e-04,\n",
      "         1.0663e-04,  2.6138e-03,  1.1574e-03, -6.5373e-03,  1.7615e-03,\n",
      "         8.0378e-03,  1.8143e-03, -2.6185e-03,  3.9390e-03,  4.9579e-03,\n",
      "         1.3123e-03,  2.2658e-03, -4.6089e-03, -2.1323e-03, -3.3233e-03,\n",
      "         1.3181e-03, -2.6001e-03], device='cuda:0')}, 48: {'momentum_buffer': tensor([[[[-2.6556e-04,  3.8793e-04,  1.0690e-03],\n",
      "          [-1.2189e-04, -3.0799e-04, -6.5471e-04],\n",
      "          [ 2.8694e-04,  3.5354e-04,  2.6254e-04]],\n",
      "\n",
      "         [[-1.7075e-04, -1.4468e-05, -5.9022e-04],\n",
      "          [-8.5366e-04, -4.7036e-04, -2.4433e-04],\n",
      "          [ 5.9587e-04,  1.4163e-04, -4.4162e-05]],\n",
      "\n",
      "         [[ 7.1199e-05, -6.8755e-05,  4.0513e-04],\n",
      "          [-2.3966e-04,  9.3039e-04,  5.9852e-04],\n",
      "          [-9.6543e-05,  5.2310e-04, -2.0280e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 8.9174e-05,  1.2490e-04, -1.1208e-04],\n",
      "          [-1.8320e-04, -1.3898e-04,  8.6168e-06],\n",
      "          [-2.4177e-04, -1.4451e-04, -2.6979e-04]],\n",
      "\n",
      "         [[ 8.3932e-05, -3.6617e-04, -5.3392e-05],\n",
      "          [-1.8386e-04, -3.1864e-04, -3.9673e-04],\n",
      "          [ 6.0172e-05,  5.5672e-04,  2.6136e-04]],\n",
      "\n",
      "         [[-3.0543e-04, -3.8113e-04, -5.4207e-04],\n",
      "          [ 2.3502e-04,  1.0086e-04, -2.3636e-04],\n",
      "          [ 7.0605e-04, -5.6731e-05, -5.0085e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 8.6340e-05, -1.3056e-04, -1.5408e-04],\n",
      "          [ 2.4345e-04,  1.1197e-04,  1.2955e-04],\n",
      "          [ 2.8713e-04,  2.0717e-04,  4.2274e-04]],\n",
      "\n",
      "         [[ 7.5831e-04,  3.0664e-04,  4.8527e-04],\n",
      "          [-3.1845e-04,  2.4274e-04, -4.3749e-04],\n",
      "          [-1.0888e-03, -1.2321e-03, -6.7059e-04]],\n",
      "\n",
      "         [[-9.7132e-04, -5.9965e-04,  7.4147e-04],\n",
      "          [ 4.3967e-04,  2.4251e-04,  7.6262e-05],\n",
      "          [ 2.0061e-04,  6.3910e-05,  6.8337e-06]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.4185e-04,  2.6612e-04, -1.1987e-04],\n",
      "          [ 7.7489e-05,  6.0113e-04, -8.4659e-05],\n",
      "          [-2.6072e-04,  6.5075e-04, -9.7443e-05]],\n",
      "\n",
      "         [[ 2.9626e-04,  1.0178e-04,  4.4006e-04],\n",
      "          [ 4.8392e-05,  1.5895e-04,  2.8837e-04],\n",
      "          [ 7.2944e-05,  5.8576e-04,  4.5827e-04]],\n",
      "\n",
      "         [[ 8.2412e-05,  3.9295e-04,  4.8058e-06],\n",
      "          [-3.3157e-04, -3.4481e-04,  6.7708e-05],\n",
      "          [-1.9024e-05,  2.0571e-04,  4.0902e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 2.7491e-04,  5.5146e-04,  3.3840e-04],\n",
      "          [ 6.6644e-04,  7.9065e-04,  1.9413e-04],\n",
      "          [-1.5851e-04, -1.7845e-04, -1.6546e-04]],\n",
      "\n",
      "         [[-2.5502e-04, -1.4642e-04, -2.8269e-04],\n",
      "          [-2.7598e-04, -4.2238e-04, -7.5240e-04],\n",
      "          [-6.2079e-04, -1.5445e-04, -3.5269e-04]],\n",
      "\n",
      "         [[-3.8626e-04, -3.0936e-04, -4.9624e-04],\n",
      "          [-7.5031e-05,  2.2392e-04,  3.7642e-04],\n",
      "          [-2.0339e-04,  3.2513e-04, -2.3368e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-8.2563e-04, -5.3614e-04, -2.1557e-04],\n",
      "          [-9.2732e-04, -3.0749e-04, -2.3899e-04],\n",
      "          [ 3.1955e-06,  2.7348e-04,  4.4157e-04]],\n",
      "\n",
      "         [[ 1.5319e-04,  5.5739e-05, -1.2931e-05],\n",
      "          [-1.0892e-04, -7.3844e-05,  1.1826e-04],\n",
      "          [-1.3264e-04,  3.5295e-04,  3.8536e-04]],\n",
      "\n",
      "         [[-7.1305e-05, -2.2827e-04,  2.0538e-04],\n",
      "          [ 3.0321e-04,  4.3375e-04,  1.8573e-04],\n",
      "          [-6.3354e-04, -1.1194e-04, -1.0409e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 2.5514e-04,  7.5730e-04,  3.5137e-04],\n",
      "          [-4.1997e-06, -3.8896e-05, -3.3287e-04],\n",
      "          [-2.2327e-04, -5.1981e-04, -2.9854e-06]],\n",
      "\n",
      "         [[ 2.1880e-04, -2.5212e-04, -4.1739e-04],\n",
      "          [ 7.1799e-05,  3.1699e-04,  8.3211e-04],\n",
      "          [ 5.0930e-04, -4.0870e-04,  1.2371e-04]],\n",
      "\n",
      "         [[-4.1612e-04,  2.0396e-05, -6.3144e-04],\n",
      "          [ 1.7293e-04,  1.9269e-05,  3.0693e-04],\n",
      "          [-3.2260e-04, -1.3366e-03,  2.8721e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.4350e-04,  5.1339e-04,  2.8354e-04],\n",
      "          [ 1.3950e-03,  7.6357e-04,  4.4385e-04],\n",
      "          [ 5.8162e-04,  7.6156e-04,  5.2542e-04]],\n",
      "\n",
      "         [[ 1.0020e-04, -4.5006e-04, -2.3650e-04],\n",
      "          [-7.4369e-04, -3.3029e-04,  2.8496e-04],\n",
      "          [ 4.4353e-05, -2.9064e-04,  1.3890e-04]],\n",
      "\n",
      "         [[-6.9852e-04, -9.5742e-05, -4.0571e-04],\n",
      "          [-2.8767e-04,  3.3103e-04,  1.5067e-04],\n",
      "          [ 4.0240e-05, -6.2623e-04, -7.1414e-06]]],\n",
      "\n",
      "\n",
      "        [[[ 1.3632e-04,  4.0232e-04, -4.0398e-04],\n",
      "          [ 5.1139e-04,  6.5788e-05,  2.5256e-04],\n",
      "          [-1.0269e-03, -4.6046e-04,  3.3850e-04]],\n",
      "\n",
      "         [[-5.6546e-05, -5.5788e-04,  1.1475e-04],\n",
      "          [-1.3413e-05,  4.4754e-04,  8.0794e-04],\n",
      "          [-1.7190e-04, -3.4302e-05,  6.0831e-05]],\n",
      "\n",
      "         [[ 1.0599e-03,  8.7608e-04,  6.4151e-04],\n",
      "          [-2.3628e-04, -3.8778e-04, -1.9918e-04],\n",
      "          [-9.0884e-04, -2.9947e-04,  2.2794e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-7.0578e-05, -5.3839e-04,  7.1899e-05],\n",
      "          [-3.7912e-04, -1.4813e-04,  1.5688e-04],\n",
      "          [ 5.7426e-05, -8.0409e-05,  5.3206e-04]],\n",
      "\n",
      "         [[-1.2772e-04,  5.3628e-05, -2.7296e-04],\n",
      "          [-2.0901e-04, -8.4342e-05, -2.3728e-04],\n",
      "          [ 3.0951e-04,  2.9507e-04,  3.0974e-04]],\n",
      "\n",
      "         [[ 6.0063e-04,  9.5101e-05,  6.8418e-04],\n",
      "          [-3.6037e-04, -1.8517e-04, -1.3162e-04],\n",
      "          [-1.9669e-04, -1.2823e-04, -6.7265e-05]]],\n",
      "\n",
      "\n",
      "        [[[ 8.5011e-05,  1.6971e-04, -9.1901e-04],\n",
      "          [-7.0634e-05, -3.5761e-04, -1.6795e-04],\n",
      "          [-6.5817e-04, -2.6913e-04,  6.0206e-04]],\n",
      "\n",
      "         [[-9.8009e-05,  2.2238e-05, -3.7308e-04],\n",
      "          [ 4.2695e-05,  1.2430e-04,  1.3598e-04],\n",
      "          [-2.7313e-04, -6.8915e-04, -2.6424e-04]],\n",
      "\n",
      "         [[ 1.0328e-03, -1.1501e-04, -1.9438e-03],\n",
      "          [-1.5907e-04, -4.1199e-04, -5.9425e-04],\n",
      "          [-3.9210e-04, -2.3229e-04, -4.6753e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.3574e-04, -6.1501e-05, -1.6164e-04],\n",
      "          [-1.0657e-04, -5.2300e-04, -3.8106e-04],\n",
      "          [-1.3791e-04, -4.2418e-04, -1.0080e-03]],\n",
      "\n",
      "         [[-3.8201e-04,  9.4284e-05,  3.6267e-04],\n",
      "          [-1.9837e-04, -2.2604e-04,  1.8145e-04],\n",
      "          [ 3.1580e-04,  2.1754e-04,  9.9833e-05]],\n",
      "\n",
      "         [[-2.7075e-04,  1.3646e-04, -3.9152e-04],\n",
      "          [ 9.1162e-04,  5.9698e-04,  1.5162e-04],\n",
      "          [ 1.1273e-03,  7.1600e-04,  2.7932e-04]]]], device='cuda:0')}, 49: {'momentum_buffer': tensor([ 1.1055e-02,  3.8696e-03, -1.2223e-03, -4.2705e-03, -2.2420e-02,\n",
      "         8.8382e-03, -1.9877e-02, -8.4335e-03, -9.6256e-03, -9.8033e-03,\n",
      "        -6.7056e-03, -4.3522e-03, -1.6372e-03, -4.2051e-03,  5.6582e-03,\n",
      "        -2.6758e-04,  2.2363e-02, -6.4919e-04, -1.2395e-03, -1.0563e-02,\n",
      "        -8.3061e-03,  6.7890e-03, -2.7340e-03,  3.1768e-03, -8.1652e-03,\n",
      "         9.5125e-04, -5.0957e-03, -6.6045e-03,  1.2449e-03, -3.9984e-03,\n",
      "        -7.1285e-03,  7.3066e-04, -4.8290e-03, -1.3182e-02,  8.5020e-03,\n",
      "         4.3324e-03,  1.0533e-03, -2.2287e-03,  3.9501e-03,  2.7096e-03,\n",
      "        -7.7804e-03, -4.3877e-03,  8.0973e-03, -1.5951e-03, -5.3443e-03,\n",
      "        -9.1474e-03, -9.5337e-03,  8.0981e-03, -5.2160e-03,  7.3660e-04,\n",
      "        -4.7036e-04,  2.4103e-03,  6.7775e-05, -4.3442e-03,  3.8212e-03,\n",
      "        -1.3767e-02,  7.1985e-03,  2.1268e-03, -4.2217e-03, -1.3272e-02,\n",
      "        -8.3635e-03, -5.8261e-03, -8.3961e-03,  1.8091e-03, -4.6727e-03,\n",
      "         1.6470e-03, -1.0653e-02,  6.3882e-03,  9.9990e-03,  1.3146e-03,\n",
      "        -4.8084e-03,  1.1127e-04, -9.5759e-03, -2.2017e-02, -1.2968e-02,\n",
      "        -4.5856e-03, -4.2781e-03, -1.6784e-04,  5.7182e-03, -5.9244e-03,\n",
      "        -9.1920e-03, -4.9376e-03,  6.0797e-03, -1.2204e-02,  3.7456e-03,\n",
      "        -1.7787e-02, -1.8438e-03,  3.5420e-03, -2.5237e-03, -6.2476e-04,\n",
      "        -9.5258e-03, -1.2946e-03,  1.1290e-02,  7.1530e-03, -3.6358e-04,\n",
      "         8.7062e-03, -1.2957e-02, -3.6839e-03, -7.4429e-05, -1.0960e-02,\n",
      "         1.4169e-02, -1.3386e-03,  8.4007e-03, -7.6170e-03,  4.1270e-03,\n",
      "        -3.7519e-03,  9.2398e-03,  6.0949e-03,  1.2173e-02,  5.9418e-03,\n",
      "         3.7523e-04, -2.9739e-03, -8.5772e-03,  1.2964e-02, -4.5409e-03,\n",
      "        -4.7770e-03,  4.3700e-03, -4.0011e-03,  6.6819e-03,  8.6017e-03,\n",
      "         8.5225e-03,  8.2371e-03,  9.1919e-03, -1.1956e-02, -8.0860e-03,\n",
      "         6.3329e-03, -2.3749e-03,  3.1993e-05, -9.3893e-03,  2.0541e-02,\n",
      "        -1.8281e-03,  7.3283e-04,  8.1607e-03, -7.7000e-04, -1.7738e-03,\n",
      "        -3.9242e-03, -1.5622e-02,  1.2155e-02, -6.6827e-03,  3.0778e-03,\n",
      "        -2.2361e-02, -3.5046e-03,  1.3476e-03, -1.2274e-02, -2.4280e-03,\n",
      "        -2.5318e-03, -6.5928e-03,  1.5105e-03, -3.3672e-03, -9.2185e-03,\n",
      "        -2.4821e-02, -7.0034e-04, -8.2903e-03,  1.7216e-02, -1.8885e-03,\n",
      "         4.9430e-04, -9.0988e-04, -7.2333e-03,  1.5627e-03,  2.2288e-02,\n",
      "         6.3702e-03, -1.2515e-02, -3.9426e-04, -8.7939e-03,  1.0818e-03,\n",
      "         3.3298e-03, -3.4535e-03, -7.6843e-03,  2.7181e-04,  8.5590e-04,\n",
      "        -1.4596e-03,  6.9528e-03, -7.8974e-03, -5.1109e-04, -1.6091e-03,\n",
      "         1.8029e-04,  3.8266e-03,  2.8560e-02,  2.0592e-03,  7.7614e-03,\n",
      "         3.4721e-03,  3.6702e-02,  7.2195e-04,  4.8299e-03,  1.7806e-02,\n",
      "        -8.4809e-03,  4.6810e-03,  1.0068e-03,  2.1999e-02,  5.8030e-03,\n",
      "        -5.4668e-03,  1.8619e-02, -3.6300e-03,  1.6299e-03, -7.8684e-03,\n",
      "         7.9167e-03,  2.2541e-04, -1.5167e-03, -5.8381e-03, -2.8825e-03,\n",
      "        -5.7898e-03, -7.4385e-03,  2.5369e-03, -1.5561e-02,  3.2198e-03,\n",
      "        -4.8492e-05, -2.5102e-03, -6.6607e-03,  6.6511e-03, -7.3449e-03,\n",
      "        -1.8442e-03,  1.8000e-02,  2.8503e-03, -4.1463e-03, -1.3405e-02,\n",
      "         9.9033e-05,  7.1419e-03, -3.6227e-03, -2.6832e-03, -3.6005e-03,\n",
      "         4.1630e-03, -3.0537e-03, -1.2404e-02, -2.0291e-03,  2.6920e-03,\n",
      "         4.1795e-02, -1.0468e-02,  8.5128e-03, -6.2767e-03,  2.0438e-03,\n",
      "        -1.3216e-02,  3.1211e-03, -4.5204e-03, -1.7313e-02, -1.1802e-02,\n",
      "        -6.6045e-04,  6.3641e-03, -6.7709e-03,  7.2912e-03, -4.3266e-04,\n",
      "        -1.1205e-02, -8.1660e-04,  2.1011e-03,  1.2200e-03,  4.9311e-03,\n",
      "        -4.2728e-02,  9.8533e-03,  8.8956e-03, -4.6062e-03, -3.1687e-05,\n",
      "        -1.6356e-03,  2.3100e-05,  8.0833e-03,  4.9166e-03, -1.3899e-02,\n",
      "        -1.0877e-02,  1.8926e-03, -1.0941e-02,  1.0526e-03, -7.1465e-03,\n",
      "         2.8885e-03, -9.6005e-03, -7.8027e-04, -9.2045e-04, -1.2037e-02,\n",
      "         1.6323e-03,  6.1396e-03, -4.6569e-04,  6.5648e-03,  2.0025e-03,\n",
      "        -1.1859e-02,  3.4309e-03,  9.5876e-03, -8.5868e-03, -1.9123e-02,\n",
      "         1.1218e-03, -4.3231e-03, -2.8066e-03,  9.5777e-03,  1.2333e-02,\n",
      "         7.6324e-03,  5.6043e-03, -3.7080e-03, -5.2340e-03, -6.1992e-03,\n",
      "         2.9741e-03,  8.8114e-03, -8.1586e-03, -3.3307e-03,  4.0789e-03,\n",
      "        -6.3292e-04, -2.1752e-03,  3.2770e-03,  7.9095e-03,  2.3335e-05,\n",
      "         5.3358e-03, -2.3767e-03,  1.0973e-03, -1.9879e-03,  8.5868e-03,\n",
      "        -2.5603e-03, -4.9514e-04,  8.2882e-03,  2.1270e-04,  6.3380e-03,\n",
      "         5.2062e-03,  3.4835e-04, -5.1355e-03, -9.1157e-04, -9.6481e-03,\n",
      "         5.3035e-03, -8.4465e-03, -3.6251e-03, -1.4913e-04,  1.8824e-02,\n",
      "         7.6776e-03,  1.1497e-02, -4.0632e-03, -1.4611e-03,  1.6056e-03,\n",
      "        -1.5410e-03,  2.8845e-03,  2.1164e-02,  3.7868e-04, -9.6882e-04,\n",
      "        -1.1233e-02,  1.7179e-03, -3.5091e-02,  2.4659e-03, -6.5978e-04,\n",
      "         3.9382e-03, -1.0493e-02, -1.6423e-03,  2.4506e-03,  5.8174e-03,\n",
      "         5.0342e-03,  1.3009e-03, -1.4593e-02,  6.8576e-03, -1.0096e-03,\n",
      "        -5.5768e-03, -1.6150e-03,  8.7665e-03,  2.2511e-03,  3.1335e-03,\n",
      "         1.2095e-02, -9.5085e-04, -4.2920e-04,  9.7128e-03,  1.2935e-02,\n",
      "        -4.7138e-04,  5.0724e-03,  6.9265e-03, -8.6280e-03, -1.3099e-02,\n",
      "         1.1284e-02, -4.5237e-04,  1.4448e-03, -2.0820e-03,  2.6385e-03,\n",
      "         2.3067e-03,  7.9545e-03,  2.1519e-03, -1.0797e-02,  5.9517e-03,\n",
      "         4.1196e-04,  2.1334e-03,  5.0504e-03,  7.0616e-03,  2.6990e-02,\n",
      "        -2.9273e-03,  9.6027e-03, -6.3405e-03,  1.2890e-02,  3.0492e-03,\n",
      "        -2.6837e-03,  1.2511e-02, -3.7455e-03,  2.1503e-03, -1.1056e-03,\n",
      "        -1.0372e-02, -6.3169e-03,  5.0380e-03,  1.0700e-02, -3.2417e-03,\n",
      "         6.8538e-04,  6.5941e-03, -1.1532e-03,  3.8399e-03, -4.7675e-03,\n",
      "        -3.4194e-03, -7.6122e-03, -1.3323e-03, -7.9361e-04,  1.5620e-03,\n",
      "         6.4211e-03, -4.6179e-03, -7.0836e-03, -8.9044e-03,  1.3481e-02,\n",
      "        -2.6103e-03, -9.2295e-04,  5.7829e-03,  1.5248e-05,  7.7560e-04,\n",
      "        -1.7406e-03,  2.4394e-02, -1.4218e-02,  3.0412e-04,  1.5384e-02,\n",
      "         9.6128e-03,  4.5431e-03, -1.4849e-02,  9.6547e-03, -2.3713e-02,\n",
      "        -3.3166e-03, -1.0604e-03,  1.1258e-02, -1.9675e-03,  1.5833e-03,\n",
      "         1.0594e-02,  1.4722e-02, -4.3261e-03,  1.0249e-02, -3.0996e-03,\n",
      "        -1.3677e-03, -2.6392e-03, -5.5721e-03, -9.8852e-03, -5.6897e-03,\n",
      "         4.9553e-03,  2.1020e-03, -1.2644e-04, -4.6702e-03, -6.3897e-03,\n",
      "        -7.6053e-06, -5.3944e-03,  7.7463e-03,  1.9936e-03,  1.5737e-04,\n",
      "        -7.6958e-03, -6.3628e-03, -2.8790e-03, -1.4125e-02, -1.0947e-02,\n",
      "        -1.3268e-03, -1.1991e-03,  1.1886e-02, -1.4634e-03, -6.6901e-03,\n",
      "         4.7100e-03, -8.5207e-03,  1.2431e-02,  7.3896e-03,  1.0405e-02,\n",
      "         1.0655e-02, -6.4847e-04,  4.8049e-03, -1.4907e-02,  8.1425e-03,\n",
      "         1.3252e-02,  2.2464e-03, -3.2862e-03, -1.3962e-02, -4.8947e-03,\n",
      "         7.8899e-03,  1.7295e-02, -1.5751e-03,  2.3116e-03,  1.4042e-02,\n",
      "         5.8632e-03,  2.7631e-03, -5.4646e-05,  1.4447e-03,  8.8732e-04,\n",
      "         7.1747e-03, -6.1116e-03, -6.2285e-03,  1.4824e-02, -8.9329e-03,\n",
      "        -4.3842e-03, -2.1222e-03,  1.5928e-02,  9.4788e-03, -1.3435e-02,\n",
      "         7.3993e-03,  2.7730e-03,  2.5692e-03, -3.4668e-03, -7.4519e-03,\n",
      "        -2.4299e-03, -8.9103e-03,  1.0457e-02, -1.8831e-02,  2.9199e-02,\n",
      "         4.6781e-03, -9.2545e-03, -1.0951e-02,  1.2683e-02,  1.7923e-02,\n",
      "        -5.6635e-03, -1.6098e-02, -2.7396e-03,  1.1350e-02,  1.4306e-02,\n",
      "        -1.0681e-02, -3.9214e-03,  5.6349e-03, -7.2758e-03, -5.5999e-04,\n",
      "         1.4988e-02, -6.7200e-03], device='cuda:0')}, 50: {'momentum_buffer': tensor([ 4.2717e-03,  1.1446e-03, -1.1918e-04, -3.4226e-03, -1.0754e-02,\n",
      "         3.6725e-03, -1.1538e-02, -5.7334e-03, -4.7939e-03, -7.5515e-03,\n",
      "        -6.4599e-03, -9.6571e-04, -6.1386e-04, -1.4626e-03,  3.9839e-03,\n",
      "         8.6135e-04,  1.3025e-02, -5.3111e-04, -1.7468e-03, -5.1747e-03,\n",
      "        -4.9076e-03,  3.3415e-03, -1.5275e-03,  2.9656e-03, -4.1770e-03,\n",
      "         1.7641e-04,  6.2923e-04, -5.5654e-03,  5.0627e-04, -1.8794e-03,\n",
      "        -3.0314e-03,  2.5585e-03, -2.7977e-03, -9.1692e-03,  4.3154e-03,\n",
      "         3.9774e-03,  3.7337e-04, -3.7155e-03,  1.5908e-03,  2.8010e-03,\n",
      "        -3.9253e-03,  1.2890e-05,  2.2987e-03, -7.5773e-03, -3.5435e-03,\n",
      "        -4.2835e-03, -4.7678e-03,  4.0230e-03, -4.5109e-03,  1.8391e-03,\n",
      "         9.6197e-04,  6.4501e-05, -6.4809e-04, -4.0249e-03,  3.4141e-03,\n",
      "        -7.5582e-03,  4.9521e-03,  1.8144e-05, -2.7011e-03, -8.1034e-03,\n",
      "        -3.6776e-03, -1.2942e-03, -4.9516e-03,  3.1242e-03, -3.9391e-03,\n",
      "         1.5235e-03, -6.5525e-03,  2.8116e-03,  4.5156e-03,  6.9962e-04,\n",
      "        -3.0090e-03,  3.0704e-03, -4.9981e-03, -8.6921e-03, -8.8019e-03,\n",
      "        -3.8561e-03, -6.0620e-04, -2.2768e-03,  1.0264e-03, -2.6394e-03,\n",
      "        -4.0787e-03, -2.3321e-03,  2.6902e-03, -5.0463e-03,  1.4274e-03,\n",
      "        -1.2179e-02,  1.2077e-03,  1.8227e-03, -1.2701e-03,  4.9421e-04,\n",
      "        -6.7361e-03, -1.5567e-04,  8.9824e-03,  6.8448e-03,  1.1430e-03,\n",
      "         4.5723e-03, -7.9924e-03, -2.0724e-03, -1.0623e-03, -5.5530e-03,\n",
      "         7.0247e-03, -2.0028e-03,  5.5037e-03, -6.4729e-03,  4.7996e-03,\n",
      "        -1.9923e-03,  5.1868e-03,  2.1161e-03,  3.9065e-03,  3.4854e-03,\n",
      "        -1.0185e-03, -2.1605e-03, -3.8436e-03,  4.2095e-03, -5.0583e-04,\n",
      "        -2.7732e-03,  3.1486e-03, -1.6677e-03,  1.9196e-03,  5.6102e-03,\n",
      "         5.2105e-03,  7.0163e-03,  5.3024e-03, -3.9482e-03, -3.9136e-03,\n",
      "         2.0550e-03, -1.2147e-03, -2.1259e-03, -6.2380e-03,  9.2990e-03,\n",
      "        -1.0117e-03,  2.7951e-04,  1.8021e-03,  1.1806e-03, -2.0548e-03,\n",
      "        -1.1330e-03, -1.1438e-02,  3.6930e-03, -1.5504e-03,  2.4196e-03,\n",
      "        -1.1602e-02,  2.0455e-04,  1.5180e-03, -6.2160e-03, -1.1389e-03,\n",
      "        -3.3294e-04, -2.4697e-03, -1.0158e-03, -4.2801e-04, -4.3522e-03,\n",
      "        -1.3212e-02,  5.9737e-04, -3.3698e-03,  6.4441e-03, -3.2699e-04,\n",
      "        -1.4173e-03, -1.2794e-04, -1.8122e-03,  1.0870e-03,  9.4519e-03,\n",
      "         4.8111e-03, -5.9118e-03, -1.5554e-03, -3.1528e-03, -8.0425e-05,\n",
      "         1.7765e-03, -1.7082e-03, -3.1854e-03,  1.2238e-03,  3.4679e-04,\n",
      "        -2.2145e-03,  1.0327e-03, -5.4071e-03, -9.8595e-04, -1.1758e-03,\n",
      "        -6.9974e-05,  2.5699e-03,  1.2141e-02,  2.0528e-03,  4.0282e-03,\n",
      "         8.3551e-04,  1.1570e-02, -1.1992e-04,  3.9801e-03,  8.9527e-03,\n",
      "        -2.5024e-03,  4.7525e-04,  4.6570e-04,  9.0626e-03,  3.7304e-03,\n",
      "        -3.3253e-03,  6.4702e-03,  1.4829e-03, -1.0514e-03, -3.5917e-03,\n",
      "         3.4595e-03, -5.4152e-04,  7.2325e-04, -1.3240e-03, -9.3083e-04,\n",
      "        -3.1555e-03, -4.0537e-03,  1.6623e-03, -9.1649e-03,  1.3224e-03,\n",
      "         1.0426e-03, -2.4242e-03, -1.8248e-03,  3.5598e-03, -4.4552e-03,\n",
      "        -1.0882e-03,  7.1142e-03,  1.4015e-03, -6.0136e-03, -8.4370e-03,\n",
      "         1.8458e-04,  2.4844e-03, -1.3208e-03, -9.7817e-04, -2.0122e-03,\n",
      "         2.0107e-03, -5.1472e-04, -6.9709e-03, -6.8462e-04,  1.3197e-03,\n",
      "         1.9059e-02, -4.8316e-03,  2.1088e-03, -2.9627e-03,  3.7137e-03,\n",
      "        -4.9675e-03,  8.1299e-04, -2.5773e-03, -6.7640e-03, -9.5377e-03,\n",
      "        -2.2577e-03,  2.3014e-03, -2.7705e-03,  5.1487e-03,  6.7025e-04,\n",
      "        -4.4616e-03, -1.0549e-03,  7.5726e-04,  6.3874e-04,  1.5757e-03,\n",
      "        -1.5522e-02,  3.0436e-03,  3.0979e-03, -2.9666e-03,  1.3739e-03,\n",
      "        -4.1888e-04, -2.3958e-04,  5.2386e-03,  7.1646e-04, -5.2029e-03,\n",
      "        -5.7498e-03,  1.3664e-03, -5.4526e-03, -1.7922e-04, -5.1012e-03,\n",
      "         2.4163e-03, -4.8524e-03, -9.2261e-04, -1.2320e-03, -5.0951e-03,\n",
      "        -3.3727e-04,  3.5924e-03,  5.4477e-04,  4.2139e-03,  1.0738e-03,\n",
      "        -9.1789e-03,  2.4383e-04,  5.0971e-03, -3.5766e-03, -7.0453e-03,\n",
      "         2.8949e-03, -3.2360e-03, -9.9181e-04,  1.0754e-03,  5.6886e-03,\n",
      "         4.4333e-03,  7.3730e-04, -3.1803e-03,  3.4217e-04,  1.2571e-03,\n",
      "         9.9973e-04,  3.0108e-03, -4.0178e-03, -4.8962e-03,  8.6849e-04,\n",
      "         1.9484e-04, -6.1433e-04,  2.5100e-03,  4.7611e-03, -1.0129e-03,\n",
      "         4.8392e-03, -2.0751e-03,  1.4712e-03, -7.7788e-04,  3.8587e-03,\n",
      "         6.1372e-04, -8.6536e-04,  5.3357e-03,  2.4343e-03,  4.1561e-03,\n",
      "         2.5973e-03,  6.9684e-04, -2.5920e-03, -4.9972e-04, -6.4652e-03,\n",
      "         3.9145e-03, -5.9283e-03,  2.3793e-03,  2.1788e-03,  7.4269e-03,\n",
      "         4.9021e-03,  1.0264e-02, -5.9076e-04, -3.6517e-03,  1.5532e-03,\n",
      "        -3.3123e-03,  7.9621e-04,  1.1040e-02,  5.0658e-04, -2.1065e-03,\n",
      "        -5.0819e-03, -2.3474e-03, -1.1847e-02,  1.6255e-04, -3.1429e-04,\n",
      "         5.0831e-03, -4.9583e-03, -9.0090e-05,  1.6942e-04,  3.7415e-04,\n",
      "         2.3039e-04,  8.6817e-04, -6.8980e-03,  4.6509e-03, -1.8245e-03,\n",
      "        -5.1327e-03, -4.7306e-04,  2.6235e-03,  2.9847e-03,  1.3140e-03,\n",
      "         2.9641e-03, -1.1617e-03, -2.1074e-04,  5.7455e-03,  1.0872e-02,\n",
      "        -5.4711e-03,  1.8732e-03,  3.1239e-03, -6.1298e-03, -4.6950e-03,\n",
      "         4.7718e-03,  7.4128e-04,  7.0659e-05, -5.9899e-04,  2.0407e-03,\n",
      "         1.5274e-03,  5.1556e-03,  2.1609e-03, -5.2714e-03,  2.7730e-03,\n",
      "         3.3093e-04,  1.8324e-03, -1.0250e-04,  2.8216e-03,  1.4486e-02,\n",
      "        -1.4007e-04,  5.9091e-03, -3.1554e-03,  4.4952e-03,  1.8790e-03,\n",
      "        -5.1320e-04,  5.7612e-03, -2.9170e-03,  3.6851e-03, -1.5971e-03,\n",
      "        -5.4971e-03, -3.2451e-03,  1.5380e-03,  4.8068e-03, -1.6843e-03,\n",
      "        -8.0905e-04,  4.1642e-03,  5.6023e-04,  4.0886e-03, -2.1201e-03,\n",
      "        -1.1678e-03, -3.8904e-03, -3.8024e-04,  6.5302e-04,  2.9792e-03,\n",
      "         3.0792e-03, -8.8019e-04, -4.1561e-03, -3.9668e-03,  6.2030e-03,\n",
      "        -1.0259e-03,  3.7275e-04,  2.5578e-03, -2.6006e-04,  6.7561e-04,\n",
      "        -3.7080e-04,  6.7278e-03, -5.7636e-03,  1.1171e-03,  6.6892e-03,\n",
      "         7.7504e-03,  3.0283e-03, -6.5301e-03,  4.8903e-03, -1.0794e-02,\n",
      "        -3.4955e-03, -2.1701e-04,  5.2439e-03, -7.1798e-04,  1.2747e-03,\n",
      "         8.2270e-03,  7.9140e-03, -1.6268e-03,  7.1490e-03, -2.7775e-03,\n",
      "         2.3305e-04, -7.9009e-04, -3.5463e-03, -7.5872e-03, -2.1097e-03,\n",
      "         3.1104e-03,  1.9608e-03, -8.4756e-05, -2.2219e-03, -6.1089e-03,\n",
      "         2.0103e-04, -4.2638e-03,  5.0218e-03,  1.6082e-03, -3.2012e-04,\n",
      "        -5.2073e-03, -3.3170e-03, -1.3268e-03, -8.7350e-03, -7.0401e-03,\n",
      "        -3.3849e-03,  6.6649e-04,  6.9732e-03, -6.2143e-04, -3.3782e-03,\n",
      "         2.9368e-03, -3.1540e-03,  5.3108e-03,  4.7544e-03,  5.7715e-03,\n",
      "         5.6837e-03, -2.7287e-04,  3.4354e-03, -9.6305e-03,  2.4560e-03,\n",
      "         6.3214e-03,  1.2797e-03, -1.3337e-03, -6.4547e-03, -2.1486e-03,\n",
      "         4.0844e-03,  8.1722e-03, -1.8246e-03,  6.6176e-04,  6.1277e-03,\n",
      "         4.7573e-03, -3.7548e-04, -1.5540e-04,  4.0620e-04, -1.9749e-03,\n",
      "         6.5622e-03, -3.3761e-03, -3.8068e-03,  5.6488e-03, -5.0462e-03,\n",
      "        -2.8901e-03,  7.3467e-04,  7.4825e-03,  5.2251e-03, -9.9295e-03,\n",
      "         4.0744e-03,  8.2189e-04,  1.5117e-03, -2.7035e-03, -3.3534e-03,\n",
      "        -1.3871e-03, -3.0572e-03,  3.5049e-03, -7.8494e-03,  1.0496e-02,\n",
      "         1.4631e-03, -3.7863e-03, -6.4067e-03,  7.0746e-03,  7.5582e-03,\n",
      "        -3.1593e-03, -6.7181e-03, -2.3166e-03,  3.5550e-03,  4.0474e-03,\n",
      "        -6.2935e-03, -1.9088e-03,  5.7040e-04, -3.6694e-03, -3.3622e-03,\n",
      "         7.3122e-03, -2.4163e-03], device='cuda:0')}, 51: {'momentum_buffer': tensor([[[[ 5.2589e-04]],\n",
      "\n",
      "         [[-1.7277e-04]],\n",
      "\n",
      "         [[ 3.9612e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.9121e-04]],\n",
      "\n",
      "         [[ 4.1757e-05]],\n",
      "\n",
      "         [[-2.3492e-04]]],\n",
      "\n",
      "\n",
      "        [[[-4.9951e-04]],\n",
      "\n",
      "         [[-6.3308e-04]],\n",
      "\n",
      "         [[-3.7741e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 3.7346e-04]],\n",
      "\n",
      "         [[-1.1773e-04]],\n",
      "\n",
      "         [[ 6.7517e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 1.6291e-04]],\n",
      "\n",
      "         [[-1.7270e-04]],\n",
      "\n",
      "         [[ 4.6454e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 2.8545e-04]],\n",
      "\n",
      "         [[ 5.9319e-06]],\n",
      "\n",
      "         [[-4.5987e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-2.1031e-03]],\n",
      "\n",
      "         [[ 6.8182e-04]],\n",
      "\n",
      "         [[-6.3142e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1740e-03]],\n",
      "\n",
      "         [[-7.6410e-04]],\n",
      "\n",
      "         [[ 1.9317e-04]]],\n",
      "\n",
      "\n",
      "        [[[-4.6527e-04]],\n",
      "\n",
      "         [[ 1.2567e-03]],\n",
      "\n",
      "         [[ 6.3974e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9344e-04]],\n",
      "\n",
      "         [[-2.7889e-04]],\n",
      "\n",
      "         [[ 7.6795e-04]]],\n",
      "\n",
      "\n",
      "        [[[-5.1041e-04]],\n",
      "\n",
      "         [[-9.7053e-04]],\n",
      "\n",
      "         [[-7.0202e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 4.0289e-05]],\n",
      "\n",
      "         [[ 8.0281e-04]],\n",
      "\n",
      "         [[ 3.6530e-04]]]], device='cuda:0')}, 52: {'momentum_buffer': tensor([ 7.0733e-03,  6.0044e-04, -1.0903e-03, -7.0889e-03, -6.1983e-03,\n",
      "        -2.0682e-03, -1.4395e-02, -3.0870e-03,  1.5115e-03, -9.9373e-03,\n",
      "        -4.3185e-03,  3.5896e-04,  2.4443e-03,  1.2409e-03,  5.2400e-03,\n",
      "        -3.5752e-04,  1.6015e-02,  4.6427e-04,  2.9961e-04, -8.4865e-03,\n",
      "         2.7672e-03,  4.8731e-03,  7.5819e-05,  1.3605e-03, -2.9208e-03,\n",
      "         3.3584e-03,  8.6639e-03, -5.5066e-03,  6.1072e-03, -4.6109e-03,\n",
      "         2.4202e-04,  4.4228e-03, -3.8846e-03, -7.6018e-03,  5.0961e-03,\n",
      "         2.6191e-03,  2.3967e-04, -6.0844e-03, -4.5138e-04,  4.1450e-03,\n",
      "        -1.0434e-03,  4.6554e-03,  1.4869e-03, -1.5452e-02, -2.7730e-03,\n",
      "        -1.8476e-03, -2.5627e-03, -2.0734e-03, -1.3232e-03,  4.7858e-03,\n",
      "        -4.6227e-03, -3.3991e-03, -7.9079e-03, -1.7369e-02,  6.2588e-03,\n",
      "        -1.0279e-02,  4.2793e-03,  3.3561e-04, -3.8037e-03, -2.9494e-03,\n",
      "        -2.7724e-03,  1.8758e-03,  2.7282e-03,  6.6281e-03, -4.0924e-03,\n",
      "         2.2253e-03, -4.6545e-03,  3.5696e-03,  7.3685e-03, -1.0528e-03,\n",
      "        -1.9102e-03, -4.1481e-03, -3.7231e-03, -5.7720e-03, -1.5875e-02,\n",
      "        -6.0106e-03,  1.7513e-03, -4.3055e-03, -4.7836e-03, -5.1466e-03,\n",
      "        -3.1422e-03,  9.2327e-04,  4.1520e-03, -5.8834e-03,  6.0488e-03,\n",
      "        -9.5774e-03,  5.7716e-03,  3.8984e-03,  2.0718e-03, -1.4557e-04,\n",
      "        -8.1168e-03,  2.7531e-03,  1.2015e-02,  5.9030e-03, -2.6605e-03,\n",
      "        -8.8053e-05, -9.5036e-03, -4.4364e-03, -3.8396e-03,  1.6947e-03,\n",
      "         1.1238e-03,  2.5606e-03,  8.9247e-03, -6.3401e-03,  4.7961e-03,\n",
      "        -6.5121e-03,  3.1339e-03,  2.2438e-03,  9.9833e-03,  7.6842e-03,\n",
      "        -4.0339e-03, -5.3386e-03,  1.1544e-03, -7.7068e-04,  7.6842e-03,\n",
      "        -2.3214e-03,  1.2184e-02, -1.8187e-03, -2.4187e-03,  3.9821e-03,\n",
      "         2.7634e-04,  7.8824e-03,  4.0139e-03, -2.1460e-03, -1.8042e-03,\n",
      "         2.7861e-03,  3.2913e-03, -2.6454e-03, -9.0463e-03,  1.6202e-02,\n",
      "        -2.4739e-03,  2.0228e-04,  5.1923e-04,  2.9784e-03, -9.7845e-03,\n",
      "         4.7222e-04, -3.4421e-03,  3.1258e-03, -1.3357e-04,  2.6506e-03,\n",
      "        -9.5497e-03,  2.0676e-03,  5.0814e-03, -4.9929e-03, -4.1590e-03,\n",
      "        -1.3708e-04,  2.6987e-03, -3.6583e-03, -6.3063e-04, -4.7825e-03,\n",
      "        -1.8270e-02,  4.2975e-03, -5.3419e-04,  5.1016e-03,  4.1024e-04,\n",
      "         3.1368e-03,  2.8425e-03,  1.7165e-03, -4.7418e-03,  5.8961e-03,\n",
      "         3.1607e-03, -5.0989e-03,  1.7362e-03,  3.5042e-03, -8.1788e-03,\n",
      "         3.5090e-03,  2.3098e-03, -7.9876e-03,  4.9872e-03,  4.5505e-04,\n",
      "        -1.7833e-03,  9.6743e-04,  8.9439e-03, -1.0801e-03, -1.4002e-03,\n",
      "         1.1499e-03,  2.0179e-03,  8.5263e-03, -2.1001e-03,  3.6251e-03,\n",
      "        -3.0624e-03,  6.6707e-03, -2.5561e-03,  1.8823e-03,  9.0223e-03,\n",
      "        -1.7061e-03, -7.6038e-04,  8.3495e-04,  4.1162e-03,  5.7827e-03,\n",
      "        -5.9840e-03,  7.0799e-03,  8.9830e-04, -2.3025e-03, -9.3899e-04,\n",
      "         7.2214e-03, -2.3277e-03,  5.2882e-03, -1.3835e-03,  3.5079e-03,\n",
      "        -5.9772e-03, -8.4005e-03,  4.0367e-04, -1.2847e-02, -4.7142e-04,\n",
      "         2.0625e-04,  2.2024e-03, -1.7222e-03, -2.8511e-03, -1.1995e-03,\n",
      "        -8.9868e-04,  7.9294e-03,  5.1860e-04, -7.7648e-03, -5.7763e-03,\n",
      "         4.0131e-03,  1.5992e-03,  2.4037e-03,  2.4210e-03, -6.9584e-03,\n",
      "         2.2919e-03,  2.0847e-03, -6.3344e-03,  2.2122e-03,  1.4396e-03,\n",
      "         2.5725e-02, -6.5062e-03,  4.8799e-03, -5.4183e-04,  7.7498e-03,\n",
      "        -6.7494e-03, -6.6277e-03,  5.7807e-03,  8.7858e-03, -9.8913e-03,\n",
      "        -5.3611e-03,  5.2097e-03, -9.5526e-04,  2.2149e-03, -5.3959e-04,\n",
      "        -6.2392e-03, -4.4123e-03, -6.8299e-04, -2.2934e-03, -3.8566e-04,\n",
      "        -9.6250e-03,  2.4786e-03,  1.1267e-03, -2.5221e-03,  5.5601e-03,\n",
      "        -3.6171e-03, -4.8268e-03,  1.0153e-02, -2.6270e-03,  3.7589e-03,\n",
      "         3.2196e-03,  1.1659e-03,  1.1338e-03,  2.5964e-03, -4.5379e-03,\n",
      "         2.2387e-03, -2.0853e-03, -1.2665e-06, -7.7418e-04, -4.6146e-03,\n",
      "        -6.4307e-03, -1.2183e-03, -4.6787e-03,  6.2403e-03, -3.0597e-03,\n",
      "        -1.3784e-02, -2.7726e-03,  9.1152e-03, -4.8374e-03, -4.8064e-03,\n",
      "         2.1678e-03, -1.1239e-02,  9.4159e-03, -2.6170e-05,  7.9863e-03,\n",
      "         4.1972e-03, -2.2348e-03, -5.7046e-03,  5.0366e-03,  7.0967e-03,\n",
      "        -2.3951e-03, -1.6888e-03, -9.4916e-03, -7.2708e-03,  2.0176e-03,\n",
      "        -1.2213e-03, -2.5139e-03,  1.0303e-02,  3.1430e-03,  1.8176e-03,\n",
      "         8.9486e-03,  6.4435e-04, -8.2707e-04, -1.7431e-03,  4.8597e-03,\n",
      "         4.7193e-03,  9.3622e-04,  2.3702e-04,  4.1922e-03,  3.3918e-03,\n",
      "        -4.9959e-03, -9.6141e-04,  2.1046e-03, -3.9532e-03, -1.8995e-03,\n",
      "         4.0975e-03, -4.0248e-04,  5.5636e-03,  7.3560e-03, -7.7659e-03,\n",
      "         4.0597e-03,  3.1783e-03, -8.2950e-04, -6.2855e-03, -1.8909e-03,\n",
      "        -1.5314e-03,  2.2750e-03, -1.1450e-03,  1.8761e-03, -3.7696e-03,\n",
      "        -2.0226e-03, -2.4685e-03, -1.4666e-02, -3.0196e-04,  1.9085e-03,\n",
      "         4.3568e-03, -1.7862e-02, -4.1852e-03,  1.2262e-03, -2.2263e-03,\n",
      "        -8.5891e-04, -8.0013e-04, -1.3143e-02,  6.5456e-03, -1.3538e-03,\n",
      "         3.1959e-03, -2.4112e-03,  1.6917e-04,  7.9804e-03, -5.1510e-04,\n",
      "         6.3713e-03, -1.5035e-03,  2.1225e-03,  5.7375e-03,  1.2531e-03,\n",
      "        -1.1718e-02,  1.9437e-03,  4.5567e-03, -5.5890e-03, -2.3609e-03,\n",
      "        -5.7120e-04,  4.2627e-03, -3.7538e-03,  2.5314e-03,  5.2599e-03,\n",
      "        -6.9646e-03,  8.5884e-03, -4.0819e-03, -2.3141e-03, -4.0586e-04,\n",
      "        -1.7238e-04, -4.3987e-03, -1.9925e-03,  2.8602e-03, -7.3695e-03,\n",
      "        -6.6199e-04,  6.4008e-03, -2.9194e-03, -3.2867e-03,  1.6032e-03,\n",
      "         1.0433e-04, -5.1666e-03, -5.2468e-03,  1.4459e-03,  5.5633e-04,\n",
      "         4.2000e-03, -1.6592e-03,  3.8497e-03,  4.0983e-03, -2.8128e-03,\n",
      "        -5.0893e-03,  5.3225e-03, -5.2456e-04,  4.1435e-03, -1.0480e-03,\n",
      "        -3.5553e-04, -2.9315e-03,  2.9572e-03,  1.1215e-03,  4.1228e-03,\n",
      "         7.8133e-03,  7.2553e-04, -1.6648e-03, -3.9241e-03,  1.5022e-02,\n",
      "         1.2285e-03,  1.6126e-03, -3.7634e-03, -8.5563e-04,  1.2552e-04,\n",
      "         6.7781e-04,  7.0665e-03, -3.5123e-03,  6.4122e-03,  6.3668e-04,\n",
      "         5.6425e-03,  1.3719e-03,  4.3304e-04,  1.1241e-03, -5.3732e-03,\n",
      "        -4.2501e-03, -6.2818e-04,  4.9482e-04, -6.3116e-03,  3.0197e-03,\n",
      "         1.7426e-02,  8.7493e-03, -5.7630e-03,  7.2690e-03,  3.4118e-03,\n",
      "         2.5622e-03,  4.6588e-03,  1.6102e-04,  1.2456e-03, -9.0204e-03,\n",
      "         2.9658e-03,  8.7477e-03,  2.0168e-03, -2.8616e-03, -6.1750e-03,\n",
      "         5.9917e-03, -8.7639e-04,  7.7160e-03,  9.1033e-04,  7.9211e-03,\n",
      "        -4.0357e-03,  2.5693e-03, -4.0861e-03, -6.9503e-03, -4.5975e-03,\n",
      "         1.2124e-03,  4.3426e-03,  1.1271e-02, -5.8592e-03, -2.6529e-03,\n",
      "         6.2918e-03, -3.3271e-03,  6.0785e-03,  2.0195e-03,  2.8258e-03,\n",
      "        -1.4981e-03,  1.8621e-03,  4.1669e-03, -1.0527e-02,  6.6735e-03,\n",
      "         2.5908e-03,  1.0506e-03,  1.0167e-03, -3.6862e-03, -3.4554e-03,\n",
      "         3.8491e-03,  7.2517e-03, -1.5899e-03,  2.8850e-03,  4.0431e-03,\n",
      "         3.2379e-03, -5.9076e-04,  1.4080e-03, -4.6051e-03, -4.5346e-03,\n",
      "         9.5337e-03, -8.6734e-03,  2.5856e-03,  6.8029e-03, -2.3070e-04,\n",
      "        -8.0587e-03, -2.5379e-03,  5.2177e-03, -3.2996e-03, -2.7958e-03,\n",
      "         1.2163e-03, -3.4502e-04,  1.3356e-02, -3.1337e-03, -1.4823e-03,\n",
      "         8.2417e-05, -2.2172e-03, -6.9659e-04, -6.9496e-03,  6.1206e-03,\n",
      "        -1.1055e-03, -4.1607e-03, -1.8204e-03,  6.2283e-03,  7.6881e-03,\n",
      "        -4.2602e-03, -6.8913e-03, -4.5931e-03,  2.8215e-03, -3.5455e-03,\n",
      "        -1.1580e-04, -7.0202e-03,  1.4426e-03,  1.6616e-03, -3.9294e-03,\n",
      "         6.4973e-03, -2.7229e-03], device='cuda:0')}, 53: {'momentum_buffer': tensor([ 4.2717e-03,  1.1446e-03, -1.1918e-04, -3.4226e-03, -1.0754e-02,\n",
      "         3.6725e-03, -1.1538e-02, -5.7334e-03, -4.7939e-03, -7.5515e-03,\n",
      "        -6.4599e-03, -9.6571e-04, -6.1386e-04, -1.4626e-03,  3.9839e-03,\n",
      "         8.6135e-04,  1.3025e-02, -5.3111e-04, -1.7468e-03, -5.1747e-03,\n",
      "        -4.9076e-03,  3.3415e-03, -1.5275e-03,  2.9656e-03, -4.1770e-03,\n",
      "         1.7641e-04,  6.2923e-04, -5.5654e-03,  5.0627e-04, -1.8794e-03,\n",
      "        -3.0314e-03,  2.5585e-03, -2.7977e-03, -9.1692e-03,  4.3154e-03,\n",
      "         3.9774e-03,  3.7337e-04, -3.7155e-03,  1.5908e-03,  2.8010e-03,\n",
      "        -3.9253e-03,  1.2890e-05,  2.2987e-03, -7.5773e-03, -3.5435e-03,\n",
      "        -4.2835e-03, -4.7678e-03,  4.0230e-03, -4.5109e-03,  1.8391e-03,\n",
      "         9.6197e-04,  6.4501e-05, -6.4809e-04, -4.0249e-03,  3.4141e-03,\n",
      "        -7.5582e-03,  4.9521e-03,  1.8144e-05, -2.7011e-03, -8.1034e-03,\n",
      "        -3.6776e-03, -1.2942e-03, -4.9516e-03,  3.1242e-03, -3.9391e-03,\n",
      "         1.5235e-03, -6.5525e-03,  2.8116e-03,  4.5156e-03,  6.9962e-04,\n",
      "        -3.0090e-03,  3.0704e-03, -4.9981e-03, -8.6921e-03, -8.8019e-03,\n",
      "        -3.8561e-03, -6.0620e-04, -2.2768e-03,  1.0264e-03, -2.6394e-03,\n",
      "        -4.0787e-03, -2.3321e-03,  2.6902e-03, -5.0463e-03,  1.4274e-03,\n",
      "        -1.2179e-02,  1.2077e-03,  1.8227e-03, -1.2701e-03,  4.9421e-04,\n",
      "        -6.7361e-03, -1.5567e-04,  8.9824e-03,  6.8448e-03,  1.1430e-03,\n",
      "         4.5723e-03, -7.9924e-03, -2.0724e-03, -1.0623e-03, -5.5530e-03,\n",
      "         7.0247e-03, -2.0028e-03,  5.5037e-03, -6.4729e-03,  4.7996e-03,\n",
      "        -1.9923e-03,  5.1868e-03,  2.1161e-03,  3.9065e-03,  3.4854e-03,\n",
      "        -1.0185e-03, -2.1605e-03, -3.8436e-03,  4.2095e-03, -5.0583e-04,\n",
      "        -2.7732e-03,  3.1486e-03, -1.6677e-03,  1.9196e-03,  5.6102e-03,\n",
      "         5.2105e-03,  7.0163e-03,  5.3024e-03, -3.9482e-03, -3.9136e-03,\n",
      "         2.0550e-03, -1.2147e-03, -2.1259e-03, -6.2380e-03,  9.2990e-03,\n",
      "        -1.0117e-03,  2.7951e-04,  1.8021e-03,  1.1806e-03, -2.0548e-03,\n",
      "        -1.1330e-03, -1.1438e-02,  3.6930e-03, -1.5504e-03,  2.4196e-03,\n",
      "        -1.1602e-02,  2.0455e-04,  1.5180e-03, -6.2160e-03, -1.1389e-03,\n",
      "        -3.3294e-04, -2.4697e-03, -1.0158e-03, -4.2801e-04, -4.3522e-03,\n",
      "        -1.3212e-02,  5.9737e-04, -3.3698e-03,  6.4441e-03, -3.2699e-04,\n",
      "        -1.4173e-03, -1.2794e-04, -1.8122e-03,  1.0870e-03,  9.4519e-03,\n",
      "         4.8111e-03, -5.9118e-03, -1.5554e-03, -3.1528e-03, -8.0425e-05,\n",
      "         1.7765e-03, -1.7082e-03, -3.1854e-03,  1.2238e-03,  3.4679e-04,\n",
      "        -2.2145e-03,  1.0327e-03, -5.4071e-03, -9.8595e-04, -1.1758e-03,\n",
      "        -6.9974e-05,  2.5699e-03,  1.2141e-02,  2.0528e-03,  4.0282e-03,\n",
      "         8.3551e-04,  1.1570e-02, -1.1992e-04,  3.9801e-03,  8.9527e-03,\n",
      "        -2.5024e-03,  4.7525e-04,  4.6570e-04,  9.0626e-03,  3.7304e-03,\n",
      "        -3.3253e-03,  6.4702e-03,  1.4829e-03, -1.0514e-03, -3.5917e-03,\n",
      "         3.4595e-03, -5.4152e-04,  7.2325e-04, -1.3240e-03, -9.3083e-04,\n",
      "        -3.1555e-03, -4.0537e-03,  1.6623e-03, -9.1649e-03,  1.3224e-03,\n",
      "         1.0426e-03, -2.4242e-03, -1.8248e-03,  3.5598e-03, -4.4552e-03,\n",
      "        -1.0882e-03,  7.1142e-03,  1.4015e-03, -6.0136e-03, -8.4370e-03,\n",
      "         1.8458e-04,  2.4844e-03, -1.3208e-03, -9.7817e-04, -2.0122e-03,\n",
      "         2.0107e-03, -5.1472e-04, -6.9709e-03, -6.8462e-04,  1.3197e-03,\n",
      "         1.9059e-02, -4.8316e-03,  2.1088e-03, -2.9627e-03,  3.7137e-03,\n",
      "        -4.9675e-03,  8.1299e-04, -2.5773e-03, -6.7640e-03, -9.5377e-03,\n",
      "        -2.2577e-03,  2.3014e-03, -2.7705e-03,  5.1487e-03,  6.7025e-04,\n",
      "        -4.4616e-03, -1.0549e-03,  7.5726e-04,  6.3874e-04,  1.5757e-03,\n",
      "        -1.5522e-02,  3.0436e-03,  3.0979e-03, -2.9666e-03,  1.3739e-03,\n",
      "        -4.1888e-04, -2.3958e-04,  5.2386e-03,  7.1646e-04, -5.2029e-03,\n",
      "        -5.7498e-03,  1.3664e-03, -5.4526e-03, -1.7922e-04, -5.1012e-03,\n",
      "         2.4163e-03, -4.8524e-03, -9.2261e-04, -1.2320e-03, -5.0951e-03,\n",
      "        -3.3727e-04,  3.5924e-03,  5.4477e-04,  4.2139e-03,  1.0738e-03,\n",
      "        -9.1789e-03,  2.4383e-04,  5.0971e-03, -3.5766e-03, -7.0453e-03,\n",
      "         2.8949e-03, -3.2360e-03, -9.9181e-04,  1.0754e-03,  5.6886e-03,\n",
      "         4.4333e-03,  7.3730e-04, -3.1803e-03,  3.4217e-04,  1.2571e-03,\n",
      "         9.9973e-04,  3.0108e-03, -4.0178e-03, -4.8962e-03,  8.6849e-04,\n",
      "         1.9484e-04, -6.1433e-04,  2.5100e-03,  4.7611e-03, -1.0129e-03,\n",
      "         4.8392e-03, -2.0751e-03,  1.4712e-03, -7.7788e-04,  3.8587e-03,\n",
      "         6.1372e-04, -8.6536e-04,  5.3357e-03,  2.4343e-03,  4.1561e-03,\n",
      "         2.5973e-03,  6.9684e-04, -2.5920e-03, -4.9972e-04, -6.4652e-03,\n",
      "         3.9145e-03, -5.9283e-03,  2.3793e-03,  2.1788e-03,  7.4269e-03,\n",
      "         4.9021e-03,  1.0264e-02, -5.9076e-04, -3.6517e-03,  1.5532e-03,\n",
      "        -3.3123e-03,  7.9621e-04,  1.1040e-02,  5.0658e-04, -2.1065e-03,\n",
      "        -5.0819e-03, -2.3474e-03, -1.1847e-02,  1.6255e-04, -3.1429e-04,\n",
      "         5.0831e-03, -4.9583e-03, -9.0090e-05,  1.6942e-04,  3.7415e-04,\n",
      "         2.3039e-04,  8.6817e-04, -6.8980e-03,  4.6509e-03, -1.8245e-03,\n",
      "        -5.1327e-03, -4.7306e-04,  2.6235e-03,  2.9847e-03,  1.3140e-03,\n",
      "         2.9641e-03, -1.1617e-03, -2.1074e-04,  5.7455e-03,  1.0872e-02,\n",
      "        -5.4711e-03,  1.8732e-03,  3.1239e-03, -6.1298e-03, -4.6950e-03,\n",
      "         4.7718e-03,  7.4128e-04,  7.0659e-05, -5.9899e-04,  2.0407e-03,\n",
      "         1.5274e-03,  5.1556e-03,  2.1609e-03, -5.2714e-03,  2.7730e-03,\n",
      "         3.3093e-04,  1.8324e-03, -1.0250e-04,  2.8216e-03,  1.4486e-02,\n",
      "        -1.4007e-04,  5.9091e-03, -3.1554e-03,  4.4952e-03,  1.8790e-03,\n",
      "        -5.1320e-04,  5.7612e-03, -2.9170e-03,  3.6851e-03, -1.5971e-03,\n",
      "        -5.4971e-03, -3.2451e-03,  1.5380e-03,  4.8068e-03, -1.6843e-03,\n",
      "        -8.0905e-04,  4.1642e-03,  5.6023e-04,  4.0886e-03, -2.1201e-03,\n",
      "        -1.1678e-03, -3.8904e-03, -3.8024e-04,  6.5302e-04,  2.9792e-03,\n",
      "         3.0792e-03, -8.8019e-04, -4.1561e-03, -3.9668e-03,  6.2030e-03,\n",
      "        -1.0259e-03,  3.7275e-04,  2.5578e-03, -2.6006e-04,  6.7561e-04,\n",
      "        -3.7080e-04,  6.7278e-03, -5.7636e-03,  1.1171e-03,  6.6892e-03,\n",
      "         7.7504e-03,  3.0283e-03, -6.5301e-03,  4.8903e-03, -1.0794e-02,\n",
      "        -3.4955e-03, -2.1701e-04,  5.2439e-03, -7.1798e-04,  1.2747e-03,\n",
      "         8.2270e-03,  7.9140e-03, -1.6268e-03,  7.1490e-03, -2.7775e-03,\n",
      "         2.3305e-04, -7.9009e-04, -3.5463e-03, -7.5872e-03, -2.1097e-03,\n",
      "         3.1104e-03,  1.9608e-03, -8.4756e-05, -2.2219e-03, -6.1089e-03,\n",
      "         2.0103e-04, -4.2638e-03,  5.0218e-03,  1.6082e-03, -3.2012e-04,\n",
      "        -5.2073e-03, -3.3170e-03, -1.3268e-03, -8.7350e-03, -7.0401e-03,\n",
      "        -3.3849e-03,  6.6649e-04,  6.9732e-03, -6.2143e-04, -3.3782e-03,\n",
      "         2.9368e-03, -3.1540e-03,  5.3108e-03,  4.7544e-03,  5.7715e-03,\n",
      "         5.6837e-03, -2.7287e-04,  3.4354e-03, -9.6305e-03,  2.4560e-03,\n",
      "         6.3214e-03,  1.2797e-03, -1.3337e-03, -6.4547e-03, -2.1486e-03,\n",
      "         4.0844e-03,  8.1722e-03, -1.8246e-03,  6.6176e-04,  6.1277e-03,\n",
      "         4.7573e-03, -3.7548e-04, -1.5540e-04,  4.0620e-04, -1.9749e-03,\n",
      "         6.5622e-03, -3.3761e-03, -3.8068e-03,  5.6488e-03, -5.0462e-03,\n",
      "        -2.8901e-03,  7.3467e-04,  7.4825e-03,  5.2251e-03, -9.9295e-03,\n",
      "         4.0744e-03,  8.2189e-04,  1.5117e-03, -2.7035e-03, -3.3534e-03,\n",
      "        -1.3871e-03, -3.0572e-03,  3.5049e-03, -7.8494e-03,  1.0496e-02,\n",
      "         1.4631e-03, -3.7863e-03, -6.4067e-03,  7.0746e-03,  7.5582e-03,\n",
      "        -3.1593e-03, -6.7181e-03, -2.3166e-03,  3.5550e-03,  4.0474e-03,\n",
      "        -6.2935e-03, -1.9088e-03,  5.7040e-04, -3.6694e-03, -3.3622e-03,\n",
      "         7.3122e-03, -2.4163e-03], device='cuda:0')}, 54: {'momentum_buffer': tensor([[[[ 1.9489e-05, -3.6782e-05, -6.6770e-05],\n",
      "          [-5.0771e-05, -1.7709e-05, -1.4888e-04],\n",
      "          [ 5.9471e-05, -1.1039e-04, -4.4237e-04]],\n",
      "\n",
      "         [[ 7.0977e-05,  1.8798e-04,  8.1572e-05],\n",
      "          [ 2.2705e-04,  2.3253e-04,  3.7661e-04],\n",
      "          [ 3.0023e-05,  1.6595e-05,  1.7433e-04]],\n",
      "\n",
      "         [[ 7.5723e-05,  1.9696e-04, -1.6070e-04],\n",
      "          [ 1.4378e-05,  7.5332e-05,  8.8602e-05],\n",
      "          [ 7.4256e-05,  1.0189e-04,  1.5982e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-9.8519e-05, -6.0322e-04, -1.4853e-03],\n",
      "          [-1.2126e-04,  6.2079e-05,  9.6901e-05],\n",
      "          [-2.5965e-04, -2.4977e-04, -3.9201e-04]],\n",
      "\n",
      "         [[-1.7375e-04, -1.2790e-04, -3.0336e-05],\n",
      "          [-8.2573e-06, -9.1088e-06, -1.3888e-04],\n",
      "          [ 1.3930e-04,  1.4119e-04, -3.0936e-05]],\n",
      "\n",
      "         [[-3.4700e-04, -3.3600e-04, -7.3800e-05],\n",
      "          [ 8.4236e-05,  6.3173e-05, -1.2967e-04],\n",
      "          [ 3.2377e-04,  3.4969e-04,  1.5343e-04]]],\n",
      "\n",
      "\n",
      "        [[[-8.7065e-04,  2.9609e-04,  1.1115e-03],\n",
      "          [-2.5970e-04,  3.5266e-04,  9.1832e-04],\n",
      "          [-1.9425e-04, -3.2429e-04, -3.9721e-05]],\n",
      "\n",
      "         [[-8.4251e-05, -3.1285e-04, -1.6114e-04],\n",
      "          [-3.0458e-04, -7.4069e-04, -4.6334e-04],\n",
      "          [-2.0478e-04, -2.6453e-04, -1.5884e-04]],\n",
      "\n",
      "         [[-3.5162e-04,  2.6145e-04,  4.4489e-04],\n",
      "          [-3.0434e-04,  5.1518e-04,  1.2135e-04],\n",
      "          [-5.1477e-04, -3.1983e-05, -1.7550e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 9.4027e-05,  1.8157e-04,  5.8657e-04],\n",
      "          [-9.0513e-04, -7.0588e-04, -1.9025e-04],\n",
      "          [-9.3569e-04, -1.0749e-03, -1.1721e-03]],\n",
      "\n",
      "         [[ 2.9825e-05, -1.9836e-04,  8.7765e-05],\n",
      "          [-1.2709e-04, -2.4022e-04,  2.3870e-04],\n",
      "          [ 7.9080e-05, -5.8312e-05,  6.3930e-05]],\n",
      "\n",
      "         [[-5.4659e-04, -7.0600e-04, -9.3921e-04],\n",
      "          [ 4.1569e-04,  3.0095e-04, -3.9055e-04],\n",
      "          [ 1.3270e-03,  4.6958e-04,  7.4227e-05]]],\n",
      "\n",
      "\n",
      "        [[[-1.7988e-04,  6.3095e-05,  5.5600e-04],\n",
      "          [-3.1890e-05,  6.4216e-04,  1.0110e-03],\n",
      "          [-9.7318e-05,  5.9829e-04,  8.6902e-04]],\n",
      "\n",
      "         [[ 7.2064e-05, -1.6233e-04, -7.8350e-05],\n",
      "          [ 5.7523e-05, -1.4397e-04, -2.0828e-04],\n",
      "          [-2.5595e-04, -1.8207e-04, -5.5475e-04]],\n",
      "\n",
      "         [[ 1.7088e-04,  6.5514e-04,  9.6580e-04],\n",
      "          [ 2.5360e-05,  2.5651e-04,  5.0890e-04],\n",
      "          [ 2.7742e-05,  5.7465e-05,  1.5734e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2091e-03,  1.1482e-03,  6.9946e-04],\n",
      "          [ 7.1388e-04,  4.1367e-04, -1.4272e-04],\n",
      "          [-6.5308e-04,  3.5121e-05,  1.1355e-04]],\n",
      "\n",
      "         [[-6.3788e-05, -1.2752e-04,  5.8301e-05],\n",
      "          [-3.8885e-04, -6.9564e-04, -1.1218e-05],\n",
      "          [-8.8264e-05, -1.3964e-04,  9.7260e-05]],\n",
      "\n",
      "         [[-5.8548e-04, -2.2364e-04,  2.7440e-05],\n",
      "          [-8.4543e-04, -6.8538e-04, -4.3934e-04],\n",
      "          [-4.6396e-04, -9.7648e-04, -2.1910e-04]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[ 1.9818e-05, -7.9471e-05, -2.3033e-04],\n",
      "          [ 3.4393e-04,  6.2814e-04,  5.2796e-04],\n",
      "          [ 3.1771e-04,  4.0090e-04,  7.6188e-04]],\n",
      "\n",
      "         [[-2.3504e-04, -5.6042e-04,  3.3984e-04],\n",
      "          [-5.6560e-05,  1.9406e-05,  3.3121e-04],\n",
      "          [ 5.2987e-06, -1.2075e-04, -1.9246e-04]],\n",
      "\n",
      "         [[-1.0891e-04, -1.3173e-04,  3.7680e-05],\n",
      "          [ 1.0962e-04,  1.2295e-04,  1.6946e-04],\n",
      "          [ 1.0980e-05,  4.1814e-04,  5.8164e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.1860e-03, -4.2894e-04,  3.5188e-04],\n",
      "          [-5.9968e-04, -3.4405e-04,  3.7992e-04],\n",
      "          [-5.5849e-04,  3.0373e-04,  6.1097e-04]],\n",
      "\n",
      "         [[-4.2114e-04, -1.1819e-04,  5.7900e-05],\n",
      "          [-8.7568e-04, -9.6635e-04, -5.1111e-04],\n",
      "          [-7.3008e-04, -8.7219e-04, -3.5072e-04]],\n",
      "\n",
      "         [[-9.4895e-04, -8.1617e-04, -2.0086e-04],\n",
      "          [-7.4042e-05, -1.5305e-05,  4.3637e-04],\n",
      "          [ 4.0733e-04,  2.3042e-04,  8.3195e-04]]],\n",
      "\n",
      "\n",
      "        [[[-4.9020e-04, -2.1149e-04, -2.2542e-04],\n",
      "          [ 4.0490e-05,  1.1238e-04, -1.7236e-04],\n",
      "          [ 2.7413e-04,  2.7008e-04, -4.2030e-04]],\n",
      "\n",
      "         [[ 3.3536e-04,  2.5928e-04,  9.7977e-05],\n",
      "          [ 3.4949e-04,  1.3628e-04,  8.8041e-05],\n",
      "          [ 1.1726e-04,  9.5741e-05, -2.0261e-05]],\n",
      "\n",
      "         [[-2.1260e-05, -1.5262e-04, -2.6797e-04],\n",
      "          [ 2.6188e-04,  2.5298e-04,  1.5130e-04],\n",
      "          [ 1.3258e-05,  4.7327e-05,  1.4058e-05]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.9591e-04,  3.2795e-04, -1.4586e-04],\n",
      "          [-1.6108e-05, -8.2502e-04, -1.4878e-03],\n",
      "          [ 1.4069e-04, -3.5914e-04, -1.1995e-03]],\n",
      "\n",
      "         [[-2.2117e-04, -2.8492e-04, -9.3114e-05],\n",
      "          [ 3.0214e-05,  2.8574e-04,  7.7526e-05],\n",
      "          [ 3.5347e-05,  1.2246e-04,  8.9891e-05]],\n",
      "\n",
      "         [[ 1.9737e-05,  3.0545e-06, -8.1158e-05],\n",
      "          [-3.1867e-04, -5.1546e-04, -4.7713e-04],\n",
      "          [-2.2368e-04, -6.7418e-04, -1.1957e-03]]],\n",
      "\n",
      "\n",
      "        [[[-1.6740e-04, -2.0260e-04, -4.9281e-04],\n",
      "          [-5.6980e-04, -1.2782e-03, -1.9694e-03],\n",
      "          [-7.9397e-04, -5.6218e-04, -6.9993e-04]],\n",
      "\n",
      "         [[ 5.5697e-04,  4.4274e-04,  1.7508e-04],\n",
      "          [ 2.6886e-04, -1.6305e-04, -1.4548e-04],\n",
      "          [ 1.6428e-04,  6.7516e-05, -4.2906e-04]],\n",
      "\n",
      "         [[ 1.4752e-04, -5.4098e-04, -6.8728e-04],\n",
      "          [-1.3269e-04, -1.2156e-04,  1.8382e-04],\n",
      "          [-8.7117e-05, -5.4945e-04, -3.6244e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-6.4340e-04,  1.0937e-03,  3.1831e-04],\n",
      "          [ 5.2621e-04,  7.4893e-04, -6.5970e-04],\n",
      "          [-7.3462e-04, -5.9089e-04, -1.7208e-04]],\n",
      "\n",
      "         [[-3.1867e-04, -6.0541e-04, -5.7731e-04],\n",
      "          [ 2.7996e-04, -7.0064e-05, -3.2833e-04],\n",
      "          [ 1.9346e-04,  8.3909e-05, -7.0181e-04]],\n",
      "\n",
      "         [[-6.3453e-04, -1.9274e-04,  2.9449e-05],\n",
      "          [-3.0773e-04,  5.1839e-05,  1.5512e-03],\n",
      "          [-5.4771e-04, -2.4006e-04,  1.3270e-03]]]], device='cuda:0')}, 55: {'momentum_buffer': tensor([ 2.2066e-03,  1.1182e-02,  5.0587e-03,  2.7028e-03,  5.1875e-03,\n",
      "         5.2826e-03, -8.7430e-03, -3.2755e-02, -9.6533e-03, -2.2775e-03,\n",
      "        -2.5968e-03, -4.8285e-03, -1.0296e-02, -8.1515e-03, -2.5742e-03,\n",
      "         1.1810e-02,  6.9544e-03, -1.3124e-02,  6.1740e-03,  6.3168e-03,\n",
      "         1.2715e-02,  1.2605e-02,  3.9075e-03,  3.8166e-03,  2.8894e-03,\n",
      "         2.1112e-03,  1.5686e-02, -5.2346e-03,  7.4071e-03, -2.5678e-02,\n",
      "         8.3239e-03,  8.9213e-03,  1.2717e-02, -1.8895e-02, -2.4383e-02,\n",
      "         2.0004e-03, -3.7436e-03, -8.4388e-03,  1.5761e-03,  2.0187e-03,\n",
      "         3.5251e-03,  2.1344e-02, -1.0646e-02, -1.4255e-02,  1.6323e-02,\n",
      "        -7.8046e-03, -1.0753e-02,  2.8969e-03,  1.8144e-02,  4.8729e-03,\n",
      "         1.5211e-02, -2.3636e-02,  7.7096e-03, -6.4353e-03,  2.9446e-02,\n",
      "        -3.1221e-04,  4.9530e-03, -2.0457e-03,  4.2361e-03, -2.5176e-03,\n",
      "         1.4766e-06, -1.5409e-02,  1.7019e-03, -2.8395e-03,  4.7059e-04,\n",
      "         1.9749e-03, -2.3231e-03, -3.3927e-02, -1.2020e-02,  3.0440e-02,\n",
      "         1.0927e-02, -1.0017e-02, -1.5890e-02,  1.5396e-02, -8.6260e-04,\n",
      "        -1.0966e-03,  4.3643e-03,  5.1944e-03,  7.6882e-03, -4.3096e-03,\n",
      "         2.4268e-03,  3.2611e-03, -8.5421e-03, -7.2297e-03,  2.2980e-03,\n",
      "         5.6266e-03, -2.8208e-03, -5.8470e-04,  4.9994e-03,  3.6251e-03,\n",
      "        -1.2986e-02, -2.0722e-02, -1.7390e-02,  1.1598e-02, -1.8742e-03,\n",
      "        -8.4825e-03,  7.9864e-03, -1.8562e-02,  7.7042e-03,  9.3118e-03,\n",
      "        -1.5660e-03, -1.7508e-03, -4.9114e-03, -3.4007e-03, -6.4472e-03,\n",
      "        -2.6171e-02,  1.0861e-02, -1.1427e-02, -1.4008e-04,  5.2436e-03,\n",
      "        -2.5432e-02, -4.6371e-03, -1.4577e-02, -2.6249e-03,  2.8868e-03,\n",
      "        -2.1289e-02, -6.4196e-04,  9.3379e-03,  1.3895e-02,  3.5945e-05,\n",
      "         1.7553e-03, -4.9670e-03, -2.3451e-02,  1.5193e-02, -1.7883e-03,\n",
      "         8.4411e-03, -4.1882e-03, -6.1575e-03, -9.1894e-04,  2.8111e-04,\n",
      "        -1.5229e-03, -2.3739e-03, -1.8825e-02,  7.8894e-03,  1.3436e-02,\n",
      "        -5.9280e-03,  1.2389e-02, -8.9673e-03,  8.4992e-03,  1.1837e-02,\n",
      "         6.1449e-03,  1.0298e-02, -2.0672e-03, -3.8980e-02,  7.9720e-04,\n",
      "        -6.2574e-03,  1.1967e-02,  2.5723e-04, -2.3527e-02, -1.1810e-03,\n",
      "        -5.7711e-04,  5.4986e-03, -1.3643e-02, -2.5305e-03, -1.1750e-03,\n",
      "         5.3032e-03, -2.3069e-03, -1.3767e-02,  1.9547e-02, -8.8775e-04,\n",
      "         1.6061e-02,  3.1025e-03,  3.2848e-03,  1.4202e-03, -1.1715e-02,\n",
      "         1.6390e-02,  9.2373e-03,  4.1949e-04, -2.4629e-03, -1.4756e-02,\n",
      "        -6.3089e-04, -3.3516e-03,  5.0002e-04,  8.0328e-03, -5.6441e-03,\n",
      "        -9.3965e-03,  4.6678e-03, -4.7504e-03, -9.4606e-03,  1.2564e-03,\n",
      "         1.5320e-02,  2.2626e-02, -8.3390e-03,  3.7993e-03, -8.6736e-03,\n",
      "        -2.3048e-02, -1.1254e-02,  8.7329e-03, -8.0302e-03,  4.5344e-03,\n",
      "        -1.4273e-03, -1.7938e-02,  1.5745e-02, -4.9588e-04,  1.8389e-03,\n",
      "        -1.1864e-02, -6.0910e-09,  5.0755e-03,  8.8736e-03,  2.0026e-02,\n",
      "         7.4550e-03, -1.9826e-03,  9.3626e-03,  8.5054e-03,  4.5084e-03,\n",
      "         1.0505e-02, -2.2042e-03, -1.0725e-02,  1.2940e-03,  1.3058e-02,\n",
      "        -1.4264e-03, -1.6227e-02,  6.9288e-03,  1.4840e-03, -1.1648e-02,\n",
      "         8.9967e-03, -2.3709e-04,  4.0194e-03, -1.4621e-02,  1.3627e-04,\n",
      "         9.1075e-03, -1.2179e-02, -4.7732e-03,  1.0594e-02, -1.4751e-02,\n",
      "         7.7339e-03, -6.8705e-03,  5.0232e-03,  1.1871e-02, -2.3906e-04,\n",
      "        -1.4595e-02, -4.4461e-03, -8.1172e-03, -8.8832e-04, -2.5389e-03,\n",
      "        -5.2867e-03, -1.4491e-03, -5.4319e-04, -1.8570e-02, -1.4841e-02,\n",
      "         4.7674e-04,  5.1787e-03,  1.0693e-02, -6.9789e-03, -7.4577e-03,\n",
      "         2.1486e-02,  7.8596e-03,  6.0263e-03,  2.5691e-03,  3.7111e-03,\n",
      "        -9.6091e-03,  4.3246e-03, -1.1878e-04,  2.1271e-02, -1.0817e-02,\n",
      "        -1.6957e-03,  1.9578e-02,  3.1546e-03, -2.4255e-03, -4.3795e-03,\n",
      "         1.2598e-02,  1.3749e-02,  1.3390e-02,  6.8606e-03, -7.7549e-03,\n",
      "         1.8108e-02,  1.0776e-02,  9.7080e-03, -2.5294e-02,  3.6153e-03,\n",
      "         7.2891e-03,  1.2836e-03, -2.7674e-02,  2.0857e-03,  3.4978e-04,\n",
      "         1.6924e-02,  8.6470e-03, -3.5823e-03,  8.7374e-03, -1.2585e-02,\n",
      "         9.2944e-03,  8.1699e-03, -2.7355e-02, -4.1384e-02,  1.1215e-02,\n",
      "        -1.2254e-02,  1.2937e-02,  2.5399e-03, -4.3265e-03,  3.7627e-03,\n",
      "        -2.3313e-02, -2.3814e-03, -1.1430e-03, -2.5976e-03,  4.5338e-03,\n",
      "        -1.7050e-02,  3.3596e-02, -5.2503e-03, -5.9879e-03, -1.3129e-03,\n",
      "        -3.6687e-04, -2.2277e-02, -1.3268e-02,  1.7113e-02,  5.1181e-03,\n",
      "        -4.9413e-03,  1.1255e-04,  3.9396e-03, -1.6364e-03, -1.1483e-02,\n",
      "        -1.0545e-02, -3.8831e-02,  2.0459e-03, -3.2244e-04, -7.9352e-03,\n",
      "         1.0317e-02, -2.8879e-03, -1.6400e-02, -4.1355e-03, -4.8512e-03,\n",
      "         8.5869e-03, -3.0421e-03, -7.2796e-03,  1.8591e-03,  1.4325e-03,\n",
      "         1.3602e-02,  1.8813e-07,  6.1668e-04, -6.6605e-03,  1.2069e-02,\n",
      "         9.3546e-04,  1.2239e-02, -6.9246e-03, -2.0210e-02,  4.2260e-03,\n",
      "         1.3255e-03,  1.2107e-03,  8.8599e-03,  1.9103e-02,  2.1436e-02,\n",
      "        -7.2666e-03, -1.4896e-02,  1.0671e-02, -1.8386e-03, -5.7528e-03,\n",
      "        -3.1783e-03, -5.2019e-03, -5.8456e-04,  4.2190e-03,  8.0455e-03,\n",
      "        -7.1587e-03, -8.4464e-03,  2.7765e-02,  3.2259e-03, -1.8155e-03,\n",
      "        -1.1885e-03, -3.6849e-02,  3.0666e-02,  4.9292e-03,  1.3191e-02,\n",
      "        -2.2138e-02,  7.1266e-03, -1.5505e-02, -3.2774e-03, -4.2138e-03,\n",
      "         7.7762e-03,  3.4814e-03, -8.6838e-03,  1.2255e-02, -1.8309e-03,\n",
      "        -1.4152e-03,  7.2802e-03,  1.8087e-02, -4.4815e-03,  4.7368e-03,\n",
      "        -4.7314e-03,  1.1826e-02, -3.5811e-03, -3.1931e-03,  2.4500e-02,\n",
      "        -7.4741e-03,  5.0330e-03, -2.9972e-03,  3.0208e-03,  5.4201e-03,\n",
      "         5.3029e-03,  9.9504e-03,  2.2603e-02,  6.3213e-03, -8.8733e-03,\n",
      "        -1.4361e-02,  3.8448e-03, -5.7042e-03,  1.8862e-03, -2.3088e-02,\n",
      "        -1.0335e-02, -2.7278e-03, -8.4783e-03,  3.4664e-03, -5.4566e-03,\n",
      "        -2.0605e-03,  9.8749e-03, -3.8752e-03,  1.3756e-03,  1.1930e-02,\n",
      "         1.1592e-02,  5.3049e-03, -2.0370e-03,  1.3240e-03, -7.3472e-03,\n",
      "        -1.3358e-03,  1.5563e-03,  1.2298e-02, -1.5195e-02,  5.5768e-04,\n",
      "         4.2712e-03, -1.0783e-02, -2.1046e-03, -6.4437e-03,  3.2542e-02,\n",
      "         5.4978e-04, -7.0036e-03,  1.1802e-02,  4.1394e-03,  1.0796e-02,\n",
      "         4.7120e-03, -8.1841e-03, -1.6178e-02, -1.7424e-02,  2.9818e-03,\n",
      "         6.9886e-03,  2.2798e-03,  1.0119e-03,  3.8453e-03,  5.0048e-05,\n",
      "         5.8313e-03,  2.5502e-03,  7.7739e-04,  3.0105e-03,  5.6918e-03,\n",
      "         1.6260e-02,  8.4403e-04,  8.0948e-03, -1.1382e-02, -7.0814e-03,\n",
      "        -1.3604e-03,  1.9341e-02,  5.2914e-03,  5.0515e-03, -1.6460e-02,\n",
      "         1.5409e-02, -3.8993e-03, -1.7408e-03, -3.7683e-03, -3.0098e-02,\n",
      "        -2.2824e-03, -1.4660e-02,  9.1253e-04,  5.5111e-03,  2.4473e-03,\n",
      "        -9.4479e-03, -1.4170e-03, -1.0518e-02,  1.3826e-02, -4.4902e-03,\n",
      "         2.9519e-03,  2.7230e-03,  9.6426e-03, -1.1646e-03, -2.0278e-02,\n",
      "         8.0613e-03,  8.7412e-03, -1.0818e-02,  2.8628e-03,  7.4956e-03,\n",
      "         1.3852e-02, -7.0560e-03,  3.8233e-03,  2.6109e-03,  1.0611e-02,\n",
      "         7.1849e-03, -3.9692e-05, -3.6818e-03,  1.0798e-02,  5.3924e-02,\n",
      "        -1.2611e-02,  3.7315e-03, -7.0062e-04,  4.1901e-03, -1.1983e-03,\n",
      "        -3.8823e-03,  2.0041e-02, -1.2622e-02, -1.7189e-03, -1.2849e-03,\n",
      "        -2.1282e-02,  1.5235e-02, -1.4642e-02,  9.4555e-03, -1.0893e-02,\n",
      "         1.4934e-02,  1.1452e-02,  6.1119e-03,  3.7209e-03, -4.3725e-03,\n",
      "         1.9396e-03, -6.9849e-03,  3.7113e-03,  5.2541e-03, -8.3503e-03,\n",
      "         4.9356e-03,  9.2970e-03], device='cuda:0')}, 56: {'momentum_buffer': tensor([ 1.7600e-03,  4.3446e-03,  2.6602e-03,  8.5741e-04,  3.4605e-03,\n",
      "         3.0133e-04, -4.9867e-03, -1.2992e-02, -6.7328e-03, -6.1186e-04,\n",
      "        -3.8981e-03, -1.4722e-03, -5.3144e-03, -4.0218e-03, -1.7485e-03,\n",
      "         3.9472e-03,  2.8977e-03, -5.4224e-03,  3.7528e-03,  3.1562e-03,\n",
      "         6.4049e-03,  8.4815e-03,  2.0405e-03, -4.8135e-03, -2.1266e-03,\n",
      "         5.0055e-04,  5.1907e-03, -1.2840e-03,  2.6357e-03, -1.1397e-02,\n",
      "         3.5663e-03,  3.6277e-03,  7.6906e-03, -7.7308e-03, -1.0731e-02,\n",
      "         1.8647e-03, -1.1593e-03, -4.3477e-03,  1.6101e-03,  3.1631e-03,\n",
      "         1.9148e-03,  1.2031e-02, -6.7923e-03, -7.6960e-03,  7.1745e-03,\n",
      "        -3.3288e-03, -1.3228e-02,  7.8116e-04,  7.3316e-03,  9.8765e-04,\n",
      "         5.8911e-03, -1.3557e-02,  2.7228e-03, -2.9803e-03,  2.0311e-02,\n",
      "         1.9183e-04,  4.2396e-04, -1.4269e-03,  1.7000e-03, -2.4153e-03,\n",
      "         5.2670e-04, -9.4963e-03, -1.9953e-04, -2.0314e-04,  9.0426e-06,\n",
      "        -1.0400e-03, -8.8675e-04, -1.6819e-02, -7.8484e-03,  1.3487e-02,\n",
      "         5.6590e-03, -1.1109e-02, -8.9548e-03,  7.6884e-03, -1.8278e-05,\n",
      "        -1.6145e-03,  2.7119e-03,  3.6528e-03,  2.8505e-03, -1.1901e-03,\n",
      "         9.1539e-04,  2.7962e-03, -5.0724e-03, -3.7697e-03,  2.1178e-03,\n",
      "         1.0730e-03, -1.4119e-03, -6.5711e-04,  7.3974e-04,  1.6625e-03,\n",
      "        -7.1075e-03, -6.2970e-03, -7.1672e-03,  4.9872e-03, -2.3498e-04,\n",
      "        -4.3095e-03,  4.0977e-03, -1.0620e-02,  4.8564e-03,  6.0098e-03,\n",
      "         1.8861e-04, -3.6894e-04, -2.3480e-03, -2.4576e-03, -3.1827e-03,\n",
      "        -1.5394e-02,  6.5944e-03, -6.4448e-03,  2.3530e-03,  3.7144e-03,\n",
      "        -1.2499e-02, -3.0776e-03, -8.3516e-03, -1.7288e-03,  1.7598e-03,\n",
      "        -1.1074e-02, -6.1543e-04,  3.7245e-03,  6.2035e-03,  5.4608e-04,\n",
      "        -4.8943e-04,  1.8682e-03, -9.8638e-03,  6.5662e-03, -1.5601e-03,\n",
      "         5.2288e-03, -2.0182e-03, -2.8658e-03, -4.7560e-04, -1.5623e-03,\n",
      "        -9.6268e-04, -1.7570e-03, -7.6123e-03,  4.3822e-03,  7.3154e-03,\n",
      "        -2.1803e-03,  5.5015e-03, -3.7334e-03,  3.7455e-03,  5.5187e-03,\n",
      "         3.4718e-03,  5.1310e-03, -1.3230e-03, -2.0655e-02,  2.9279e-03,\n",
      "        -7.0440e-03,  8.5547e-03, -7.9641e-04, -1.2667e-02, -6.9433e-04,\n",
      "         1.4023e-03,  3.5974e-03, -5.7650e-03, -9.6620e-04, -1.4585e-03,\n",
      "         2.2035e-03, -8.5598e-04, -6.7511e-03,  1.0912e-02,  1.9914e-03,\n",
      "         8.5700e-03,  1.9067e-03,  1.2380e-03,  7.5988e-04, -4.5477e-03,\n",
      "         9.6534e-03,  6.4148e-03, -4.3752e-04, -1.8764e-03, -5.1691e-03,\n",
      "        -9.5583e-04, -1.4740e-03,  9.3783e-04,  3.8353e-03, -2.5930e-03,\n",
      "        -6.7713e-03, -5.8081e-04, -2.9146e-03, -1.3503e-03,  5.8143e-04,\n",
      "         7.9813e-03,  1.0036e-02, -4.8373e-03,  4.7854e-05, -4.4154e-03,\n",
      "        -1.3485e-02, -6.1708e-03,  5.2164e-03, -5.1409e-03,  9.1841e-04,\n",
      "        -2.6246e-04, -6.1888e-03,  7.8292e-03,  3.9289e-05,  2.3321e-03,\n",
      "        -5.3190e-03, -5.6276e-08,  2.9691e-03,  4.4287e-03,  9.3030e-03,\n",
      "         5.2518e-03, -1.5033e-03,  3.6927e-03,  2.8675e-03,  1.8112e-03,\n",
      "         5.3297e-03, -1.8287e-03, -4.3219e-03, -1.7971e-03,  5.1638e-03,\n",
      "        -1.9655e-03, -1.0324e-02,  3.0904e-03,  8.0211e-04, -4.2653e-03,\n",
      "         4.3429e-03,  4.0319e-05,  1.6155e-03, -6.8167e-03, -1.9254e-03,\n",
      "         3.0627e-03, -6.7999e-03, -1.9955e-03,  3.8369e-03, -6.1964e-03,\n",
      "         8.1336e-03, -3.7152e-03,  3.2535e-03,  5.5831e-03,  1.4344e-04,\n",
      "        -1.1367e-02, -1.2304e-03, -5.0882e-03,  8.8949e-04, -2.3271e-03,\n",
      "        -3.2980e-03, -1.7020e-04, -5.7815e-05, -7.5621e-03, -6.6152e-03,\n",
      "        -1.0079e-03,  1.0216e-03,  7.4317e-03, -1.4181e-03, -3.4164e-03,\n",
      "         9.1269e-03,  3.2860e-03,  3.7549e-03,  9.7275e-04,  7.8870e-04,\n",
      "        -6.3044e-03,  1.8076e-03, -3.1461e-04,  1.1045e-02, -2.1852e-03,\n",
      "        -9.3298e-04,  5.9960e-03,  1.5804e-03,  4.4917e-05, -3.7145e-03,\n",
      "         7.4295e-03,  6.8156e-03,  3.8069e-03,  3.5056e-03, -4.5909e-03,\n",
      "         9.5060e-03,  5.2068e-03,  4.7396e-03, -1.0353e-02,  2.2114e-03,\n",
      "         2.6413e-03,  1.5543e-03, -1.2828e-02,  2.4212e-03, -1.7875e-05,\n",
      "         8.9723e-03,  4.3994e-03, -1.3867e-03,  4.6575e-03, -6.4896e-03,\n",
      "         3.8304e-03,  5.7656e-03, -9.9991e-03, -1.7535e-02,  6.4978e-03,\n",
      "        -6.2246e-03,  8.6735e-03,  5.3505e-03, -2.5444e-03,  1.8359e-03,\n",
      "        -1.2695e-02, -6.8762e-04, -2.4978e-03, -1.5589e-03,  2.7790e-03,\n",
      "        -9.5680e-03,  1.3327e-02, -2.5052e-03, -2.8628e-03, -5.7912e-04,\n",
      "         1.8435e-03, -5.9476e-03, -6.1279e-03,  1.2761e-02,  4.1242e-03,\n",
      "        -4.2197e-03, -9.0332e-04, -8.2583e-04, -5.8648e-04, -4.4611e-03,\n",
      "        -5.3787e-03, -1.6477e-02,  2.4507e-03, -3.0811e-03, -4.8019e-03,\n",
      "         5.5625e-03, -2.3231e-03, -7.1905e-03, -4.0723e-03, -1.5002e-03,\n",
      "         4.6214e-03, -2.2870e-04, -4.9727e-03,  9.6567e-04,  8.4849e-04,\n",
      "         7.6255e-03, -6.9950e-07,  1.7611e-03, -3.9143e-03,  4.1903e-03,\n",
      "         1.9233e-03,  5.4008e-03, -2.2744e-03, -1.0203e-02,  1.7346e-03,\n",
      "         7.3251e-04,  1.8798e-03,  1.1058e-03,  7.1476e-03,  1.2979e-02,\n",
      "        -3.3444e-03, -6.7055e-03,  4.2050e-03, -9.9821e-04, -2.8170e-03,\n",
      "        -2.1519e-03, -2.2899e-03,  6.9596e-04,  1.8858e-03,  3.2230e-03,\n",
      "        -3.9296e-03, -4.3036e-03,  1.4494e-02,  2.7128e-03, -1.7455e-03,\n",
      "         2.7879e-04, -1.7844e-02,  1.5378e-02,  5.4703e-03,  7.7873e-03,\n",
      "        -1.1258e-02,  6.4018e-03, -6.6042e-03, -2.0286e-03, -2.5587e-03,\n",
      "         9.2738e-03,  2.1645e-03, -3.0804e-03,  6.8913e-03, -5.4454e-04,\n",
      "         1.9572e-04,  3.5976e-03,  8.6115e-03, -1.7800e-03,  2.6100e-03,\n",
      "        -1.4698e-03,  7.4547e-03, -3.0583e-03, -2.1925e-03,  1.3003e-02,\n",
      "        -4.2388e-03,  2.5558e-03, -3.1238e-03,  2.9864e-03,  1.0186e-03,\n",
      "         2.5750e-03,  7.1035e-03,  9.5062e-03,  2.3635e-03, -4.1955e-03,\n",
      "        -9.9688e-03,  1.7150e-03, -3.4999e-03,  2.2765e-03, -1.2439e-02,\n",
      "        -6.6670e-03, -4.9373e-04, -5.2129e-03,  1.1375e-03, -2.1989e-03,\n",
      "        -5.8293e-03,  6.9071e-03, -2.0566e-03,  1.5411e-03,  4.1823e-03,\n",
      "         5.1558e-03,  3.3531e-03, -9.6456e-04,  1.2692e-04,  5.5717e-04,\n",
      "        -5.3438e-04,  1.4300e-03,  5.0700e-03, -8.4630e-03,  9.6991e-04,\n",
      "         2.4941e-03, -5.2204e-03, -2.5352e-03, -2.9075e-03,  1.7186e-02,\n",
      "         7.4319e-04, -2.1244e-03,  6.9921e-03,  1.7753e-03,  3.6268e-03,\n",
      "         2.7568e-03, -2.5117e-03, -8.1456e-03, -1.0649e-02,  6.2935e-04,\n",
      "         3.2044e-03, -4.9474e-05,  1.9377e-05,  2.9836e-03,  1.8145e-04,\n",
      "         5.9270e-03,  1.1986e-03,  4.2792e-04,  1.3442e-03,  1.8151e-03,\n",
      "         5.0534e-03,  6.0640e-04,  4.5362e-03, -5.9434e-03, -4.0632e-03,\n",
      "        -7.0757e-04,  1.0539e-02,  2.7355e-03,  1.6392e-03, -6.5759e-03,\n",
      "         7.8120e-03, -1.2153e-03, -1.7906e-03, -2.4057e-03, -1.2774e-02,\n",
      "        -2.9225e-03, -8.8253e-03, -3.2440e-04,  3.0281e-03,  2.3413e-04,\n",
      "        -2.4960e-03, -1.8868e-03, -5.8114e-03,  8.9820e-03, -2.1486e-03,\n",
      "         5.4773e-03,  1.6320e-03,  6.2346e-03,  3.1371e-03, -9.5546e-03,\n",
      "         1.8883e-03,  2.0660e-03, -5.4014e-03,  2.2954e-03,  4.5283e-03,\n",
      "         7.3989e-03, -3.3005e-03,  1.4438e-03, -2.7997e-06,  4.9605e-03,\n",
      "         3.5903e-03, -1.1079e-03, -1.6476e-03,  5.3921e-03,  2.1564e-02,\n",
      "        -7.4678e-03, -1.3803e-04, -1.0821e-03,  3.5157e-03, -1.2728e-03,\n",
      "        -7.4236e-04,  6.7469e-03, -8.2472e-03, -4.0599e-04, -1.0859e-03,\n",
      "        -9.7553e-03,  1.0138e-02, -9.7305e-03,  3.4474e-03, -6.0090e-03,\n",
      "         7.8734e-03,  8.0591e-03,  4.1542e-03,  1.6124e-03, -2.1146e-03,\n",
      "         7.9251e-04, -3.5765e-03,  7.6368e-04,  3.3489e-03, -4.0731e-03,\n",
      "         4.3367e-03,  3.5877e-03], device='cuda:0')}, 57: {'momentum_buffer': tensor([[[[-7.3044e-06, -6.1808e-05, -1.3815e-04],\n",
      "          [ 6.9136e-06, -3.3139e-05, -5.0886e-05],\n",
      "          [-6.8707e-05, -8.1248e-05,  1.2236e-04]],\n",
      "\n",
      "         [[ 4.0673e-05, -2.3883e-04, -5.0074e-04],\n",
      "          [ 1.2305e-04, -2.4119e-04, -5.9855e-04],\n",
      "          [-4.1713e-06, -2.3402e-04, -4.7496e-04]],\n",
      "\n",
      "         [[ 6.0938e-04,  5.4064e-04,  8.4820e-04],\n",
      "          [ 5.8688e-04,  7.5352e-04,  9.1420e-04],\n",
      "          [ 6.8542e-04,  6.2643e-04,  7.7360e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.7572e-04, -1.7998e-04, -9.2182e-05],\n",
      "          [-1.3283e-04, -1.2321e-04, -4.8084e-07],\n",
      "          [-4.7470e-05, -1.8752e-04, -1.0279e-04]],\n",
      "\n",
      "         [[-6.4011e-05, -2.1116e-04, -2.7545e-04],\n",
      "          [-6.3206e-04, -6.7815e-04, -7.1740e-04],\n",
      "          [-9.7567e-05, -2.2485e-04, -3.1619e-04]],\n",
      "\n",
      "         [[-3.5711e-04, -3.3997e-04, -2.3931e-04],\n",
      "          [-7.0644e-04, -1.4930e-03, -1.3378e-03],\n",
      "          [-4.2619e-04, -6.6478e-04, -6.2855e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 4.4381e-05, -4.1341e-05,  6.9958e-05],\n",
      "          [-1.8136e-04, -1.7433e-04, -9.6347e-05],\n",
      "          [-2.0217e-04, -4.0933e-04, -2.1434e-04]],\n",
      "\n",
      "         [[ 4.7395e-04,  3.4933e-04, -1.0506e-05],\n",
      "          [ 3.2949e-05,  1.0288e-04,  1.1654e-04],\n",
      "          [-1.1975e-04, -3.3087e-05,  3.2625e-05]],\n",
      "\n",
      "         [[-1.4337e-03, -1.5310e-03, -1.6010e-03],\n",
      "          [-9.9946e-04, -1.0261e-03, -1.1594e-03],\n",
      "          [-5.2108e-04, -6.3614e-04, -1.0627e-03]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.9140e-04, -2.8983e-04,  8.9805e-06],\n",
      "          [-2.1826e-04, -1.9751e-04, -3.1020e-04],\n",
      "          [-8.9102e-05, -1.8716e-04, -2.0989e-04]],\n",
      "\n",
      "         [[ 2.4399e-04,  2.8208e-04,  4.7253e-04],\n",
      "          [ 3.3313e-04,  4.4724e-04,  5.2073e-04],\n",
      "          [ 5.4858e-04,  6.1850e-04,  8.2868e-04]],\n",
      "\n",
      "         [[-5.4427e-04, -4.0150e-04, -3.9460e-04],\n",
      "          [-2.1782e-04, -2.2543e-04, -1.1174e-04],\n",
      "          [ 1.4580e-04,  3.0106e-05, -1.8631e-04]]],\n",
      "\n",
      "\n",
      "        [[[ 2.2562e-05,  3.6165e-05,  2.6348e-06],\n",
      "          [-2.8165e-05,  1.5769e-05,  1.3846e-04],\n",
      "          [ 1.6920e-04,  1.7021e-04, -4.1016e-05]],\n",
      "\n",
      "         [[ 2.2693e-05, -1.4283e-04, -1.9034e-04],\n",
      "          [-2.8715e-04, -5.0153e-04, -4.0237e-04],\n",
      "          [-2.9025e-05, -1.1721e-05, -1.9981e-04]],\n",
      "\n",
      "         [[-2.8088e-05,  1.6425e-05, -5.3139e-05],\n",
      "          [-1.5632e-04, -5.0456e-05, -4.9987e-05],\n",
      "          [-2.2932e-04,  4.1496e-05, -9.0733e-06]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[ 1.2656e-04,  1.6817e-04, -1.1545e-04],\n",
      "          [-7.5648e-04, -4.2114e-04, -2.2026e-04],\n",
      "          [-2.5547e-05,  1.7049e-04,  4.0352e-04]],\n",
      "\n",
      "         [[-7.6945e-05,  1.3900e-04,  6.8512e-05],\n",
      "          [-1.5289e-04,  6.5886e-06, -1.8994e-05],\n",
      "          [-2.4176e-06, -1.3564e-05, -1.5991e-05]],\n",
      "\n",
      "         [[ 5.4992e-05,  5.7970e-05,  5.6062e-05],\n",
      "          [ 4.0270e-07, -1.0877e-04, -1.5175e-04],\n",
      "          [-2.6667e-04,  3.4191e-05, -4.5076e-06]]],\n",
      "\n",
      "\n",
      "        ...,\n",
      "\n",
      "\n",
      "        [[[-3.5608e-06, -3.3769e-06, -4.1531e-06],\n",
      "          [-4.4141e-06, -8.8324e-06, -3.7419e-06],\n",
      "          [-1.1090e-05, -7.4069e-06, -5.4545e-06]],\n",
      "\n",
      "         [[ 1.1255e-05, -2.4303e-05, -1.6140e-04],\n",
      "          [-1.2496e-05, -9.2561e-05, -3.5773e-04],\n",
      "          [-4.4755e-06, -2.6229e-05, -7.2589e-05]],\n",
      "\n",
      "         [[ 1.6293e-05, -7.9029e-06, -9.3279e-06],\n",
      "          [ 1.2651e-05,  7.1710e-06,  9.8737e-06],\n",
      "          [ 4.9355e-06,  4.6063e-06,  6.8664e-06]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-2.7573e-05, -5.8120e-05, -3.9713e-05],\n",
      "          [-2.8902e-05, -4.6571e-05, -5.0975e-05],\n",
      "          [-1.3265e-05, -3.2085e-05, -1.1725e-05]],\n",
      "\n",
      "         [[-4.8989e-05, -3.8405e-05, -1.4868e-06],\n",
      "          [-3.8245e-05, -5.9199e-05, -1.2168e-05],\n",
      "          [-3.2941e-05, -4.3991e-05, -1.4143e-05]],\n",
      "\n",
      "         [[-6.4831e-05, -5.7872e-05, -1.4960e-05],\n",
      "          [-4.5016e-05, -3.8404e-05,  1.5611e-05],\n",
      "          [-1.0030e-05,  5.8613e-05,  3.0170e-05]]],\n",
      "\n",
      "\n",
      "        [[[-1.5198e-04, -3.3566e-04, -3.5214e-04],\n",
      "          [-1.2831e-04, -1.0232e-04, -1.9858e-05],\n",
      "          [-3.7381e-05,  1.2354e-05, -7.9421e-06]],\n",
      "\n",
      "         [[-4.9920e-04, -6.2101e-04, -9.6691e-04],\n",
      "          [-4.9165e-04, -1.1390e-03, -6.6321e-04],\n",
      "          [-3.9975e-04, -6.5588e-04, -6.2662e-04]],\n",
      "\n",
      "         [[ 6.6765e-04,  1.6546e-04,  4.1111e-04],\n",
      "          [ 4.9064e-04,  4.2874e-05,  1.2490e-04],\n",
      "          [ 6.4255e-04,  6.0753e-04,  3.6440e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-4.9847e-04, -3.0279e-04, -1.6889e-04],\n",
      "          [-9.1827e-05,  6.6350e-05,  1.9113e-05],\n",
      "          [-2.4090e-04, -1.4850e-05, -3.1920e-04]],\n",
      "\n",
      "         [[-2.3042e-04, -5.9514e-04, -6.1312e-04],\n",
      "          [-1.6052e-03, -9.9034e-04, -4.7997e-04],\n",
      "          [-9.8331e-05,  4.3910e-05,  2.7941e-04]],\n",
      "\n",
      "         [[ 6.4407e-04,  1.3227e-03, -3.3384e-04],\n",
      "          [-2.0770e-03, -2.0411e-03, -6.5364e-04],\n",
      "          [-1.5180e-03, -1.3506e-03, -1.7908e-03]]],\n",
      "\n",
      "\n",
      "        [[[-3.2832e-04, -1.3295e-04, -1.8666e-04],\n",
      "          [-2.9477e-04, -1.3616e-04, -1.4147e-04],\n",
      "          [-1.5035e-04, -4.3322e-05,  3.7494e-05]],\n",
      "\n",
      "         [[ 3.3797e-05,  4.8148e-05,  8.8240e-04],\n",
      "          [ 1.2896e-05,  2.1642e-04,  7.4144e-05],\n",
      "          [ 3.6935e-04,  6.4050e-04,  6.2149e-04]],\n",
      "\n",
      "         [[-3.2000e-04, -7.3675e-04, -1.3127e-03],\n",
      "          [-9.4961e-04, -5.5384e-04, -1.0180e-03],\n",
      "          [-7.1530e-04, -2.9929e-04, -2.0727e-04]],\n",
      "\n",
      "         ...,\n",
      "\n",
      "         [[-1.0298e-04, -1.7574e-04, -3.6052e-04],\n",
      "          [-7.6043e-05, -1.5393e-04, -1.1376e-04],\n",
      "          [ 3.4615e-04,  7.9388e-04,  6.0436e-04]],\n",
      "\n",
      "         [[-3.4017e-04, -3.3311e-04, -3.9479e-04],\n",
      "          [-3.3819e-04, -3.3095e-04, -3.0268e-04],\n",
      "          [-3.5545e-04, -3.3999e-04, -3.4563e-04]],\n",
      "\n",
      "         [[ 2.3475e-04, -1.1863e-04, -6.0354e-05],\n",
      "          [ 7.7725e-04,  6.5191e-04,  2.1274e-04],\n",
      "          [-3.2916e-05,  8.9710e-04,  3.9453e-04]]]], device='cuda:0')}, 58: {'momentum_buffer': tensor([-1.0730e-04, -4.9153e-04, -1.1323e-04,  3.9846e-05,  4.0170e-05,\n",
      "        -1.5155e-03, -1.0114e-04,  4.8830e-04,  5.6774e-04,  1.1509e-03,\n",
      "        -9.6811e-05, -1.6747e-04, -1.3078e-04, -5.5704e-04, -1.5805e-04,\n",
      "        -6.7868e-04,  1.7522e-04, -1.8439e-04, -1.0306e-03,  3.4849e-03,\n",
      "         1.0873e-04,  6.0793e-05, -1.9747e-04,  2.7263e-04, -1.3107e-04,\n",
      "        -1.9868e-04, -5.0415e-04, -1.5171e-04, -2.1051e-03, -2.8242e-04,\n",
      "         9.0195e-04,  1.3017e-05, -2.1153e-03,  8.0063e-04,  7.8573e-04,\n",
      "        -1.3314e-04,  6.5165e-04,  1.6771e-04,  4.2969e-04,  1.0056e-03,\n",
      "         1.5397e-03,  1.3366e-03,  4.7658e-04, -1.7207e-04,  1.6597e-03,\n",
      "         6.6993e-04,  1.0084e-03, -2.5382e-03,  6.4411e-05, -3.6037e-04,\n",
      "         2.4966e-04, -2.3779e-04,  1.1785e-03,  8.1909e-04,  9.4448e-04,\n",
      "         2.7050e-04,  2.4374e-03, -2.4899e-04, -4.5684e-04, -1.9190e-05,\n",
      "         2.0082e-04,  1.5449e-03, -4.8969e-04, -9.7800e-04,  3.8158e-04,\n",
      "        -2.3068e-04,  1.5125e-04, -5.0549e-05,  4.6078e-04, -3.9244e-04,\n",
      "         9.2336e-04, -2.5388e-04, -5.6733e-04,  3.2252e-04, -3.6317e-04,\n",
      "         9.7218e-04, -3.5836e-05, -2.4532e-04,  2.4446e-04, -1.6238e-04,\n",
      "         3.3186e-04,  2.7581e-04, -5.2564e-05,  8.2792e-04,  7.1522e-04,\n",
      "        -1.9407e-06,  1.6723e-04, -3.0852e-04,  7.5594e-05, -7.1689e-04,\n",
      "         2.9305e-05,  5.1462e-04, -1.6539e-04,  9.9034e-04,  6.6121e-04,\n",
      "         2.3850e-04,  2.8321e-04,  4.7173e-04, -1.4116e-04,  2.0529e-03,\n",
      "         3.2613e-05,  1.1598e-03, -3.6087e-04,  1.4997e-04,  2.4171e-03,\n",
      "         4.7051e-04,  1.4656e-03,  4.5596e-04,  1.4517e-04, -2.7467e-04,\n",
      "        -2.8793e-04, -1.7038e-03,  3.5767e-04, -1.8211e-04, -2.3154e-04,\n",
      "        -5.1070e-04, -8.5641e-04, -1.1905e-03,  7.2949e-04, -1.4307e-03,\n",
      "         4.2865e-05,  1.3332e-04, -3.0499e-05,  4.9014e-04,  6.6634e-04,\n",
      "         3.8166e-04,  5.7612e-05,  7.2754e-06, -1.0760e-03, -3.9551e-04,\n",
      "        -5.2537e-04, -7.1004e-05, -2.5516e-03,  1.1629e-03,  1.0495e-03,\n",
      "        -4.9022e-04, -8.1888e-04,  2.7468e-04, -2.1054e-04,  1.5173e-04,\n",
      "         3.1075e-04,  4.7350e-04, -1.2806e-05, -2.0294e-04,  2.2338e-04,\n",
      "         3.6009e-05,  1.1281e-03, -3.9123e-04, -2.7500e-04, -1.6794e-04,\n",
      "        -2.2289e-04,  1.0077e-03,  7.0732e-04,  3.8409e-04,  6.0219e-04,\n",
      "         4.2821e-04,  9.3806e-04, -2.6540e-04,  5.7417e-05, -1.4984e-04,\n",
      "         3.8473e-04,  2.0883e-03, -1.9526e-04,  3.3200e-04,  1.4744e-04,\n",
      "         2.2511e-04, -1.9707e-03,  3.6743e-04,  7.2843e-04,  3.8428e-04,\n",
      "        -3.9481e-04,  1.9199e-07, -1.2171e-03,  8.8071e-04,  5.2338e-04,\n",
      "         3.4870e-04, -3.7121e-04, -1.2570e-03,  6.6805e-04, -6.5449e-04,\n",
      "        -5.8988e-04,  7.9447e-04,  2.2729e-03,  4.8936e-04, -4.3669e-04,\n",
      "        -2.2051e-03,  1.0860e-04,  3.8396e-04,  1.0087e-03,  2.2247e-04,\n",
      "         3.4146e-04,  2.9333e-04, -6.4909e-04, -1.3849e-03,  1.7991e-03,\n",
      "         8.9728e-04, -2.4498e-05,  1.8228e-03,  3.8879e-04,  4.4849e-04,\n",
      "        -1.0453e-03,  5.8225e-04,  2.3352e-05,  9.1210e-04,  1.4318e-03,\n",
      "         1.1264e-04, -1.1801e-04, -8.0639e-04,  7.6029e-04,  9.2733e-05,\n",
      "        -2.8423e-04, -1.5388e-04,  3.9890e-04,  1.5693e-05,  2.7032e-04,\n",
      "         2.7005e-04, -1.2736e-04, -7.0943e-04, -7.3967e-04,  6.4237e-04,\n",
      "         4.5675e-04, -4.9071e-04,  1.7473e-03, -1.9470e-04,  7.5436e-04,\n",
      "         8.0678e-04,  8.2980e-04,  4.3928e-04, -9.9607e-04,  1.7521e-04,\n",
      "        -1.4986e-04,  4.4979e-05,  1.3632e-03,  2.3339e-04,  1.0872e-03,\n",
      "         2.9245e-04,  6.9802e-04, -9.8570e-05, -2.5949e-04,  3.2097e-04,\n",
      "        -7.1987e-06, -1.1772e-04,  8.1117e-04, -4.1107e-04,  1.0727e-04,\n",
      "         7.3691e-05,  1.5477e-03, -8.0963e-04,  8.5989e-05, -8.7712e-04,\n",
      "         6.3383e-04,  1.6311e-05, -6.2257e-04,  4.2790e-04, -1.5209e-03,\n",
      "        -3.2489e-03, -1.3978e-04, -3.4762e-04, -2.2684e-03, -4.4701e-04,\n",
      "        -2.2382e-04, -2.7824e-04,  3.1464e-05, -5.8017e-04,  5.3631e-04,\n",
      "         1.9192e-03,  1.5132e-04,  1.7781e-04, -4.5814e-04, -1.1802e-03,\n",
      "        -4.4041e-04, -1.7686e-03, -1.7215e-04, -5.5467e-04,  4.8867e-04,\n",
      "        -3.0680e-04, -1.7064e-03,  2.9242e-04, -8.9698e-05, -7.9023e-04,\n",
      "         7.4877e-04, -1.1500e-03,  3.6287e-04, -2.9828e-04,  1.8524e-04,\n",
      "        -2.8201e-04,  6.3219e-06,  8.8360e-05,  1.7043e-03,  2.3044e-04,\n",
      "        -4.7899e-06,  6.3895e-04, -1.9650e-04,  1.1351e-03, -5.0540e-05,\n",
      "        -5.6641e-04,  1.1032e-03,  2.5543e-04,  3.0920e-04,  1.9523e-03,\n",
      "         1.9547e-04,  8.7962e-05,  2.9073e-03,  9.3969e-04,  3.2217e-04,\n",
      "        -4.6177e-05, -6.4474e-04, -1.7540e-04, -1.6292e-04,  2.8165e-04,\n",
      "        -2.4930e-03, -7.4071e-04, -3.9223e-04,  6.6545e-04,  2.8367e-03,\n",
      "         1.3933e-03,  6.3267e-04,  1.2020e-04, -1.3753e-04,  2.8101e-03,\n",
      "         1.7172e-06,  3.9052e-04, -7.6636e-04,  2.9139e-05,  5.8769e-04,\n",
      "         4.6035e-05,  1.2311e-03,  1.2644e-03,  6.0935e-04,  4.6094e-04,\n",
      "        -8.4711e-04, -4.3089e-04, -1.4604e-03, -4.6556e-04, -4.1858e-05,\n",
      "         1.0329e-03, -2.4052e-05, -2.5658e-04, -6.5206e-04,  1.7165e-03,\n",
      "         4.9155e-04,  9.9174e-04,  1.6637e-03,  4.4763e-04,  2.6202e-03,\n",
      "         1.1047e-03,  6.7730e-04, -1.0429e-03,  2.9181e-05,  1.7966e-04,\n",
      "         9.0681e-06,  1.2785e-04,  2.3810e-04, -2.1192e-03, -7.8265e-04,\n",
      "         9.0923e-05,  7.7077e-04, -2.3321e-04, -7.9243e-04,  5.9448e-04,\n",
      "        -1.7063e-03, -3.0503e-04, -6.0631e-04,  1.7471e-03,  4.6663e-04,\n",
      "         1.4621e-03,  4.0565e-04, -4.1337e-05,  4.8457e-04,  2.1846e-03,\n",
      "         1.0855e-04, -5.0434e-04, -1.1874e-03, -3.2978e-04, -8.3547e-05,\n",
      "        -4.0781e-04, -3.2709e-04, -5.8451e-06, -1.1660e-03, -5.0645e-04,\n",
      "         3.9549e-04,  4.4947e-05,  1.7295e-03,  1.2340e-03, -1.4227e-03,\n",
      "        -1.6380e-05, -1.9962e-04, -5.2130e-04, -9.0857e-04,  1.3361e-03,\n",
      "         1.1033e-04,  2.5317e-03,  6.3281e-04, -4.6620e-04, -1.0840e-04,\n",
      "         2.1280e-03, -3.3203e-04,  2.2482e-03,  2.9294e-04,  8.6307e-04,\n",
      "        -1.7894e-03,  9.9160e-04,  5.5522e-04,  4.2485e-04,  3.2762e-04,\n",
      "         2.5596e-03, -7.1331e-04, -3.6730e-05,  1.8410e-03, -3.6937e-04,\n",
      "        -1.4932e-03,  2.7489e-03, -4.8877e-04, -9.7371e-05,  3.4444e-04,\n",
      "         1.7811e-04, -3.5708e-04, -1.1003e-03, -4.0577e-04,  8.0669e-04,\n",
      "         1.1142e-04,  2.3415e-04,  3.1041e-04, -1.4189e-03,  5.1507e-04,\n",
      "        -1.0982e-03, -4.3335e-04, -5.7285e-04,  7.9523e-04,  4.3400e-04,\n",
      "        -1.9852e-04, -6.7249e-04,  3.7278e-04,  2.6914e-04,  1.8990e-04,\n",
      "         3.6535e-04,  2.7139e-04, -2.4994e-04,  2.5152e-04, -9.6190e-04,\n",
      "         1.2350e-04,  1.0908e-03, -5.9649e-04,  7.0876e-04, -6.6110e-04,\n",
      "         5.3020e-04,  1.0667e-04,  2.3973e-03,  1.3157e-04,  1.4767e-04,\n",
      "         6.9127e-04,  2.7900e-04, -4.4134e-03,  3.3842e-04, -2.0260e-04,\n",
      "         2.1246e-04,  8.4542e-05,  1.8208e-04,  8.7841e-05, -3.4699e-04,\n",
      "        -9.1153e-04,  1.1766e-04,  4.8029e-04,  5.5264e-04,  4.2103e-04,\n",
      "        -9.3483e-05,  1.8250e-03,  6.6630e-04, -7.8478e-04,  8.9779e-04,\n",
      "         6.5842e-04, -7.5756e-04, -1.1379e-03, -3.6288e-04,  1.0632e-03,\n",
      "         7.1092e-04, -9.4557e-05, -1.0097e-03, -1.8472e-04,  1.2228e-03,\n",
      "         9.9603e-04, -2.8402e-04, -2.3597e-04, -8.9938e-05,  4.4113e-04,\n",
      "         5.6064e-04,  2.7590e-03, -2.5077e-04, -7.0283e-04,  7.1845e-04,\n",
      "        -4.5666e-04,  3.7633e-04,  2.7965e-04, -2.0726e-04, -7.5796e-06,\n",
      "        -4.6883e-04, -7.9951e-04, -8.2441e-05,  2.8495e-04, -2.1360e-04,\n",
      "        -9.3092e-04, -5.2518e-04,  4.3598e-04,  6.3788e-04,  3.0785e-04,\n",
      "         3.8881e-04,  2.2928e-04, -6.4594e-04, -1.6711e-03, -7.5560e-05,\n",
      "         3.0697e-04, -1.9026e-03], device='cuda:0')}, 59: {'momentum_buffer': tensor([ 2.5191e-03, -8.4036e-04,  1.4550e-04,  4.6273e-05,  2.1354e-04,\n",
      "        -1.2130e-03,  1.1119e-04,  1.1788e-04,  2.8465e-04,  1.3862e-03,\n",
      "        -8.1975e-04, -1.5622e-03, -1.7482e-04, -2.9722e-03, -2.4180e-05,\n",
      "        -4.0614e-04, -3.7376e-05, -2.9219e-04, -1.2975e-03,  3.6616e-03,\n",
      "         6.5844e-04,  1.1251e-03, -3.6437e-04,  1.7437e-04,  4.3839e-04,\n",
      "        -1.3485e-04, -1.2664e-04, -8.0615e-05, -3.0785e-03, -1.2122e-03,\n",
      "         5.8358e-04, -1.7332e-04, -2.5629e-03,  2.2592e-03,  1.1769e-03,\n",
      "        -3.7311e-05,  1.0378e-03,  2.7679e-04,  3.7549e-04,  1.8418e-03,\n",
      "         9.3918e-04,  1.5704e-03,  3.3693e-04,  1.9156e-04,  7.0759e-04,\n",
      "        -4.4793e-05,  3.2198e-03, -5.0517e-04,  7.8553e-06, -5.1760e-04,\n",
      "         2.6171e-04,  2.8388e-04,  1.0286e-03,  3.6833e-04,  1.6652e-03,\n",
      "        -1.5787e-04,  4.4879e-03,  1.3148e-03, -7.8051e-04, -3.9745e-05,\n",
      "        -5.2738e-04,  1.4501e-04, -7.7225e-04, -2.3521e-03,  1.0083e-03,\n",
      "         3.6234e-04, -2.2959e-03, -1.5124e-04,  1.8645e-04, -3.0254e-04,\n",
      "         1.6091e-03, -5.1924e-05, -9.8791e-04,  6.2588e-04, -6.9118e-04,\n",
      "         1.5747e-03, -2.3800e-04, -3.4506e-04, -7.2645e-06, -5.3196e-04,\n",
      "         7.1208e-04, -4.1687e-04,  3.0530e-05,  4.2006e-04,  2.0036e-03,\n",
      "         1.1887e-05,  3.9176e-04, -2.9010e-04,  8.6226e-05, -2.7288e-04,\n",
      "         1.7693e-05,  2.9368e-04, -1.0660e-03,  1.4777e-03,  2.6147e-04,\n",
      "         1.0693e-03, -9.4627e-05,  2.6082e-04,  1.2316e-05,  5.1699e-04,\n",
      "         2.3281e-05,  1.6708e-03, -6.9515e-05,  1.3787e-04,  3.7468e-03,\n",
      "         9.2726e-05,  4.6151e-03, -5.2348e-05, -1.6845e-04, -1.2527e-04,\n",
      "        -1.1788e-04, -6.6832e-04,  1.6403e-04,  1.3839e-04, -5.5841e-04,\n",
      "        -3.5130e-04, -1.1772e-03, -1.5100e-03,  2.6750e-04, -3.5048e-04,\n",
      "         4.6357e-05,  3.6725e-04, -5.0398e-04,  1.6642e-04, -2.7171e-04,\n",
      "         3.5545e-03,  3.7070e-04, -2.3496e-04, -1.4975e-03,  1.8450e-04,\n",
      "        -2.2691e-03, -1.1440e-04, -1.3560e-03,  2.3320e-03, -4.7084e-04,\n",
      "        -1.7425e-04, -6.1368e-04,  8.6832e-04,  3.7115e-04, -2.0209e-05,\n",
      "         2.1648e-04,  2.4094e-04,  3.4542e-04, -6.7456e-04,  7.3059e-05,\n",
      "         2.7809e-04,  3.1201e-03,  4.7181e-05, -1.1221e-03, -9.9823e-04,\n",
      "        -3.9186e-04,  2.4313e-03,  1.6966e-03,  1.8003e-04,  1.5014e-03,\n",
      "         1.6813e-04,  2.4596e-04, -1.9612e-05, -3.4387e-05,  2.8712e-05,\n",
      "         4.8760e-07,  1.1002e-03, -2.0374e-04,  1.5721e-04,  1.7007e-04,\n",
      "         6.6013e-05, -3.3319e-03,  4.8733e-04,  1.4613e-03, -8.3681e-05,\n",
      "        -5.2291e-05, -5.3680e-05, -1.5183e-04,  2.2466e-03,  2.8690e-04,\n",
      "         8.7349e-04, -3.8291e-04, -1.4868e-03, -9.8378e-05, -5.6033e-04,\n",
      "        -3.0543e-04,  5.3824e-04,  3.3777e-04,  5.2397e-03, -1.6819e-03,\n",
      "        -1.6916e-03,  1.8111e-04,  4.1968e-04,  2.8426e-03,  4.4141e-04,\n",
      "         1.0994e-03, -1.9146e-04, -8.0329e-04, -4.1631e-03, -6.6417e-04,\n",
      "         2.0876e-03, -7.6660e-05,  1.6562e-03,  2.6678e-03,  3.9883e-04,\n",
      "        -1.7811e-03,  1.2971e-03, -2.6027e-05,  2.0741e-03,  7.2397e-04,\n",
      "         1.2881e-03, -5.8371e-05, -1.1470e-03,  1.3011e-03,  9.2725e-05,\n",
      "        -4.6646e-04, -6.8729e-05, -1.9237e-04,  1.2032e-03,  1.8969e-04,\n",
      "         5.5284e-05, -4.0316e-05, -1.4178e-03, -6.8973e-04, -4.5651e-04,\n",
      "         1.1938e-04, -3.6979e-05,  3.9338e-03, -3.0508e-05,  6.4252e-04,\n",
      "         1.9305e-03, -1.8619e-04,  1.5134e-04, -1.6600e-03,  3.0959e-04,\n",
      "        -1.3501e-03, -4.3642e-05,  1.7213e-03,  2.2829e-04, -5.1504e-05,\n",
      "         7.5960e-05,  2.2940e-03,  7.0233e-04, -8.6969e-04, -7.8353e-04,\n",
      "         1.0060e-03, -3.9801e-04,  2.0599e-04, -5.6002e-04, -7.8883e-04,\n",
      "         5.6360e-04,  1.1393e-04, -1.8346e-04,  2.9264e-04, -8.4538e-04,\n",
      "         2.4933e-03,  1.0587e-04,  2.9166e-05,  1.4685e-03, -2.3420e-03,\n",
      "        -5.1349e-03, -1.8472e-04, -2.4692e-06, -1.9783e-03,  6.4384e-05,\n",
      "        -2.1111e-03, -3.9488e-04, -3.2388e-05, -1.6904e-03,  4.8200e-04,\n",
      "         1.5888e-03, -1.6122e-04,  6.0433e-04, -1.5342e-03, -2.6393e-03,\n",
      "        -4.9249e-04, -1.3276e-03,  8.2438e-05, -1.1513e-04,  3.4377e-04,\n",
      "         8.1245e-04, -3.7985e-03,  5.0869e-05, -4.2531e-04,  2.9941e-05,\n",
      "         1.9665e-03, -1.7980e-04,  4.4125e-04,  1.6765e-04, -2.0072e-04,\n",
      "        -1.5548e-04, -7.6321e-05, -1.5243e-03, -3.2363e-04, -3.9516e-04,\n",
      "        -5.7084e-05,  5.8850e-04, -5.1252e-05,  9.0080e-04, -9.3577e-05,\n",
      "        -1.1683e-03,  1.4640e-03, -2.8369e-04, -5.3305e-05,  3.6692e-03,\n",
      "         1.3704e-03, -7.4022e-05,  1.6372e-03,  1.0610e-03,  5.6970e-04,\n",
      "        -3.0213e-05, -7.2390e-04, -6.3534e-05, -1.3826e-04,  1.4099e-03,\n",
      "        -4.1462e-03, -3.2823e-03, -4.6008e-04,  2.2684e-04,  3.1580e-03,\n",
      "         2.0519e-03, -4.7905e-05,  5.7432e-04, -1.3243e-04,  2.4859e-03,\n",
      "        -2.9818e-05,  2.5408e-04, -3.1213e-04, -2.2355e-04,  3.7675e-04,\n",
      "         4.0933e-05,  1.3959e-04,  4.0501e-03,  1.7320e-04,  1.2135e-03,\n",
      "        -2.6790e-03, -1.3158e-03, -3.0841e-04, -2.9862e-04, -4.9176e-05,\n",
      "         1.3604e-03,  1.4311e-04, -1.2694e-03, -6.5648e-04,  1.6807e-03,\n",
      "         1.7242e-03,  1.9302e-03,  2.8160e-03, -1.3511e-04,  2.2347e-03,\n",
      "         1.1389e-03,  9.3972e-04, -3.5448e-04,  2.5756e-04,  3.9604e-05,\n",
      "         4.4501e-04,  1.1433e-03,  3.5495e-04, -3.4855e-03, -7.5042e-04,\n",
      "        -1.6231e-03,  1.1974e-03, -1.1418e-03,  6.0866e-04,  3.9727e-04,\n",
      "        -2.8128e-03, -1.8789e-05, -2.6084e-04,  3.9587e-03,  5.6448e-04,\n",
      "         1.9426e-03,  2.7752e-04,  1.9695e-05,  2.4677e-04,  1.1681e-03,\n",
      "        -6.3040e-04, -3.5300e-04, -5.0426e-04, -3.6876e-04, -2.1609e-04,\n",
      "        -1.5859e-04,  9.1281e-05, -5.0500e-04, -2.9407e-03, -1.0555e-03,\n",
      "        -9.9477e-04,  3.6351e-04,  7.1917e-04,  2.9295e-04, -1.4053e-03,\n",
      "         2.7925e-04,  3.8928e-04, -8.1529e-05, -1.5466e-03,  3.4836e-03,\n",
      "        -8.4427e-04,  1.0623e-03,  1.1375e-03, -9.8875e-04, -2.8879e-04,\n",
      "         1.2337e-03, -1.6422e-04,  4.8351e-03,  3.0978e-04,  3.0829e-04,\n",
      "        -1.8813e-03,  1.7935e-04,  2.2444e-05,  1.3158e-04,  4.5849e-04,\n",
      "         3.0252e-03, -1.8770e-03,  3.3000e-05,  1.9238e-03, -5.0059e-04,\n",
      "        -2.5464e-03,  3.4457e-03,  2.8902e-04, -3.9893e-04,  1.4699e-04,\n",
      "         1.2508e-04, -1.2787e-04, -1.2945e-03, -1.1649e-03,  1.8516e-03,\n",
      "         1.3573e-04,  5.2115e-04, -2.4210e-05, -2.9641e-03, -3.9719e-04,\n",
      "        -1.9780e-03, -4.0512e-04,  1.5716e-05,  7.9571e-04,  3.3760e-04,\n",
      "        -1.3978e-03, -4.4024e-04,  3.1709e-04,  1.2633e-04, -3.2533e-04,\n",
      "         4.5072e-04,  8.0023e-05, -1.7222e-04, -2.4702e-04, -2.2694e-03,\n",
      "         5.3945e-05,  1.8208e-03, -1.2345e-03,  5.0273e-04, -1.4249e-03,\n",
      "         1.1729e-04,  9.0775e-05,  4.3921e-03,  1.5096e-04,  1.3255e-04,\n",
      "         6.9294e-04, -5.3549e-04, -5.3834e-03,  7.5120e-04, -1.5926e-04,\n",
      "         5.1986e-06,  3.4792e-04,  1.7427e-03,  3.4901e-04, -1.2267e-04,\n",
      "        -1.6426e-03,  4.8222e-04,  6.9341e-04,  9.6077e-04,  3.1164e-06,\n",
      "         6.2602e-04,  2.3629e-03,  2.0372e-03, -9.5041e-04,  2.0403e-03,\n",
      "         1.9716e-04, -7.0239e-04, -5.3190e-04, -8.7921e-04,  2.0693e-03,\n",
      "         2.2507e-03, -8.4927e-04, -3.5890e-04, -2.4708e-05,  5.9529e-04,\n",
      "         1.6512e-03, -1.0710e-03, -2.0987e-04, -4.6738e-05,  7.3815e-05,\n",
      "         1.2566e-03,  3.5670e-03, -3.3926e-04, -9.0926e-04,  7.0544e-04,\n",
      "         1.6693e-04,  2.0385e-03,  1.9163e-04, -4.8383e-04,  1.7922e-05,\n",
      "        -3.6614e-04, -3.0373e-04, -7.2113e-04,  2.6874e-04, -2.9033e-04,\n",
      "        -1.5770e-03, -4.4250e-04,  5.4712e-04,  6.6129e-04,  1.7650e-05,\n",
      "         2.1598e-04,  1.3160e-04, -8.4789e-04, -1.0324e-03, -9.4042e-05,\n",
      "         2.0678e-03, -1.8336e-03], device='cuda:0')}, 62: {'momentum_buffer': tensor([[ 4.8515e-08, -9.1895e-07, -1.0201e-06, -5.1864e-07, -6.8566e-07,\n",
      "          3.7121e-07,  4.1272e-07, -2.6502e-07,  1.1800e-07,  1.0806e-06,\n",
      "         -3.2006e-08, -4.2098e-07, -1.0728e-06,  6.2491e-07,  4.2548e-08,\n",
      "         -8.1303e-07, -7.8450e-09, -1.0917e-06, -9.2629e-07, -2.9628e-07,\n",
      "         -2.7011e-07,  4.9119e-07, -3.2810e-07, -1.3003e-07, -8.1227e-07,\n",
      "          7.7007e-07,  7.6582e-08, -1.7561e-07,  5.7234e-07, -6.7326e-07,\n",
      "         -3.0965e-07, -1.0751e-06, -9.2539e-07, -6.8304e-07,  6.4203e-07,\n",
      "         -3.1119e-07, -5.3407e-07, -8.7031e-08,  1.8005e-07, -5.1289e-07,\n",
      "          1.0081e-06, -3.4314e-07,  6.0032e-07, -3.6678e-07,  3.5224e-07,\n",
      "          3.1204e-07, -4.9541e-07, -9.3226e-07,  2.0096e-07,  7.8985e-07,\n",
      "          8.3675e-07, -9.1030e-07,  8.4647e-07, -8.8759e-07, -8.5017e-07,\n",
      "          9.0196e-07,  5.2153e-07,  1.0141e-07, -2.7892e-07,  4.5604e-07,\n",
      "         -1.0462e-06, -4.4794e-08,  7.3862e-07,  1.0668e-06],\n",
      "        [ 6.7753e-03,  1.6570e-03,  1.9212e-03,  3.4284e-03,  5.5640e-03,\n",
      "          1.2883e-03,  4.1815e-03,  1.4174e-03,  8.5682e-03,  3.2152e-03,\n",
      "          2.4759e-03,  5.1468e-03,  1.2533e-03,  1.9589e-03,  2.8061e-03,\n",
      "          1.5626e-03,  1.1408e-02,  6.6249e-03,  5.5527e-03,  3.3490e-03,\n",
      "          2.8415e-03,  3.8877e-03,  4.4255e-03,  1.7356e-03,  1.0349e-03,\n",
      "          5.3954e-03,  2.8316e-03,  4.1639e-03,  3.5804e-03,  1.6801e-03,\n",
      "          4.2634e-03,  3.9915e-03,  2.5764e-03,  1.4769e-03,  3.8999e-03,\n",
      "          3.2190e-03,  4.8908e-03,  2.0757e-03,  7.1134e-03,  5.2136e-03,\n",
      "          2.6590e-03,  8.1113e-03,  6.3409e-03,  4.7072e-03,  1.5768e-03,\n",
      "          4.3604e-03,  1.3396e-02,  4.5426e-03,  4.9765e-03,  5.7764e-03,\n",
      "          6.9394e-03,  8.3184e-03,  1.3107e-03,  3.2850e-03,  2.0381e-03,\n",
      "          7.0648e-03,  2.5369e-03,  3.9804e-03,  5.8941e-03,  4.6788e-03,\n",
      "          5.6714e-03,  4.3851e-03,  1.7637e-03,  5.7293e-03],\n",
      "        [-2.9393e-03, -1.2997e-03, -1.9364e-03, -1.9787e-03,  4.6502e-03,\n",
      "          2.2965e-05,  8.7741e-04, -1.9149e-03,  3.9915e-04, -2.2126e-03,\n",
      "         -1.1163e-03, -2.3509e-03, -7.3986e-04, -2.2396e-04, -3.1316e-03,\n",
      "         -5.5669e-04,  4.8751e-04, -1.5638e-03,  9.4812e-03, -1.2019e-04,\n",
      "         -2.5365e-03, -1.6976e-04,  7.4026e-04,  3.8466e-05,  3.2169e-04,\n",
      "         -1.9086e-03, -2.6064e-03,  1.6868e-03, -1.7069e-03, -2.2836e-03,\n",
      "         -1.3572e-03, -1.0340e-03, -2.0200e-03, -8.6165e-04, -1.1476e-04,\n",
      "          8.7951e-04,  2.3438e-03, -1.3818e-03, -1.0222e-03, -9.0024e-04,\n",
      "         -1.1355e-03, -2.0871e-03, -3.7169e-04, -1.9504e-03, -5.8420e-04,\n",
      "         -5.5027e-04, -1.3848e-03, -1.4550e-03, -1.4830e-03, -1.2298e-03,\n",
      "         -1.7260e-03, -1.2580e-03, -1.0203e-03, -9.9063e-04, -1.8625e-03,\n",
      "         -1.7685e-03, -1.7502e-03, -3.0112e-03, -3.0707e-03, -1.8860e-03,\n",
      "         -6.3753e-04, -5.0894e-04, -1.1221e-03, -1.4105e-03],\n",
      "        [-8.2101e-07, -5.0149e-07,  3.4776e-07,  9.3173e-08,  6.1941e-07,\n",
      "         -8.8139e-07, -5.3531e-07,  1.3145e-08,  7.9701e-07,  7.7671e-07,\n",
      "          6.9217e-08, -1.2932e-06, -2.8197e-07,  1.5366e-07,  5.0264e-07,\n",
      "          3.6117e-07, -4.2148e-07,  5.3883e-07,  8.5633e-07, -1.4526e-07,\n",
      "         -5.2648e-07, -5.0566e-07,  6.2533e-07, -2.5095e-07,  6.4006e-07,\n",
      "         -5.2820e-07, -7.1948e-07,  8.6640e-07,  6.5716e-07, -9.6677e-07,\n",
      "         -1.1429e-06, -7.6648e-08, -6.1097e-07, -2.1638e-07,  7.0283e-07,\n",
      "         -1.9518e-07, -1.3142e-06,  1.3547e-07, -5.2363e-07, -1.0461e-06,\n",
      "         -1.0347e-06,  8.8725e-07, -9.0872e-07,  3.1307e-07,  2.3909e-07,\n",
      "          3.5976e-07, -3.3757e-07,  5.9184e-07,  2.2377e-07,  3.9820e-07,\n",
      "         -3.9927e-07, -2.3729e-07,  2.8604e-07,  7.6824e-07, -6.0416e-07,\n",
      "          8.2943e-07,  6.1570e-07, -2.3670e-07, -1.0973e-06,  8.6669e-07,\n",
      "         -1.4249e-08, -1.2106e-06, -8.3749e-07,  7.8239e-07]], device='cuda:0')}, 63: {'momentum_buffer': tensor([[-2.8657e-06,  5.4280e-04, -1.7010e-03,  9.8499e-07],\n",
      "        [ 3.5752e-06,  8.6214e-04, -7.3503e-04, -2.5817e-06],\n",
      "        [-6.7819e-07, -2.1170e-03, -1.7030e-03,  8.2544e-07],\n",
      "        [-2.4628e-07, -2.6459e-04, -2.6452e-03, -1.0787e-06],\n",
      "        [-4.1337e-07,  1.3296e-04, -1.0963e-03, -1.5642e-06],\n",
      "        [ 3.7166e-06,  5.9444e-04,  2.1282e-06,  2.8139e-06],\n",
      "        [-4.8473e-07, -2.2019e-05,  3.3126e-04, -2.5937e-06],\n",
      "        [-3.5846e-06,  1.5655e-03,  8.2623e-04, -4.3024e-06],\n",
      "        [ 1.5734e-06, -7.6911e-04, -8.8215e-04,  2.7597e-06],\n",
      "        [-4.1374e-06, -7.1409e-04,  5.4981e-04,  3.9565e-06],\n",
      "        [ 3.6489e-06,  5.4455e-04,  5.8859e-04,  2.4206e-06],\n",
      "        [ 4.0188e-06,  5.1858e-04,  4.0036e-03,  1.3524e-07],\n",
      "        [ 4.2543e-06, -1.6837e-03,  1.7715e-04,  1.0768e-06],\n",
      "        [-1.7283e-07, -7.0020e-04, -6.4020e-04, -1.6111e-06],\n",
      "        [-4.2158e-06, -1.9611e-03,  1.3408e-03,  3.3261e-06],\n",
      "        [ 3.8493e-06,  4.8635e-04,  1.1591e-04,  5.2261e-07],\n",
      "        [ 2.3136e-06, -6.5972e-03,  6.4743e-04, -3.1136e-06],\n",
      "        [-3.7817e-06,  4.8637e-04, -1.1598e-03, -5.8608e-07],\n",
      "        [-4.3463e-06, -9.3595e-04, -7.0459e-04, -1.3865e-06],\n",
      "        [ 3.3420e-06, -6.3992e-04, -8.7525e-04,  2.2376e-06],\n",
      "        [ 3.9573e-06, -1.2653e-03,  1.7955e-03, -3.6103e-06],\n",
      "        [-1.1774e-06,  8.9678e-04,  7.7018e-04, -6.5734e-07],\n",
      "        [-2.2092e-06,  1.1985e-03,  1.0170e-03,  4.2394e-06],\n",
      "        [ 2.6842e-06,  1.2824e-03,  1.0830e-04,  3.1279e-06],\n",
      "        [ 1.7372e-06,  4.9755e-05,  1.4048e-05, -1.6950e-06],\n",
      "        [ 3.0143e-06, -4.9564e-04,  1.0643e-03,  2.3962e-06],\n",
      "        [ 1.8906e-06,  2.0577e-03, -3.5412e-04, -3.5622e-06],\n",
      "        [-1.1030e-06, -8.0243e-04, -8.5526e-04, -1.3922e-06],\n",
      "        [-2.7605e-06, -8.2419e-04,  6.3996e-04, -1.8862e-06],\n",
      "        [-6.0410e-07,  9.3770e-04,  7.6539e-04, -3.9581e-06],\n",
      "        [ 1.6610e-06,  3.6330e-04,  7.6075e-04,  6.3294e-07],\n",
      "        [-5.1791e-07, -1.6234e-04,  1.0637e-03, -9.8447e-07],\n",
      "        [ 1.0964e-06,  6.3449e-04,  6.9455e-04,  6.6219e-07],\n",
      "        [-3.8959e-06,  7.2342e-04,  1.5079e-04, -4.3061e-06],\n",
      "        [ 1.9742e-06, -2.1458e-04,  1.1639e-03, -1.8156e-06],\n",
      "        [ 1.1499e-06,  7.3996e-04,  8.8536e-05,  2.7446e-06],\n",
      "        [ 2.9052e-07,  1.7577e-03,  1.1887e-03,  3.1977e-06],\n",
      "        [-2.9117e-06, -7.2363e-04, -1.8512e-03, -1.0117e-06],\n",
      "        [ 2.2896e-06, -2.8069e-03,  2.1414e-04,  2.5763e-06],\n",
      "        [-2.5048e-06,  9.5229e-05,  5.3228e-05,  1.6410e-06],\n",
      "        [-2.5354e-06, -9.0161e-04, -1.4767e-04, -4.2857e-06],\n",
      "        [ 2.1912e-06,  7.1161e-05,  3.3729e-04, -2.4375e-08],\n",
      "        [ 6.8872e-07, -1.5295e-04,  4.1101e-04, -4.0396e-06],\n",
      "        [ 6.1942e-07,  6.3635e-04, -2.4761e-04,  3.0511e-06],\n",
      "        [ 1.7924e-06, -3.8205e-04,  3.8210e-04,  3.4302e-06],\n",
      "        [ 6.3976e-07, -3.2459e-04,  8.8779e-04, -3.1842e-06],\n",
      "        [-2.9246e-07,  1.8599e-03, -2.9939e-03,  1.2988e-06],\n",
      "        [ 1.7052e-06, -1.6764e-04,  5.6337e-04,  8.9508e-07],\n",
      "        [ 8.4751e-08, -7.1840e-04, -2.9069e-04,  4.1394e-06],\n",
      "        [-2.7527e-06, -2.1546e-03, -3.4451e-03, -3.3139e-06],\n",
      "        [-3.8995e-06,  3.8671e-04,  3.2574e-03, -1.1592e-06],\n",
      "        [-2.5189e-06, -1.2221e-03, -7.5708e-04, -2.2548e-06],\n",
      "        [ 1.6028e-06,  4.1079e-04,  5.7794e-04,  1.6523e-06],\n",
      "        [-1.5259e-06, -2.7274e-05,  4.1004e-04,  1.9347e-06],\n",
      "        [-2.6730e-06,  8.3247e-04, -5.1311e-04, -1.9791e-06],\n",
      "        [-2.8891e-07, -6.7709e-04, -1.6017e-06, -4.3121e-06],\n",
      "        [-1.7422e-06,  1.8012e-03, -5.9147e-04,  2.5408e-06],\n",
      "        [ 8.0279e-07, -2.4138e-03,  7.4203e-04,  9.4477e-08],\n",
      "        [-2.7614e-06, -2.8956e-03,  5.7794e-04, -2.1042e-06],\n",
      "        [ 4.6353e-09, -1.2844e-03,  7.3030e-04, -3.9578e-07],\n",
      "        [-6.5655e-07, -4.5382e-04,  3.4900e-04,  2.1352e-07],\n",
      "        [ 1.3141e-07,  5.9781e-04,  3.3393e-03,  1.6192e-07],\n",
      "        [-1.3157e-06,  2.3188e-04, -4.5565e-04,  1.5888e-06],\n",
      "        [-2.6569e-06,  5.1082e-04,  8.6423e-04, -3.7382e-06]], device='cuda:0')}, 64: {'momentum_buffer': tensor([[[[-3.2311e-04, -2.3065e-04, -2.5188e-04,  6.6496e-05,  1.7448e-04,\n",
      "            9.6133e-05,  4.6455e-04],\n",
      "          [ 9.3281e-05,  1.3193e-04,  1.7624e-04,  5.9401e-04,  6.8550e-04,\n",
      "            5.7725e-04,  8.2832e-04],\n",
      "          [ 1.8166e-04,  1.2616e-04,  6.8608e-05,  5.9636e-04,  8.5513e-04,\n",
      "            6.8852e-04,  9.5144e-04],\n",
      "          [-5.9642e-04, -8.6280e-04, -9.3680e-04, -2.2520e-04, -1.4409e-05,\n",
      "           -2.5982e-04, -7.5621e-05],\n",
      "          [-2.2839e-04, -4.0860e-04, -4.6715e-04,  2.5110e-05,  1.6656e-04,\n",
      "            5.9410e-06,  1.4071e-04],\n",
      "          [-2.0054e-04, -2.2985e-04, -4.5940e-04, -1.6972e-04,  1.6644e-05,\n",
      "            1.6773e-05,  1.7591e-04],\n",
      "          [-2.4062e-04, -3.5157e-04, -7.0714e-04, -5.2700e-04, -4.4086e-04,\n",
      "           -3.7054e-04, -1.0101e-04]],\n",
      "\n",
      "         [[-4.0191e-03, -1.4615e-03, -6.2570e-04,  1.3188e-03,  2.4621e-03,\n",
      "            1.2449e-03,  5.2653e-03],\n",
      "          [-3.9015e-03, -1.7600e-03, -3.8507e-04,  1.5528e-03,  1.6710e-03,\n",
      "            2.0257e-03,  1.0410e-02],\n",
      "          [ 1.9328e-04,  1.2412e-03,  3.2893e-03,  5.9976e-03,  8.8544e-03,\n",
      "            9.5870e-03,  1.6331e-02],\n",
      "          [-6.4143e-03, -6.6094e-03, -6.2930e-03, -2.8671e-03, -2.2905e-03,\n",
      "           -3.4525e-03,  2.5223e-03],\n",
      "          [-4.9679e-03, -4.5335e-03, -5.3393e-03, -3.0109e-03, -9.5209e-04,\n",
      "           -8.7912e-04,  2.6261e-03],\n",
      "          [-2.3726e-03, -1.7082e-03, -2.7297e-03, -3.6130e-03, -1.2545e-03,\n",
      "           -6.4970e-04,  1.8389e-03],\n",
      "          [ 4.5803e-04,  2.7948e-04, -1.1740e-03, -1.2600e-03, -1.6203e-03,\n",
      "           -2.1537e-03, -6.6465e-04]]]], device='cuda:0')}, 65: {'momentum_buffer': tensor([[-2.4784e-04, -2.1425e-04, -4.7873e-04,  ..., -6.2151e-05,\n",
      "         -1.9940e-04, -2.3217e-04],\n",
      "        [ 3.3152e-07, -3.2559e-07, -6.4955e-07,  ..., -7.3963e-07,\n",
      "          2.3309e-08, -2.3830e-07],\n",
      "        [-6.4573e-08,  5.0746e-07,  2.7162e-07,  ..., -7.3837e-07,\n",
      "         -6.0300e-07, -2.7005e-07],\n",
      "        ...,\n",
      "        [ 3.9975e-07, -6.7817e-07,  6.3733e-07,  ..., -5.3444e-07,\n",
      "          5.5047e-07,  7.0277e-07],\n",
      "        [ 5.3806e-07,  1.4430e-07,  2.4286e-07,  ...,  2.1865e-07,\n",
      "          1.1402e-07,  5.1204e-07],\n",
      "        [-4.4334e-07, -1.4696e-07, -5.4217e-08,  ..., -5.0337e-07,\n",
      "          5.5043e-07,  7.0238e-07]], device='cuda:0')}, 66: {'momentum_buffer': tensor([[ 1.0267e-04,  4.8222e-07,  1.2500e-06,  ..., -6.4498e-07,\n",
      "         -2.1338e-06,  7.5023e-07],\n",
      "        [ 1.6146e-04, -2.7645e-06, -5.0549e-07,  ...,  2.9461e-06,\n",
      "          1.9220e-06,  1.1291e-06],\n",
      "        [-3.5286e-04, -2.4922e-06,  5.9992e-07,  ...,  2.3949e-06,\n",
      "          2.5158e-06,  2.5432e-07],\n",
      "        ...,\n",
      "        [ 4.8205e-04, -1.4579e-06,  2.7086e-06,  ..., -1.2964e-06,\n",
      "          1.6927e-07,  3.9811e-07],\n",
      "        [-4.7319e-04,  1.7518e-06, -1.5004e-06,  ..., -3.4469e-07,\n",
      "          1.7106e-07, -2.4091e-06],\n",
      "        [ 3.0439e-04,  3.8627e-07, -2.6058e-06,  ...,  2.3064e-07,\n",
      "         -1.4057e-06, -1.4650e-06]], device='cuda:0')}, 67: {'momentum_buffer': tensor([[[[ 9.8421e-04,  6.0675e-04,  1.8465e-04,  3.3446e-04,  3.3504e-04,\n",
      "            1.8137e-04,  2.5707e-04],\n",
      "          [ 8.9050e-04,  6.6469e-04,  3.8682e-04,  6.7929e-04,  5.0297e-04,\n",
      "            2.3512e-04,  2.3453e-04],\n",
      "          [ 4.5924e-04,  5.0767e-04,  4.4386e-04,  8.9525e-04,  9.8551e-04,\n",
      "            4.9338e-04,  4.9662e-04],\n",
      "          [-3.2930e-04, -2.5529e-04, -5.4007e-04, -1.6931e-04,  1.6079e-04,\n",
      "            3.5822e-04,  3.9089e-04],\n",
      "          [-1.6709e-04, -2.5326e-04, -7.3648e-04, -6.4714e-04, -2.6241e-04,\n",
      "            1.6118e-04,  2.2348e-04],\n",
      "          [ 4.3542e-05,  2.5466e-05, -4.6088e-04, -3.9870e-04, -3.3453e-04,\n",
      "           -1.2223e-04, -1.5552e-04],\n",
      "          [-1.9544e-04, -2.4224e-04, -5.5727e-04, -2.4266e-04, -2.9035e-04,\n",
      "           -2.4015e-04, -3.4383e-04]],\n",
      "\n",
      "         [[ 5.6469e-03,  2.6648e-03,  4.0356e-03,  5.3997e-03, -3.7687e-04,\n",
      "           -4.6865e-03, -9.9032e-04],\n",
      "          [ 3.1630e-03,  1.0343e-03, -8.9641e-04,  2.8632e-03, -2.1333e-03,\n",
      "           -4.5585e-03,  9.2871e-04],\n",
      "          [ 1.8736e-03,  1.9582e-03,  3.0686e-05,  1.4668e-03, -4.7371e-04,\n",
      "           -5.0900e-04,  4.7776e-03],\n",
      "          [ 4.3770e-04,  8.4998e-04,  7.6753e-04,  4.5725e-03,  1.8608e-03,\n",
      "            3.4006e-03,  4.8905e-03],\n",
      "          [ 3.8728e-03,  1.3006e-03,  2.7837e-03,  3.4585e-03,  5.2161e-03,\n",
      "            3.5206e-03, -1.7317e-04],\n",
      "          [-8.7921e-04,  1.9584e-04,  3.1485e-03,  6.4312e-03,  2.2196e-03,\n",
      "           -2.3527e-04, -2.0537e-03],\n",
      "          [-3.6042e-03, -5.3423e-03, -2.9616e-03,  3.5601e-03,  5.2696e-03,\n",
      "            2.5575e-03,  3.1447e-04]]]], device='cuda:0')}, 68: {'momentum_buffer': tensor([[ 1.2946e-07,  2.8249e-07,  3.4968e-07,  ...,  3.2409e-07,\n",
      "         -5.2190e-07,  2.1616e-07],\n",
      "        [ 1.7693e-07, -1.9375e-07, -2.9147e-07,  ..., -5.3070e-07,\n",
      "         -5.1964e-07,  2.3198e-07],\n",
      "        [ 2.8475e-07,  3.4056e-07, -1.3290e-07,  ..., -1.5545e-07,\n",
      "          1.6379e-07, -5.5014e-07],\n",
      "        ...,\n",
      "        [-8.2098e-08,  2.7824e-07,  1.1914e-07,  ...,  3.4558e-07,\n",
      "          5.2639e-08, -2.5139e-08],\n",
      "        [ 4.1194e-07, -1.9170e-07,  3.3938e-07,  ..., -5.8768e-08,\n",
      "         -4.2974e-07, -4.4633e-07],\n",
      "        [-4.8751e-07,  3.2166e-07, -2.4405e-07,  ..., -2.9875e-07,\n",
      "         -4.4919e-07, -4.3942e-07]], device='cuda:0')}, 69: {'momentum_buffer': tensor([[-1.6297e-06,  7.1712e-07,  1.5310e-06,  ...,  2.6836e-07,\n",
      "         -1.4218e-06,  9.2769e-07],\n",
      "        [ 1.1598e-06,  1.6533e-06,  1.9180e-07,  ...,  7.0818e-07,\n",
      "          9.3427e-07, -2.1869e-06],\n",
      "        [-2.1550e-06,  7.2454e-07, -1.3785e-06,  ...,  1.0076e-06,\n",
      "          6.8782e-07, -1.1543e-06],\n",
      "        ...,\n",
      "        [-1.8293e-06, -2.2021e-06, -1.1001e-06,  ..., -1.0986e-06,\n",
      "          2.4816e-07, -1.5979e-07],\n",
      "        [-1.5407e-06,  1.8512e-06, -1.0114e-06,  ..., -2.3180e-07,\n",
      "          1.4243e-06, -6.3301e-07],\n",
      "        [ 1.6007e-06,  7.9085e-07, -1.0237e-06,  ...,  1.0049e-06,\n",
      "          1.0423e-06, -1.6965e-06]], device='cuda:0')}, 70: {'momentum_buffer': tensor([[[[ 1.6414e-04,  1.7524e-04,  3.6334e-05,  3.6429e-04,  7.8632e-04,\n",
      "            7.3307e-04,  6.3976e-04],\n",
      "          [ 3.0220e-04,  3.2150e-04,  5.8758e-05,  3.6227e-04,  9.5654e-04,\n",
      "            9.8770e-04,  8.5791e-04],\n",
      "          [ 1.6465e-04,  6.5863e-05,  1.6911e-04,  3.3535e-04,  7.1552e-04,\n",
      "            6.8964e-04,  6.6558e-04],\n",
      "          [ 6.4709e-05,  4.5779e-05,  1.1836e-04,  3.2145e-04,  5.2226e-04,\n",
      "            4.8454e-04,  2.8189e-04],\n",
      "          [ 1.3648e-04,  1.1285e-04,  1.6329e-04,  2.4719e-04,  4.1795e-04,\n",
      "            2.8067e-04, -1.1744e-04],\n",
      "          [ 4.6636e-04,  3.5882e-04,  1.0742e-04,  5.8113e-05,  2.0270e-04,\n",
      "            4.2361e-04,  7.4306e-05],\n",
      "          [ 5.1274e-04,  1.9357e-04, -1.3593e-04, -3.0150e-04,  5.3157e-05,\n",
      "            3.6176e-04,  8.3321e-06]],\n",
      "\n",
      "         [[-4.4725e-03, -2.0873e-03,  1.0005e-03,  2.7598e-03,  8.8276e-03,\n",
      "            8.7087e-03,  2.1862e-03],\n",
      "          [-4.8295e-04,  3.9608e-04,  4.2881e-03,  6.4346e-03,  9.7902e-03,\n",
      "            1.2887e-02,  8.1877e-03],\n",
      "          [-6.5320e-04,  6.9005e-04,  2.7513e-03,  6.3679e-03,  1.0926e-02,\n",
      "            1.3806e-02,  7.9547e-03],\n",
      "          [-5.9465e-03, -6.5625e-03, -5.5675e-03, -5.0000e-04,  6.3748e-03,\n",
      "            8.4269e-03,  4.7594e-04],\n",
      "          [-1.8798e-03, -7.6047e-03, -1.1546e-02, -4.1052e-03,  3.3614e-04,\n",
      "            2.0133e-03, -3.4347e-03],\n",
      "          [ 3.9638e-03, -1.5758e-03, -6.7577e-03, -4.1185e-03,  8.0557e-04,\n",
      "            2.8677e-03,  3.7688e-03],\n",
      "          [ 2.4323e-03, -4.2044e-03, -6.3546e-03, -5.4991e-03, -4.3376e-03,\n",
      "            3.4972e-03,  4.9384e-03]]]], device='cuda:0')}, 71: {'momentum_buffer': tensor([[-2.7607e-04, -5.5351e-04, -1.2404e-04,  ..., -1.1333e-04,\n",
      "         -5.3946e-04, -1.4812e-04],\n",
      "        [-4.0258e-04, -6.1559e-04, -9.7123e-04,  ..., -1.6296e-04,\n",
      "         -5.9610e-04,  1.4746e-03],\n",
      "        [ 1.9399e-04,  3.6304e-04,  6.8563e-04,  ...,  1.6929e-04,\n",
      "         -1.1786e-04,  5.8593e-04],\n",
      "        ...,\n",
      "        [-3.2518e-07,  2.6187e-07, -2.0944e-07,  ...,  2.3832e-07,\n",
      "          1.5843e-07,  1.1805e-07],\n",
      "        [ 3.4289e-04,  4.5127e-04,  3.7626e-04,  ...,  1.8755e-04,\n",
      "          8.8065e-04, -9.2383e-04],\n",
      "        [ 8.7553e-04,  6.5230e-04,  1.7369e-03,  ...,  1.1476e-03,\n",
      "          1.3296e-03,  1.3592e-03]], device='cuda:0')}, 72: {'momentum_buffer': tensor([[-2.4826e-04,  1.5847e-04, -2.0480e-04,  ...,  1.3919e-06,\n",
      "          6.5842e-04,  9.3527e-04],\n",
      "        [ 2.6356e-04,  1.2729e-04, -1.4023e-04,  ...,  1.3101e-06,\n",
      "         -7.6729e-04,  1.6305e-04],\n",
      "        [-4.8286e-05,  1.2474e-04,  4.8616e-05,  ..., -9.3223e-07,\n",
      "         -5.9155e-04,  2.0709e-04],\n",
      "        ...,\n",
      "        [-6.5935e-05, -4.8869e-04, -4.6460e-04,  ..., -5.1607e-07,\n",
      "         -8.9648e-04, -3.0773e-04],\n",
      "        [ 1.8798e-06, -1.2243e-04, -1.7899e-04,  ..., -3.2770e-07,\n",
      "         -1.2957e-04, -2.8038e-05],\n",
      "        [-6.8027e-06, -6.4712e-03, -7.7107e-04,  ..., -2.7845e-08,\n",
      "         -3.4980e-03, -1.7649e-03]], device='cuda:0')}, 73: {'momentum_buffer': tensor([[[[-1.8094e-04, -2.1437e-04, -2.1267e-04, -1.9392e-04, -1.5764e-04,\n",
      "           -1.4844e-04, -2.3649e-05],\n",
      "          [-3.5240e-04, -3.6393e-04, -3.2115e-04, -2.6589e-04, -1.8997e-04,\n",
      "           -1.4140e-04, -2.0910e-06],\n",
      "          [-2.7416e-04, -2.9258e-04, -2.6099e-04, -2.1248e-04, -1.6823e-04,\n",
      "           -1.7075e-04, -5.3354e-05],\n",
      "          [-1.1332e-04, -1.3767e-04, -1.0404e-04, -8.0225e-05, -7.1719e-05,\n",
      "           -1.2559e-04, -4.9622e-05],\n",
      "          [-1.1362e-04, -1.2456e-04, -6.1618e-05, -3.1508e-05, -1.9536e-05,\n",
      "           -7.5357e-05, -6.4382e-05],\n",
      "          [-1.4736e-04, -1.5108e-04, -1.0471e-04, -9.1062e-05, -7.1865e-05,\n",
      "           -9.8851e-05, -9.9748e-05],\n",
      "          [-2.2128e-04, -2.2590e-04, -1.9599e-04, -1.8336e-04, -1.4522e-04,\n",
      "           -1.2425e-04, -1.2567e-04]],\n",
      "\n",
      "         [[ 1.0399e-03,  1.3309e-03,  7.8152e-04,  3.8005e-04, -1.7000e-05,\n",
      "           -3.0477e-04,  3.5608e-04],\n",
      "          [-1.4104e-03, -6.1162e-04,  1.6408e-05, -1.3131e-04, -4.8683e-04,\n",
      "           -7.5127e-04,  4.2084e-05],\n",
      "          [-2.9846e-03, -1.1703e-03,  1.3971e-04,  5.3223e-04,  5.6335e-04,\n",
      "           -3.6214e-04, -1.3584e-04],\n",
      "          [-1.7204e-03,  1.6850e-04,  1.5627e-03,  1.8275e-03,  1.7428e-03,\n",
      "            6.2093e-04,  3.7638e-04],\n",
      "          [-3.3108e-03, -7.9500e-04,  1.4530e-03,  1.8122e-03,  1.4190e-03,\n",
      "            5.0780e-04,  1.0069e-04],\n",
      "          [-3.7004e-03, -2.3982e-03, -1.1425e-03, -8.6980e-04, -9.2702e-04,\n",
      "           -1.0888e-03, -9.1622e-04],\n",
      "          [-5.0507e-03, -5.7697e-03, -5.4333e-03, -5.2751e-03, -4.2952e-03,\n",
      "           -2.7503e-03, -1.7014e-03]]]], device='cuda:0')}, 74: {'momentum_buffer': tensor([[ 7.5261e-07,  1.2496e-06,  1.6071e-07,  ...,  2.4875e-06,\n",
      "          1.1902e-06,  4.0479e-05],\n",
      "        [-3.9416e-06, -3.7146e-06, -6.6885e-07,  ..., -4.4427e-06,\n",
      "         -1.0797e-06, -3.9824e-05],\n",
      "        [ 1.4273e-06,  1.2645e-06, -7.0523e-08,  ...,  2.6082e-06,\n",
      "          1.2223e-06,  3.1215e-05],\n",
      "        ...,\n",
      "        [ 1.9673e-06,  1.5038e-06, -5.1609e-07,  ...,  3.1193e-06,\n",
      "          9.9655e-07,  3.0302e-05],\n",
      "        [-3.8825e-06, -2.7554e-06, -1.6082e-07,  ..., -1.2374e-06,\n",
      "         -1.0886e-06, -2.1710e-05],\n",
      "        [-5.7882e-06, -3.0467e-06,  2.7487e-07,  ..., -1.7649e-06,\n",
      "         -2.9012e-06, -3.8163e-06]], device='cuda:0')}, 75: {'momentum_buffer': tensor([ 2.8917e-04, -4.0374e-04,  2.5292e-04,  4.5019e-04,  1.4313e-04,\n",
      "        -4.9416e-05,  1.5788e-05, -6.9577e-05, -3.2992e-04, -3.1250e-04,\n",
      "        -7.8632e-04,  3.7741e-04,  8.6491e-04,  4.2421e-04, -3.5969e-06,\n",
      "        -4.8130e-05,  6.0988e-05, -5.0341e-04,  2.4030e-04,  1.8058e-04,\n",
      "        -4.0474e-04,  4.0253e-05,  1.2726e-04,  7.0729e-04,  1.2621e-04,\n",
      "        -4.8468e-05,  3.1914e-04, -1.1586e-04,  7.8281e-04,  1.4167e-04,\n",
      "         8.1114e-04, -2.9689e-04, -5.1361e-04,  1.4385e-04, -8.0862e-05,\n",
      "         1.0516e-05,  2.5163e-04, -2.5752e-05,  2.5150e-04, -1.4184e-04,\n",
      "         3.0028e-05, -1.6632e-05,  1.4558e-04, -6.8521e-04,  2.9661e-04,\n",
      "         1.8986e-04, -2.7423e-04,  1.2330e-04,  8.9056e-04, -9.9520e-04,\n",
      "         1.5876e-04, -3.2399e-04, -3.1385e-04,  5.4560e-04, -6.5097e-04,\n",
      "         4.3411e-04,  1.0195e-03, -2.6919e-04,  2.3190e-05,  7.5047e-04,\n",
      "        -3.4532e-04,  3.7468e-04, -1.0569e-04,  1.1195e-04,  4.3852e-04,\n",
      "        -5.1631e-04, -4.7322e-05, -2.4300e-04,  2.5682e-04, -7.0282e-04,\n",
      "         4.4466e-04,  2.0095e-04, -7.0087e-04,  3.8550e-04,  7.7768e-05,\n",
      "         9.2544e-05, -2.1560e-04, -2.4378e-04,  4.6142e-04, -5.1211e-04,\n",
      "         2.6017e-04, -3.3594e-04,  2.6867e-04, -5.4085e-04,  2.5720e-04,\n",
      "         1.5294e-04, -5.3012e-04,  6.0889e-04, -1.1500e-04, -3.7621e-06,\n",
      "        -4.9625e-04,  4.6003e-04,  1.5218e-04, -2.7560e-04, -2.6344e-04,\n",
      "        -3.3837e-04,  3.9300e-04, -2.9437e-04,  4.6148e-04, -5.7920e-04,\n",
      "        -6.0233e-04,  1.0456e-05,  2.6527e-04,  4.6586e-05, -3.3498e-04,\n",
      "         6.1417e-04, -8.9418e-05, -2.2161e-04,  2.1966e-04,  1.0109e-04,\n",
      "        -4.4622e-05,  1.0292e-04,  3.4662e-04,  5.2137e-05, -6.1769e-04,\n",
      "         2.4821e-05, -1.7309e-04, -1.9627e-04,  2.7493e-04, -7.5668e-04,\n",
      "         4.8440e-05, -1.3885e-04, -3.0029e-04, -3.8011e-04,  4.6390e-04,\n",
      "        -1.4665e-04,  3.4132e-04,  6.5288e-04,  6.0433e-04, -3.4678e-04,\n",
      "         1.3606e-05, -2.3254e-04,  4.6809e-04,  2.5466e-04,  1.2504e-04,\n",
      "        -3.0169e-04,  9.7193e-04, -1.8451e-05,  5.7966e-05, -1.6319e-04,\n",
      "         4.3108e-04,  1.5732e-04,  1.1230e-04,  3.5234e-04,  6.6744e-05,\n",
      "         5.2874e-04, -1.9485e-04,  2.2111e-04,  2.8429e-04,  1.5361e-04,\n",
      "        -1.3768e-04, -2.6642e-04,  3.6406e-04, -1.9843e-04,  2.9767e-04,\n",
      "         3.5524e-04,  1.4802e-04,  3.3965e-05, -1.3671e-04, -1.3934e-04,\n",
      "        -2.2034e-04,  1.9335e-04,  3.7111e-04,  3.5362e-05, -4.5294e-04,\n",
      "         3.0035e-04,  1.6983e-04, -4.2599e-05,  7.3447e-05,  5.8452e-04,\n",
      "        -3.0308e-04, -7.5222e-04, -1.4813e-04, -2.5422e-04,  2.2270e-05,\n",
      "         7.5731e-05, -3.7383e-04,  8.1745e-04, -1.0323e-03, -4.2923e-04,\n",
      "        -2.5961e-05,  1.6148e-04, -5.2496e-04,  3.1782e-04,  1.1224e-04,\n",
      "         5.8057e-04, -5.0456e-04,  1.5885e-04, -4.0008e-04,  3.6181e-04,\n",
      "        -1.4860e-04, -7.5738e-04, -4.4530e-04,  4.2027e-05,  1.0226e-03,\n",
      "         4.7955e-05, -6.2227e-04,  6.1406e-04,  1.4056e-04,  6.2018e-04,\n",
      "        -2.0296e-04,  3.1231e-04,  2.9056e-04, -3.5689e-04, -3.9382e-04,\n",
      "        -5.8985e-04,  5.8734e-04,  4.2005e-05,  4.3505e-05, -3.8144e-04,\n",
      "        -1.7378e-04,  1.5023e-04, -1.5929e-04, -4.7408e-04, -2.9733e-04,\n",
      "         6.4407e-04, -2.8438e-04,  5.0671e-05,  2.5756e-04,  3.0051e-05,\n",
      "         2.7154e-04, -2.1067e-04,  7.8851e-04,  4.3299e-04, -5.1427e-04,\n",
      "         4.7135e-05, -2.4776e-04,  1.4836e-04, -6.8044e-04,  3.4228e-04,\n",
      "         4.4975e-04,  3.0155e-04,  5.0543e-04, -6.8849e-04, -2.3411e-05,\n",
      "         3.9098e-04,  3.9839e-04,  1.5286e-06, -5.0645e-05,  7.5758e-05,\n",
      "         1.4929e-04,  1.2212e-04,  2.7736e-04,  3.8836e-04,  2.6324e-04,\n",
      "        -2.1150e-04, -3.3105e-04, -6.3089e-04,  5.9993e-05, -6.6273e-04,\n",
      "         7.5850e-04, -2.7078e-04, -5.7522e-04,  3.0932e-04, -3.4269e-04,\n",
      "        -4.9005e-04], device='cuda:0')}, 76: {'momentum_buffer': tensor([[ 6.6214e-04,  8.6603e-04,  6.0664e-05,  ...,  2.7209e-05,\n",
      "          1.0296e-03,  3.3538e-05],\n",
      "        [ 2.2287e-04, -4.4934e-04,  5.2238e-05,  ..., -2.3279e-05,\n",
      "          9.0383e-04,  3.5385e-04],\n",
      "        [ 1.7585e-05, -2.6761e-06,  1.2405e-05,  ..., -1.0774e-05,\n",
      "         -5.9851e-04, -7.1932e-04],\n",
      "        ...,\n",
      "        [-4.1044e-04, -1.4335e-04,  4.3504e-06,  ...,  8.3031e-06,\n",
      "         -2.6548e-04,  4.9955e-04],\n",
      "        [ 4.7403e-04,  5.9824e-04, -1.8344e-04,  ...,  2.8004e-05,\n",
      "          4.2311e-04,  4.1552e-05],\n",
      "        [-1.7474e-05,  6.6475e-04, -2.7194e-05,  ..., -2.7862e-05,\n",
      "         -7.9475e-04, -8.1114e-04]], device='cuda:0')}, 77: {'momentum_buffer': tensor([ 2.0719e-03,  1.8327e-03, -2.5816e-03, -1.6260e-03,  7.9946e-05,\n",
      "        -3.7467e-03, -1.1111e-03, -2.0580e-03, -1.1839e-03, -2.1311e-03,\n",
      "        -2.6515e-03,  2.3120e-03,  1.1565e-03, -2.2979e-03,  2.5627e-03,\n",
      "        -1.1106e-03, -1.5822e-03,  6.3775e-04, -2.0475e-03, -1.4415e-03,\n",
      "        -1.4883e-03, -3.0297e-03,  2.0521e-03, -2.4805e-03, -2.7865e-03,\n",
      "        -3.3125e-03, -2.3518e-03,  7.1995e-04, -5.6743e-04, -5.4252e-04,\n",
      "        -2.7672e-03,  6.8445e-05,  1.6426e-03, -2.9073e-03,  1.4382e-03,\n",
      "         1.1833e-03,  5.7840e-04, -1.0573e-03, -2.5309e-03, -9.5692e-04,\n",
      "        -5.6636e-05,  3.8590e-03,  1.5843e-03,  4.2518e-03, -1.0721e-03,\n",
      "        -2.2965e-03,  2.3499e-03,  3.3356e-04, -1.4233e-03, -2.1093e-03,\n",
      "         1.4976e-03,  2.3084e-03, -1.3982e-03,  1.2126e-03,  1.4730e-04,\n",
      "         5.9636e-04,  1.6049e-03,  2.2900e-03,  6.1957e-04, -1.2533e-03,\n",
      "         1.7395e-03,  2.6814e-04, -2.9656e-03,  1.6266e-03,  8.3971e-04,\n",
      "        -9.8120e-04, -4.9000e-05,  6.3167e-05, -3.6735e-04,  1.1872e-03,\n",
      "        -1.0845e-04, -3.5908e-04, -9.2399e-04, -2.9417e-04,  1.1417e-03,\n",
      "         2.7139e-03,  1.5200e-04, -4.4017e-04, -1.8553e-03,  1.6070e-03,\n",
      "         2.2208e-03, -2.4415e-03, -2.8173e-03,  9.6212e-04,  2.7040e-03,\n",
      "        -2.7826e-03, -2.6235e-03, -3.2016e-03, -1.1255e-04,  7.6155e-04,\n",
      "        -1.8159e-03, -1.2259e-04, -2.1818e-04,  3.0479e-04, -2.9293e-04,\n",
      "         1.1572e-03, -1.0864e-03,  1.3668e-03, -3.7012e-03, -5.7100e-04,\n",
      "        -1.0335e-04,  9.6099e-04,  6.5495e-04, -2.1511e-03,  3.1135e-04,\n",
      "         8.7327e-04, -2.1918e-03, -1.8233e-03, -1.2372e-03,  2.1971e-03,\n",
      "         1.0516e-03,  5.9153e-04,  2.7164e-03, -1.5755e-03, -1.8669e-03,\n",
      "         2.8973e-03, -1.1052e-04,  1.3484e-03, -8.7241e-04, -2.4310e-04,\n",
      "        -1.4389e-03, -9.3581e-04,  8.4860e-04, -1.4447e-03, -4.4713e-04,\n",
      "         7.7840e-04, -2.3642e-03, -2.4335e-03, -9.9005e-04,  1.1002e-03,\n",
      "         1.1165e-03,  8.9988e-04,  9.2153e-04, -2.9329e-03, -8.1733e-05,\n",
      "        -1.0887e-03,  2.8414e-03, -8.2974e-04,  1.4417e-03,  2.5600e-03,\n",
      "        -1.7381e-03,  1.0115e-03, -4.0477e-05,  6.7769e-04,  1.1651e-03,\n",
      "        -2.2478e-04, -3.7087e-04, -7.4340e-04, -1.3298e-04, -4.1897e-03,\n",
      "         1.9134e-03,  2.6373e-03,  4.9650e-04, -9.1780e-04,  1.8287e-03,\n",
      "         1.4714e-03, -5.7766e-04,  3.9951e-04, -7.6219e-04,  7.7458e-04,\n",
      "        -2.8593e-03,  1.4402e-03, -1.6927e-05,  1.0465e-03, -4.7419e-04,\n",
      "        -1.7663e-04, -2.1901e-03,  3.1527e-03, -7.3652e-04,  8.6683e-04,\n",
      "         5.6491e-04, -3.6224e-03, -4.4809e-03,  1.2395e-03,  3.5613e-03,\n",
      "         1.8386e-04, -2.4415e-03, -2.7995e-03, -1.0616e-03,  1.4783e-03,\n",
      "        -1.9270e-03,  5.7643e-04, -3.8443e-04, -1.1907e-03,  8.7856e-04,\n",
      "         1.5717e-03,  7.3436e-04, -2.1136e-04,  2.5084e-03,  1.6840e-04,\n",
      "         2.5160e-03, -2.5273e-04, -3.3266e-03,  2.1028e-03, -2.4904e-03,\n",
      "         9.5528e-05, -2.5511e-04,  8.9685e-04,  3.0188e-03, -1.2849e-03,\n",
      "         3.2931e-04, -7.7846e-04, -1.3701e-03,  2.9654e-03,  6.2215e-04,\n",
      "         3.7567e-04, -1.1558e-03, -1.7592e-03,  6.5955e-04,  3.7938e-03,\n",
      "         5.8642e-03, -5.2843e-04, -5.4448e-04, -5.4684e-05, -7.3339e-04,\n",
      "        -2.2803e-03,  1.7155e-03, -1.7600e-03, -3.0241e-04,  7.3399e-04,\n",
      "        -3.3067e-04,  3.9754e-03, -7.6233e-04, -1.9533e-03,  9.5085e-04,\n",
      "         1.5468e-03,  2.2703e-03, -2.0107e-03,  4.3905e-04, -2.9748e-03,\n",
      "        -4.5601e-03,  3.4598e-03, -1.2352e-03,  1.9551e-03, -3.3071e-05,\n",
      "        -3.9304e-03,  2.1104e-03, -1.7427e-03,  8.6397e-04,  1.1512e-05,\n",
      "        -7.7410e-04, -1.0161e-04,  1.9077e-03,  7.7097e-04,  5.2199e-04,\n",
      "        -9.1478e-04, -5.1092e-04,  1.1131e-03,  1.1302e-03,  8.3916e-04,\n",
      "         1.0244e-03,  2.2683e-04,  2.1304e-04, -2.0001e-03, -2.3789e-03,\n",
      "         4.4762e-04,  7.3523e-04,  1.7892e-03,  1.5536e-03,  3.9676e-04,\n",
      "         5.1876e-04,  2.9381e-03,  4.5833e-04, -2.3128e-03,  1.3371e-03,\n",
      "        -8.1045e-04, -1.4865e-04, -1.8127e-03,  2.9214e-03, -3.2020e-03,\n",
      "        -1.3226e-03, -5.2420e-05,  3.0531e-04, -2.2627e-03, -1.7744e-03,\n",
      "        -2.0519e-03, -2.4613e-03, -2.6706e-03,  7.4575e-04,  2.1032e-03,\n",
      "         1.7818e-03,  5.6189e-04,  1.7346e-03, -2.9969e-03, -6.9337e-04,\n",
      "         2.3838e-03, -5.0078e-04, -1.1119e-03,  1.3671e-03, -1.4842e-03,\n",
      "         2.4848e-03,  4.3779e-04,  8.8596e-04,  2.2982e-03,  1.4592e-03,\n",
      "        -1.3595e-03,  8.6479e-04, -1.5379e-04, -1.6228e-03,  8.2849e-04,\n",
      "         4.9626e-05,  2.4710e-03, -6.3646e-04,  1.1361e-03, -1.6041e-03,\n",
      "        -1.6086e-03, -2.7425e-03,  3.3388e-03, -1.1211e-03, -1.3631e-03,\n",
      "         3.9657e-04,  1.8115e-03,  1.5531e-03, -2.2781e-03, -3.2979e-03,\n",
      "        -9.0797e-04, -9.7054e-04, -4.9287e-04, -2.7908e-03,  1.1163e-03,\n",
      "         2.2579e-04,  9.4667e-04, -1.9904e-03,  2.7848e-03,  1.6713e-04,\n",
      "         3.7296e-04, -2.6915e-04, -2.1956e-03,  2.0799e-04, -3.4891e-03,\n",
      "         1.6085e-03, -1.1968e-03, -5.0630e-04,  7.5125e-04,  5.2829e-04,\n",
      "         8.8470e-04,  3.1080e-03, -5.2538e-04,  1.1069e-03, -1.0492e-03,\n",
      "         6.6786e-04,  1.4427e-03, -6.7285e-04,  6.5605e-04,  8.0205e-04,\n",
      "         6.5940e-04,  5.2844e-04, -1.0530e-03, -2.3788e-04,  2.7151e-04,\n",
      "         4.3984e-04,  1.1758e-03, -2.2839e-03,  2.9281e-03, -2.0176e-03,\n",
      "        -6.4501e-04, -2.6382e-03,  2.6211e-03,  2.4216e-03,  5.1823e-04,\n",
      "        -1.0320e-03, -2.1430e-03,  6.3717e-04, -2.8882e-03,  8.6889e-04,\n",
      "        -2.4794e-04,  2.6104e-03,  5.3428e-04, -1.2600e-03, -1.0725e-03,\n",
      "        -9.3378e-04, -5.6058e-04, -1.7942e-03,  1.4305e-04,  6.7735e-04,\n",
      "        -2.9110e-04, -9.0669e-04,  1.7983e-03, -1.2200e-04,  2.0458e-03,\n",
      "         2.1328e-03, -1.5187e-03,  1.6804e-03,  2.0860e-03,  6.7080e-04,\n",
      "        -4.6522e-05,  5.9345e-04,  7.5972e-04,  3.8509e-04, -3.2325e-04,\n",
      "         3.9471e-04, -9.3999e-04, -3.2595e-03, -9.4516e-04, -1.6498e-03,\n",
      "        -1.2871e-03,  1.4096e-03, -2.2703e-03, -1.1385e-03, -1.6512e-03,\n",
      "         2.0050e-03,  8.4044e-04,  1.8570e-03, -8.8010e-04,  1.0986e-03,\n",
      "        -2.0472e-03, -1.2067e-03,  3.1909e-03,  1.2658e-03, -1.5342e-03,\n",
      "        -8.8720e-04, -4.0413e-04, -9.9538e-04, -1.1577e-03,  2.8327e-03,\n",
      "         4.2706e-03,  5.6594e-04, -1.3464e-03,  4.6701e-04,  1.5366e-03,\n",
      "         5.7609e-04, -2.1879e-03,  1.0947e-03, -2.2648e-03,  2.4694e-04,\n",
      "         4.1946e-04,  8.0846e-04, -1.0522e-03,  2.9384e-03,  1.7034e-03,\n",
      "         1.3234e-03,  1.6820e-03,  2.9463e-03,  2.0744e-03, -6.7812e-04,\n",
      "        -2.9089e-03, -2.4781e-04,  1.8993e-03,  1.9487e-03,  3.4047e-04,\n",
      "         1.1049e-03, -4.3325e-03,  8.6947e-04, -7.9375e-05, -4.2413e-04,\n",
      "         3.2276e-03,  2.2508e-03,  1.3159e-04,  2.5967e-03, -5.3449e-03,\n",
      "        -8.2817e-04,  1.3264e-04,  1.9043e-03,  1.8866e-03, -2.0536e-04,\n",
      "        -2.1416e-03, -1.0410e-04, -1.3551e-03,  1.1021e-03,  1.2740e-03,\n",
      "        -1.8894e-04,  1.2850e-03,  3.1559e-03,  3.9346e-03,  2.1121e-03,\n",
      "         9.6586e-04, -2.4104e-03,  4.0369e-03, -5.4092e-04, -3.7125e-03,\n",
      "         2.6429e-03,  1.0236e-03, -6.3354e-05,  9.3513e-04, -5.1769e-04,\n",
      "         2.7712e-03,  3.1549e-04, -2.2078e-03, -3.6405e-04, -4.2801e-05,\n",
      "        -1.2918e-04,  3.3745e-04, -6.4766e-04,  5.0397e-04, -1.7917e-03,\n",
      "        -1.3328e-04, -2.2651e-04,  4.0062e-03, -1.8054e-03,  3.7024e-04,\n",
      "         1.3434e-04, -1.8354e-03,  8.2170e-04,  5.7079e-04,  1.6051e-03,\n",
      "         3.5691e-03,  4.5018e-04, -1.0938e-03,  1.8975e-03,  3.6650e-03,\n",
      "         8.8621e-04,  6.3061e-04, -1.9917e-03,  1.5433e-03,  7.2465e-04,\n",
      "         4.1472e-04, -8.5462e-04,  1.8670e-03, -7.8676e-04,  5.9157e-04,\n",
      "        -2.9710e-04, -1.0182e-03], device='cuda:0')}, 78: {'momentum_buffer': tensor([[ 1.1472e-05, -2.0296e-05,  1.0013e-05,  ...,  1.0549e-05,\n",
      "          8.5461e-06, -4.2907e-06],\n",
      "        [ 3.2140e-05, -4.9617e-05,  3.1619e-05,  ...,  2.9820e-05,\n",
      "          2.1253e-05, -1.1666e-05],\n",
      "        [-4.8413e-06,  7.6394e-06, -7.3346e-06,  ..., -5.5721e-06,\n",
      "         -4.5554e-06,  2.3278e-06],\n",
      "        ...,\n",
      "        [ 3.0600e-05, -5.1065e-05,  2.7666e-05,  ...,  2.8030e-05,\n",
      "          2.1132e-05, -1.0445e-05],\n",
      "        [-1.0994e-05,  2.2063e-05, -7.9164e-06,  ..., -8.9364e-06,\n",
      "         -9.0815e-06,  3.6496e-06],\n",
      "        [-8.5193e-06,  1.1478e-05, -6.6355e-06,  ..., -7.2890e-06,\n",
      "         -3.3194e-06,  2.9963e-06]], device='cuda:0')}, 79: {'momentum_buffer': tensor([-3.3328e-04, -8.5536e-04,  1.4125e-04,  9.8381e-04, -7.5536e-04,\n",
      "        -4.4706e-05, -6.0044e-05, -7.5087e-05,  1.0804e-03,  6.3369e-04,\n",
      "        -3.3959e-04, -1.8098e-04, -1.1921e-03,  1.9510e-05,  3.1208e-04,\n",
      "         3.2128e-04, -2.3670e-04, -5.4019e-04,  7.4697e-05, -6.6337e-04,\n",
      "         7.3422e-05, -1.2225e-03, -1.4280e-04,  3.2265e-04, -1.1172e-03,\n",
      "         2.2881e-04, -5.8822e-04,  6.1381e-04,  6.4896e-04,  1.4065e-03,\n",
      "        -8.4342e-04,  1.2581e-03,  1.7675e-03,  1.1257e-03, -2.4636e-04,\n",
      "         5.4649e-04, -5.2661e-05,  1.2662e-03,  1.7401e-04,  1.6151e-04,\n",
      "         2.8600e-04, -3.6497e-04, -3.2990e-04, -2.3617e-05,  2.1409e-03,\n",
      "         4.0546e-04,  1.8881e-05, -2.0299e-04, -9.7568e-04,  1.2290e-03,\n",
      "        -4.2300e-04, -6.0263e-04, -7.8360e-04, -7.3994e-04, -9.5025e-05,\n",
      "        -3.8461e-04,  7.3655e-04,  1.0489e-03,  5.6499e-05,  6.4213e-04,\n",
      "        -6.9256e-04,  4.6013e-04, -3.9131e-04,  3.3151e-04,  6.2467e-04,\n",
      "         8.2593e-05,  4.0014e-04,  3.1408e-04, -5.9454e-05,  4.6353e-04,\n",
      "         2.6563e-04,  4.7143e-04, -4.6964e-04,  1.5384e-04,  1.2260e-04,\n",
      "        -4.0690e-04,  3.7264e-04,  6.1554e-04,  3.8889e-04,  1.3862e-05,\n",
      "         5.1984e-04, -8.9515e-05,  5.0427e-05,  7.1457e-04,  4.2673e-04,\n",
      "        -3.0112e-04, -9.1239e-04,  8.2079e-04,  1.9827e-04, -6.8350e-06,\n",
      "        -1.1851e-03,  1.1759e-03, -9.1786e-04, -7.4006e-05,  7.3039e-04,\n",
      "        -1.3432e-03,  2.2076e-04,  1.3042e-03, -5.1258e-04,  2.1806e-04,\n",
      "        -4.0932e-04, -5.1647e-04,  4.1871e-04,  5.7854e-04,  3.4369e-04,\n",
      "        -8.7372e-04,  9.3450e-04,  3.1033e-04, -3.4333e-04,  4.8239e-04,\n",
      "         5.0493e-04, -5.5356e-04,  6.2739e-04,  1.1626e-04, -1.2168e-03,\n",
      "        -2.2237e-05, -1.4598e-04, -6.1648e-04,  4.0915e-05, -6.0813e-04,\n",
      "        -9.7809e-04,  4.6718e-04,  5.0274e-04, -4.2388e-04, -1.1852e-04,\n",
      "         6.4343e-04, -8.0478e-04, -1.6044e-03, -1.0135e-03,  3.6559e-04,\n",
      "         5.4538e-04, -8.7128e-04,  5.9594e-04,  2.7393e-04,  1.2217e-04,\n",
      "         3.7704e-04, -1.0712e-03, -8.3934e-04, -1.1240e-03, -6.5004e-04,\n",
      "        -1.0234e-04,  4.8765e-04, -3.4079e-04, -1.1702e-03,  1.7160e-04,\n",
      "        -2.8487e-04,  5.6109e-04, -3.0914e-04, -9.4380e-05, -8.4010e-05,\n",
      "         5.5642e-04, -7.8975e-04,  6.0474e-05,  1.1814e-05, -3.1589e-04,\n",
      "        -5.9960e-04, -3.1350e-04, -1.9695e-04,  2.9227e-04,  7.5605e-04,\n",
      "        -1.1174e-03,  6.2131e-04,  6.0776e-04, -7.1173e-04, -6.1045e-05,\n",
      "        -5.2656e-04,  1.1857e-03, -1.1737e-04,  2.8211e-04, -2.9291e-04,\n",
      "        -6.6951e-04,  7.7647e-04,  5.3218e-04, -8.5566e-04,  3.9823e-04,\n",
      "        -4.2893e-04,  6.1638e-04,  1.1272e-04,  2.5512e-05, -7.7774e-04,\n",
      "         6.4492e-04,  4.3036e-04, -4.3914e-04, -2.0019e-05,  6.0683e-04,\n",
      "         9.0052e-04, -1.3561e-03, -1.0092e-03, -3.3980e-04,  2.7448e-04,\n",
      "        -1.2993e-03,  4.9570e-04, -6.0527e-04,  8.9104e-05,  6.0869e-04,\n",
      "        -6.7856e-04,  2.2994e-04, -4.2050e-04, -1.2967e-04,  1.5784e-04,\n",
      "        -7.9818e-04,  3.2488e-04, -4.6791e-04,  5.4074e-04, -5.0040e-04,\n",
      "        -8.2133e-04,  3.0275e-04,  3.3840e-06, -4.4422e-04, -2.2667e-04,\n",
      "         2.6945e-04, -7.3295e-04, -2.6853e-04, -2.8281e-04, -4.7345e-04,\n",
      "        -8.9568e-05,  5.4494e-04,  1.8413e-04, -4.6170e-04, -1.0784e-04,\n",
      "         2.8875e-04, -4.3186e-04, -1.0510e-04, -1.3529e-03,  1.2711e-04,\n",
      "         4.7324e-04, -2.5087e-05, -1.2562e-03, -7.6215e-04, -4.3912e-04,\n",
      "        -5.5053e-04,  3.3752e-04,  7.1415e-04,  4.7346e-04,  6.5171e-04,\n",
      "         3.2060e-04,  1.9445e-04, -5.2589e-04,  1.2305e-04,  4.3047e-05,\n",
      "         1.1982e-04, -1.3001e-04, -1.6624e-04,  1.1428e-03, -2.0076e-04,\n",
      "         3.1862e-04,  5.0396e-04,  3.6222e-04, -8.3298e-04, -5.3925e-04,\n",
      "         1.0602e-05, -9.3856e-04, -6.2744e-04, -8.7483e-04,  3.5438e-04,\n",
      "         1.9527e-04], device='cuda:0')}, 80: {'momentum_buffer': tensor([[ 1.2981e-03, -2.2777e-03,  6.6026e-04,  ...,  1.2977e-04,\n",
      "         -2.0973e-05, -5.9944e-05],\n",
      "        [-9.1852e-04, -1.0581e-03,  9.1845e-04,  ..., -1.3052e-04,\n",
      "          2.7752e-05,  7.0971e-05],\n",
      "        [ 9.7853e-04,  3.5730e-04, -1.1458e-03,  ...,  2.3140e-04,\n",
      "         -5.0581e-05, -1.3885e-04],\n",
      "        ...,\n",
      "        [-1.6789e-03, -2.5630e-03,  9.2224e-04,  ..., -2.9868e-05,\n",
      "         -3.0893e-06,  6.9505e-06],\n",
      "        [-1.1441e-03,  6.1441e-04, -4.6730e-04,  ...,  2.4241e-04,\n",
      "         -5.2712e-05, -1.4750e-04],\n",
      "        [-2.3623e-04, -2.0278e-03, -4.7291e-04,  ..., -1.2626e-04,\n",
      "          2.3456e-05,  6.8713e-05]], device='cuda:0')}, 81: {'momentum_buffer': tensor([ 0.0034, -0.0034,  0.0065, -0.0080,  0.0123,  0.0061, -0.0039,  0.0012,\n",
      "        -0.0063, -0.0101, -0.0005, -0.0005,  0.0069, -0.0033], device='cuda:0')}, 82: {'momentum_buffer': tensor([[ 0.0041, -0.0075, -0.0069,  0.0141,  0.0097, -0.0003, -0.0076,  0.0272,\n",
      "         -0.0048, -0.0087,  0.0017,  0.0017, -0.0054, -0.0226],\n",
      "        [ 0.0028,  0.0027,  0.0039,  0.0057,  0.0017,  0.0021,  0.0053,  0.0014,\n",
      "          0.0039,  0.0047,  0.0037,  0.0033,  0.0018,  0.0046],\n",
      "        [ 0.0003,  0.0094,  0.0059, -0.0161, -0.0006,  0.0103, -0.0082, -0.0176,\n",
      "          0.0060, -0.0034,  0.0044,  0.0063,  0.0091, -0.0070],\n",
      "        [-0.0085, -0.0002, -0.0044,  0.0054, -0.0073,  0.0011, -0.0110, -0.0033,\n",
      "         -0.0037, -0.0087,  0.0022, -0.0088, -0.0005, -0.0138],\n",
      "        [-0.0031,  0.0047, -0.0437, -0.0281, -0.0060, -0.0134, -0.0076, -0.0207,\n",
      "          0.0020, -0.0090, -0.0125,  0.0013,  0.0002,  0.0071],\n",
      "        [ 0.0018,  0.0016,  0.0119,  0.0077,  0.0007, -0.0023,  0.0114,  0.0025,\n",
      "          0.0015,  0.0118, -0.0005,  0.0008, -0.0023,  0.0173],\n",
      "        [ 0.0026, -0.0107,  0.0333,  0.0115,  0.0018,  0.0024,  0.0177,  0.0104,\n",
      "         -0.0049,  0.0133,  0.0010, -0.0047, -0.0029,  0.0144]],\n",
      "       device='cuda:0')}, 83: {'momentum_buffer': tensor([ 0.0058,  0.0091, -0.0065, -0.0097, -0.0444,  0.0207,  0.0251],\n",
      "       device='cuda:0')}}, 'param_groups': [{'lr': 0.1, 'momentum': 0.01, 'dampening': 0, 'weight_decay': 1e-05, 'nesterov': False, 'maximize': False, 'foreach': None, 'differentiable': False, 'fused': None, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83]}]}, 'best_val_acc': 71.16188353301756, 'train_loss': 0.9697838201952936, 'val_loss': 1.145214277401305, 'precision': 0.7082965973990833, 'recall': 0.7116188353301756, 'f1': 0.7082496548426042}\n"
     ]
    }
   ],
   "source": [
    "get_checkpoint(\"results/FIX_resnet18_cbam_circular_01lr_attemp1/best_model.pth\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# (path_data,model_used,best_checkpoint_path)\n",
    "testing(\"DATASET_PREPROCESS/afterResizePrivateTest.parquet\",ResNet18_CBAM_SIMLBP(),\"./results/FIX_resnet18_cbam_simlbp_attemp3\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "scriptc",
   "language": "python",
   "name": "scriptc"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
